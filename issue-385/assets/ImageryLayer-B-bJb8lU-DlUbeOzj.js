const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./imageryUtils-6MVSqijr-8FXWHvzM.js","./utils-BVWK2jiA-CsDh80KY.js","./main-CtABufGA.js","./main-BqT9ZjJ6.css","./originUtils-BLsWtgV9-B4sclfuf.js","./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js","./PortalItem-CctGdnxF-aCgqvZ8N.js","./jsonContext-BA8GHqVk-5T7T-F5x.js","./portalItemUtils-B8bw6SAG-DFRRKHWT.js","./projection-BA9M1R7d-DjQPoeD7.js","./projectBuffer-CvCBvJ6W-B8XmSvu3.js","./saveUtils-CIYk-dsQ-C_B2tE_O.js"])))=>i.map(i=>d[i]);
import{v as s,S as a,ac as I,i as R,aa as fe,e as F,w as V,J as re,bB as Le,aK as $t,af as ne,bH as ge,bI as et,bJ as tt,a0 as E,bK as Y,g as ee,bz as zt,bp as Ut,_ as Ht,W as Bt,o as b,bL as Qt,P as C,l as ut,n as Ee,G as kt,a as Wt,a1 as It,f as x,bM as pt,aO as M,ah as Kt,bi as Zt,bN as Xt,ab as Yt}from"./main-CtABufGA.js";import{m as er}from"./MultiOriginJSONSupport-DKRh9P6w-BbvIni52.js";import{D as tr}from"./Layer-ChoECxvZ-DYJ3ZvKH.js";import{p as he,d as qe,M as H,k as S,J as rr,A as ir,l as sr,c as nr,u as nt,a as ar,E as Ft,P as or,V as lr,j as ur,v as pr,w as cr,S as mr,b as dr,f as yr,Z as hr}from"./RasterPresetRendererMixin-D6W9pUY6-CITyyJaJ.js";import{_ as gr,X as fr,E as wr,Z as Rr}from"./commonProperties-BtIqvFU_-DNzV3Gxx.js";import{E as at,z as vr,g as br,j as Sr}from"./multidimensionalUtils-BwTugeu7-BocZmcOq.js";import{n as xr,D as ot,R as Ir,x as Fr}from"./dataUtils-BkPy4R3C-BQ8FOXPF.js";import{W as Nt,K as _t,i as Ot,Y as Dr,B as Tr,a as Pr,t as jr,V as Dt,b as Nr,c as _r}from"./RasterSymbolizer-BVys6HkM-C3t3hcMw.js";import{G as Or}from"./UniqueValueRenderer-fS5V0Ej1-Cj__VOTX.js";import{y as we}from"./Field-C6hA1tZj-Qmieq0Np.js";import{o as Cr}from"./FieldsIndex-HmzMbJQG-nVXi_sVU.js";import{i as Tt}from"./imageBitmapUtils-DA36kg39-DHlkn1tz.js";import{B as xe}from"./normalizeUtils-Bxmy9MNI-CwgO4ema.js";import{y as q,n as L,a as $}from"./utils-9sQxfkoa-2SGMvjtw.js";import{s as Ar,b as lt}from"./Query-BrwMGK8U-BW2fDGaP.js";import{k as bt}from"./TimeExtent-Cn0Jofqr-CcQUixHZ.js";import{O as Ct}from"./FeatureSet-BkVNthuN-DclGTs__.js";import{e as Vr,i as Mr}from"./executeForIds-Z1gkLduF-Crjhn7Px.js";import{u as Jr}from"./executeQueryJSON-CcHnccia-DDFsxdPX.js";import{a as Er}from"./ArcGISService-BYA-y6X6-D1E-gmKg.js";import{u as qr}from"./BlendLayer-D1WkSmwP-DsdpMhjK.js";import{i as Gr}from"./CustomParametersMixin-vdKsTHer-D97m9U9Q.js";import{E as Lr}from"./OperationalLayer-B5IXiMa2-aDN-hRRM.js";import{C as $r}from"./PortalLayer-CElnYuSQ-CXVmKL9I.js";import{T as zr}from"./RefreshableLayer-a8BQ58Xh-7y6DqJXW.js";import{S as Ur}from"./ScaleRangeLayer-Bz0DcnvM-DzqZS_Kc.js";import{x as Hr}from"./TemporalLayer-CpOrN_w9-D6aOEDlH.js";import{a as Br}from"./versionUtils-LZYZz-38-D0-iCc24.js";import{w as Qr}from"./popupUtils-B0uZcXX0-CgsvyTpv.js";import{E as Ue}from"./interfaces-Cwm0pihk-Ptzy6gTd.js";import"./workers-PiCjreoO-BOzUKgZP.js";import"./RendererLegendOptions-K3md58-X-C7NZWcaf.js";import"./ClassBreaksDefinition-bYRgYgPp-Dl-0yERj.js";import"./colorRamps-q0bZVhs2-o__tBH0D.js";import"./visualVariableUtils-D3kZJRyn-CTTKZ6ka.js";import"./compilerUtils-CV1QYWI8-HXJyj6UP.js";import"./lengthUtils-DKpMe5qR-oQnE3hm3.js";import"./sizeVariableUtils-t52KcLLi-D0hbQF8b.js";import"./utils-DPtQ14k3-ZFH8-pRT.js";import"./parser-DyDJ-rlI-F1bmHddB.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-CKfrYlqh.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./cimSymbolUtils-CKIzBgMU-CgMJpNoG.js";import"./utils-SPbpQbmm-BC2K68TU.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./LRUCache-C3erQTWv-DH6l5CUb.js";import"./ElevationInfo-yv2-9tj6-1ONk9jVZ.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./colorUtils-Cthpxcks-D5zmdJUc.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./diffUtils-Cz3Fi8Xb-Homdp6Bv.js";import"./styleUtils-BtpNqZyT-itgPKNsh.js";import"./fieldType-CD2CL2hr-BVMOLq4b.js";import"./UnknownTimeZone-C--TOcPG-CvVEGVto.js";import"./normalizeUtilsCommon-CRJlkfEA-Djc6zLe0.js";import"./utils-Bq23Xwmj-CUXNDMVS.js";import"./query-DFW9-NG_-DeATLuRJ.js";import"./pbfQueryUtils-F4ZE8-K8-BHIIfyIt.js";import"./pbf-D-y3_eZO-DQX02nA2.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-DLDl8rfo.js";import"./projection-BA9M1R7d-DjQPoeD7.js";import"./projectBuffer-CvCBvJ6W-B8XmSvu3.js";import"./arcgisLayerUrl-HNYh8jvG-CVjcqCqP.js";import"./jsonUtils-wIllKWI4-CDK81nMH.js";import"./PortalItem-CctGdnxF-aCgqvZ8N.js";import"./portalItemUtils-B8bw6SAG-DFRRKHWT.js";import"./TimeInfo-w_HB2CsF-rXZY_RsJ.js";const kr={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Wr=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Kr={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Zr=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function At(i){return Zr.has(i.type)}function ct(i,t){if(!i||!t)return C(i||t);const o=C(i);if(o.functionDefinition&&t.rasterFunctionDefinition){const e=t.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),Vt(o.functionDefinition.arguments,t),o.rasterFunctionDefinition=o.functionDefinition.toJSON()}else t.functionName?.toLowerCase()!=="none"&&(Mt(o.functionArguments).Raster=t);return o}function Vt(i,t){for(const o in i)o.toLowerCase()==="raster"&&(i[o].type==="RasterFunctionVariable"?(i[o]=t.rasterFunctionDefinition,i[o].type="RasterFunctionTemplate"):i[o].type==="RasterFunctionTemplate"&&Vt(i[o].arguments,t))}function ie(i){const t=C(kr[i.functionName+"Function"]),o=i.functionArguments;for(const e in o)e.toLowerCase()==="raster"?(t.arguments[e]=ie(o[e]),t.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(t.arguments[e].value=ni(o[e]),t.arguments.ColorSchemeType.value=0):t.arguments[e].value=o[e];return t}function Xr(i,t){switch(t=t||{},i.type){case"raster-stretch":return ti(i,t);case"class-breaks":return ri(i,t);case"unique-value":return ii(i,t);case"raster-colormap":return si(i,t);case"vector-field":return Yr(i,t);case"raster-shaded-relief":return ei(i,t);case"flow":throw new Error("Unsupported rendering rule.")}}function Mt(i){const t=i?.Raster??i?.raster;return t&&t.declaredClass==="esri.layers.support.RasterFunction"?Mt(t.functionArguments):i}const Ce={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Yr(i,t){const o=new S;o.functionName="VectorFieldRenderer";const{dataType:e,bandNames:r}=t,n=e==="vector-uv";let l,u;if(r&&r.length===2){const h=r.map(f=>f.toLowerCase());l=h.indexOf("magnitude"),u=h.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const p=i.rotationType==="arithmetic"?1:2,m=i.flowRepresentation==="flow-from"?0:1,c=i.visualVariables?i.visualVariables.find(h=>h.field==="Magnitude"):new Or,d={magnitudeBandID:l,directionBandID:u,isUVComponents:n,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Kr[i.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};o.functionArguments=d;const g=ie(o);return t.convertToRFT?S.fromJSON({rasterFunctionDefinition:g}):o}function ei(i,t){const o=t.convertToRFT;if(t.dataType!=="elevation"&&(t.dataType!=="generic"||t.bandCount!==1||t.pixelType!=="s16"&&t.pixelType!=="s32"&&t.pixelType!=="f32"&&t.pixelType!=="f64"))return new S;const e=new S;e.functionName="Hillshade";const r=i.hillshadeType==="traditional"?0:1,n=i.scalingType==="none"?1:3,l={HillshadeType:r,SlopeType:n,ZFactor:i.zFactor};return r===0&&(l.Azimuth=i.azimuth,l.Altitude=i.altitude),n===3&&(l.PSPower=i.pixelSizePower,l.PSZFactor=i.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",i.colorRamp&&(e.functionName="ShadedRelief",o?l.ColorRamp=_t(i.colorRamp):l.Colormap=Ot(i.colorRamp)),o?new S({rasterFunctionDefinition:ie(e)}):e}function ti(i,t){const o=t.convertToRFT,e=new S;e.functionName="Stretch";const r=Ce[Dr.toJSON(i.stretchType)],n="u8",l=i.customStatistics?.map(p=>[p.min,p.max,p.avg??0,p.stddev??1]),u={StretchType:r,Statistics:l,DRA:i.dynamicRangeAdjustment,UseGamma:i.useGamma,Gamma:i.gamma,ComputeGamma:i.computeGamma};if(i.outputMin!=null&&(u.Min=i.outputMin),i.outputMax!=null&&(u.Max=i.outputMax),r===Ce.standardDeviation?(u.NumberOfStandardDeviations=i.numberOfStandardDeviations,e.outputPixelType=n):r===Ce.percentClip?(u.MinPercent=i.minPercent,u.MaxPercent=i.maxPercent,e.outputPixelType=n):r===Ce.minMax?e.outputPixelType=n:r===Ce.sigmoid&&(u.SigmoidStrengthLevel=i.sigmoidStrengthLevel),e.functionArguments=u,e.variableName="Raster",i.colorRamp){const p=i.colorRamp,m=new S;if(o)m.functionArguments={ColorRamp:_t(p)};else{const c=Tr(p,!0);if(c)m.functionArguments={colorRampName:c};else if(!t.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=i.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&d.colorRamps?.length&&d.colorRamps.forEach(g=>g.algorithm=g.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:d}}else m.functionArguments={Colormap:Ot(p)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=e,o?new S({rasterFunctionDefinition:ie(m)}):m}return o?new S({rasterFunctionDefinition:ie(e)}):e}function ri(i,t){const o=[],e=[],r=[],n=[],{pixelType:l,rasterAttributeTable:u}=t,p=u==null?null:u.features,m=Jt(u);if(m&&p&&Array.isArray(p)&&i.classBreakInfos){i.classBreakInfos.forEach((y,v)=>{const w=y.symbol?.color;let T;w?.a&&y.minValue!=null&&y.maxValue!=null&&p.forEach(j=>{y.minValue!=null&&y.maxValue!=null&&(T=j.attributes[i.field],(T>=y.minValue&&T<y.maxValue||v===i.classBreakInfos.length-1&&T>=y.minValue)&&n.push([j.attributes[m],w.r,w.g,w.b]))})});const h=l?rt(n,l):n,f=new S;return f.functionName="Colormap",f.functionArguments={},f.functionArguments.Colormap=h,f.variableName="Raster",t.convertToRFT?new S({rasterFunctionDefinition:ie(f)}):f}i.classBreakInfos.forEach((h,f)=>{if(h.minValue==null||h.maxValue==null)return;const y=h.symbol&&h.symbol.color;y?.a?(f===0?o.push(h.minValue,h.maxValue+1e-4):o.push(h.minValue+1e-4,h.maxValue+1e-4),e.push(f),n.push([f,y.r,y.g,y.b])):r.push(h.minValue,h.maxValue)});const c=l?rt(n,l):n,d=new S;d.functionName="Remap",d.functionArguments={InputRanges:o,OutputValues:e,NoDataRanges:r},d.variableName="Raster";const g=new S;return g.functionName="Colormap",g.functionArguments={Colormap:c,Raster:d},t.convertToRFT?new S({rasterFunctionDefinition:ie(g)}):g}function rt(i,t){const o=Wr.has(t)?xr(t):null;return o&&i.push([Math.floor(o[0]-1),0,0,0],[Math.ceil(o[1]+1),0,0,0]),i}function Jt(i){if(i==null)return;const{fields:t}=i;return t?.find(o=>o?.name&&o.name.toLowerCase()==="value")?.name}function ii(i,t){const o=[],{pixelType:e,rasterAttributeTable:r}=t,n=r==null?null:r.features,l=Jt(r),u=i.defaultSymbol?.color?.toRgb(),p=i.uniqueValueInfos;if(p)if(n){if(l){const d=new Map;p.forEach(h=>{const f=h.value,y=Pt(h);f!=null&&y?.a&&d.set(String(f),y.toRgb())});const g=i.field;g&&n.forEach(({attributes:h})=>{const f=String(h[g]),y=h[l],v=d.get(f);v?o.push([y,...v]):u&&o.push([y,...u])})}}else for(let d=0;d<p.length;d++){const g=p[d],h=Pt(g),f=+g.value;if(h?.a){if(isNaN(f))return null;o.push([f,h.r,h.g,h.b])}}const m=e?rt(o,e):o,c=new S;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",t.convertToRFT?new S({rasterFunctionDefinition:ie(c)}):c}function Pt(i){return i.symbol?.type==="polygon-3d"?i.symbol.symbolLayers?.find(t=>t.type==="fill")?.material?.color:i.symbol?.color}function si(i,t){const o=i.extractColormap();if(!o||o.length===0)return null;const{pixelType:e}=t,r=e?rt(o,e):o,n=new S;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=r,t.convertToRFT?new S({rasterFunctionDefinition:ie(n)}):n}function ni(i){const t=[],o=[];return i.forEach(e=>{t.push(e[0]),o.push(Pr([...e.slice(1),255]))}),{type:"RasterColormap",values:t,colors:o}}let _=class extends F{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(i,t,o){this.layer.version<10.3||(t[o]=i)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(i,t,o){this.format&&this.format.toLowerCase().includes("jpg")&&i!=null&&(t[o]=i)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(i,t,o){this.format==="lerc"&&i!=null&&(t[o]=i)}get format(){return this.layer.renderer?.type==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(i,t,o){this.format==="lerc"&&this.layer.version>=10.5&&(t[o]=i)}get version(){const i=this.layer;return i.commitProperty("bandIds"),i.commitProperty("format"),i.commitProperty("compressionQuality"),i.commitProperty("compressionTolerance"),i.commitProperty("interpolation"),i.commitProperty("noData"),i.commitProperty("noDataInterpretation"),i.commitProperty("mosaicRule"),i.commitProperty("rasterFunction"),i.commitProperty("adjustAspectRatio"),i.commitProperty("pixelFilter"),i.commitProperty("definitionExpression"),i.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(i){this._set("version",i)}get mosaicRule(){const i=this.layer;let t=i.mosaicRule;const o=i.definitionExpression;return t?o&&o!==t.where&&(t=t.clone(),t.where=o):o&&(t=new H({where:o})),t}get rasterFunction(){const i=this.layer;let{rasterFunction:t}=i;const o=i.pixelFilter,e=!i.format||i.format.includes("jpg")||i.format.includes("png");t=this._addResampleRasterFunction(t);const r=i.multidimensionalSubset?.areaOfInterest;return r&&(t=ai(t,r)),e&&!o&&i.renderer?.type!=="vector-field"&&(t=this.combineRendererWithRenderingRule(t)),t}combineRendererWithRenderingRule(i){const t=this.layer,{rasterInfo:o,renderer:e}=t;return i=i||t.rasterFunction,!e||!At(e)?i:ct(Xr(e,{rasterAttributeTable:o.attributeTable,pixelType:o.pixelType,dataType:o.dataType,bandNames:o.bandInfos.map(({name:r})=>r),convertColorRampToColormap:t.version<10.6,convertToRFT:!!i?.rasterFunctionDefinition,bandCount:o.bandCount}),i)}_addResampleRasterFunction(i){if(this.layer.renderer?.type!=="vector-field"||i?.functionName==="Resample")return i;const t=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,o=this.layer.serviceRasterInfo.pixelSize;let e=new S({functionName:"Resample",functionArguments:{ResamplingType:t,InputCellSize:o}});return e=i?.rasterFunctionDefinition?new S({rasterFunctionDefinition:ie(e)}):e,ct(e,i)}};function ai(i,t){const o=new S({functionName:"Clip",functionArguments:{ClippingGeometry:t.toJSON(),ClippingType:1}});return ct(o,i)}s([a()],_.prototype,"layer",void 0),s([a({json:{write:!0}})],_.prototype,"adjustAspectRatio",null),s([I("adjustAspectRatio")],_.prototype,"writeAdjustAspectRatio",null),s([a({json:{write:!0}})],_.prototype,"bandIds",null),s([a({json:{write:!0}})],_.prototype,"compression",void 0),s([a({json:{write:!0}})],_.prototype,"compressionQuality",null),s([I("compressionQuality")],_.prototype,"writeCompressionQuality",null),s([a({json:{write:!0}})],_.prototype,"compressionTolerance",null),s([I("compressionTolerance")],_.prototype,"writeCompressionTolerance",null),s([a({json:{write:!0}})],_.prototype,"format",null),s([a({type:String,json:{read:{reader:he.read},write:{writer:he.write}}})],_.prototype,"interpolation",null),s([a({json:{write:!0}})],_.prototype,"noData",null),s([a({type:String,json:{read:{reader:qe.read},write:{writer:qe.write}}})],_.prototype,"noDataInterpretation",null),s([a({json:{write:!0}})],_.prototype,"pixelType",void 0),s([a({json:{write:!0}})],_.prototype,"lercVersion",void 0),s([I("lercVersion")],_.prototype,"writeLercVersion",null),s([a({type:Number})],_.prototype,"version",null),s([a({json:{write:!0}})],_.prototype,"mosaicRule",null),s([a({json:{write:!0,name:"renderingRule"}})],_.prototype,"rasterFunction",null),_=s([R("esri.layers.support.ExportImageServiceParameters")],_);let ce=class extends fe(F){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};s([a({type:V,json:{read:!0}})],ce.prototype,"fromGeometry",void 0),s([a({type:V,json:{read:!0,write:!0}})],ce.prototype,"toGeometry",void 0),s([a({json:{write:!0}})],ce.prototype,"objectIds",void 0),s([a({type:String,json:{write:!0}})],ce.prototype,"where",void 0),s([a({type:Number,json:{write:!0}})],ce.prototype,"maxCount",void 0),ce=s([R("esri.rest.support.FindImagesParameters")],ce);const oi=ce,Et=i=>{let t=class extends i{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return s([a({json:{write:!0}})],t.prototype,"make",void 0),s([a({json:{write:!0}})],t.prototype,"model",void 0),s([a({json:{write:!0}})],t.prototype,"focalLength",void 0),s([a({json:{write:!0}})],t.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],t.prototype,"rows",void 0),s([a({json:{write:!0}})],t.prototype,"cols",void 0),t=s([R("esri.rest.support.CameraInfoMixin")],t),t};let W=class extends Et(F){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(i,t){t.acquisitionDate=i?.getTime()}};s([a({json:{write:!0}})],W.prototype,"id",void 0),s([a({json:{name:"uri",write:!0}})],W.prototype,"referenceUri",void 0),s([a({type:Date,json:{write:!0}})],W.prototype,"acquisitionDate",void 0),s([I("acquisitionDate")],W.prototype,"writeAcquisitionDate",null),s([a({json:{write:!0}})],W.prototype,"cameraID",void 0),s([a({type:V,json:{write:!0}})],W.prototype,"center",void 0),s([a({type:V,json:{write:!0}})],W.prototype,"perspectiveCenter",void 0),s([a({json:{write:!0}})],W.prototype,"orientation",void 0),W=s([R("esri.rest.support.ImageInspectionInfo")],W);const li=W;let He=class extends F{constructor(){super(...arguments),this.images=null}};s([a({type:[li],json:{write:!0}})],He.prototype,"images",void 0),He=s([R("esri.rest.support.FindImagesResult")],He);const ui=He;var mt;let Re=mt=class extends F{constructor(i){super(i),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new mt(C({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};s([a({type:[String],json:{name:"angleName",write:!0}})],Re.prototype,"angleNames",void 0),s([a({type:V,json:{write:!0}})],Re.prototype,"point",void 0),s([a({type:re,json:{write:!0}})],Re.prototype,"spatialReference",void 0),s([a({type:Le,json:{write:!0}})],Re.prototype,"rasterId",void 0),Re=mt=s([R("esri.rest.support.ImageAngleParameters")],Re);const pi=Re;let Fe=class extends F{constructor(i){super(i),this.north=null,this.up=null,this.spatialReference=null}};s([a({type:Number,json:{write:!0}})],Fe.prototype,"north",void 0),s([a({type:Number,json:{write:!0}})],Fe.prototype,"up",void 0),s([a({type:re,json:{write:!0}})],Fe.prototype,"spatialReference",void 0),Fe=s([R("esri.rest.support.ImageAngleResult")],Fe);const ci=Fe,B=new $t({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let X=class extends F{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};s([a()],X.prototype,"type",void 0),s([a({type:B.apiValues,json:{read:B.read,write:B.write}})],X.prototype,"measureOperation",void 0),s([a({type:H,json:{write:!0}})],X.prototype,"mosaicRule",void 0),s([a({type:V,json:{write:!0}})],X.prototype,"pixelSize",void 0),s([a({json:{write:!0}})],X.prototype,"raster",void 0),X=s([R("esri.rest.support.BaseImageMeasureParameters")],X);var dt;let ae=dt=class extends X{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]=i.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new dt(C({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({types:ne,json:{name:"fromGeometry",read:!0,write:!0}})],ae.prototype,"geometry",void 0),s([I("geometry")],ae.prototype,"writeGeometry",null),s([a({type:B.apiValues,json:{write:B.write}})],ae.prototype,"measureOperation",null),s([a({json:{read:!0}})],ae.prototype,"is3D",void 0),s([a({type:String,json:{read:ge.read,write:ge.write}})],ae.prototype,"linearUnit",void 0),s([a({type:String,json:{read:et.read,write:et.write}})],ae.prototype,"areaUnit",void 0),ae=dt=s([R("esri.rest.support.ImageAreaParameters")],ae);const mi=ae;let de=class extends F{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};s([a({type:Number,json:{read:!0,write:!0}})],de.prototype,"value",void 0),s([a({type:String,json:{read:!0,write:!0}})],de.prototype,"displayValue",void 0),s([a({type:Number,json:{read:!0,write:!0}})],de.prototype,"uncertainty",void 0),de=s([R("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],de);let Ne=class extends de{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:ge.read,write:ge.write}})],Ne.prototype,"unit",void 0),Ne=s([R("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],Ne);let Be=class extends de{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:et.read,write:et.write}})],Be.prototype,"unit",void 0),Be=s([R("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],Be);let Ge=class extends de{constructor(){super(...arguments),this.unit=null}};s([a({type:String,json:{read:tt.read,write:tt.write}})],Ge.prototype,"unit",void 0),Ge=s([R("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],Ge);let ye=class extends F{constructor(){super(...arguments),this.name=null,this.sensorName=null}};s([a({type:String,json:{read:!0,write:!0}})],ye.prototype,"name",void 0),s([a({type:String,json:{read:!0,write:!0}})],ye.prototype,"sensorName",void 0),ye=s([R("esri.rest.support.BaseImageMeasureResult")],ye);let Ae=class extends ye{constructor(){super(...arguments),this.area=null,this.perimeter=null}};s([a({type:Be,json:{read:!0,write:!0}})],Ae.prototype,"area",void 0),s([a({type:Ne,json:{read:!0,write:!0}})],Ae.prototype,"perimeter",void 0),Ae=s([R("esri.rest.support.ImageAreaResult")],Ae);const di=Ae;let Qe=class extends fe(F){constructor(){super(...arguments),this.outSpatialReference=null}};s([a({type:re,json:{name:"outSR",write:!0}})],Qe.prototype,"outSpatialReference",void 0),Qe=s([R("esri.rest.support.ImageBoundaryParameters")],Qe);const yi=Qe;let De=class extends F{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(i,t){return i==null?null:i.rings?ut.fromJSON(i):Ee.fromJSON(i)}};s([a({type:Number,json:{write:!0}})],De.prototype,"area",void 0),s([a({json:{name:"shape",write:!0}})],De.prototype,"geometry",void 0),s([E("geometry")],De.prototype,"readGeometry",null),De=s([R("esri.rest.support.ImageBoundaryResult")],De);const hi=De;var yt;let te=yt=class extends X{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]=i.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new yt(C({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({type:V,json:{read:!0,write:!0}})],te.prototype,"fromGeometry",void 0),s([I("fromGeometry")],te.prototype,"writeFromGeometry",null),s([a({type:V,json:{read:!0,write:!0}})],te.prototype,"toGeometry",void 0),s([a({type:B.apiValues,json:{write:B.write}})],te.prototype,"measureOperation",null),s([a({json:{read:!0}})],te.prototype,"is3D",void 0),s([a({type:String,json:{read:ge.read,write:ge.write}})],te.prototype,"linearUnit",void 0),s([a({type:String,json:{read:tt.read,write:tt.write}})],te.prototype,"angularUnit",void 0),te=yt=s([R("esri.rest.support.ImageDistanceParameters")],te);const gi=te;let Te=class extends ye{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};s([a({type:Ne,json:{read:!0,write:!0}})],Te.prototype,"distance",void 0),s([a({type:Ge,json:{read:!0,write:!0}})],Te.prototype,"azimuthAngle",void 0),s([a({type:Ge,json:{read:!0,write:!0}})],Te.prototype,"elevationAngle",void 0),Te=s([R("esri.rest.support.ImageDistanceResult")],Te);const fi=Te;let oe=class extends fe(F){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]=JSON.stringify(i.toJSON()))}};s([a({types:ne,json:{read:ee,write:!0}})],oe.prototype,"geometry",void 0),s([I("geometry")],oe.prototype,"writeGeometry",null),s([a({json:{write:!0}})],oe.prototype,"objectIds",void 0),s([zt(Ar,{ignoreUnknown:!1,name:"spatialRel"})],oe.prototype,"spatialRelationship",void 0),s([a({type:bt,json:{name:"time",write:!0}})],oe.prototype,"timeExtent",void 0),s([a({type:String,json:{write:!0}})],oe.prototype,"where",void 0),oe=s([R("esri.rest.support.ImageGPSInfoParameters")],oe);const wi=oe;let ke=class extends Et(F){constructor(){super(...arguments),this.id=null}};s([a({json:{write:!0}})],ke.prototype,"id",void 0),ke=s([R("esri.rest.support.CameraInfo")],ke);const Ri=ke;let K=class extends F{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(i,t){t.acquisitionDate=i?.getTime()}};s([a({json:{write:!0}})],K.prototype,"id",void 0),s([a({json:{write:!0}})],K.prototype,"name",void 0),s([a({type:Date,json:{write:!0}})],K.prototype,"acquisitionDate",void 0),s([I("acquisitionDate")],K.prototype,"writeAcquisitionDate",null),s([a({json:{write:!0}})],K.prototype,"cameraID",void 0),s([a({type:V,json:{write:!0}})],K.prototype,"center",void 0),s([a({json:{write:!0}})],K.prototype,"gps",void 0),s([a({json:{write:!0}})],K.prototype,"orientation",void 0),K=s([R("esri.rest.support.ImageGPSInfo")],K);const vi=K;let Ve=class extends F{constructor(){super(...arguments),this.images=null,this.cameras=null}};s([a({type:[vi],json:{write:!0}})],Ve.prototype,"images",void 0),s([a({type:[Ri],json:{write:!0}})],Ve.prototype,"cameras",void 0),Ve=s([R("esri.rest.support.ImageGPSInfoResult")],Ve);const bi=Ve;var ht;let le=ht=class extends X{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]=i.toJSON())}get measureOperation(){return this.operationType}clone(){return new ht(C({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({type:V,json:{read:!0}})],le.prototype,"fromGeometry",void 0),s([I("fromGeometry")],le.prototype,"writeFromGeometry",null),s([a({type:V,json:{read:!0,write:!0}})],le.prototype,"toGeometry",void 0),s([a({type:B.apiValues,json:{write:B.write}})],le.prototype,"measureOperation",null),s([a({json:{read:!0}})],le.prototype,"operationType",void 0),s([a({type:String,json:{read:ge.read,write:ge.write}})],le.prototype,"linearUnit",void 0),le=ht=s([R("esri.rest.support.ImageHeightParameters")],le);const Si=le;let We=class extends ye{constructor(){super(...arguments),this.height=null}};s([a({type:Ne,json:{read:!0,write:!0}})],We.prototype,"height",void 0),We=s([R("esri.rest.support.ImageHeightResult")],We);const xi=We;var gt;let O=gt=class extends F{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]=JSON.stringify(i.toJSON()))}set mosaicRule(i){let t=i;t?.mosaicMethod&&(t=H.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(i,t,o){i!=null&&(t[o]=JSON.stringify(i.toJSON()))}set rasterFunction(i){let t=i;t?.rasterFunction&&(t=S.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}writeRasterFunction(i,t,o){i!=null&&(t[o]=JSON.stringify(i.toJSON())),i.rasterFunctionDefinition&&(t[o]=JSON.stringify(i.rasterFunctionDefinition))}writeRasterFunctions(i,t,o){i!=null&&(t[o]=JSON.stringify(i.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(i,t,o){i!=null&&(t[o]=JSON.stringify(i))}writeTimeExtent(i,t,o){if(i!=null){const e=i.start!=null?i.start.getTime():null,r=i.end!=null?i.end.getTime():null;t[o]=e!=null?r!=null?`${e},${r}`:`${e}`:null}}clone(){return new gt(C({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};s([a({json:{write:!0}})],O.prototype,"geometry",void 0),s([I("geometry")],O.prototype,"writeGeometry",null),s([a({type:H,json:{write:!0}})],O.prototype,"mosaicRule",null),s([I("mosaicRule")],O.prototype,"writeMosaicRule",null),s([a({type:S,json:{write:!0,name:"renderingRule"}})],O.prototype,"rasterFunction",null),s([I("rasterFunction")],O.prototype,"writeRasterFunction",null),s([a({type:[S],json:{write:!0,name:"renderingRules"}})],O.prototype,"rasterFunctions",void 0),s([I("rasterFunctions")],O.prototype,"writeRasterFunctions",null),s([a({type:V,json:{write:!0}})],O.prototype,"pixelSize",void 0),s([I("pixelSize")],O.prototype,"writePixelSize",null),s([a({type:Boolean,json:{write:!0}})],O.prototype,"returnGeometry",void 0),s([a({type:Boolean,json:{write:!0}})],O.prototype,"returnCatalogItems",void 0),s([a({type:Boolean,json:{write:!0}})],O.prototype,"returnPixelValues",void 0),s([a({type:Number,json:{write:!0}})],O.prototype,"maxItemCount",void 0),s([a({type:bt,json:{write:{target:"time"}}})],O.prototype,"timeExtent",void 0),s([I("timeExtent")],O.prototype,"writeTimeExtent",null),s([a({json:{write:!0}})],O.prototype,"raster",void 0),s([a({json:{write:!0}})],O.prototype,"viewId",void 0),s([a({type:Boolean,json:{write:!0}})],O.prototype,"processAsMultidimensional",void 0),O=gt=s([R("esri.rest.support.ImageIdentifyParameters")],O);const qt=O;let Z=class extends F{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};s([a({json:{write:!0}})],Z.prototype,"catalogItemVisibilities",void 0),s([a({type:Ct,json:{write:!0}})],Z.prototype,"catalogItems",void 0),s([a({type:V,json:{write:!0}})],Z.prototype,"location",void 0),s([a({json:{write:!0}})],Z.prototype,"name",void 0),s([a({json:{write:!0}})],Z.prototype,"objectId",void 0),s([a({json:{write:!0}})],Z.prototype,"processedValues",void 0),s([a({json:{write:!0}})],Z.prototype,"properties",void 0),s([a({json:{write:!0}})],Z.prototype,"value",void 0),Z=s([R("esri.rest.support.ImageIdentifyResult")],Z);const Ii=Z;var ft;let Pe=ft=class extends F{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(i,t,o){t.geometries={geometryType:"esriGeometryPoint",geometries:i.map(e=>e.toJSON())}}clone(){return new ft({geometries:this.geometries?.map(i=>i.clone())??[],rasterId:this.rasterId})}};s([a({type:[V],json:{write:!0}})],Pe.prototype,"geometries",void 0),s([I("geometries")],Pe.prototype,"writeGeometry",null),s([a({type:Le,json:{write:!0}})],Pe.prototype,"rasterId",void 0),Pe=ft=s([R("esri.rest.support.ImagePixelLocationParameters")],Pe);const Fi=Pe;let Ke=class extends F{constructor(){super(...arguments),this.geometries=null}};s([a({json:{write:!0}})],Ke.prototype,"geometries",void 0),Ke=s([R("esri.rest.support.ImagePixelLocationResult")],Ke);const Di=Ke;var wt;let ve=wt=class extends X{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]=i.toJSON())}get measureOperation(){const{is3D:i,geometry:t}=this;return t.type==="point"?i?"point-3D":"point":i?"centroid-3D":"centroid"}clone(){return new wt(C({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([a({types:ne,json:{name:"fromGeometry",read:ee}})],ve.prototype,"geometry",void 0),s([I("geometry")],ve.prototype,"writeGeometry",null),s([a({type:B.apiValues,json:{read:B.read,write:B.write}})],ve.prototype,"measureOperation",null),s([a({json:{read:!0}})],ve.prototype,"is3D",void 0),ve=wt=s([R("esri.rest.support.ImagePointParameters")],ve);const Ti=ve;let Ze=class extends ye{constructor(){super(...arguments),this.point=null}};s([a({type:V,json:{name:"point.value",read:!0,write:!0}})],Ze.prototype,"point",void 0),Ze=s([R("esri.rest.support.ImagePointResult")],Ze);const Pi=Ze;var Rt;let G=Rt=class extends F{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]=i.toJSON())}set locations(i){if(i?.length){const t=new kt({spatialReference:i[0].spatialReference,points:i.map(({x:o,y:e})=>[o,e])});this._set("locations",i),this.geometry=t}}clone(){return new Rt(C({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};s([a({types:ne,json:{read:ee}})],G.prototype,"geometry",void 0),s([I("geometry")],G.prototype,"writeGeometry",null),s([a()],G.prototype,"locations",null),s([a({type:String,json:{type:he.jsonValues,read:he.read,write:he.write}})],G.prototype,"interpolation",void 0),s([a({type:H,json:{write:!0}})],G.prototype,"mosaicRule",void 0),s([a({type:[String],json:{write:!0}})],G.prototype,"outFields",void 0),s([a({type:V,json:{write:!0}})],G.prototype,"pixelSize",void 0),s([a({type:String,json:{write:!0}})],G.prototype,"raster",void 0),s([a({type:Boolean,json:{write:!0}})],G.prototype,"returnFirstValueOnly",void 0),s([a({type:Number,json:{write:!0}})],G.prototype,"sampleDistance",void 0),s([a({type:Number,json:{write:!0}})],G.prototype,"sampleCount",void 0),s([a({type:Number,json:{write:!0}})],G.prototype,"sliceId",void 0),s([a({type:bt,json:{read:{source:"time"},write:{target:"time"}}})],G.prototype,"timeExtent",void 0),G=Rt=s([R("esri.rest.support.ImageSampleParameters")],G);const ji=G;let ue=class extends F{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};s([a({json:{write:!0}})],ue.prototype,"attributes",void 0),s([a({type:V,json:{write:!0}})],ue.prototype,"location",void 0),s([a({json:{write:!0}})],ue.prototype,"locationId",void 0),s([a({json:{write:!0}})],ue.prototype,"rasterId",void 0),s([a({json:{write:!0}})],ue.prototype,"resolution",void 0),s([a({json:{write:!0}})],ue.prototype,"pixelValue",void 0),ue=s([R("esri.rest.support.ImageSample")],ue);const Ni=ue;let Xe=class extends F{constructor(){super(...arguments),this.samples=null}};s([a({type:[Ni],json:{write:!0}})],Xe.prototype,"samples",void 0),Xe=s([R("esri.rest.support.ImageSampleResult")],Xe);const _i=Xe;let be=class extends fe(F){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(i,t,o){t.geometries=i?.length?{geometryType:Y(i[0]),geometries:i.map(e=>({...e.toJSON(),spatialReference:void 0}))}:null}};s([a({types:[ne]})],be.prototype,"geometries",void 0),s([I("geometries")],be.prototype,"writeGeometries",null),s([a({type:[Le],json:{write:!0}})],be.prototype,"rasterIds",void 0),s([a({type:re,json:{name:"outSR",write:!0}})],be.prototype,"outSpatialReference",void 0),be=s([R("esri.rest.support.ImageToMapMultirayParameters")],be);const Oi=be;let pe=class extends fe(F){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]={...i.toJSON(),spatialReference:void 0})}};s([a({types:ne,json:{read:ee,write:!0}})],pe.prototype,"geometry",void 0),s([I("geometry")],pe.prototype,"writeGeometry",null),s([a({json:{write:!0}})],pe.prototype,"rasterId",void 0),s([a({type:re,json:{name:"outSR",write:!0}})],pe.prototype,"outSpatialReference",void 0),s([a({json:{name:"options.DOff",write:!0}})],pe.prototype,"depthOffset",void 0),s([a({json:{name:"options.Adjust",write:!0}})],pe.prototype,"adjust",void 0),pe=s([R("esri.rest.support.ImageToMapParameters")],pe);const Ci=pe;let Me=class extends fe(F){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};s([a({type:String,json:{name:"uri",write:!0}})],Me.prototype,"referenceUri",void 0),s([a({type:Number,json:{write:!0}})],Me.prototype,"rasterId",void 0),Me=s([R("esri.rest.support.ImageUrlParameters")],Me);const Ai=Me;let Ye=class extends F{constructor(){super(...arguments),this.url=null}};s([a({json:{name:"imageURL",write:!0}})],Ye.prototype,"url",void 0),Ye=s([R("esri.rest.support.ImageUrlResult")],Ye);const Vi=Ye;let Se=class extends fe(F){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]=JSON.stringify(i))}};s([a({types:ne,json:{read:ee,write:!0}})],Se.prototype,"geometry",void 0),s([I("geometry")],Se.prototype,"writeGeometry",null),s([a({json:{write:!0}})],Se.prototype,"rasterId",void 0),s([a({json:{name:"options.VisibleOnly",write:!0}})],Se.prototype,"visibleOnly",void 0),Se=s([R("esri.rest.support.MapToImageParameters")],Se);const Mi=Se;let me=class extends F{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(i,t){return i.spatialReference||(i={...i,spatialReference:t.Shape.spatialReference}),V.fromJSON(i)}};s([a({types:ne,json:{name:"Shape",read:ee,write:!0}})],me.prototype,"geometry",void 0),s([a({json:{name:"Length",write:!0}})],me.prototype,"length",void 0),s([a({json:{name:"Area",write:!0}})],me.prototype,"area",void 0),s([a({json:{name:"Center",write:!0}})],me.prototype,"center",void 0),s([E("center")],me.prototype,"readCenter",null),me=s([R("esri.rest.support.MeasureAreaFromImageResult")],me);const Ji=me;var vt;let je=vt=class extends F{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(i,t,o){i!=null&&(t.geometryType=Y(i),t[o]={...i.toJSON(),spatialReference:void 0})}clone(){const i=C({geometry:this.geometry,rasterId:this.rasterId});return new vt(i)}};s([a({types:ne,json:{name:"fromGeometry",read:ee,write:!0}})],je.prototype,"geometry",void 0),s([I("geometry")],je.prototype,"writeGeometry",null),s([a({json:{write:!0}})],je.prototype,"rasterId",void 0),je=vt=s([R("esri.rest.support.MeasureFromImageParameters")],je);const Ei=je;let Je=class extends F{constructor(){super(...arguments),this.geometry=null,this.length=null}};s([a({types:ne,json:{name:"Shape",read:ee,write:!0}})],Je.prototype,"geometry",void 0),s([a({json:{name:"Length",write:!0}})],Je.prototype,"length",void 0),Je=s([R("esri.rest.support.MeasureLengthFromImageResult")],Je);const qi=Je;function St(i){const t=i?.time;if(t&&(t.start!=null||t.end!=null)){const o=[];t.start!=null&&o.push(t.start),t.end==null||o.includes(t.end)||o.push(t.end),i.time=o.join(",")}}async function Gt(i,t,o){t=M(hr,t);const e=q(i),r=t.geometry?[t.geometry]:[],n=await xe(r),l=t.toJSON();St(l);const u=n?.[0];u!=null&&(l.geometry=se(u));const p=L({...e.query,f:"json",...l});return $(p,o)}async function Gi(i,t,o){const e=(t=M(pi,t)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),t?.point?.spatialReference?.imageCoordinateSystem&&(e.point.spatialReference=st(t.point.spatialReference)),t?.spatialReference?.imageCoordinateSystem&&(e.spatialReference=_e(t.spatialReference));const r=q(i),n=L({...r.query,f:"json",...e}),l=$(n,o),{data:u}=await x(`${r.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new re({wkid:0,imageCoordinateSystem:u.spatialReference}):re.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new ci(u)}async function Li(i,t,o){const e=(t=M(Fi,t)).toJSON(),{geometries:r}=t;if(r)for(let m=0;m<r.length;m++)r[m].spatialReference?.imageCoordinateSystem&&(e.geometries.geometries[m].spatialReference=st(r[m].spatialReference));const n=q(i),l=L({...n.query,f:"json",...e}),u=$(l,o),{data:p}=await x(`${n.path}/computePixelLocation`,u);return Di.fromJSON(p)}async function $i(i,t,o){const e=await Gt(i,t,o),r=q(i),{data:n}=await x(`${r.path}/computeStatisticsHistograms`,e),{statistics:l}=n;return l?.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:n.histograms}}async function zi(i,t,o){const e=await Gt(i,t,o),r=q(i),{data:n}=await x(`${r.path}/computeHistograms`,e);return{histograms:n.histograms}}async function Ui(i,t,o){const e=(t=M(ji,t)).toJSON();St(e),e.outFields?.length&&(e.outFields=e.outFields.join(","));const r=await xe(t.geometry),n=r?.[0];n!=null&&(e.geometry=se(n));const l=q(i),u=L({...l.query,f:"json",...e}),p=$(u,o),{data:m}=await x(`${l.path}/getSamples`,p),c=m?.samples?.map(d=>{const g=d.value==="NaN"||d.value===""?null:d.value.split(" ").map(h=>Number(h));return{...d,pixelValue:g}});return _i.fromJSON({samples:c})}async function jt(i,t,o){t=M(qt,t);const e=q(i),r=t.geometry?[t.geometry]:[];return xe(r).then(n=>{const l=t.toJSON(),u=n?.[0];u!=null&&(l.geometry=JSON.stringify(se(u)));const p=L({...e.query,f:"json",...l}),m=$(p,o);return x(e.path+"/identify",m)}).then(n=>Ii.fromJSON(n.data))}async function Hi(i,t,o){t=M(Si,t);const e=await it(i,t,[t.fromGeometry,t.toGeometry],o);return xi.fromJSON(e)}async function Bi(i,t,o){t=M(mi,t);const e=await it(i,t,[t.geometry],o);return di.fromJSON(e)}async function Qi(i,t,o){t=M(Ti,t);const e=await it(i,t,[t.geometry],o);return Pi.fromJSON(e)}async function ki(i,t,o){t=M(gi,t);const e=await it(i,t,[t.fromGeometry,t.toGeometry],o);return fi.fromJSON(e)}async function it(i,t,o,e){const r=q(i),n=await xe(o),l=t.toJSON();n[0]!=null&&(l.fromGeometry=JSON.stringify(se(n[0]))),n[1]!=null&&(l.toGeometry=JSON.stringify(se(n[1])));const u=L({...r.query,f:"json",...l}),p=$(u,e),{data:m}=await x(r.path+"/measure",p);return m}async function Wi(i,t,o){const e=await Lt(i,t,o);return qi.fromJSON(e)}async function Ki(i,t,o){const e=await Lt(i,t,o);return Ji.fromJSON(e)}async function Lt(i,t,o){t=M(Ei,t);const e=q(i),r=t.toJSON(),n=L({...e.query,f:"json",...r}),l=$(n,o),{data:u}=await x(e.path+"/measureFromImage",l);return u}function se(i){const t=i.toJSON();return i.spatialReference?.imageCoordinateSystem&&(t.spatialReference=st(i.spatialReference)),t}function st(i){const{imageCoordinateSystem:t}=i;if(t){const{id:o,referenceServiceName:e}=t;return o!=null?e?{icsid:o,icsns:e}:{icsid:o}:{ics:t}}return i.toJSON()}function _e(i,t){if(!i.imageCoordinateSystem)return pt(i);const o=st(i),{icsid:e,icsns:r}=o;return e==null||r!=null&&!t?.toLowerCase().includes("/"+r.toLowerCase()+"/")?JSON.stringify(o):`0:${e}`}async function Zi(i,t,o){t=M(yi,t);const e=q(i),r=t.toJSON();t.outSpatialReference&&(r.outSR=_e(t.outSpatialReference));const n=L({...e.query,f:"json",...r}),l=$(n,o),{data:u}=await x(e.path+"/queryBoundary",l);return hi.fromJSON(u)}async function Xi(i,t,o){const e=(t=M(wi,t)).toJSON();St(e),e.objectIds?.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const r=await xe(t.geometry),n=r?.[0];n!=null&&(e.geometry=se(n));const l=n?.spatialReference??t.geometry?.spatialReference;l&&(e.inSR=_e(l));const u=q(i),p=L({...u.query,f:"json",...e}),m=$(p,o),{data:c}=await x(`${u.path}/queryGPSInfo`,m);return bi.fromJSON(c)}async function Yi(i,t,o){const e=(t=M(Ci,t)).toJSON();t.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=se(t.geometry)),t.depthOffset&&t.adjust||delete e.options;const r=q(i),n=L({...r.query,f:"json",...e}),l=$(n,o),{data:u}=await x(`${r.path}/imageToMap`,l);return ee(u)}async function es(i,t,o){const e=(t=M(Oi,t)).toJSON();t.rasterIds?.length&&(e.rasterIds=t.rasterIds.join(","));const r=q(i),n=L({...r.query,f:"json",...e}),l=$(n,o),{data:u}=await x(`${r.path}/imageToMapMultiray`,l);return ee(u)}async function ts(i,t,o){const e=(t=M(Mi,t)).toJSON(),r=await xe(t.geometry),n=r?.[0];n!=null&&(e.geometry=se(n)),t.visibleOnly||delete e.options;const l=n?.spatialReference??t.geometry?.spatialReference;l&&(e.inSR=_e(l));const u=q(i),p=L({...u.query,f:"json",...e}),m=$(p,o),{data:c}=await x(`${u.path}/mapToImage`,m);return ee(c)}async function rs(i,t,o){const e=(t=M(Ai,t)).toJSON(),r=q(i),n=L({...r.query,f:"json",...e}),l=$(n,o),{data:u}=await x(`${r.path}/getImageUrl`,l);return Vi.fromJSON(u)}async function is(i,t,o){const e=(t=M(oi,t)).toJSON(),r=await xe([t.fromGeometry,t.toGeometry]);r[0]!=null&&(e.fromGeometry=se(r[0]),r[0].spatialReference&&(e.inSR=_e(r[0].spatialReference))),r[1]!=null&&(e.toGeometry=se(r[1])),t.objectIds?.length&&(e.objectIds=e.objectIds.join(","));const n=q(i),l=L({...n.query,f:"json",...e}),u=$(l,o),{data:p}=await x(`${n.path}/find`,u);return ui.fromJSON(p)}async function ss(i,t,o){const e=q(i),r=L({...e?.query,f:"json"}),n=$(r,o),l=`${e?.path}/${t}/info`,u=x(`${l}`,n),p=x(`${l}/keyProperties`,n),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let g=null;c.statistics?.length&&(g=c.statistics.map(J=>({min:J[0],max:J[1],avg:J[2],stddev:J[3]})));const h=Ee.fromJSON(c.extent),f=Math.ceil(h.width/c.pixelSizeX-.1),y=Math.ceil(h.height/c.pixelSizeY-.1),v=h.spatialReference,w=new V({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:v}),T=c.histograms?.length?c.histograms:null,j=new _r({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new Nt({width:f,height:y,bandCount:c.bandCount,extent:h,spatialReference:v,pixelSize:w,pixelType:c.pixelType.toLowerCase(),statistics:g,histograms:T,keyProperties:d,storageInfo:j})}const ns=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),as=Xt(Yt,{min:0,max:255});function os(i){const t=JSON.stringify(i),o=t.includes('"rasterFunctionDefinition":{'),e=o?t.match(/"type":"(.*?FunctionArguments")/gi):t.match(/"rasterFunction":"(.*?")/gi),r=e?.map(n=>o?n.slice(8,-18):n.slice(18,-1));return r?r.join("/"):null}const ls=i=>{let t=class extends i{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new _({layer:this}))}readServiceSupportsMosaicRule(e,r){return this._isMosaicRuleSupported(r)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(r=>{e.set(r.name.toLowerCase().replaceAll(/ /gi,"_"),r.name)}),e}readBandIds(e,r){if(Array.isArray(e)&&e.length>0&&e.every(n=>typeof n=="number"))return e}readCapabilities(e,r){return this._readCapabilities(r)}writeCompressionQuality(e,r,n){e!=null&&this.format!=="lerc"&&(r[n]=e)}writeCompressionTolerance(e,r,n){this.format==="lerc"&&e!=null&&(r[n]=e)}readDefaultMosaicRule(e,r){return this._serviceSupportsMosaicRule?H.fromJSON(r):null}get fieldsIndex(){return this.fields?new Cr(this.fields):null}set format(e){e&&ns.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,r){return r.serviceDataType==="esriImageServiceDataTypeVector-UV"||r.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,r){return r.minLOD!=null&&r.maxLOD!=null?e:0}readMaxScale(e,r){return r.minLOD!=null&&r.maxLOD!=null?e:0}set mosaicRule(e){let r=e;r?.mosaicMethod&&(r=H.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}readMosaicRule(e,r){const n=e||r.mosaicRule;return n?H.fromJSON(n):this._isMosaicRuleSupported(r)?H.fromJSON(r):null}writeMosaicRule(e,r,n){let l=this.mosaicRule;const u=this.definitionExpression;l?u&&u!==l.where&&(l=l.clone(),l.where=u):u&&(l=new H({where:u})),this._isValidCustomizedMosaicRule(l)&&(r[n]=l.toJSON())}writeNoData(e,r,n){e!=null&&typeof e=="number"&&(r[n]=as(e))}readObjectIdField(e,r){return e||(e=r.fields.find(n=>n.type==="esriFieldTypeOID"||n.type==="oid")?.name),e}get parsedUrl(){return Wt(this.url)}readSourceType(e,r){return this._isMosaicDataset(r)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:r}=this;return e?r?.find(({name:n})=>n===e)?.renderer.clone():this.internalRenderer}set renderer(e){this.activePresetRendererName=null,this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,r,n){const l=r?.layerDefinition?.drawingInfo?.renderer,u=ar(l,n);return u==null?null:(u.type==="vector-field"&&r.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=r.symbolTileSize),At(u)||It.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,r,n){r.layerDefinition=r.layerDefinition||{},r.layerDefinition.drawingInfo=r.layerDefinition.drawingInfo||{},r.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(r.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix,r=new we({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new we({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),l=new we({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?C(this.fields):[];u.push(n),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(r),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(m=>m.name.toLowerCase()==="none")&&u.push(l),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(m=>m.name.toLowerCase()!=="none").forEach(m=>{u.push(new we({name:"Raster.ServicePixelValue."+m.name,alias:m.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new we({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new we({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=this.rasterInfo??{};if(p!=null){const m=p.fields.filter(c=>c.type!=="esriFieldTypeOID"&&c.name.toLowerCase()!=="value").map(c=>{const d=C(c);return d.name=e+c.name,d});u=u.concat(m)}return u}set rasterFunction(e){let r=e;r?.rasterFunction&&(r=S.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}readRasterFunction(e,r){const n=r.rasterFunctionInfos;return r.renderingRule||n?.length&&n[0].name!=="None"?this._isRFTJson(r.renderingRule)?S.fromJSON({rasterFunctionDefinition:r.renderingRule}):S.fromJSON(r.renderingRule||{rasterFunctionInfos:r.rasterFunctionInfos}):null}readSpatialReference(e,r){const n=e||r.extent.spatialReference;return n?re.fromJSON(n):null}readPixelType(e){return nt.fromJSON(e)||e}writePixelType(e,r,n){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(r[n]=nt.toJSON(e))}readVersion(e,r){let n=r.currentVersion;return n||(n=r.hasOwnProperty("fields")||r.hasOwnProperty("timeInfo")?10:9.3),n}applyFilter(e){let r=e;return this.pixelFilter&&(r=this._clonePixelData(e),this.pixelFilter(r)),r}async applyRenderer(e,r){let n=e;const{renderer:l,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&l&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,r),this._cachedRendererJson=l.toJSON());const g=await d.symbolize({bandIds:m,...e},r);n={extent:e.extent,pixelBlock:g}}else n={extent:e.extent,pixelBlock:u.symbolize({bandIds:m,...e})}}return n}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeAngles)throw new b("imagery-layer:compute-angles","this operation is not supported on the input image service");return Gi(this.url,e,this._getRequestOptions(r))}async computePixelSpaceLocations(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputePixelLocation)throw new b("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Li(this.url,e,this._getRequestOptions(r))}async computeHistograms(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeHistograms)throw new b("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),zi(this.url,e,this._getRequestOptions(r))}async computeStatisticsHistograms(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeStatisticsHistograms)throw new b("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),$i(this.url,e,this._getRequestOptions(r))}async measureHeight(e,r){const n=await this._fetchCapabilities(r?.signal);if(!(e.operationType==="base-and-top"?n.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?n.mensuration.supportsHeightFromBaseAndTopShadow:n.mensuration.supportsHeightFromTopAndTopShadow))throw new b("imagery-layer:measure-height","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Hi(this.url,e,this._getRequestOptions(r))}async measureAreaAndPerimeter(e,r){const n=await this._fetchCapabilities(r?.signal);if(!(n.mensuration.supportsAreaAndPerimeter&&(!e.is3D||n.mensuration.supports3D)))throw new b("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Bi(this.url,e,this._getRequestOptions(r))}async measureDistanceAndAngle(e,r){const n=await this._fetchCapabilities(r?.signal);if(!(n.mensuration.supportsDistanceAndAngle&&(!e.is3D||n.mensuration.supports3D)))throw new b("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),ki(this.url,e,this._getRequestOptions(r))}async measurePointOrCentroid(e,r){const n=await this._fetchCapabilities(r?.signal);if(!(n.mensuration.supportsPointOrCentroid&&(!e.is3D||n.mensuration.supports3D)))throw new b("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=C(e),this._applyMosaicAndRenderingRules(e),Qi(this.url,e,this._getRequestOptions(r))}async measureLengthFromImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new b("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return Wi(this.url,e,this._getRequestOptions(r))}async measureAreaFromImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new b("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Ki(this.url,e,this._getRequestOptions(r))}getField(e){const{fieldsIndex:r}=this;return r?.get(e)}getFieldDomain(e,r){const n=this.getField(e);return n?n.domain:null}async fetchImage(e,r,n,l={}){if(e==null||r==null||n==null)throw new b("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(e,r,n,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const w=document.createElement("canvas");return w.width=r,w.height=n,l.returnImageBitmap?{imageBitmap:await Tt(w,`${o(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:w}}const{bandIds:d,rasterInfo:g}=this,h=(d?.length||g.bandCount)??0,f=r*n,y=g.pixelType,v=[];for(let w=0;w<h;w++)v.push(ot.createEmptyBand(y,f));return{pixelData:{pixelBlock:new ot({width:r,height:n,pixels:v,mask:new Uint8Array(f),pixelType:y}),extent:e}}}const p=!!l.requestAsImageElement&&!this.pixelFilter,m=p&&!!l.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:e,width:r,height:n,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:l.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return x(o(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(r=>r.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new b("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):x(o(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(r=>Ct.fromJSON(r.data))}getCatalogItemRasterInfo(e,r){const n={...r,query:this._getQueryParams()};return ss(o(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,r){const{data:n}=await x(o(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...r}),l=n?.ics;if(!l)return;let u=null;try{u=(await x(o(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...r})).data.extent}catch{}if(!u?.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?x(o(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...r}).then(P=>P.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:pt(m),outSR:"0:"+e},d=x(o(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...r}).then(P=>P.data).catch(()=>({})),g=5,h=(u.xmin+u.xmax)/2,f=(u.ymax-u.ymin)/(g+1),y=u.ymin+f,v=[];for(let P=0;P<g;P++)v.push({x:h,y:y+f*P});const w={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:v}),inSR:pt(m),outSR:"0:"+e},T=x(o(this.parsedUrl)+"/project",{query:this._getQueryParams(w),...r}).then(P=>P.data).catch(()=>({})),j=await Promise.all([p,d,T]);let J=j[0].ipxf;if(J==null){const P=l.geodataXform?.xf_0;P?.name?.toLowerCase()==="topup"&&P?.coefficients?.length===6&&(J={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:P.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const N=Ee.fromJSON(j[1]?.geometries?.[0]);N&&(N.spatialReference=new re({wkid:0,imageCoordinateSystem:l}));const D=j[2].geometries?j[2].geometries.filter(P=>P?.x!=null&&P.y!=null&&P.x!=="NaN"&&P.y!=="NaN"):[],A=D.length;if(A<3)return{ics:l,icsToPixelTransform:J,icsExtent:N,northDirection:null};let U=0,Oe=0,$e=0,ze=0;for(let P=0;P<A;P++)U+=D[P].x,Oe+=D[P].y,$e+=D[P].x*D[P].x,ze+=D[P].x*D[P].y;const Q=(A*ze-U*Oe)/(A*$e-U*U);let k=0;const Ie=D[g-1].x>D[0].x,xt=D[g-1].y>D[0].y;return Q===1/0?k=xt?90:270:Q===0?k=Ie?0:180:Q>0?k=Ie?180*Math.atan(Q)/Math.PI:180*Math.atan(Q)/Math.PI+180:Q<0&&(k=xt?180+180*Math.atan(Q)/Math.PI:360+180*Math.atan(Q)/Math.PI),{ics:l,icsToPixelTransform:J,icsExtent:N,northDirection:k}}async generateRasterInfo(e,r){e=M(S,e);const n={...r,query:this._getQueryParams()};if(!e||e.functionName?.toLowerCase()==="none"||this._isVectorFieldResampleFunction(e))return this.serviceRasterInfo??Ft(o(this.parsedUrl),this.sourceJSON,n);const l=os(e);if(!l)throw new b("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=or(o(this.parsedUrl),e,n);this._functionRasterInfos[l]=u;try{return await u}catch(p){throw this._functionRasterInfos[l]=null,p}}getExportImageServiceParameters(e,r,n,l){e=e.clone().shiftCentralMeridian();const u=_e(e.spatialReference,o(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const g=this.rasterFunction?.rasterFunctionDefinition,h=this.renderer?.type,f=!h||h==="raster-stretch"||h==="raster-colormap"||h==="unique-value"||h==="class-breaks"||h==="raster-shaded-relief";if(m?.length&&this._hasRasterFunction(this.rasterFunction)&&!g&&f){const w={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")w.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=w;else if(d.rasterFunction==="Colormap"){const T=d.rasterFunctionArguments.Raster;T?.rasterFunction==="Stretch"?(w.rasterFunctionArguments.Raster=T.rasterFunctionArguments.Raster,T.rasterFunctionArguments.Raster=w):(w.rasterFunctionArguments.Raster=T,d.rasterFunctionArguments.Raster=w)}else w.rasterFunctionArguments.Raster=d,d=w;p.bandIds=void 0}else p.bandIds=m?.join(",");Array.isArray(c)&&c.length>0&&(p.noData=c.join(","));const y=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(y.isOutSide)return null;p.mosaicRule=y.mosaicRule!=null?JSON.stringify(y.mosaicRule):null,l=y.timeExtent,p.renderingRule=this._getRenderingRuleString(S.fromJSON(d));const v={};if(l!=null){const{start:w,end:T}=l.toJSON();w&&T&&w===T?v.time=""+w:w==null&&T==null||(v.time=`${w??"null"},${T??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:r+","+n,...p,...v}}async getSamples(e,r){if(!(await this._fetchCapabilities(r?.signal))?.operations.supportsGetSamples)throw new b("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=C(e);const{raster:n}=this;return n&&e.raster==null&&(e.raster=n),Ui(this.url,e,this._getRequestOptions(r))}async identify(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsIdentify)throw new b("imagery-layer:identify","identify operation is not supported on the input image service");e=C(e),this.version<10.91&&e.geometry?.type==="extent"&&(e.geometry=ut.fromExtent(e.geometry));const n=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(n.isOutSide)throw new b("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=n.timeExtent,e.mosaicRule=n.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),l&&e.raster==null&&(e.raster=l),jt(this.url,e,this._getRequestOptions(r))}async imageToMap(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsImageToMap)throw new b("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return Yi(o(this.parsedUrl),e,this._getRequestOptions(r))}async imageToMapMultiray(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsImageToMapMultiray)throw new b("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return es(o(this.parsedUrl),e,this._getRequestOptions(r))}async mapToImage(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMapToImage)throw new b("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return ts(o(this.parsedUrl),e,this._getRequestOptions(r))}async findImages(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsFindImages)throw new b("imagery-layer:find-images","findImages operation is not supported on the input image service");return is(o(this.parsedUrl),e,this._getRequestOptions(r))}async getImageUrl(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsGetImageUrl)throw new b("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return rs(o(this.parsedUrl),e,this._getRequestOptions(r))}createQuery(){return new lt({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQueryBoundary)throw new b("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},Zi(o(this.parsedUrl),e,this._getRequestOptions(r))}async queryRasters(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),Jr(this.url,e,r)}async queryObjectIds(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),Vr(this.url,e,r)}async queryGPSInfo(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQueryGPSInfo)throw new b("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},Xi(o(this.parsedUrl),e,this._getRequestOptions(r))}async queryRasterCount(e,r){return{query:e,requestOptions:r}=await this._prepareForQuery(e,r),Mr(this.url,e,r)}async queryVisibleRasters(e,r){if(!e)throw new b("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:n,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:p}=r||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const g="raster.servicepixelvalue",h=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(m=e.outFields.some(N=>!N.toLowerCase().includes(g)),this.version>=10.4)){const N=e.outFields.filter(A=>A.toLowerCase().includes(g)&&A.length>g.length).map(A=>{const U=A.slice(g.length+1);return[this._updateRenderingRulesFunctionName(U,h),U]});c=N.map(A=>new S({functionName:A[0]})),d=N.map(A=>A[1]);const{rasterFunction:D}=this;c.length===0?D?.functionName?(c.push(D),d.push(D.functionName)):c=null:D?.functionName&&!c.some(A=>A.functionName===D.functionName)&&(c.push(D),d.push(D.functionName))}const f=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:y}=this;let v=e.timeExtent||this.timeExtent;if(y){const{isOutside:N,intersection:D}=at(y,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(N)throw new b("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");D?.timeExtent!=null&&(v=D.timeExtent)}const w=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,v);let T=e.geometry;this.version<10.91&&T?.type==="extent"&&(T=ut.fromExtent(T));const j=this._getQueryParams({geometry:T,timeExtent:v,mosaicRule:w,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:c,pixelSize:n,returnCatalogItems:m,returnGeometry:f,raster:this.raster,maxItemCount:u?1:null});delete j.f;const J=new qt(j);try{await this._generateRasterInfo(this.rasterFunction);const N=await jt(this.url,J,{signal:r?.signal,query:{...this.customParameters}}),D=e.outFields,A=N.value!=null&&N.value.toLowerCase().includes("nodata");if(!(m&&!f&&N?.catalogItems?.features.length&&(p||!A)))return this._processVisibleRastersResponse(N,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:D});const U=this.objectIdField||"ObjectId",Oe=N.catalogItems?.features??[],$e=Oe.map(k=>k.attributes?.[U]),ze=new lt({objectIds:$e,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[U]}),Q=await this.queryRasters(ze);return Q?.features?.length&&Q.features.forEach(k=>{Oe.forEach(Ie=>{Ie.attributes[U]===k.attributes[U]&&k.geometry&&(Ie.geometry=k.geometry.clone(),e.outSpatialReference!=null&&(Ie.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(N,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:D})}catch{throw new b("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,r){const n=x(o(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:r}).then(p=>p.data?.statistics),l=x(o(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:r}).then(p=>p.data?.histograms),u=await Promise.all([n,l]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,r){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(e,r):Ir(e.meshType,e.simulationSettings,e.flowData,r.signal!=null?r.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const r=e??this.serviceRasterInfo.multidimensionalInfo;return vr(this.multidimensionalSubset,r)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const r=this.sourceJSON,n=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Ft(o(this.parsedUrl),r,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),lr(p,r),p)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([n,l,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),It.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([Kt(()=>this.rasterFunction,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,r){const n=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(e==null||l==null||r==null||n?.startField==null)return e;const{startField:u}=n,p=l.variables.some(y=>y.dimensions.some(v=>v.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter(y=>y.dimensionName===p),c=r.start!=null?r.start.getTime():null,d=r.end!=null?r.end.getTime():null,g=c==null||d==null||c===d,h=g?[c||d]:[[c,d]],f=this.version>=10.8;if(m.length)m.forEach(y=>{y.dimensionName===p&&(f?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=g,y.values=h))});else if(!f){const y=e.multidimensionalDefinition.filter(v=>v.variableName!=null&&v.dimensionName==null);y.length?y.forEach(v=>{v.dimensionName=p,v.isSlice=g,v.values=h}):e.multidimensionalDefinition.push(new br({variableName:"",dimensionName:p,isSlice:g,values:h}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(r=>!(!r.variableName&&!r.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQuery)throw new b("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?M(lt,e):this.createQuery(),r=this._getRequestOptions(r),this.raster&&(r.query={...r.query,raster:this.raster}),{query:e,requestOptions:r}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new yr;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:r,rasterFunction:n}=this;return e.type==="unique-value"&&this._hasRasterFunction(n)&&r?.bandCount===1&&["u8","s8"].includes(r.pixelType)||r!=null&&e!=null&&ur(r).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){let r=this.sourceJSON;if(!r){const{data:n,ssl:l}=await x(o(this.parsedUrl),{query:this._getQueryParams(),signal:e});r=n,this.sourceJSON=r,l&&(this.url=this.url.replace(/^http:/i,"https:"))}if(r.capabilities?.toLowerCase().split(",").map(n=>n.trim()).indexOf("tilesonly")>-1)throw new b("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":e.fields?.length>0}_isMosaicRuleSupported(e){if(!e)return!1;const r=this._isMosaicDataset(e),n=e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1);return r||n}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:r,functionArguments:n}=e,l=r?.toLowerCase()==="resample",u=n?.ResampleType||n?.resampleType;return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const r=this._isPicture(),{rasterInfo:n}=this;if(!r&&!this.pixelFilter||this._isVectorDataSet()){const l=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,u=pr({variableName:l,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&n.bandCount>=3){const m=u?.bandIds??cr(n);!m||n.bandCount===3&&m[0]===0&&m[1]===1&&m[2]===2||(this.bandIds=m)}e||(e=u?.renderer??mr(n,{bandIds:this.bandIds,variableName:this.rasterFunction?null:l}));const p=dr(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=n):this.symbolizer=new jr({rendererJSON:p,rasterInfo:n}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){e?.renderingRule!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:r,viewId:n}=this;return{raster:r,viewId:n,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,r,n){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:r}):Dt(e,r,n)}async _getRasterFunctionInfos(e){const r=this.sourceJSON.rasterFunctionInfos;return this.loaded?r:r&&this.version>=10.3?r.length===1&&r[0].name.toLowerCase()==="none"?r:(await x(o(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:r,requestAsImageElement:n,returnImageBitmap:l,signal:u}=e;if(n&&this._canRequestImageElement(r.format)){const f=`${o(this.parsedUrl)}/exportImage`,{data:y}=await x(f,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return y instanceof Blob?{imageBitmap:await Tt(y,f,u),params:r}:{imageOrCanvasElement:y,params:r}}const p=this._initJobHandler(),m=x(o(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=r.format||"jpgpng";let g=d;if(g!=="bsq"&&g!=="bip"&&(g=Nr(c)),!g)throw new b("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const h={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(g==="png"||g==="jpg")?Dt(c,{useCanvas:!0,...r},h):this._decodePixelBlock(c,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:d},h)),extent:r.extent},params:r}}_generateRasterInfo(e,r){return this.generateRasterInfo(e,r).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let r=Sr(e,{multidimensionalSubset:this.multidimensionalSubset});if(r!=null&&r.length>0){this.mosaicRule=this.mosaicRule||new H;const n=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&this.rasterFunction.functionName?.toLowerCase()!=="none"&&r.forEach(l=>l.variableName=""),r=r.filter(({variableName:l,dimensionName:u})=>l&&l!=="*"||u),!n?.length&&r.length&&(this.mosaicRule.multidimensionalDefinition=r)}}_processVisibleRastersResponse(e,r){r=r||{};const n=e.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=r,c=e.processedValues;let d=e.catalogItems?.features,g=e.properties?.Values?.map(j=>j.replaceAll(/ /gi,", "))||[];const h=this.objectIdField||"ObjectId",f=typeof n=="string"&&n.toLowerCase().includes("nodata"),y=[];if(n&&!d&&!f){const j={};j[h]=0,g=[n],d=[new Zt({geometry:this.fullExtent,attributes:j})]}if(!d)return[];let v,w,T;this._updateResponseFieldNames(d,m),f&&!u&&(d=[]);for(let j=0;j<d.length;j++){if(v=d[j],n!=null){if(w=g[j],T=this.rasterFunction&&c&&c.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?c[l.indexOf(this.rasterFunction.functionName)]:n,w.toLowerCase()==="nodata"&&!u)continue;const J="Raster.ItemPixelValue",N="Raster.ServicePixelValue";v.attributes[J]=w,v.attributes[N]=T,this._updateFeatureWithMagDirValues(v,w);const D=this.fields&&this.fields.length>0;let A=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?D?w:n:T;this.rasterFunction||(A=D?w:n),this._updateFeatureWithRasterAttributeTableValues(v,A)}if(v.sourceLayer=v.layer=this,p&&this._updateFeatureWithDomainValues(v),l&&c&&l.length===c.length)for(let J=0;J<l.length;J++){const N="Raster.ServicePixelValue."+l[J];v.attributes[N]=c[J]}y.push(d[j])}return y}_processMultidimensionalIntersection(e,r,n){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:r,mosaicRule:n=this._combineMosaicRuleWithTimeExtent(n,r)};if(l){const{isOutside:u,intersection:p}=at(l,{geometry:e,timeExtent:r});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};p?.timeExtent!=null&&(r=p.timeExtent)}if(n=this._combineMosaicRuleWithTimeExtent(n,r),n?.multidimensionalDefinition){const{isOutside:u}=at(l,{multidimensionalDefinition:n.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:r,mosaicRule:n}}_updateFeatureWithRasterAttributeTableValues(e,r){const n=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(n==null)return;const{features:l,fields:u}=n,p=u.map(c=>c.name).find(c=>c.toLowerCase()==="value");if(!p)return;const m=l.filter(c=>c.attributes[p]===(r!=null?parseInt(r,10):null));m&&m[0]&&u.forEach(c=>{const d=this._rasterAttributeTableFieldPrefix+c.name;e.attributes[d]=m[0].attributes[c.name]})}_updateFeatureWithMagDirValues(e,r){if(!this._isVectorDataSet())return;const n=r.split(/,\s*/).map(c=>parseFloat(c)),l=n.map(c=>[c]),u=n.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new ot({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new Ee(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Fr([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){(this.fields&&this.fields.filter(r=>r.domain&&r.domain.type==="coded-value"))?.forEach(r=>{const n=e.attributes[r.name];if(n!=null){const l=r.domain.codedValues.find(u=>u.code===n);l&&(e.attributes[r.name]=l.name)}})}_updateResponseFieldNames(e,r){if(!r||r.length<1)return;const n=this.fieldsIndex;n!=null&&e.forEach(l=>{if(l?.attributes)for(const u of r){const p=n.get(u)?.name;p&&p!==u&&(l.attributes[u]=l.attributes[p],delete l.attributes[p])}})}_getRenderingRuleString(e){if(e){let r=e.toJSON();return r=r.rasterFunctionDefinition??r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRasterFunction(e){return e?.functionName!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,r){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const n=e.toLowerCase().replaceAll(/ /gi,"_");return r.has(n)?r.get(n):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:r,mosaicRule:n,rasterFunction:l}=this;l&&"rasterFunction"in e&&e.rasterFunction==null&&(e.rasterFunction=l),n&&e.mosaicRule==null&&(e.mosaicRule=n),r&&e.raster==null&&(e.raster=r)}_readCapabilities(e){const r=e.capabilities?e.capabilities.toLowerCase().split(",").map(w=>w.trim()):["image","catalog"],{currentVersion:n,advancedQueryCapabilities:l,maxRecordCount:u}=e,p=r.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!(!e.spatialReference&&!e.extent?.spatialReference),d=r.includes("edit"),g=r.includes("mensuration")&&c,h=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(w=>w.trim()),f=g&&h.includes("basic"),y=this._isMosaicDataset(e)&&r.includes("catalog"),v=r.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:n>=11.2&&y,supportsImageToMapMultiray:n>=11.2&&y,supportsMapToImage:n>=11.2&&y,supportsFindImages:n>=11.2&&y,supportsGetImageUrl:n>=11.3&&v,supportsMeasure:g,supportsMeasureFromImage:n>=11.2,supportsDownload:v,supportsQuery:y&&e.fields&&e.fields.length>0,supportsGetSamples:n>=10.2&&p,supportsProject:n>=10.3&&p,supportsComputeStatisticsHistograms:n>=10.4&&p,supportsQueryBoundary:n>=10.6&&p,supportsCalculateVolume:n>=10.7&&m,supportsComputePixelLocation:n>=10.7&&y,supportsComputeAngles:n>=10.91,supportsQueryGPSInfo:n>=11.2&&y,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!l?.supportsStatistics,supportsOrderBy:!!l?.supportsOrderBy,supportsDistinct:!!l?.supportsDistinct,supportsPagination:!!l?.supportsPagination,supportsStandardizedQueriesOnly:!!l?.useStandardizedQueries,supportsPercentileStatistics:!!l?.supportsPercentileStatistics,supportsCentroid:!!l?.supportsReturningGeometryCentroid,supportsDistance:!!l?.supportsQueryWithDistance,supportsExtent:!!l?.supportsReturningQueryExtent,supportsGeometryProperties:!!l?.supportsReturningGeometryProperties,supportsHavingClause:!!l?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!l?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:f,supportsAreaAndPerimeter:f,supportsPointOrCentroid:f,supportsHeightFromBaseAndTop:g&&h.includes("base-top height"),supportsHeightFromBaseAndTopShadow:g&&h.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:g&&h.includes("top-top shadow height"),supports3D:g&&h.includes("3d")}}}};function o(e){return e?.path??""}return s([a({clonable:!1})],t.prototype,"_functionRasterInfos",void 0),s([a({clonable:!1})],t.prototype,"_rasterJobHandler",void 0),s([a({clonable:!1})],t.prototype,"_cachedRendererJson",void 0),s([a({readOnly:!0})],t.prototype,"_serviceSupportsMosaicRule",void 0),s([E("_serviceSupportsMosaicRule",["currentVersion","fields"])],t.prototype,"readServiceSupportsMosaicRule",null),s([a({readOnly:!0})],t.prototype,"_rasterAttributeTableFieldPrefix",void 0),s([a({readOnly:!0})],t.prototype,"_rasterFunctionNamesIndex",null),s([a()],t.prototype,"adjustAspectRatio",void 0),s([a({type:[Le],json:{write:!0}})],t.prototype,"bandIds",void 0),s([E("bandIds")],t.prototype,"readBandIds",null),s([a({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),s([E("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),s([a({type:Number})],t.prototype,"compressionQuality",void 0),s([I("compressionQuality")],t.prototype,"writeCompressionQuality",null),s([a({type:Number})],t.prototype,"compressionTolerance",void 0),s([I("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),s([a({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),s([a({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],t.prototype,"defaultMosaicRule",void 0),s([E("defaultMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultMosaicRule",null),s([a({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],t.prototype,"definitionExpression",void 0),s([a({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),s([a()],t.prototype,"rasterInfo",void 0),s([a({readOnly:!0,type:[we]})],t.prototype,"fields",void 0),s([a({readOnly:!0})],t.prototype,"fieldsIndex",null),s([a({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],t.prototype,"format",null),s([E("service","format",["serviceDataType"])],t.prototype,"readFormat",null),s([a({type:Ee})],t.prototype,"fullExtent",void 0),s([a({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),s([a({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),s([a({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),s([a({type:String,json:{type:he.jsonValues,read:he.read,write:he.write}})],t.prototype,"interpolation",void 0),s([a()],t.prototype,"minScale",void 0),s([E("service","minScale")],t.prototype,"readMinScale",null),s([a()],t.prototype,"maxScale",void 0),s([E("service","maxScale")],t.prototype,"readMaxScale",null),s([a({type:H})],t.prototype,"mosaicRule",null),s([E("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),s([I("mosaicRule")],t.prototype,"writeMosaicRule",null),s([a()],t.prototype,"multidimensionalInfo",void 0),s([a({type:ir,json:{write:!0}})],t.prototype,"multidimensionalSubset",void 0),s([a({json:{type:Le}})],t.prototype,"noData",void 0),s([I("noData")],t.prototype,"writeNoData",null),s([a({type:String,json:{type:qe.jsonValues,read:qe.read,write:qe.write}})],t.prototype,"noDataInterpretation",void 0),s([a({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),s([E("objectIdField")],t.prototype,"readObjectIdField",null),s([a({readOnly:!0})],t.prototype,"geometryType",void 0),s([a({})],t.prototype,"typeIdField",void 0),s([a({})],t.prototype,"types",void 0),s([a({readOnly:!0})],t.prototype,"parsedUrl",null),s([a({type:Function})],t.prototype,"pixelFilter",void 0),s([a()],t.prototype,"raster",void 0),s([a({readOnly:!0})],t.prototype,"sourceType",void 0),s([E("sourceType",["serviceSourceType","fields"])],t.prototype,"readSourceType",null),s([a()],t.prototype,"viewId",void 0),s([a()],t.prototype,"renderer",null),s([a({types:sr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:nr,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],t.prototype,"internalRenderer",null),s([E("internalRenderer")],t.prototype,"readRenderer",null),s([I("internalRenderer")],t.prototype,"writeRenderer",null),s([a({clonable:!1})],t.prototype,"symbolizer",void 0),s([a(wr)],t.prototype,"opacity",void 0),s([a({readOnly:!0})],t.prototype,"rasterFields",null),s([a({constructOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),s([a({type:S,json:{name:"renderingRule"}})],t.prototype,"rasterFunction",null),s([E("rasterFunction",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRasterFunction",null),s([a({readOnly:!0})],t.prototype,"serviceDataType",void 0),s([a({readOnly:!0,type:re})],t.prototype,"spatialReference",void 0),s([E("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),s([a({json:{type:nt.jsonValues}})],t.prototype,"pixelType",void 0),s([E("pixelType")],t.prototype,"readPixelType",null),s([I("pixelType")],t.prototype,"writePixelType",null),s([a({constructOnly:!0,type:Nt})],t.prototype,"serviceRasterInfo",void 0),s([a()],t.prototype,"sourceJSON",void 0),s([a(Rr)],t.prototype,"url",void 0),s([a({readOnly:!0})],t.prototype,"version",void 0),s([E("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=s([R("esri.layers.mixins.ArcGISImageService")],t),t};let z=class extends qr(Hr(Ur(Lr($r(rr(ls(zr(Gr(Er(er(fe(tr)))))))))))){constructor(...i){super(...i),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Ut(async(t,o,e)=>{const{save:r,saveAs:n}=await Ht(()=>import("./imageryUtils-6MVSqijr-8FXWHvzM.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11]),import.meta.url);switch(t){case Ue.SAVE:return r(this,o);case Ue.SAVE_AS:return n(this,e,o)}})}normalizeCtorArgs(i,t){return typeof i=="string"?{url:i,...t}:i}load(i){const t=i!=null?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},i).catch(Bt).then(()=>this._fetchService(t))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(i){this._set("legendEnabled",i)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(i){this._set("listMode",i)}writeOperationalLayerType(i,t,o){const e=this.renderer?.type==="vector-field";t[o]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(i){const t=this.rasterFields,o=this.title,e=new Set;let r=!1,n=!1;this.capabilities&&(r=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const l=new Set;r&&l.add("raster.itempixelvalue");for(const p of t){const m=p.name.toLowerCase();l.has(m)||m.includes("raster.servicepixelvalue.")||e.add(p.name)}n&&e.add("raster.magnitude").add("raster.direction");const u=Qr({fields:t,title:o},{...i,visibleFieldNames:e});return u?.fieldInfos&&this.rasterInfo?.pixelType.startsWith("f")&&u.fieldInfos.forEach(({format:p,fieldName:m})=>{p&&m&&/^raster\.(item|service)pixelvalue/i.test(m)&&(p.places=2)}),u}queryFeatures(i,t){return this.queryRasters(i,t).then(o=>{if(o?.features)for(const e of o.features)e.layer=e.sourceLayer=this;return o})}queryFeatureCount(i,t){return this.queryRasterCount(i,t)}redraw(){this.emit("redraw")}async save(i){return this._debouncedSaveOperations(Ue.SAVE,i)}async saveAs(i,t){return this._debouncedSaveOperations(Ue.SAVE_AS,t,i)}serviceSupportsSpatialReference(i){return Br(this,i)}write(i,t){if(!this._isPreviewLayer)return super.write(i,t);if(t?.messages){const o=`${t.origin}/${t.layerContainerType||"operational-layers"}`;t.messages.push(new b("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${o}'`,{layer:this}))}return null}};s([a(gr)],z.prototype,"legendEnabled",null),s([a({type:["show","hide"]})],z.prototype,"listMode",null),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],z.prototype,"isReference",void 0),s([a({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],z.prototype,"operationalLayerType",void 0),s([I("web-map","operationalLayerType")],z.prototype,"writeOperationalLayerType",null),s([a(fr)],z.prototype,"popupEnabled",void 0),s([a({type:Qt,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],z.prototype,"popupTemplate",void 0),s([a({readOnly:!0})],z.prototype,"defaultPopupTemplate",null),s([a({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),s([a({readOnly:!0})],z.prototype,"_isPreviewLayer",null),z=s([R("esri.layers.ImageryLayer")],z);const Tn=z;export{Tn as default};
