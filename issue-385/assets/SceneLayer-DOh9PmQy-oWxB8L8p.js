const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./editingSupport-gUqP9iyf-DTRRqo5J.js","./main-DtyBiszs.js","./main-BFJnOW9z.css","./uuid-Dj9mdEVg-BaKSCiyT.js","./normalizeUtils-Bxmy9MNI-DoOGMxXI.js","./normalizeUtilsCommon-CRJlkfEA-BZF05ZW7.js","./utils-9sQxfkoa-DKNhhRSI.js","./utils-Bq23Xwmj-BJ-REk8i.js","./EditBusLayer-Df29OyJh-BPMRR9an.js","./infoFor3D-DIuYZyyK-BtH19JJ7.js"])))=>i.map(i=>d[i]);
import{v as i,S as s,i as b,bA as te,ag as $,l as A,b0 as q,a0 as v,aa as re,aA as ie,bT as C,a1 as f,W as se,o as d,j3 as oe,bi as ae,_ as M,w as ne,bU as N,bP as P,aU as le,aw as pe,bC as de,bL as ue,e as U,ai as ye,av as ce,a4 as me,f as Y,P as he,bX as fe,em as G}from"./main-DtyBiszs.js";import"./UniqueValueRenderer-fS5V0Ej1-DkJzc6xa.js";import{u as ge}from"./jsonUtils-C64Zfu7c-CeVkh7c1.js";import{m as ve}from"./MultiOriginJSONSupport-DKRh9P6w-COu51DgJ.js";import{F as we}from"./Mesh-DLzjDUIO-Ck9fUETL.js";import{D as be}from"./Layer-ChoECxvZ-CyQZqjNv.js";import{b as Ie,v as Le,g as Fe}from"./meshSpatialReferenceScaleUtils-B1zR72Os-C4BIA0wh.js";import{n as Se}from"./APIKeyMixin-BUMSx9ny-h5649pR3.js";import{a as _e}from"./ArcGISService-BYA-y6X6-C07Zr5D3.js";import{i as Te}from"./CustomParametersMixin-vdKsTHer-Dfwpltbv.js";import{C as Ee}from"./EditBusLayer-Df29OyJh-BPMRR9an.js";import{E as Oe}from"./OperationalLayer-B5IXiMa2-BueNhzQz.js";import{C as xe}from"./PortalLayer-CElnYuSQ-D0VbkkYy.js";import{S as je}from"./ScaleRangeLayer-Bz0DcnvM-C7YivupL.js";import{W as Ae,f as V}from"./SceneService-BZqGtWmG-DdE3-3q6.js";import{m as Pe}from"./TemporalLayer-CpOrN_w9-7TXNdT_C.js";import{w as k,r as Re}from"./TimeInfo-w_HB2CsF-BUl1Ontw.js";import{k as Q}from"./TimeExtent-Cn0Jofqr-DmiBbJ0w.js";import{L as z}from"./arcgisLayerUrl-HNYh8jvG-Cv7eFD6L.js";import{b as De}from"./associatedFeatureServiceUtils-Bu76-Sxs-CMFuMLVg.js";import{t as $e}from"./capabilities-Cjn77swe-Y9lFlGVh.js";import{$ as Ue,Y as qe,_ as Ce,X as Ne,V as Ge}from"./commonProperties-BtIqvFU_-D4uLRK3h.js";import{l as Ve,A as ke}from"./featureLayerUtils-DgfQQyK4-DKsz92-g.js";import{e as Qe,c as ze}from"./FeatureReductionSelection-BjX3h7Sz-BzA-M_A0.js";import{f as We}from"./fieldProperties-Bq26w7gt-4_1YoeEu.js";import{o as Je}from"./FieldsIndex-HmzMbJQG-Cq_dsfAm.js";import{y as Z,o as Ke,d as He,m as Me}from"./I3SLayerDefinitions-CwLXCKtU-BzBY0IxG.js";import{w as Ye,F as Ze}from"./infoFor3D-DIuYZyyK-BtH19JJ7.js";import{C as Be,q as W}from"./labelingInfo-DGVNul26-xogYWeT8.js";import{v as Xe}from"./LayerFloorInfo-DRJ8wfwx-70R7S4EL.js";import{p as et}from"./fetchService-DbaKmJhP-U6N4YZ1K.js";import{C as tt}from"./persistable-C6RBwzJi-DuXLHZty.js";import{J as rt,a as it}from"./projection-BA9M1R7d-DsJ8ktS5.js";import{g as st}from"./styleUtils-ChrJTYIw-J8zWDDvS.js";import{b as ot}from"./Query-BrwMGK8U-Nay_jInM.js";import{k as J,z as at,j as nt}from"./elevationInfoUtils-mOZsPH2J-BQXJZeY5.js";import{w as lt}from"./popupUtils-B0uZcXX0-ZE8lrlMH.js";import{_ as pt}from"./I3SUtil-Bq8KpP2j-D2lIvO5L.js";import{h as dt,m as ut}from"./popupUtils-nV1O8RUO-CZYeAxTf.js";import"./RendererLegendOptions-K3md58-X-DsLNXK_I.js";import"./diffUtils-Cz3Fi8Xb-CyGGBckS.js";import"./colorRamps-q0bZVhs2-CHYsqDFn.js";import"./sizeVariableUtils-t52KcLLi-D0hbQF8b.js";import"./visualVariableUtils-D3kZJRyn-CgtL96oE.js";import"./compilerUtils-CV1QYWI8-CMOifKmk.js";import"./lengthUtils-DKpMe5qR-BPoBhPgv.js";import"./styleUtils-BtpNqZyT-Ca9PuLDB.js";import"./LRUCache-C3erQTWv-B5a5dXgs.js";import"./Version-CoKzbupV-BYKWOnO9.js";import"./OverrideHelper-DWRbVlj1-D0482oV6.js";import"./colorUtils-Cthpxcks-C97dENV_.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./utils-SPbpQbmm-BPAHwNnh.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./quantizationUtils-bJy1cRwp-0DgKM9Vd.js";import"./heatmapUtils-seiMkkkR-9HczU59v.js";import"./UnknownTimeZone-C--TOcPG-A4OHqSTj.js";import"./MeshTransform-C--IG09w-DEbhM2sd.js";import"./mat4-DX7gBViE-Df3mmGIZ.js";import"./mat4f64-Dn1WEGBx-C99QVUMW.js";import"./quat-BODLR7mS-TM7zV5N8.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./vec32-D9GsKZ1t-DLCDbccv.js";import"./imageUtils-BA2D6Uf1-HQISvjle.js";import"./MeshVertexAttributes-CbNpPur2-0dzAjrlt.js";import"./MeshLocalVertexSpace-BqgocsoS-8Tl7eHqX.js";import"./meshVertexSpaceUtils-B4l_Zo0M-Djx7uemX.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./Indices-DEr2HrWx-D_DNM5Zm.js";import"./plane-Dt8R0KeE-CpwcnX5l.js";import"./vec2f64-CeODonrJ-CkkJCdRC.js";import"./deduplicate-D2d-E5Pw-B89ir8ZQ.js";import"./projectPointToVector-B2UUY9SE-OiCjb-pK.js";import"./projectBuffer-CvCBvJ6W-vZl37Yp1.js";import"./vertexSpaceConversion-CiKaVq_u-qjPR32px.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./spatialReferenceEllipsoidUtils-DUrKTvup-BfbHbBe8.js";import"./computeTranslationToOriginAndRotation-wF0y9WQG-2xhwpaDs.js";import"./vec3-BazNroeq-DHAOcQdB.js";import"./BufferView-PQoE3GL7-BocpH3PK.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./vec4-DWDdg1fj-DhxA15_n.js";import"./External-D_wl4XAw-Bi4injGy.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./PortalItem-CctGdnxF-BcqcxsRu.js";import"./portalItemUtils-B8bw6SAG-CLut4LsQ.js";import"./originUtils-BLsWtgV9-B4sclfuf.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./HeightModelInfo-C5vFqzyF-B3nug8Cs.js";import"./jsonContext-BA8GHqVk-DMzzd9LR.js";import"./resourceUtils-BmW6QqlX-CXaSpbCV.js";import"./resourceUtils-rTM6Iemx-EnzZLFso.js";import"./saveUtils-CIYk-dsQ-Cb6xkw3-.js";import"./ElevationInfo-yv2-9tj6-DxmnMlWM.js";import"./Field-C6hA1tZj-BELDGjZ4.js";import"./fieldType-CD2CL2hr-LCWskU1J.js";import"./RelationshipQuery-DJsz3K0U-CXFCLmDx.js";import"./labelUtils-BW14kBqX-DqFlq-kf.js";import"./MD5-CHHr-oed-SuyrCYQ0.js";import"./resourceExtension-CdQvIDKV-BQGtNVXt.js";import"./projectVectorToVector-sIYLNlex-DE_yxHey.js";import"./sphere-BenPORjV-BehVuqGi.js";import"./I3SBinaryReader-DEbI3cKZ-ZHsgCmWh.js";import"./VertexAttribute-DqD5S0a2-3q90nikV.js";import"./floatRGBA-4pIJN00G-Cvi1zSMQ.js";import"./NormalAttribute.glsl-axtNsUxo-G89kQrFg.js";import"./interfaces-DN2-jsJC-DzMTiT5R.js";import"./BindType-9iOk18Ed-CRW1cdX4.js";import"./orientedBoundingBox-oHezdpWm-CU0BIZ2U.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";function B({associatedLayer:e,serviceUpdateTimeStamp:t}){const r=e?.editingInfo?.lastEditDate,a=e?.serverGens,n=r!=null,l=t!=null,p=n&&l&&t.lastUpdate!==r.getTime();return n&&(p||!l&&a?.minServerGen!==a?.serverGen)}const yt=e=>{let t=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){const r=this.associatedLayer?.timeInfo;if(r==null)return null;const a=r.clone();return G(a,this.fieldsIndex),a}set timeInfo(r){G(r,this.fieldsIndex),this._override("timeInfo",r)}get timeExtent(){return this.associatedLayer?.timeExtent}set timeExtent(r){this._override("timeExtent",r)}get timeOffset(){return this.associatedLayer?.timeOffset}set timeOffset(r){this._override("timeOffset",r)}get datesInUnknownTimezone(){return this.associatedLayer?.datesInUnknownTimezone??!1}set datesInUnknownTimezone(r){this._override("datesInUnknownTimezone",r)}async loadTimeInfoFromService(r){const{serviceTimeInfo:a}=this;if(a==null)return;const{startTimeField:n,endTimeField:l}=a;if(n==null&&l==null||B({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const p=async y=>{let m=null;try{m=(await this.fetchStatistics?.(y,r))?.stats}catch{}if(m==null)return null;const{minTimeStr:I,min:E,maxTimeStr:O,max:x}=m,F=y===n?I??E:O??x;return F!=null?new Date(F):null},[u,c]=await Promise.all([p(n),p(l)]);if(n!=null&&u==null||l!=null&&c==null)return;const h=new Q({start:u,end:c});this.setAtOrigin("timeInfo",new k({endField:l,startField:n,fullTimeExtent:h}),"service")}};return i([s({type:k,json:{read:!1,write:!1}})],t.prototype,"timeInfo",null),i([s({type:Q,json:{read:!1,write:!1}})],t.prototype,"timeExtent",null),i([s({type:Re,json:{read:!1,write:!1}})],t.prototype,"timeOffset",null),i([s({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],t.prototype,"datesInUnknownTimezone",null),i([s({type:L,readOnly:!0,json:{read:{source:"timeInfo"}}})],t.prototype,"serviceTimeInfo",void 0),t=i([b("esri.layers.mixins.TemporalSceneLayer")],t),t};let L=class extends U{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};i([s({type:String})],L.prototype,"endTimeField",void 0),i([s({type:String})],L.prototype,"startTimeField",void 0),L=i([b("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],L);let g=class extends U{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};i([s({type:String,json:{read:!0,write:!0}})],g.prototype,"name",void 0),i([s({type:String,json:{read:!0,write:!0}})],g.prototype,"field",void 0),i([s({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),i([s({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),i([s({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],g.prototype,"type",void 0),g=i([b("esri.layers.support.RangeInfo")],g);var _;let R=_=class extends te($.ofType(A)){constructor(e){super(e)}clone(){return new _(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){const t=e?.layer?.spatialReference;return t?this.toArray().map(r=>{if(!t.equals(r.spatialReference)){if(!rt(r.spatialReference,t))return e?.messages?.push(new q("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const n=new A;it(r,n,t),r=n}const a=r.toJSON(e);return delete a.spatialReference,a}).filter(r=>r!=null):(e?.messages?.push(new q("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(r=>r.toJSON(e)))}static fromJSON(e,t){const r=new _;return e.forEach(a=>r.add(A.fromJSON(a,t))),r}};R=_=i([b("esri.layers.support.PolygonCollection")],R);const T=R;var D;let w=D=class extends U{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new T,this._geometriesSource=null}initialize(){this.addHandles(ye(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ce))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=T.fromJSON(e,r):this._geometriesSource={url:me(e,r),context:r}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:a}=this._geometriesSource,n=await Y(r,{responseType:"json",signal:t?.signal}),l=e.toJSON(),p=n.data.map(u=>({...u,spatialReference:l}));this.geometries=T.fromJSON(p,a),this._geometriesSource=null}clone(){const e=new D({geometries:he(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};i([s({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],w.prototype,"spatialRelationship",void 0),i([s({type:T,nonNullable:!0,json:{write:!0}}),tt({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],w.prototype,"geometries",void 0),i([v(["web-scene","portal-item"],"geometries")],w.prototype,"readGeometries",null),w=D=i([b("esri.layers.support.SceneFilter")],w);const ct=w;async function mt({fieldName:e,statisticsInfo:t,errorContext:r,fieldsIndex:a,path:n,customParameters:l,apiKey:p,signal:u}){if(t==null)throw new d(`${r}:no-cached-statistics`,"Cached statistics are not available for this layer");const c=a.get(e);if(c==null)throw new d(`${r}:field-unexisting`,`Field '${e}' does not exist on the layer`);const h=t.find(I=>I.name===c.name);if(h==null)throw new d(`${r}:no-cached-statistics`,"Cached statistics for this attribute are not available");const y=fe(n,h.href),{data:m}=await Y(y,{query:{f:"json",...l,token:p},responseType:"json",signal:u});return m}async function ht(e){const t=[];for(const r of e)r.name.toLowerCase().endsWith(".zip")?t.push(ft(r)):t.push(Promise.resolve(r));return(await Promise.all(t)).flat()}async function ft(e){const{BlobReader:t,ZipReader:r,BlobWriter:a}=await M(()=>import("./zipjs-wrapper-DlcHxyCX-BFxi6l53.js"),[],import.meta.url),n=[];return(await new r(new t(e)).getEntries()).forEach(l=>{if(l.directory||/^__MACOS/i.test(l.filename))return;const p=new a,u=l.getData?.(p).then(c=>new File([c],l.filename));u&&n.push(u)}),Promise.all(n)}const gt=new Set(["3DObject","Point"]),K=We();let o=class extends yt(Ee(Ae(_e(Oe(xe(je(ve(Te(Se(re(be))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new $,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=ie(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){const r=this.getFeatureType(t?.feature)?.domains?.[e];return r&&r.type!=="inherited"?r:this.getField(e)?.domain??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){return this.associatedLayer?.types??[]}get typeIdField(){return this.associatedLayer?.typeIdField??null}get templates(){return this.associatedLayer?.templates??null}get formTemplate(){return this.associatedLayer?.formTemplate??null}get attributeTableTemplate(){return this.associatedLayer?.attributeTableTemplate??null}get fieldsIndex(){return new Je(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:Z.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Ve(this.associatedLayer)}get geometryType(){return vt[this.profile]||"mesh"}set renderer(e){C(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){return this._capabilitiesFromAssociatedFeatureLayer(this.associatedLayer?.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){e=e??$e;const{query:t,queryRelated:r,editing:{supportsGlobalId:a,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:p,supportsReturnServiceEditsInSourceSpatialReference:u},data:{supportsZ:c,supportsM:h,isVersioned:y,supportsAttachment:m},operations:{supportsEditing:I,supportsAdd:E,supportsUpdate:O,supportsDelete:x,supportsQuery:F,supportsQueryAttachments:X,supportsAsyncConvert3D:ee}}=e,S=e.operations.supportsChangeTracking,j=!!this.associatedLayer?.infoFor3D;return{query:t,queryRelated:r,editing:{supportsGlobalId:a,supportsReturnServiceEditsInSourceSpatialReference:u,supportsRollbackOnFailure:n,supportsGeometryUpdate:j&&p,supportsUploadWithItemId:l},data:{supportsAttachment:m,supportsZ:c,supportsM:h,isVersioned:y},operations:{supportsQuery:F,supportsQueryAttachments:X,supportsEditing:I&&S,supportsAdd:j&&E&&S,supportsDelete:j&&x&&S,supportsUpdate:O&&S,supportsAsyncConvert3D:ee}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.associatedLayer?.editingEnabled??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return this.associatedLayer?.infoFor3D??null}get relationships(){return this.associatedLayer?.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){return this.associatedLayer?.displayField??null}readProfile(e,t){const r=t.store.profile;return r!=null&&H[r]?H[r]:(f.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){return this.associatedLayer?.useViewTime??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(se),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await st(this,{origin:"service"},t),C(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){f.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new ot;return this.geometryType==="mesh"?this.associatedLayer?.infoFor3D&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r?.features)for(const a of r.features)a.layer=this,a.sourceLayer=this;return r})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new d("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new d("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=oe(this.fieldsIndex,await dt(this,ut(this)));return pt(this.parsedUrl?.path??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new d("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const a=new ae;return a.attributes=r[0],a.layer=this,a.sourceLayer=this,a}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(f.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return lt(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new d("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new d("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(V.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(V.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await M(()=>import("./editingSupport-gUqP9iyf-DTRRqo5J.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]),import.meta.url);let a=t;await this.load();const n=this.associatedLayer;if(!n)throw new d(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,p=!!n.infoFor3D,u=a?.globalIdUsed??!0;if(p&&l==null)throw new d(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(p&&!u)throw new d(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return z(n.url)&&p&&e.deleteFeatures!=null&&l!=null&&(a={...a,globalIdToObjectId:await ke(n,e.deleteFeatures,l)}),r(this,n.source,e,a)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new d(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){t??={};const r=y=>{throw f.getLogger(this).error(".convertMesh()",y.message),y};await this.load(),this.infoFor3D||r(new d("invalid:layer","SceneLayer has no capability for mesh conversion"));const a=await this.extractAndFilterFiles(e),n=a.reduce((y,m)=>Ye(this.infoFor3D,m)?y+1:y,0);n===0&&r(new Ie),n>1&&r(new Le);const l=this.spatialReference,p=t.location??new ne({x:0,y:0,z:0,spatialReference:l}),u=p.spatialReference.isGeographic?"local":"georeferenced",c=we.createWithExternalSource(p,a,{vertexSpace:u,transform:Fe(p.spatialReference),unitConversionDisabled:!0}),[h]=await this.uploadAssets([c],{...t,useAssetOrigin:!t.location});return h}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await ht(e)).filter(r=>Ze(t,r)):e}validateLayer(e){if(e.layerType&&!gt.has(e.layerType))throw new d("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,a){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const p=a&&a.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=p;break;case"vertex-reference-frame":n=!0,l=!p;break;default:n=!1}}if(!n)throw new d("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new d("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new d("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!!this.attributeStorageInfo?.some(n=>n.name===e.name),r=!!this.associatedLayer?.fields?.some(n=>n&&e.name===n.name),a={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=a}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=N(this);for(let r=0;r<e.length;r++){const a=e[r],n=this.originIdOf(a),l=this.associatedLayer.originIdOf(a);n<l&&(l===P.SERVICE||l===P.PORTAL_ITEM)&&t.setAtOrigin(a,this.associatedLayer[a],l)}}_applyAssociatedLayerExtentOverride(){const e=this.associatedLayer?.getAtOrigin("fullExtent","service");this.associatedLayer?.infoFor3D==null||!e||!z(this.associatedLayer?.url)||!B(this)||N(this).setAtOrigin("fullExtent",e.clone(),P.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:a}=await De(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await et.FeatureLayer();this.associatedLayer=new n({url:t,customParameters:this.customParameters,layerId:r,portalItem:a}),await this.associatedLayer.load()}catch(t){le(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await pe(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?f.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):f.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&J(f.getLogger(this),at("Mesh scene layers","relative-to-scene",e)),J(f.getLogger(this),nt("Scene layers",e))}async fetchStatistics(e,t){return await mt({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:this.parsedUrl?.path??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t?.signal})}};i([s({types:{key:"type",base:Qe,typeMap:{selection:ze}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],o.prototype,"featureReduction",void 0),i([s({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],o.prototype,"rangeInfos",void 0),i([s({json:{read:!1}})],o.prototype,"associatedLayer",void 0),i([s({type:["show","hide"]})],o.prototype,"listMode",void 0),i([s({type:["ArcGISSceneServiceLayer"]})],o.prototype,"operationalLayerType",void 0),i([s({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),i([s({...K.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"fields",void 0),i([s()],o.prototype,"types",null),i([s()],o.prototype,"typeIdField",null),i([s()],o.prototype,"templates",null),i([s()],o.prototype,"formTemplate",null),i([s()],o.prototype,"attributeTableTemplate",null),i([s({readOnly:!0,clonable:!1})],o.prototype,"fieldsIndex",null),i([s({type:Xe,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],o.prototype,"floorInfo",void 0),i([s(K.outFields)],o.prototype,"outFields",void 0),i([s({type:Z,readOnly:!0,json:{read:!1}})],o.prototype,"nodePages",void 0),i([v("service","nodePages",["nodePages","pointNodePages"])],o.prototype,"readNodePages",null),i([s({type:[Ke],readOnly:!0})],o.prototype,"materialDefinitions",void 0),i([s({type:[He],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),i([s({type:[Me],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),i([s({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),i([s({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),i([s({readOnly:!0})],o.prototype,"statisticsInfo",void 0),i([s({type:$.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],o.prototype,"excludeObjectIds",void 0),i([s({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),i([s({type:ct,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],o.prototype,"filter",void 0),i([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),i([s(Ue)],o.prototype,"elevationInfo",null),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"effectiveCapabilities",null),i([s({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),i([s({type:String})],o.prototype,"geometryType",null),i([s(qe)],o.prototype,"labelsVisible",void 0),i([s({type:[Be],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:W},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:W},write:!0}})],o.prototype,"labelingInfo",void 0),i([s(Ce)],o.prototype,"legendEnabled",void 0),i([s({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if(typeof e=="number"&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return r!==void 0?de(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],o.prototype,"opacity",void 0),i([s({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"priority",void 0),i([s({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"semantic",void 0),i([s({types:ge,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",null),i([s({json:{read:!1}})],o.prototype,"cachedDrawingInfo",void 0),i([v("service","cachedDrawingInfo")],o.prototype,"readCachedDrawingInfo",null),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),i([s({type:Boolean,json:{read:!1}})],o.prototype,"editingEnabled",null),i([s({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"infoFor3D",null),i([s({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"relationships",null),i([s(Ne)],o.prototype,"popupEnabled",void 0),i([s({type:ue,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),i([s({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),i([s({type:String,json:{read:!1}})],o.prototype,"objectIdField",void 0),i([v("service","objectIdField",["objectIdField","fields"])],o.prototype,"readObjectIdField",null),i([s({type:String,json:{read:!1}})],o.prototype,"globalIdField",void 0),i([v("service","globalIdField",["globalIdField","fields"])],o.prototype,"readGlobalIdField",null),i([s({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),i([s({type:String,json:{read:!1}})],o.prototype,"profile",void 0),i([v("service","profile",["store.profile"])],o.prototype,"readProfile",null),i([s({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),i([s(Ge)],o.prototype,"screenSizePerspectiveEnabled",void 0),i([s({json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"serviceItemId",void 0),i([s(Pe)],o.prototype,"useViewTime",null),o=i([b("esri.layers.SceneLayer")],o);const H={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},vt={"mesh-pyramids":"mesh",points:"point"},Si=o;export{Si as default};
