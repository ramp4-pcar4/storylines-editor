import{v as t,S as i,n as O,bG as C,h as g,ec as L,o as N,bK as R,bw as U,ar as v,al as Z,c8 as x,e8 as z}from"./main-BTSN56ll.js";import{w as H}from"./MultiOriginJSONSupport-BqiFJbbt-BVCxA_EE.js";import{e as J}from"./Layer-DvVVmz9x-DPlUpQTx.js";import{T as V,y as I,j as F,F as k,h as K,b as W,I as X,w as Y,M as ee}from"./ogcFeatureUtils-Brq_WYec-BqP5v4mn.js";import{s as te}from"./capabilities-D0LjMoVC-d5vkPogN.js";import{c as re}from"./FeatureSet-BVGGhhH9-C90qXXtA.js";import{n as oe}from"./APIKeyMixin-BNzYY3QS-CV7vLAiu.js";import{u as ie}from"./BlendLayer-DjW_5k0v-Dho_WdQI.js";import{i as se}from"./CustomParametersMixin-CSMgHDaw-D3Nv8Jnb.js";import{I as pe}from"./DisplayFilteredLayer-DTxK0R7U-Du3OZgSU.js";import{f as ne}from"./FeatureEffectLayer-BVJTjFhg-DDZRNVxW.js";import{f as ae}from"./FeatureReductionLayer-vR-evpIv-CCDDq7kE.js";import{u as ue,n as le,t as de,a as me,r as ce,e as ye,i as fe}from"./OperationalLayer-CbXUnTH0-DB91yERf.js";import{p as he}from"./OrderedLayer-BD-wnvgD-End40khk.js";import{x as ge}from"./PortalLayer-B34ZUA2x-BjslFkKH.js";import{T as ve}from"./RefreshableLayer-Qpvyi8qY-AztYBHFy.js";import{S as Se}from"./ScaleRangeLayer-x42fwED3-Co4xphjE.js";import{x as be}from"./TemporalLayer-lQRje9wB-BzicvAYt.js";import{g as we}from"./TrackableLayer-D0OccxDX-BMNxD_2D.js";import{o as Ce}from"./FeatureType-DdIqcZ2U-wh7gKf_W.js";import{m as Re}from"./Field-BIQ-quF4-BbpT1uvV.js";import{f as xe}from"./fieldProperties-Cgp0UdcB-CfTvlI1C.js";import{u as Ie,i as Fe}from"./labelingInfo-DuLk-IW_-Bc1mN7O5.js";import{_ as Te,P as Oe}from"./typeUtils-CB2EGBWO-CfMbpau8.js";import{R as T}from"./Query-n1aoaaFC-DtAFAKLZ.js";import{y as De}from"./popupUtils-B99PyAFi-aRoHqN0b.js";import"./TimeExtent-Cf2Pienb-DqqrEWFg.js";import"./featureConversionUtils-Bjjlcfdo-jKUq9C94.js";import"./OptimizedFeature-mIz_HhJg-S7foeqDf.js";import"./memoryEstimations-DeWfxwaV-C_MXa_yR.js";import"./OptimizedGeometry-pzfNw1AT-Df37wV8I.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./geojson-BLilYCbg-C37tQHd5.js";import"./date-B2Zfy8vK-DIf-QFLz.js";import"./clientSideDefaults-BoAP7ZAL-DkaWGgKl.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";import"./sourceUtils-k2zbXRon-BiHZfSQv.js";import"./FieldsIndex-Bt0Y8aWr-D07QV8wj.js";import"./UnknownTimeZone-DxjyzFvs-D16q-ioo.js";import"./timeZoneUtils-d5p0Jda1-D0y-OBmm.js";import"./fieldType-PhcL4ff8-2FwHs2Q-.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7--KzhK1ek.js";import"./parser-CWccHtwJ-C7ev2h0Q.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-BzZ95Pzo.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./scaleUtils-Br-smv3A-t0UqAC49.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./displayFilterUtils-DvWUbJDp-C5ibNtQF.js";import"./FeatureEffect-D3G_gJ5F-D9WM_bd0.js";import"./FeatureFilter-DXpQKGs4-BeWJBOK5.js";import"./FeatureReductionSelection-DzXAxMK9-CG0NkTvz.js";import"./jsonUtils-CzRaZnmS-DTOJTYHP.js";import"./ClassBreaksRenderer-Bq2XGpfI-BDNmlmKt.js";import"./commonProperties-CJLeiNuA-690ZsgQK.js";import"./colorRamps-trM-CPFS-B6b9TTz_.js";import"./ColorStop-CL7v3R-A-Bm8T_i7d.js";import"./visualVariableUtils-BTS148WR-DKMwr5_7.js";import"./lengthUtils-C61nRlXw-B_ZeiXIN.js";import"./RendererLegendOptions-Bil_IDab-DVugf_ug.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./DictionaryScriptEvaluator-DW5hOK9A-BYfLv8NI.js";import"./Version-CnwD6MZa-BOky48_S.js";import"./ArcadeExpression-XjY3x7KV-DgPdJH5a.js";import"./TimeOnly-CGkId3bj-7XpCx2Ld.js";import"./enum-g1DWyQyu-E1lp7wOO.js";import"./utils-BfXZnjCE-DNbcBAbl.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./heatmapUtils-DRTN9U3a-8lg9CNDB.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./SimpleRenderer-C1YRhRzu-CJceUmbD.js";import"./UniqueValueRenderer-CLXHFtg9-BcuFBsu1.js";import"./diffUtils-BxG8DCnW-Dpawbp0Y.js";import"./styleUtils-DBPDLVBX-DZ7imX32.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./ElevationInfo-DE5to86a-BfsUWgCc.js";import"./OrderByInfo-SNGyPlhJ-WjGDf2gz.js";import"./asyncUtils-BPUlNCrX-nCXgmiAN.js";import"./PortalItem-BP-IQXnZ-OaDplu4L.js";import"./portalItemUtils-BfWDJg-S-2ToAg3cP.js";import"./projectionUtils-B-CplN3q-ikZX0f0r.js";import"./TimeInfo-COHxjenm-BLFCXjHh.js";import"./FeatureTemplate-CW5LOQ_p-D7CRO4hf.js";import"./RelationshipQuery-CaEbQySU-B7sk0HeE.js";import"./NormalizationBinParametersMixin-70JA0FRq-DLZv_gS_.js";import"./labelUtils-Oapo6DRu-Dtdg48kL.js";let d=class extends Z{constructor(){super(...arguments),this.featureDefinition=null,this.type="ogc-feature"}load(e){return this.addResolvingPromise(this._loadOGCServices(this.layer,e)),this.when()}getSource(){const{featureDefinition:{collection:e,layerDefinition:r,spatialReference:s,supportedCrs:p},layer:{apiKey:u,customParameters:a,effectiveMaxRecordCount:n}}=this;return{type:"ogc-source",collection:e,layerDefinition:r,maxRecordCount:n,queryParameters:{apiKey:u,customParameters:a},spatialReference:s,supportedCrs:p}}queryExtent(e,r={}){return null}queryFeatureCount(e,r={}){return null}queryFeatures(e,r={}){return this.queryFeaturesJSON(e,r).then(s=>re.fromJSON(s))}queryFeaturesJSON(e,r={}){const s=this.getSource();return this.load(r).then(()=>V(s,e,r))}queryObjectIds(e,r={}){return null}serviceSupportsSpatialReference(e){return!(!e.isWGS84&&!e.isWebMercator)||!!this.featureDefinition.supportedCrs[e.wkid]}_conformsToType(e,r){const s=new RegExp(`^${x(r)}$`,"i");return e.conformsTo.some(p=>s.test(p))??!1}_getCapabilities(e,r){return{analytics:{supportsCacheHint:!1},attachment:null,data:{isVersioned:!1,isBranchVersioned:!1,supportsAttachment:!1,supportsM:!1,supportsZ:e},metadata:{supportsAdvancedFieldProperties:!1},operations:{supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsAdd:!1,supportsDelete:!1,supportsEditing:!1,supportsChangeTracking:!1,supportsQuery:!1,supportsQueryBins:!1,supportsQueryAnalytics:!1,supportsQueryAttachments:!1,supportsQueryTopFeatures:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsUpdate:!1,supportsExceedsLimitStatistics:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:r,maxRecordCountFactor:void 0,maxUniqueIDCount:void 0,standardMaxRecordCount:void 0,supportsCacheHint:!1,supportsCentroid:!1,supportsCurrentUser:!1,supportsDisjointSpatialRelationship:!1,supportsDistance:!1,supportsDistinct:!1,supportsExtent:!1,supportsFormatPBF:!1,supportsGeometryProperties:!1,supportsHavingClause:!1,supportsHistoricMoment:!1,supportsMaxRecordCountFactor:!1,supportsOrderBy:!1,supportsPagination:!1,supportsPaginationOnAggregatedQueries:!1,supportsPercentileStatistics:!1,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsStandardizedQueriesOnly:!1,supportsTopFeaturesQuery:!1,supportsStatistics:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!1,supportsFullTextSearch:!1,supportsCompactGeometry:!1,supportsSqlExpression:!1,supportsTrueCurve:!1,tileMaxRecordCount:void 0},queryRelated:{supportsCount:!1,supportsOrderBy:!1,supportsPagination:!1,supportsCacheHint:!1},queryTopFeatures:{supportsCacheHint:!1},queryAttributeBins:te,editing:{supportsDeleteByAnonymous:!1,supportsDeleteByOthers:!1,supportsGeometryUpdate:!1,supportsGlobalId:!1,supportsReturnServiceEditsInSourceSpatialReference:!1,supportsRollbackOnFailure:!1,supportsUpdateByAnonymous:!1,supportsUpdateByOthers:!1,supportsUploadWithItemId:!1,supportsUpdateWithoutM:!1,supportsAsyncApplyEdits:!1,zDefault:void 0}}}_getMaxRecordCount(e){const r=e?.components?.parameters;return r?.limit?.schema?.maximum??r?.limitFeatures?.schema?.maximum}_getStorageSpatialReference(e){const r=e.storageCrs??I,s=F(r);return s==null?v.WGS84:new v({wkid:s})}_getSupportedSpatialReferences(e,r){const s="#/crs",p=e.crs??[I],u=p.includes(s)?p.filter(n=>n!==s).concat(r.crs??[]):p,a=/^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;return u.filter(n=>!a.test(n))}async _loadOGCServices(e,r){const s=r!=null?r.signal:null,{apiKey:p,collectionId:u,customParameters:a,fields:n,geometryType:D,hasZ:j,objectIdField:P,timeInfo:_,url:q}=e,E={fields:n?.map(l=>l.toJSON()),geometryType:z.toJSON(D),hasZ:j??!1,objectIdField:P,timeInfo:_?.toJSON()},m={apiKey:p,customParameters:a,signal:s},y=await k(q,m),[S,b]=await Promise.all([K(y,m),W(y,m)]);if(!this._conformsToType(S,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))throw new g("ogc-feature-layer:no-geojson-support","Server does not support geojson");const c=b.collections.find(({id:l})=>l===u);if(!c)throw new g("ogc-feature-layer:collection-not-found","Server does not contain the named collection");const A=this._conformsToType(S,"http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30")?await X(y,m):null,w=await Y(c,E,m),Q=this._getMaxRecordCount(A),B=this._getCapabilities(w.hasZ,Q),G=this._getStorageSpatialReference(c).toJSON(),$=this._getSupportedSpatialReferences(c,b),M=new RegExp(`^${x(ee)}`,"i"),f={};for(const l of $){const h=F(l);h!=null&&(f[h]||(f[h]=l.replace(M,"")))}this.featureDefinition={capabilities:B,collection:c,layerDefinition:w,spatialReference:G,supportedCrs:f}}};t([i()],d.prototype,"featureDefinition",void 0),t([i({constructOnly:!0})],d.prototype,"layer",void 0),t([i()],d.prototype,"type",void 0),d=t([O("esri.layers.graphics.sources.OGCFeatureSource")],d);const je=xe();let o=class extends pe(oe(se(ae(ne(ie(he(be(we(Se(ue(ge(ve(H(J)))))))))))))){constructor(e){super(e),this.capabilities=null,this.collectionId=null,this.copyright=null,this.description=null,this.displayField=null,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelingInfo=null,this.labelsVisible=!0,this.legendEnabled=!0,this.maxRecordCount=null,this.objectIdField=null,this.operationalLayerType="OGCFeatureLayer",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=null,this.title=null,this.type="ogc-feature",this.typeIdField=null,this.types=null,this.url=null}destroy(){this.source?.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["OGCFeatureServer"]},e).then(()=>this._fetchService(e))),this.when()}get defaultPopupTemplate(){return this.createPopupTemplate()}get effectiveMaxRecordCount(){return this.maxRecordCount??this.capabilities?.query.maxRecordCount??5e3}get isTable(){return this.loaded&&this.geometryType==null}set renderer(e){C(e,this.fieldsIndex),this._set("renderer",e)}on(e,r){return super.on(e,r)}createPopupTemplate(e){return De(this,e)}createQuery(){return new T}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,r){let s,p=!1;const u=r?.feature?.attributes,a=this.typeIdField&&u?.[this.typeIdField];return a!=null&&this.types&&(p=this.types.some(n=>n.id==a&&(s=n.domains?.[e],s?.type==="inherited"&&(s=this._getLayerDomain(e)),!0))),p||s||(s=this._getLayerDomain(e)),s}queryFeatures(e,r){return this.load().then(()=>this.source.queryFeatures(T.from(e)||this.createQuery(),r)).then(s=>(s?.features?.forEach(p=>{p.layer=p.sourceLayer=this}),s))}async queryAttributeBins(e,r){throw new g("OGCFeatureLayer","Layer source does not support queryAttributeBins capability")}serviceSupportsSpatialReference(e){return this.source?.serviceSupportsSpatialReference(e)??!1}async _fetchService(e){await this.source.load(e),this.read(this.source.featureDefinition,{origin:"service"}),C(this.renderer,this.fieldsIndex),L(this.timeInfo,this.fieldsIndex)}_getLayerDomain(e){if(!this.fields)return null;for(const r of this.fields)if(r.name===e&&r.domain)return r.domain;return null}};t([i({readOnly:!0,json:{origins:{service:{read:!0}}}})],o.prototype,"capabilities",void 0),t([i({type:String,json:{write:!0}})],o.prototype,"collectionId",void 0),t([i({type:String})],o.prototype,"copyright",void 0),t([i({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),t([i({readOnly:!0,type:String,json:{origins:{service:{name:"collection.description"}}}})],o.prototype,"description",void 0),t([i({type:String})],o.prototype,"displayField",void 0),t([i({type:Number})],o.prototype,"effectiveMaxRecordCount",null),t([i(le)],o.prototype,"elevationInfo",void 0),t([i({type:[Re],json:{origins:{service:{name:"layerDefinition.fields"}}}})],o.prototype,"fields",void 0),t([i(je.fieldsIndex)],o.prototype,"fieldsIndex",void 0),t([i({readOnly:!0,type:N,json:{origins:{service:{name:"layerDefinition.extent"}}}})],o.prototype,"fullExtent",void 0),t([i({type:R.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:R.read}}}}})],o.prototype,"geometryType",void 0),t([i({type:Boolean,json:{origins:{service:{name:"layerDefinition.hasZ"}}}})],o.prototype,"hasZ",void 0),t([i({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),t([i({type:[Ie],json:{origins:{"web-document":{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:Fe},write:!0}}}})],o.prototype,"labelingInfo",void 0),t([i(de)],o.prototype,"labelsVisible",void 0),t([i(me)],o.prototype,"legendEnabled",void 0),t([i({type:Number})],o.prototype,"maxRecordCount",void 0),t([i({type:String,json:{origins:{service:{name:"layerDefinition.objectIdField"}}}})],o.prototype,"objectIdField",void 0),t([i({type:["OGCFeatureLayer"]})],o.prototype,"operationalLayerType",void 0),t([i(ce)],o.prototype,"popupEnabled",void 0),t([i({type:U,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),t([i({types:Te,json:{origins:{service:{name:"layerDefinition.drawingInfo.renderer",write:!1},"web-scene":{types:Oe,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:!0}})],o.prototype,"renderer",null),t([i(ye)],o.prototype,"screenSizePerspectiveEnabled",void 0),t([i({readOnly:!0})],o.prototype,"source",void 0),t([i({readOnly:!0,type:v,json:{origins:{service:{read:!0}}}})],o.prototype,"spatialReference",void 0),t([i({type:String,json:{write:{enabled:!0,ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"collection.title"}}}})],o.prototype,"title",void 0),t([i({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),t([i({type:String,readOnly:!0})],o.prototype,"typeIdField",void 0),t([i({type:[Ce]})],o.prototype,"types",void 0),t([i(fe)],o.prototype,"url",void 0),o=t([O("esri.layers.OGCFeatureLayer")],o);const cr=o;export{cr as default};
