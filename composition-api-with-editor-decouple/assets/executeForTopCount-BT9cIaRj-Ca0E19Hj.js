import{m as i}from"./utils-BO8hgPs3-NGzkE5wh.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-DQfGSzke.js";import a from"./TopFeaturesQuery-BmMRhRdq-PV5sh9Pp.js";import"./main-DJKotNeA.js";import"./normalizeUtils-u00NGW3M-B_8jd2GW.js";import"./normalizeUtilsCommon-ClagynAA-DhHCBYDt.js";import"./utils-DpLVEUvg-BxP4kXy-.js";import"./query-COAsogFA-C3FrFDBF.js";import"./pbfQueryUtils-aBcHX3TJ-1bcV257K.js";import"./pbf-hoLeQyp2-BHxfWJwH.js";import"./memoryEstimations-DeWfxwaV-Bdvmk4ud.js";import"./OptimizedGeometry-pzfNw1AT-DeA1Chj6.js";import"./OptimizedFeature-mIz_HhJg-D28yNS2b.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-Cp-CWEOR.js";import"./projectionUtils-B-CplN3q--VlVEuZs.js";import"./TimeExtent-Cf2Pienb-D0HuzG45.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
