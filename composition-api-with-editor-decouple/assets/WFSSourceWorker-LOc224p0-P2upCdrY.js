import{g as E}from"./asyncUtils-BPUlNCrX-nCXgmiAN.js";import{h as y,u as c,cv as q,k as I,a6 as g,aR as _,aM as R,J as P,ap as b}from"./main-BTSN56ll.js";import{U as j,u as N}from"./featureConversionUtils-Bjjlcfdo-jKUq9C94.js";import{M as Q}from"./executeQueryForSnapping-BsS9M1AV-VZ9lLuSu.js";import{I as O}from"./FeatureStore-DfjNNhD_-GD7lEplP.js";import{p as U,h as k}from"./queryUtils-DZy8hWx3-BAw7qz1j.js";import{K as M}from"./QueryEngine-B7NH52mH-jyHa6ORC.js";import{Y as $,Q as L}from"./geojson-BLilYCbg-C37tQHd5.js";import{C as v}from"./sourceUtils-k2zbXRon-BiHZfSQv.js";import{U as A,b as J,I as f}from"./wfsUtils-z6T0V9sE-DtgpZIWx.js";import{o as W}from"./FieldsIndex-Bt0Y8aWr-D07QV8wj.js";import"./OptimizedFeature-mIz_HhJg-S7foeqDf.js";import"./memoryEstimations-DeWfxwaV-C_MXa_yR.js";import"./OptimizedGeometry-pzfNw1AT-Df37wV8I.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./normalizeUtils-u00NGW3M-CqNqSQXu.js";import"./normalizeUtilsCommon-ClagynAA-CjzxcKnv.js";import"./utils-BO8hgPs3-DVCOsJGh.js";import"./utils-DpLVEUvg-Bxd2nj3H.js";import"./timeSupport-C2LrHIeW-C912HLwz.js";import"./BoundsStore-DffHzOYo-CBrzBZNc.js";import"./PooledRBush-DfSXIoUa-BMAzaBHz.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./optimizedFeatureQueryEngineAdapter-LiTJLGWN-B8y5ugci.js";import"./projectionUtils-B-CplN3q-ikZX0f0r.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./WhereClauseCache-CixYkZwn-DHszv91p.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./WhereClause-D4rZJkVN-BtnWi6ZP.js";import"./TimeOnly-CGkId3bj-7XpCx2Ld.js";import"./enum-g1DWyQyu-E1lp7wOO.js";import"./UnknownTimeZone-DxjyzFvs-D16q-ioo.js";import"./fieldType-PhcL4ff8-2FwHs2Q-.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";import"./quantizationUtils-D907S7Bm-Nd2ARc-g.js";import"./utils-s7ypkCzr-BSoJ8MJf.js";import"./TimeExtent-Cf2Pienb-DqqrEWFg.js";import"./heatmapUtils-DRTN9U3a-8lg9CNDB.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./utils-CdIngiRE-D9r03EsT.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-BzZ95Pzo.js";import"./intl-BAA1onnp-B6SUCtGp.js";import"./timeZoneUtils-d5p0Jda1-D0y-OBmm.js";import"./utils-CKRJGBD_-DqdQVrjt.js";import"./ClassBreaksDefinition-BZ4FJdWb-BZEYMHkm.js";import"./SnappingCandidate-DIiHATRz-CuetCfU1.js";import"./FixedIntervalBinParameters-CsFyInBi-ktpYDSgJ.js";import"./NormalizationBinParametersMixin-70JA0FRq-DLZv_gS_.js";import"./Scheduler-BV4C4cVP-Dp9HvkB4.js";import"./debugFlags-8tOwPnHK-iUEbNTwF.js";import"./date-B2Zfy8vK-DIf-QFLz.js";import"./xmlUtils-TLuV3CJ7-Cs2DGP6C.js";import"./Field-BIQ-quF4-BbpT1uvV.js";const C="esri.layers.WFSLayer";class zt{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t={}){const{getFeatureUrl:a,getFeatureOutputFormat:o,fields:n,geometryType:u,featureType:s,maxRecordCount:i,maxTotalRecordCount:h,maxPageCount:w,objectIdField:d,customParameters:F}=e,{spatialReference:p,getFeatureSpatialReference:l}=A(a,s,e.spatialReference);try{await U(l,p)}catch{throw new y("unsupported-projection","Projection not supported",{inSpatialReference:l,outSpatialReference:p})}c(t),this._customParameters=F,this._featureType=s,this._fieldsIndex=W.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some(T=>T.type==="esriFieldTypeDate")?{timeZoneIANA:q}:null}),this._geometryType=u,this._getFeatureUrl=a,this._getFeatureOutputFormat=o,this._getFeatureSpatialReference=l,this._maxRecordCount=i,this._maxTotalRecordCount=h,this._maxPageCount=w,this._objectIdField=d,this._spatialReference=p;let m=await this._snapshotFeatures(t);if(m.errors.length>0&&(this._supportsPagination=!1,m=await this._snapshotFeatures(t),m.errors.length>0))throw m.errors[0];const S={type:"object-id",fieldName:d};return this._queryEngine=new M({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,featureIdInfo:S,spatialReference:p,timeInfo:null,featureStore:new O({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(m.features),{warnings:x(m),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new y("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(e,t.signal)).filter(I)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),Q(this._queryEngine,e,t.signal)}async queryAttributeBins(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(e,t.signal)}async refresh(e){return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=E(t=>this._snapshotFeatures({signal:t})),this._snapshotTask.promise.then(t=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(t.features);for(const a of x(t))g.getLogger(C).warn(new _("wfs-layer:refresh-warning",a.message,a.details));t.errors?.length&&g.getLogger(C).warn(new _("wfs-layer:refresh-error","Refresh completed with errors",{errors:t.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(e){const t=e?.signal,a=this._maxTotalRecordCount,o=this._maxPageCount,n=this._supportsPagination&&o>1?await J(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:t}):void 0;let u=[];const s=[];if(n==null)try{u=await this._singleQuery(t)}catch(i){R(i)||s.push(i)}else{const i=Math.min(n,a),h=Y(this,P(Math.ceil(i/this._maxRecordCount),1,o),t);await Promise.allSettled(Array.from({length:10}).map(()=>G(h,u,s)))}return c(t),{features:u,totalRecordCount:n,maxTotalRecordCount:a,maxPageCount:o,errors:s}}async _singleQuery(e){const t=Number.isFinite(this._maxRecordCount)&&this._maxRecordCount>0?this._maxRecordCount:void 0,a=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,count:t,signal:e});return this._processGeoJSON(a,{signal:e})}async _pageQuery(e,t){const a=e*this._maxRecordCount,o=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:t});return this._processGeoJSON(o,{startIndex:a,signal:t})}_processGeoJSON(e,t){$(e,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:o}=t;c(o);const n=L(e,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!b(this._spatialReference,this._getFeatureSpatialReference))for(const s of n)s.geometry!=null&&(s.geometry=j(k(N(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=a??1;for(const s of n){const i={};v(this._fieldsIndex,i,s.attributes,!0),s.attributes=i,i[this._objectIdField]==null&&(s.objectId=i[this._objectIdField]=u++)}return n}}function*Y(r,e,t){for(let a=0;a<e;a++)yield r._pageQuery(a,t)}async function G(r,e,t){let a=r.next();for(;!a.done;){try{const o=await a.value;e.push(...o)}catch(o){R(o)||t.push(o)}a=r.next()}}function x(r){const e=[];return r.totalRecordCount!=null&&(r.features.length<r.totalRecordCount&&e.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${r.features.length} of ${r.totalRecordCount} in ${r.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount}}),r.totalRecordCount>r.maxTotalRecordCount&&e.push({name:"wfs-layer:large-dataset",message:`The number of ${r.totalRecordCount} features exceeds the maximum allowed of ${r.maxTotalRecordCount}.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount,maxTotalRecordCount:r.maxTotalRecordCount}})),e}export{zt as default};
