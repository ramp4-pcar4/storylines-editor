import{x as B,X as E,v as r,S as o,bf as Z,bh as W,n as P,N as d,o as N,ar as Y,l as M}from"./main-DbyY3WHi.js";import{Q,Z as G}from"./RasterSymbolizer-BN6RVtx9-D0JwJ1pX.js";import{m as K,f as U,d as _}from"./utils-BO8hgPs3-Pt7n09aV.js";import{c as ee}from"./FeatureSet-BVGGhhH9-BB42jt9i.js";import{S as te,T as ae}from"./RasterJobHandlerMixin-DESVihMQ-6uFwF1RL.js";async function $(t,a,m){const x=K(t),{rasterFunction:c,sourceJSON:j}=a||{},O=c?JSON.stringify(c.rasterFunctionDefinition||c):null,k=U({...x.query,renderingRule:O,f:"json"}),u=_(k,m);t=x.path;const e=j||await d(t,u).then(i=>i.data),C=e.hasRasterAttributeTable?d(`${t}/rasterAttributeTable`,u):null,J=e.hasColormap?d(`${t}/colormap`,u):null,q=e.hasHistograms?d(`${t}/histograms`,u):null,z=e.currentVersion>=10.3?d(`${t}/keyProperties`,u):null,F=e.hasMultidimensions?d(`${t}/multidimensionalInfo`,u):null,n=await Promise.allSettled([C,J,q,z,F]);let f=null;if(e.minValues&&e.minValues.length===e.bandCount){f=[];for(let i=0;i<e.minValues.length;i++)f.push({min:e.minValues[i],max:e.maxValues[i],avg:e.meanValues[i],stddev:e.stdvValues[i]})}const S=N.fromJSON(e.extent),R=Math.ceil(S.width/e.pixelSizeX-.1),w=Math.ceil(S.height/e.pixelSizeY-.1),h=Y.fromJSON(e.spatialReference||e.extent.spatialReference),V=n[0].status==="fulfilled"?n[0].value?.data:null,H=V?.features?.length?ee.fromJSON(V):null,D=n[1].status==="fulfilled"?n[1].value?.data.colormap:null,L=D?.length?D:null,T=n[2].status==="fulfilled"?n[2].value?.data.histograms:null,A=T?.[0]?.counts?.length?T:null,p=n[3].status==="fulfilled"?n[3].value?.data??{}:{},I=n[4].status==="fulfilled"?n[4].value?.data.multidimensionalInfo:null,v=I?.variables?.length?I:null;v&&v.variables.forEach(i=>{i.statistics?.length&&i.statistics.forEach(s=>{s.avg=s.mean,s.stddev=s.standardDeviation}),i.dimensions?.forEach(s=>{s.name!=="StdTime"||s.recurring||s.unit||(s.unit="ISO8601")})});const{defaultVariable:y,serviceDataType:g}=e;y&&y!==p.DefaultVariable&&(p.DefaultVariable=y),g?.includes("esriImageServiceDataTypeVector")&&!g.includes(p.DataType)&&(p.DataType=g.replace("esriImageServiceDataType",""));let b=e.noDataValue;e.noDataValues?.length&&e.noDataValues.some(i=>i!==b)&&(b=e.noDataValues);const X=e.transposeInfo?new Q({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new M({x:e.extent.xmin,y:e.extent.ymax,spatialReference:h}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(R,w))/Math.LN2-8)),transposeInfo:e.transposeInfo}):void 0;return new G({width:R,height:w,bandCount:e.bandCount,extent:N.fromJSON(e.extent),spatialReference:h,pixelSize:new M({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:h}),pixelType:e.pixelType.toLowerCase(),statistics:f,attributeTable:H,colormap:L,histograms:A,keyProperties:p,noDataValue:b,multidimensionalInfo:v,storageInfo:X})}function oe(t,a,m){return $(t,{sourceJSON:a},m)}function ue(t,a,m){return $(t,{rasterFunction:a},m)}function de(t,a){t.attributeTable||(a.hasRasterAttributeTable=!1),t.histograms||(a.hasHistograms=!1),t.colormap||(a.hasColormap=!1),t.multidimensionalInfo||(a.hasMultidimensions=!1)}let l=class extends B.ClonableMixin(E){constructor(t){super(t),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};r([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"name",void 0),r([o({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),Z({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],l.prototype,"method",void 0),r([o({type:String,json:{write:{isRequired:!0}}})],l.prototype,"value",void 0),r([o({type:[W],json:{write:{isRequired:!0}}})],l.prototype,"bandIds",void 0),r([o({types:te,json:{write:!0,origins:{"web-scene":{types:ae,write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],l.prototype,"renderer",void 0),l=r([P("esri.renderers.support.RasterPresetRenderer")],l);const me=t=>{let a=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return r([o({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],a.prototype,"activePresetRendererName",void 0),r([o({type:[l],json:{name:"layerDefinition.presetRenderers",write:!0}})],a.prototype,"presetRenderers",void 0),a=r([P("esri.layers.mixins.RasterPresetRendererMixin")],a),a};export{oe as i,me as n,de as r,ue as s};
