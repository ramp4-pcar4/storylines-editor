import{v as s,S as n,cQ as y,aA as E,X as x,d7 as v,n as h,d0 as I,w,F as g,d8 as j}from"./main-DJKotNeA.js";import{m as f}from"./lengthUtils-C61nRlXw-B3ZOsSCs.js";var p;let i=p=class extends x{constructor(t){super(t)}async collectRequiredFields(t,e){return v(t,e,this.expression)}clone(){return new p({expression:this.expression,title:this.title})}equals(t){return this.expression===t.expression&&this.title===t.title}};s([n({type:String,json:{write:{isRequired:!0}}})],i.prototype,"expression",void 0),s([n({type:String,json:{write:!0}})],i.prototype,"title",void 0),i=p=s([h("esri.symbols.support.FeatureExpressionInfo")],i);const l=i;function T(t){return!!t&&f[t]!=null}function _(t){return 1/(f[t]||1)}function b(){const t=Object.keys(f);return I(t,"decimal-degrees"),t.sort(),t}const F=b();var a;const u=y()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),d=new E({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let o=class extends x{static{a=this}constructor(e){super(e),this.featureExpressionInfo=void 0,this.offset=null}readFeatureExpressionInfo(e,r){return e!=null?e.expression?e:void 0:r.featureExpression&&r.featureExpression.value===0?{expression:"0"}:void 0}writeFeatureExpressionInfo(e,r,c,m){r[c]=e.write({},m),e.expression==="0"&&(r.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:r}=this;return this._isOverridden("mode")?this._get("mode"):e!=null||r?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,r){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,r):null}clone(){return new a({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&j(this.featureExpressionInfo,e.featureExpressionInfo)}};s([n({type:l,json:{write:!0}})],o.prototype,"featureExpressionInfo",void 0),s([w("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],o.prototype,"readFeatureExpressionInfo",null),s([g("featureExpressionInfo",{featureExpressionInfo:{type:l},"featureExpression.value":{type:[0]}})],o.prototype,"writeFeatureExpressionInfo",null),s([n({type:u.apiValues,nonNullable:!0,json:{type:u.jsonValues,read:u.read,write:{writer:u.write,isRequired:!0}}})],o.prototype,"mode",null),s([n({type:Number,json:{write:!0}})],o.prototype,"offset",void 0),s([n({type:F,json:{type:String,read:d.read,write:d.write}})],o.prototype,"unit",null),o=a=s([h("esri.symbols.support.ElevationInfo")],o);export{_ as b,T as j,o as r};
