const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./apiConverter-CSuukuP9-0d-fQk0X.js","./Point2D-CaHJVGk1-JqvJXjLr.js","./Envelope2D-DlBzXkgv-eKRxGysX.js","./ProjectionTransformation-DQ4GElxa-DJbma22S.js","./Transformation2D-CXWnDKXs-CjsleQQw.js","./SimpleGeometryCursor-DSF_YyIm-TAMgMsbK.js","./main-DS4lIWNw.js","./main-CwLFcdU0.css","./OperatorDefinitions-DJdq_wrt-DP7_WWTp.js","./jsonConverter-tsQ40CV0-BoQ-dVYc.js"])))=>i.map(i=>d[i]);
import{_ as w,dd as y,a8 as d,il as x}from"./main-DS4lIWNw.js";import{NonSimpleResult as N}from"./OperatorDefinitions-DJdq_wrt-DP7_WWTp.js";import{execute as D}from"./affineTransformOperator-B0tOqzwS-Bv2E15PX.js";import{p as h,y as L,w as A,x as E,s as q}from"./operatorGeodesicBuffer-CD0MIjwi-CYmY_rFf.js";import{e as M}from"./geodeticCurveType-D_etKnbP-CirnHLSB.js";import{m as I}from"./geodeticAreaOperator-aG4eOZmG-BwxA6uF3.js";import{f as ht}from"./geodeticAreaOperator-aG4eOZmG-BwxA6uF3.js";import{l as B}from"./geodeticDensifyOperator-B8JbRMBD-DVvvFxpk.js";import{g as At}from"./geodeticDensifyOperator-B8JbRMBD-DVvvFxpk.js";import{m as H}from"./geodeticLengthOperator-DHGBHzf3-CdDux0DA.js";import{f as qt}from"./geodeticLengthOperator-DHGBHzf3-CdDux0DA.js";import{isSimple as K}from"./simplifyOGCOperator-DStFc6ba-Dla-aQ59.js";import Q from"./Transformation-DAm8dNbd-CJW4hDRU.js";import{i as Bt}from"./areaOperator-8zCnz_MJ-ycyTNlEF.js";import{W as V,K as W,Q as F}from"./operatorBuffer-NeM23FKW-B1TfPSrs.js";import{getSpatialReference as m,toPolygon as P,fromSpatialReference as i,fromGeometry as r,toGeometry as f}from"./apiConverter-CSuukuP9-0d-fQk0X.js";import{p as Kt}from"./centroidOperator-BhJfepF_-BnwDkO2Z.js";import{i as Vt}from"./clipOperator-BYgUBr-E-CBxKaffQ.js";import{u as Ft}from"./containsOperator-CnkxASyq-CmXKOdg9.js";import{S as X,b as k,T as J,B as U}from"./operatorConvexHull-BOiCdNhk-nygqIhfc.js";import{n as Y}from"./OperatorCrosses-DBnFKcD4-C_wOEAtY.js";import{i as kt}from"./cutOperator-D0LH-kTd-CexUcaZ9.js";import{l as Ut}from"./densifyOperator-vIKWtKQ2-DHelv43u.js";import{m as Zt}from"./differenceOperator-Dvly1JND-CuwJcaYh.js";import{l as Z}from"./ProjectionTransformation-DQ4GElxa-DJbma22S.js";import{i as tr}from"./distanceOperator-CZDvZf3O-hd6b1TSe.js";import{l as or}from"./equalsOperator-CN-Q_ktk-CaMKeNcx.js";import{c as sr}from"./generalizeOperator-CZmW10Pc-CYRG4gh9.js";import{l as ir}from"./intersectionOperator-D9cUW6io-DqW7wJYd.js";import{p as cr}from"./intersectsOperator-ZBnSpPTv-DzipxeE5.js";import{c as pr}from"./labelPointOperator-X678a0q3-Do5YlU2j.js";import{n as fr}from"./lengthOperator-C4ac9v9--D0stnaAR.js";import{a as ee,r as te,m as re}from"./operatorOffset-CQidv_UK-BTdlgoNF.js";import{n as oe}from"./OperatorOverlaps-DVRlZOh6-Bsf5FCZO.js";import{g as yr}from"./proximityOperator-U7rVHNKP-DiweM-bW.js";import{f as dr}from"./relateOperator-BqLfADzG-ViEKwmXH.js";import{b as vr}from"./simplifyOperator-BW9Vrh-l-a24BMNpY.js";import{i as Sr}from"./symmetricDifferenceOperator-BbAGnP2f-8QMDn6Pr.js";import{n as ne}from"./OperatorTouches-TXR2Za5E-Csw5N_iy.js";import{m as se,s as ae,i as ie}from"./operatorUnion-BYlCFvhH-DU7ngPoL.js";import{n as ue}from"./OperatorWithin-BPGFcMCb-Dk36OqEd.js";import"./SimpleGeometryCursor-DSF_YyIm-TAMgMsbK.js";import"./Point2D-CaHJVGk1-JqvJXjLr.js";import"./operatorGeodeticDensify-D4LT4cbB-DiEiRZ5w.js";import"./OperatorSimplifyOGC-B4xRVwRa-DAM6MEMh.js";import"./Transformation2D-CXWnDKXs-CjsleQQw.js";import"./Envelope2D-DlBzXkgv-eKRxGysX.js";import"./jsonConverter-tsQ40CV0-BoQ-dVYc.js";import"./GeometryCleaner-BEJM7I4l-DzJanffG-DFuxyxcM.js";import"./OperatorGeneralize-CwDxMFXx-Biu2Ox9X.js";import"./Centroid-DZi-eb9F-Bn8_mFvc-Uq1oV1eG.js";import"./operatorIntersection-C4jkscsv-DZkRp7xE.js";import"./OperatorIntersects-u5auAqUh-9u0dR30p.js";import"./OperatorProximity-Gr4lvnCj-64XlMbaN.js";import"./operatorSimplify-CjcRb60U-C7NIFSMC.js";let _,g,v,b,T;function G(){return!!_&&q()}async function R(){if(!G()){const[e]=await Promise.all([w(()=>import("./apiConverter-CSuukuP9-0d-fQk0X.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]),import.meta.url),h()]);_=e.fromGeometry,g=e.fromSpatialReference,v=e.getSpatialReference,b=e.toPolygon,T=L()}}function ce(e,t,n={}){let{curveType:s="geodesic",maxDeviation:o=NaN,unit:c}=n;c&&(t=y(t,c,"meters"),o&&(o=y(o,c,"meters")));const a=v(e);return b(A(_(e),g(a),M[s],t,o),a)}function me(e,t,n={}){let{curveType:s="geodesic",maxDeviation:o=NaN,union:c=!1,unit:a}=n;a&&(t=t.map(p=>y(p,a,"meters")),o&&(o=y(o,a,"meters")));const u=e.map(_),l=v(e);return E(u,g(l),M[s],t,o,c).map(p=>b(p,l)).filter(d)}const bt=Object.freeze(Object.defineProperty({__proto__:null,execute:ce,executeMany:me,isLoaded:G,load:R,get supportsCurves(){return T}},Symbol.toStringTag,{value:"Module"}));function pe(e,t,n={}){const{unit:s}=n,o=m(e);return s&&(t=x(t,s,o)),P(W(r(e),i(o),t),o)}function le(e,t,n={}){let{maxDeviation:s=NaN,maxVerticesInFullCircle:o=96,union:c=!1,unit:a}=n;const u=m(e);a&&(t=t.map(p=>x(p,a,u)),s&&(s=x(s,a,u)));const l=e.map(r);return F(l,i(u),t,s,o,c).map(p=>P(p,u)).filter(d)}const fe=V(),St=Object.freeze(Object.defineProperty({__proto__:null,execute:pe,executeMany:le,supportsCurves:fe},Symbol.toStringTag,{value:"Module"}));function xe(e){const t=m(e);return f(k(r(e)),t)}function ye(e,t={}){const{merge:n=!1}=t,s=e.map(r),o=m(e);return J(s,n).map(c=>f(c,o))}function _e(e){return U(r(e))}const de=X(),jt=Object.freeze(Object.defineProperty({__proto__:null,execute:xe,executeMany:ye,isConvex:_e,supportsCurves:de},Symbol.toStringTag,{value:"Module"})),S=new Y;function ge(e){const t=m(e);return S.accelerateGeometry(r(e),i(t),1)}function ve(e,t){return S.execute(r(e),r(t),i(e.spatialReference),null)}const be=S.supportsCurves(),Ot=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:ge,execute:ve,supportsCurves:be},Symbol.toStringTag,{value:"Module"})),j=new Z;function Se(e){const t=m(e);return j.accelerateGeometry(r(e),i(t),1)}function je(e,t){return j.execute(r(e),r(t),i(e.spatialReference))}const Oe=j.supportsCurves(),$t=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Se,execute:je,supportsCurves:Oe},Symbol.toStringTag,{value:"Module"})),z={round:0,bevel:1,miter:2,square:3};function $e(e,t,n={}){const{miterLimit:s=10,flattenError:o=0,joins:c="round",unit:a}=n,u=m(e);return a&&(t=x(t,a,u)),f(te(r(e),i(u),t,z[c],s,o),u)}function Ce(e,t,n={}){const{miterLimit:s=10,flattenError:o=0,joins:c="round",unit:a}=n,u=m(e);a&&(t=x(t,a,u));const l=e.map(r);return re(l,i(u),t,z[c],s,o).map(p=>f(p,u)).filter(d)}const Me=ee(),Ct=Object.freeze(Object.defineProperty({__proto__:null,execute:$e,executeMany:Ce,supportsCurves:Me},Symbol.toStringTag,{value:"Module"})),O=new oe;function Pe(e){const t=m(e);return O.accelerateGeometry(r(e),i(t),1)}function Te(e,t){return O.execute(r(e),r(t),i(e.spatialReference),null)}const Ge=O.supportsCurves(),Mt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Pe,execute:Te,supportsCurves:Ge},Symbol.toStringTag,{value:"Module"})),$=new ne;function Re(e){const t=m(e);return $.accelerateGeometry(r(e),i(t),1)}function ze(e,t){return $.execute(r(e),r(t),i(e.spatialReference),null)}const we=$.supportsCurves(),Pt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Re,execute:ze,supportsCurves:we},Symbol.toStringTag,{value:"Module"}));function Ne(e,t){const n=m(e);return f(ae(r(e),r(t),i(n)),n)}function De(e){const t=e.map(r),n=m(e);return f(ie(t,i(n)),n)}const he=se(),Tt=Object.freeze(Object.defineProperty({__proto__:null,execute:Ne,executeMany:De,supportsCurves:he},Symbol.toStringTag,{value:"Module"})),C=new ue;function Le(e){const t=m(e);return C.accelerateGeometry(r(e),i(t),1)}function Ae(e,t){return C.execute(r(e),r(t),i(e.spatialReference),null)}const Ee=C.supportsCurves(),Gt=Object.freeze(Object.defineProperty({__proto__:null,accelerateGeometry:Le,execute:Ae,supportsCurves:Ee},Symbol.toStringTag,{value:"Module"}));function Rt(e,t,n,s){const o=new Q().rotate(t,n,s);return D(e,o)}const qe=new Set([5,6,7,10,11,12]);function zt(e){const t=new N;return!K(e,t)&&qe.has(t.m_reason)}async function wt(){await Promise.all([I(),R(),B(),H()])}export{Bt as area,St as buffer,Kt as centroid,Vt as clip,Ft as contains,jt as convexHull,Ot as crosses,kt as cut,Ut as densify,Zt as difference,$t as disjoint,tr as distance,or as equals,sr as generalize,bt as geodesicBuffer,ht as geodeticArea,At as geodeticDensify,qt as geodeticLength,ir as intersection,cr as intersects,zt as isSelfIntersecting,pr as labelPoint,fr as length,wt as loadAll,Ct as offset,Mt as overlaps,yr as proximity,dr as relate,Rt as rotate,vr as simplify,Sr as symmetricDifference,Pt as touches,Tt as union,Gt as within};
