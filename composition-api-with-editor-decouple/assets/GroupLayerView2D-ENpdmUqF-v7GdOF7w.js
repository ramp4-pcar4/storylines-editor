import{v as t,S as s,dY as h,n as m,a0 as n,a1 as l,ag as o,a5 as d}from"./main-BTSN56ll.js";import{G as V}from"./LayerView2D-BaefGYf9-DKBEBBo2.js";import{t as w}from"./LayerView-DdANuT-Y-CkOm9Qvo.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./Container-Dr2EdOEZ-Bs_3znaC.js";import"./MapView-DVZSZHRJ-BKcJTAWs.js";import"./Cyclical-DgD7_U1C-Vht-WHcK.js";import"./CollectionFlattener-DyEG1Q6J-BvSyZFgI.js";import"./workers-CeRXsnNJ-CuNDy0kC.js";import"./Queue-DV3gpSdl-DrFVJ5S7.js";import"./intl-BAA1onnp-B6SUCtGp.js";import"./projectionUtils-B-CplN3q-ikZX0f0r.js";import"./TileInfo-U28GysF5-BqbA-B0e.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-B71T2Hwm.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./UpdatingHandles-Bd2FQ26N-fdvxC52e.js";import"./asyncUtils-BPUlNCrX-nCXgmiAN.js";import"./utils-Dd8gTonD-I__WhOUn.js";import"./Version-CnwD6MZa-BOky48_S.js";import"./Map-7V1pm_Jo-CZetJqxN.js";import"./Basemap-C_NhFN5u-CegcWrt4.js";import"./loadAll-DQWsVoX1-CLJrFPIK.js";import"./PortalItem-BP-IQXnZ-OaDplu4L.js";import"./writeUtils-DAOvycBP-CBCBr7XL.js";import"./persistable-DgPk2hdg-BV4R3GmF.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-C07PdJmK.js";import"./PolygonCollection-Btw6sA7T-DpXnVm1H.js";import"./editableLayers-DFUBlMJy-D3scqz7b.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-BzZ95Pzo.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./TablesMixin-BORwbVPt-DgkBli8R.js";import"./Layer-DvVVmz9x-DPlUpQTx.js";import"./TimeExtent-Cf2Pienb-DqqrEWFg.js";import"./GraphicsCollection-uWAVmks7-7OmK9l4y.js";import"./HeightModelInfo-C4voFc4k-HtHKRM55.js";import"./timeZoneUtils-d5p0Jda1-D0y-OBmm.js";import"./ReactiveMap-iPeM8evD-CN1yLKEz.js";import"./Query-n1aoaaFC-DtAFAKLZ.js";import"./Field-BIQ-quF4-BbpT1uvV.js";import"./fieldType-PhcL4ff8-2FwHs2Q-.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-CyxXc5qL.js";import"./projectionUtils-Dt6hj1Xh-DH_kUzRY.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-u00NGW3M-CqNqSQXu.js";import"./normalizeUtilsCommon-ClagynAA-CjzxcKnv.js";import"./utils-BO8hgPs3-DVCOsJGh.js";import"./utils-DpLVEUvg-Bxd2nj3H.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./Scheduler-BV4C4cVP-Dp9HvkB4.js";import"./debugFlags-8tOwPnHK-iUEbNTwF.js";import"./vec32-Cj8pVsU0-CAadxa6x.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./enums-CQnCd4Rx-CHYIFQNv.js";import"./TileKey-_zikB14n-B_YPRHpo.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./enums-wEDHPbCF-Cf76M5_x.js";import"./Texture-D5XWO2GQ-BW1yTigi.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./imageUtils-D3tfFRL_-ReIuWbl9.js";import"./capabilities-BaKzUyhi-y5w2NMiP.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-CzLQbL7l.js";import"./EffectView-Bpu5U548-Cf4tGL3_.js";import"./parser-CWccHtwJ-C7ev2h0Q.js";import"./layerViewUtils-DLIaYA64-Bsq38kLs.js";let r=class extends w{constructor(i){super(i),this.type="group",this.layerViews=new n}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),l(()=>this.layer?.visibilityMode,()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},o),l(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},o)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}get creatingLayerViews(){return this.view?.layerViewManager?.isCreatingLayerViewsForLayer(this.layer)??!1}set layerViews(i){this._set("layerViews",d(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.creatingLayerViews||this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>!!this._findLayerViewForLayer(e)?.visible);return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder())==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(a=>l(()=>a.visible,y=>this._applyVisibility(()=>{y!==this.visible&&(a.visible=this.visible)},()=>this._applyExclusiveVisibility(y?a:null)),o)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e?.visible?e:null))}_applyVisibility(i,e){this._hasLayerViewVisibleOverrides()&&(this.layer?.visibilityMode==="inherited"?i():this.layer?.visibilityMode==="exclusive"&&e())}};t([s({readOnly:!0})],r.prototype,"creatingLayerViews",null),t([s({cast:h})],r.prototype,"layerViews",null),t([s({readOnly:!0})],r.prototype,"updatingProgress",null),t([s()],r.prototype,"view",void 0),r=t([m("esri.views.layers.GroupLayerView")],r);let p=class extends V(r){attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(i){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((i,e)=>this.container.addChildAt(i.container,e))}};p=t([m("esri.views.2d.layers.GroupLayerView2D")],p);const ji=p;export{ji as default};
