import{v as a,S as n,n as v,a1 as f,ag as S,a0 as q,ba as b,aD as V,a8 as z,an as I,ac as E,aM as _,a6 as P,bv as T,o as k,aj as A,N as U,by as H,h as C,u as j,l as D}from"./main-D8YsASU7.js";import{o as G}from"./GraphicsCollection-uWAVmks7-EcrOSfmT.js";import{g as M,n as L,o as N}from"./RasterVFDisplayObject-CjEe9AcH-Dcj9T9hv.js";import{G as O}from"./LayerView2D-BaefGYf9-BE9uTJnd.js";import{b as W}from"./GraphicsView2D-D4hKcKkn-C9aAhhDP.js";import{s as J}from"./HighlightGraphicContainer-yIQjvQv5-DGoOKEex.js";import{s as Y,k as K}from"./dataUtils-CfR0oe2x-B4l7oKcD.js";import{n as Q}from"./BitmapContainer-CRol5kLe-0yVT97Wu.js";import{y as X}from"./Container-Dr2EdOEZ-BPRka1S_.js";import{v as Z}from"./BitmapTechnique-CHUhq2KJ-RGS-cqeV.js";import{h as tt}from"./ExportStrategy-B4Kq9k9u-DlN0GoLp.js";import{r as et,W as it,j as rt}from"./rasterProjectionHelper-DGqzGF1m-XSYYikA3.js";import{j as B}from"./enums-CQnCd4Rx-DsOji4hp.js";import{F as st}from"./WGLContainer-qQmF3DRB-CLTJ1xIa.js";import{c as at}from"./timeSupport-BlIpM2Fj-C_39Mz1Q.js";import{R as ot}from"./Query-n1aoaaFC-DtIVAVb9.js";import{i as nt}from"./popupUtils-B9dNptlM-Cqi6jTyb.js";import{t as ht}from"./LayerView-DdANuT-Y-DfrslUlP.js";import{o as lt}from"./RefreshableLayerView-CqFW21Do-C_VziAwo.js";import{d as pt}from"./utils-Dd8gTonD-Q6teGejl.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./MapView-DVZSZHRJ-Chv4lCod.js";import"./Cyclical-DgD7_U1C-DB35I4O9.js";import"./CollectionFlattener-DyEG1Q6J-KeQESuCq.js";import"./workers-CeRXsnNJ-Z7emHKu_.js";import"./Queue-DV3gpSdl-BUAuNmrb.js";import"./intl-BAA1onnp-4b08r7RR.js";import"./projectionUtils-B-CplN3q-CEzkagHY.js";import"./TileInfo-U28GysF5-A39VzVcl.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-DSHYZfhU.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./UpdatingHandles-Bd2FQ26N-Dq0OIEkg.js";import"./asyncUtils-BPUlNCrX-Bvmr5E9U.js";import"./Map-7V1pm_Jo-BOsuJqfq.js";import"./Basemap-C_NhFN5u-CifC7PIP.js";import"./loadAll-DQWsVoX1-BYQBneCJ.js";import"./PortalItem-BP-IQXnZ-DPpMYM8Y.js";import"./writeUtils-DAOvycBP-C1iHTEbZ.js";import"./persistable-DgPk2hdg-DYzMGFer.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-DU9LBKt9.js";import"./PolygonCollection-Btw6sA7T-C1E63VRG.js";import"./editableLayers-DFUBlMJy-CqVY7g10.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-SMTE50yZ.js";import"./TablesMixin-BORwbVPt-gUVL-Kyr.js";import"./Layer-DvVVmz9x-B1BDEmBc.js";import"./TimeExtent-Cf2Pienb-C-2_BdEM.js";import"./HeightModelInfo-C4voFc4k-iURuo4R-.js";import"./timeZoneUtils-d5p0Jda1-tvDiWY--.js";import"./ReactiveMap-iPeM8evD-CgAyrcae.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-DDiAc4_C.js";import"./projectionUtils-Dt6hj1Xh-N_vAwYzz.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-u00NGW3M-BwC6tCYn.js";import"./normalizeUtilsCommon-ClagynAA-Cqvd75jh.js";import"./utils-BO8hgPs3-By_CtWn-.js";import"./utils-DpLVEUvg-DLKDhfpm.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./Scheduler-BV4C4cVP-B6wWbEGg.js";import"./debugFlags-8tOwPnHK-l7gSzOlv.js";import"./vec32-Cj8pVsU0-DeJcTl68.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./TileKey-_zikB14n-Ca5Nnhml.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./enums-wEDHPbCF-Cf76M5_x.js";import"./Texture-D5XWO2GQ-C3iZNdr4.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./imageUtils-D3tfFRL_-BRAYZuAK.js";import"./capabilities-BaKzUyhi-y5w2NMiP.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-DZE4V-2Q.js";import"./Version-CnwD6MZa-B-uOpGRZ.js";import"./Field-BIQ-quF4-C1gegxTj.js";import"./fieldType-PhcL4ff8-B4szvm7q.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./VertexArrayObject-CieliEx4-BkOYMyPD.js";import"./memoryEstimations-DeWfxwaV-DLPrTeAy.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./Utils-Co3xiu1z-CKRfVvPj.js";import"./BoundingBox-DlCd_wcU-DBB4UfPl.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./layerViewUtils-DLIaYA64-CpwqPeUP.js";import"./FieldsIndex-Bt0Y8aWr-DJ_8KAGZ.js";import"./UnknownTimeZone-DxjyzFvs-C8lA4KFD.js";import"./CIMSymbolHelper-34UsTwam-B04vfWVd.js";import"./BidiEngine-DusKzrO8-BlAgW8mu.js";import"./fontUtils-C37p4Hgq-CxduRA71.js";import"./OptimizedGeometry-pzfNw1AT--pl-1Ym7.js";import"./GeometryUtils-B8e3Iwyx-JPHFdLTw.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./utils-BfXZnjCE-BAvEc6Hg.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./rasterizingUtils-1wASRzSP-jm3W0q-2.js";import"./floatRGBA-DRFmbkvz-DehFEc7l.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./OverrideHelper-DgyARgwI-BmYnq1Dp.js";import"./colorUtils-Eg6lOlXm-DgEYVTgg.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./ArcadeExpression-XjY3x7KV-ClGYYrUS.js";import"./TimeOnly-CGkId3bj-BdlwUFg-.js";import"./enum-g1DWyQyu-xlfbWFcS.js";import"./callExpressionWithFeature-Bk8k1lJI-MCGfVhyA.js";import"./quantizationUtils-D907S7Bm-DrhrPTvE.js";import"./AttributeStore-Oa0mwyTc-DgK8OgtQ.js";import"./UpdateTracking2D-GEad80KZ-DN0qQ-PA.js";import"./labelUtils-Oapo6DRu-Cj-Vnmc2.js";import"./diffUtils-BxG8DCnW-B8tPdVRb.js";import"./constants-oLcGh8d3-CJuD0gcX.js";import"./queryUtils-DZy8hWx3-CqpVqIaa.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-C2LrHIeW-Dik85GZg.js";import"./featureConversionUtils-Bjjlcfdo-C5PPVAjk.js";import"./OptimizedFeature-mIz_HhJg-Bxxwlksh.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./FeatureCommandQueue-C2MKcQFq-JR1Yh0uT.js";import"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import"./GraphShaderModule-Baq-N_YO-4bM95RZ8.js";import"./FramebufferObject-D3QloItC-BRhCbnKJ.js";import"./ProgramTemplate-C4wmhGXE-CvC8sV16.js";import"./ShaderBuilder-CU5v4tk1-DH_15gNv.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./utils-OrDMNKn4-BFugZkQJ.js";import"./lengthUtils-C61nRlXw-BGo89111.js";import"./streamLayerUtils-Dae818Yl-CG3QJc_N.js";import"./QueueProcessor-BSpvDXZs-ZL3IgYRh.js";import"./normalizeUtilsSync-DslYq1HB-25W6YPNJ.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./dehydratedFeatures-CE8L86IW-CRdvUPmH.js";import"./AGraphicContainer-DtNijdEa-dULNmbA1.js";import"./TechniqueInstance-CwLUZ8IR-DAruHNSW.js";import"./TileContainer-CAC1uSjc-2ragjvH8.js";import"./vec3f32-GX_cKsFD-UJPpzdNc.js";import"./pixelRangeUtils-DcEknavd-DdeXXJfY.js";import"./EffectView-Bpu5U548-CpO49bXp.js";import"./parser-CWccHtwJ-DHnEWkcd.js";import"./bitmapUtils-CAdCGIbP-CxWJ40uZ.js";import"./StyleDefinition-BOKVAZI1-BlGlrLNa.js";import"./config-CmYJx2vm-DFBdNYhW.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";let p=class extends E{constructor(){super(...arguments),this.attached=!1,this.container=new X,this.updateRequested=!1,this.type="imagery",this._bitmapView=new Q}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{_(e)||P.getLogger(this).error(e)})}hitTest(t){return new b({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new tt({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{_(t)||P.getLogger(this).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(s=>s.source).filter(s=>s.extent&&s.extent.intersects(e)).map(s=>({extent:s.extent,pixelBlock:s.originalPixelBlock})),r=Y(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const s=await this.layer.internalFetchImage(t,e,i,r);if(s.imageBitmap)return s.imageBitmap;const o=await this.layer.applyRenderer(s.pixelData,{signal:r.signal}),h=new Z(o.pixelBlock,o.extent?.clone(),s.pixelData.pixelBlock);return h.filter=l=>this.layer.applyFilter(l),h}};a([n()],p.prototype,"attached",void 0),a([n()],p.prototype,"container",void 0),a([n()],p.prototype,"layer",void 0),a([n()],p.prototype,"strategy",void 0),a([n()],p.prototype,"timeExtent",void 0),a([n()],p.prototype,"view",void 0),a([n()],p.prototype,"updateRequested",void 0),a([n()],p.prototype,"updating",null),a([n()],p.prototype,"type",void 0),p=a([v("esri.views.2d.layers.imagery.ImageryView2D")],p);class mt extends st{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[N],target:()=>this.children,drawPhase:B.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===B.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let u=class extends E{constructor(t){super(t),this._loading=null,this.update=T((e,i)=>this._update(e,i).catch(r=>{_(r)||P.getLogger(this).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:s}=t.state,o=new k({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:s}),[h,l]=t.state.size;this._loading=this.fetchPixels(o,h,l,i);const c=await this._loading;this._addToDisplay(c,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(h=>h.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:s}=t,o=new L(s);o.offset=[0,0],o.symbolizerParameters=e,o.rawPixelData=t,o.invalidateVAO(),o.x=r.xmin,o.y=r.ymax,o.pixelRatio=i.pixelRatio,o.rotation=i.rotation,o.resolution=i.resolution,o.width=s.width*e.symbolTileSize,o.height=s.height*e.symbolTileSize,this.container.children.forEach(h=>h.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(o)}};a([n()],u.prototype,"fetchPixels",void 0),a([n()],u.prototype,"container",void 0),a([n()],u.prototype,"_loading",void 0),a([n()],u.prototype,"updating",null),u=a([v("esri.views.2d.layers.imagery.ImageryVFStrategy")],u);let m=class extends E{constructor(){super(...arguments),this.attached=!1,this.container=new mt,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const s=await this._projectFullExtentPromise,{layer:o}=this,{symbolTileSize:h}=o.renderer,{extent:l,width:c,height:y}=K(t,e,i,h,s);if(s!=null&&!s.intersects(t))return{extent:l,pixelBlock:null};const g={bbox:`${l.xmin}, ${l.ymin}, ${l.xmax}, ${l.ymax}`,exportParametersVersion:o.exportImageServiceParameters.version,symbolTileSize:h,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(g)){const d=this.getPixelData();if(d!=null&&`${d.extent.xmin}, ${d.extent.ymin}, ${d.extent.xmax}, ${d.extent.ymax}`===g.bbox)return d}const{pixelBlock:x}=await o.fetchPixels(l,c,y,{timeExtent:this.timeExtent,interpolation:o.interpolation,signal:r});if(this._dataParameters=g,x==null)return{extent:l,pixelBlock:null};const{dataType:R}=o.rasterInfo;return{extent:l,pixelBlock:R==="vector-uv"&&x?await o.convertVectorFieldData(x,"vector-uv",{signal:r}):x}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new u({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(f(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),A),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){const t=this.container.children[0]?.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new b({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{_(e)||P.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,s=this._dataParameters.bbox===t.bbox;return e&&i&&r&&s}async _getProjectedFullExtent(t){try{return et(this.layer.fullExtent,t)}catch{try{const e=(await U(this.layer.url,{query:{option:"footprints",outSR:H(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return e?k.fromJSON(e):null}catch{return null}}}_updateSymbolizerParams(t){t?.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};a([n()],m.prototype,"attached",void 0),a([n()],m.prototype,"container",void 0),a([n()],m.prototype,"layer",void 0),a([n()],m.prototype,"timeExtent",void 0),a([n()],m.prototype,"type",void 0),a([n()],m.prototype,"view",void 0),a([n()],m.prototype,"updating",null),m=a([v("esri.views.2d.layers.imagery.VectorFieldView2D")],m);const ct=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}get timeExtent(){return at(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(i,r){const{layer:s}=this;if(!i)throw new C("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:s});const{popupEnabled:o}=s,h=nt(s,r);if(!o||h==null)return[];const l=await h.getRequiredFields();j(r);const c=new ot;c.timeExtent=this.timeExtent,c.geometry=i,c.outFields=l,c.outSpatialReference=i.spatialReference;const{resolution:y,spatialReference:g}=this.view,x=this.view.type==="2d"?new D(y,y,g):new D(.5*y,.5*y,g),{returnTopmostRaster:R,showNoDataRecords:d}=h.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},F={returnDomainValues:!0,returnTopmostRaster:R,pixelSize:x,showNoDataRecords:d,signal:r?.signal};return s.queryVisibleRasters(c,F).then($=>$)}async getSourceScale(){return await it(),await this.layer.load(),rt(this.layer.serviceRasterInfo,this.view.spatialReference)}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return a([n()],e.prototype,"layer",void 0),a([n()],e.prototype,"suspended",void 0),a([n({readOnly:!0})],e.prototype,"timeExtent",null),a([n()],e.prototype,"view",void 0),e=a([v("esri.views.layers.ImageryLayerView")],e),e};let w=class extends ct(lt(O(ht))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new G,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){this.subview?.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new W({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new J(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([f(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},S),f(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},S),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),f(()=>this.layer.renderer,()=>this._setSubView())])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null,this._highlightView?.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:q.isCollection(t)?t.at(0):t)instanceof b))return V();let i=[];if(Array.isArray(t)||q.isCollection(t)?i=t.map(s=>s.clone()):t instanceof b&&(i=[t.clone()]),!i?.filter(z)?.length)return V();const r=e?.name??pt;return this._addHighlightGraphics(i,r),V(()=>!this.destroyed&&this._removeHighlightGraphics(i,r))}_addHighlightGraphics(t,e){this._highlightGraphics.addMany(t),this._addHighlights(t.map(i=>i.uid),e)}_removeHighlightGraphics(t,e){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(i=>i.uid),e)}async doRefresh(){this.requestUpdate()}isUpdating(){const t=!this.subview||this.subview.updating||!!this._highlightView?.updating;return I("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${this._highlightView?.updating}
`),t}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_setSubView(){if(!this.view)return;const t=this.layer.renderer?.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:i}=this.subview;if(i===e)return this._attachSubview(this.subview),void(i==="flow"?this.subview.redrawOrRefetch():i==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),this.subview?.destroy()}this.subview=e==="imagery"?new p({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new m({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new M({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};a([n()],w.prototype,"pixelData",null),a([n()],w.prototype,"subview",void 0),w=a([v("esri.views.2d.layers.ImageryLayerView2D")],w);const rr=w;export{rr as default};
