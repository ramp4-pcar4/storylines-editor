import{cq as h,iC as y,iD as T,iE as u,c2 as f,iF as $,iG as Z,cv as d,iH as w,bT as S}from"./main-D3-gbOxE.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-Bcqfbc2Y.js";import"./intl-BAA1onnp-BJhgM_Zn.js";import{k as C}from"./timeZoneUtils-d5p0Jda1-DKVFxVK_.js";const N=",",D={years:365,months:30,days:1,hours:1/24,minutes:1/1440,seconds:1/86400,milliseconds:1/864e5},v=new Set(["integer","small-integer"]);let l=null;function E(e){return h(e)||y(e)||T(e)}async function Q(e){const{field:n,field2:t,field3:r,normalizationField:a,valueExpression:s}=e;let o=[];if(s){if(!l){const{arcadeUtils:i}=await S();l=i}o=l.extractFieldNames(s)}return n&&o.push(n),t&&o.push(t),r&&o.push(r),a&&o.push(a),o}function m(e){return String(e).padStart(2,"0")}function g(e,n,t){let r;return n==="date"||n==="number"?(n==="number"&&(e=new Date(e)),r=`TIMESTAMP'${t?e.getFullYear():e.getUTCFullYear()}-${m((t?e.getMonth():e.getUTCMonth())+1)}-${m(t?e.getDate():e.getUTCDate())} ${m(t?e.getHours():e.getUTCHours())}:${m(t?e.getMinutes():e.getUTCMinutes())}:${m(t?e.getSeconds():e.getUTCSeconds())}'`):r=e,r}function H(e,n,t,r){const{hasQueryEngine:a}=e,s=`(${g(t,p(e,t),a)} - ${g(n,p(e,n),a)})`;let o=D[r],i="/";return o<1&&(o=1/o,i="*"),{sqlExpression:o===1?s:`(${s} ${i} ${o})`,sqlWhere:null}}function p(e,n){if(n instanceof Date)return"date";if(typeof n=="number")return"number";if(typeof n=="string"){const t=e.getField(n);if(n.toLowerCase()==="<now>")return;if(h(t))return"field"}}function q(e,n){const t=n&&e.getField(n);return!!t&&v.has(t.type)}function z(e){return`cast(${e} as float)`}function I(e,n){const{format:t,timeZoneOptions:r,fieldType:a}=n??{};let s,o;if(r&&({timeZone:s,timeZoneName:o}=C(r.layerTimeZone,r.datesInUnknownTimezone,r.viewTimeZone,u(t||"short-date-short-time"),a)),typeof e=="string"&&isNaN(Date.parse(a==="time-only"?`1970-01-01T${e}Z`:e)))return e;switch(a){case"date-only":{const i=u(t||"short-date");return typeof e=="string"?w(e,{...i}):f(e,{...i,timeZone:d})}case"time-only":{const i=u(t||"short-time");return typeof e=="string"?Z(e,i):f(e,{...i,timeZone:d})}case"timestamp-offset":{if(!s&&typeof e=="string"&&new Date(e).toISOString()!==e)return e;const i=t||r?u(t||"short-date-short-time"):void 0,c=i?{...i,timeZone:s,timeZoneName:o}:void 0;return typeof e=="string"?$(e,c):f(e,c)}default:{const i=t||r?u(t||"short-date-short-time"):void 0;return f(typeof e=="string"?new Date(e):e,i?{...i,timeZone:s,timeZoneName:o}:void 0)}}}export{I as E,q as F,E as M,Q as N,N as S,z as b,H as x};
