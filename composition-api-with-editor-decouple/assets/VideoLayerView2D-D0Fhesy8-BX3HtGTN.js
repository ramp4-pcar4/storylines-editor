import{ad as Y,ba as L,eI as B,es as q,eH as F,ak as k,a1 as c,a2 as y,v as b,S as T,ed as J,n as N,af as X,ai as Z,V as j,ki as K,Z as Q,aG as z,l as H}from"./main-BTSN56ll.js";import tt from"./GraphicsLayer-BiEC2-gS-cNwTyrnX.js";import{f as U,J as et}from"./videoUtils-yR40DhDQ-DOQq3GAr.js";import{R as it}from"./cimSymbolUtils-DCedSSCN-aoXC-dYT.js";import{O as rt}from"./OverlayContainer-Dk-Hr_7e-Bl3WFzzH.js";import{o as st}from"./vec2f64-CkowXrDb-3zFQ3LNH.js";import{O as _}from"./projectionUtils-B-CplN3q-ikZX0f0r.js";import{u as ot}from"./Container-Dr2EdOEZ-Bs_3znaC.js";import{G as nt,p as at}from"./LayerView2D-BaefGYf9-DKBEBBo2.js";import{U as lt}from"./enums-wEDHPbCF-Cf76M5_x.js";import{Y as mt,_ as ht}from"./Texture-D5XWO2GQ-BW1yTigi.js";import{d as pt}from"./GraphicContainer-c1LxUVI--BVdIUvbt.js";import{b as yt}from"./GraphicsView2D-D4hKcKkn-DVBInA5i.js";import{t as ct}from"./LayerView-DdANuT-Y-CkOm9Qvo.js";import"./GraphicsCollection-uWAVmks7-7OmK9l4y.js";import"./Layer-DvVVmz9x-DPlUpQTx.js";import"./TimeExtent-Cf2Pienb-DqqrEWFg.js";import"./BlendLayer-DjW_5k0v-Dho_WdQI.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7--KzhK1ek.js";import"./parser-CWccHtwJ-C7ev2h0Q.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-BzZ95Pzo.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./ScaleRangeLayer-x42fwED3-Co4xphjE.js";import"./ElevationInfo-DE5to86a-BfsUWgCc.js";import"./lengthUtils-C61nRlXw-B_ZeiXIN.js";import"./utils-Cb2uXNfG-DMtuInNJ.js";import"./asyncUtils-BPUlNCrX-nCXgmiAN.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./utils-BfXZnjCE-DNbcBAbl.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./MapView-DVZSZHRJ-BKcJTAWs.js";import"./Cyclical-DgD7_U1C-Vht-WHcK.js";import"./CollectionFlattener-DyEG1Q6J-BvSyZFgI.js";import"./workers-CeRXsnNJ-CuNDy0kC.js";import"./Queue-DV3gpSdl-DrFVJ5S7.js";import"./intl-BAA1onnp-B6SUCtGp.js";import"./TileInfo-U28GysF5-BqbA-B0e.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-B71T2Hwm.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./UpdatingHandles-Bd2FQ26N-fdvxC52e.js";import"./utils-Dd8gTonD-I__WhOUn.js";import"./Version-CnwD6MZa-BOky48_S.js";import"./Map-7V1pm_Jo-CZetJqxN.js";import"./Basemap-C_NhFN5u-CegcWrt4.js";import"./loadAll-DQWsVoX1-CLJrFPIK.js";import"./PortalItem-BP-IQXnZ-OaDplu4L.js";import"./writeUtils-DAOvycBP-CBCBr7XL.js";import"./persistable-DgPk2hdg-BV4R3GmF.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-C07PdJmK.js";import"./PolygonCollection-Btw6sA7T-DpXnVm1H.js";import"./editableLayers-DFUBlMJy-D3scqz7b.js";import"./TablesMixin-BORwbVPt-DgkBli8R.js";import"./HeightModelInfo-C4voFc4k-HtHKRM55.js";import"./timeZoneUtils-d5p0Jda1-D0y-OBmm.js";import"./ReactiveMap-iPeM8evD-CN1yLKEz.js";import"./Query-n1aoaaFC-DtAFAKLZ.js";import"./Field-BIQ-quF4-BbpT1uvV.js";import"./fieldType-PhcL4ff8-2FwHs2Q-.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-CyxXc5qL.js";import"./projectionUtils-Dt6hj1Xh-DH_kUzRY.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-u00NGW3M-CqNqSQXu.js";import"./normalizeUtilsCommon-ClagynAA-CjzxcKnv.js";import"./utils-BO8hgPs3-DVCOsJGh.js";import"./utils-DpLVEUvg-Bxd2nj3H.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./Scheduler-BV4C4cVP-Dp9HvkB4.js";import"./debugFlags-8tOwPnHK-iUEbNTwF.js";import"./vec32-Cj8pVsU0-CAadxa6x.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./enums-CQnCd4Rx-CHYIFQNv.js";import"./TileKey-_zikB14n-B_YPRHpo.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./imageUtils-D3tfFRL_-ReIuWbl9.js";import"./capabilities-BaKzUyhi-y5w2NMiP.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-CzLQbL7l.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./vec3f32-GX_cKsFD-UJPpzdNc.js";import"./WGLContainer-qQmF3DRB-BED0Hb5y.js";import"./Utils-Co3xiu1z-DRdUzBjJ.js";import"./BoundingBox-DlCd_wcU-DBB4UfPl.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./ProgramTemplate-C4wmhGXE-C7IdNiH_.js";import"./VertexArrayObject-CieliEx4-C1vhnmiU.js";import"./memoryEstimations-DeWfxwaV-C_MXa_yR.js";import"./StyleDefinition-BOKVAZI1-BlGlrLNa.js";import"./config-CmYJx2vm-DFBdNYhW.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./featureConversionUtils-Bjjlcfdo-jKUq9C94.js";import"./OptimizedFeature-mIz_HhJg-S7foeqDf.js";import"./OptimizedGeometry-pzfNw1AT-Df37wV8I.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./FeatureCommandQueue-C2MKcQFq-CJ-IlCV7.js";import"./CIMSymbolHelper-34UsTwam-jH361Yb3.js";import"./BidiEngine-DusKzrO8-BlAgW8mu.js";import"./fontUtils-C37p4Hgq-DSIoTlya.js";import"./GeometryUtils-B8e3Iwyx-CvpzPJPd.js";import"./rasterizingUtils-1wASRzSP-DM6sReKO.js";import"./floatRGBA-DRFmbkvz-BiDZGstO.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import"./GraphShaderModule-Baq-N_YO-C9LlFMpx.js";import"./FramebufferObject-D3QloItC-CvYpmj6z.js";import"./ShaderBuilder-CU5v4tk1-BPHCM-0F.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./UpdateTracking2D-GEad80KZ-DyHvDZRl.js";import"./utils-OrDMNKn4-DmEeVC39.js";import"./constants-oLcGh8d3-CJuD0gcX.js";import"./streamLayerUtils-Dae818Yl-CG3QJc_N.js";import"./QueueProcessor-BSpvDXZs-Dt5OKCG2.js";import"./utils-DA6J6wjA-DDjZAYSk.js";import"./EffectView-Bpu5U548-Cf4tGL3_.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./layerViewUtils-DLIaYA64-Bsq38kLs.js";import"./AGraphicContainer-DtNijdEa-Bq_Wet-R.js";import"./TechniqueInstance-CwLUZ8IR-9MQNjEFh.js";import"./TileContainer-CAC1uSjc--XASOAAc.js";import"./FieldsIndex-Bt0Y8aWr-D07QV8wj.js";import"./UnknownTimeZone-DxjyzFvs-D16q-ioo.js";import"./OverrideHelper-DgyARgwI-B292bq9m.js";import"./colorUtils-Eg6lOlXm-D5Ax1lzg.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./ArcadeExpression-XjY3x7KV-DgPdJH5a.js";import"./TimeOnly-CGkId3bj-7XpCx2Ld.js";import"./enum-g1DWyQyu-E1lp7wOO.js";import"./callExpressionWithFeature-Bk8k1lJI-t-N3NdZG.js";import"./quantizationUtils-D907S7Bm-Nd2ARc-g.js";import"./AttributeStore-Oa0mwyTc-DZjMhrie.js";import"./labelUtils-Oapo6DRu-Dtdg48kL.js";import"./diffUtils-BxG8DCnW-Dpawbp0Y.js";import"./queryUtils-DZy8hWx3-BAw7qz1j.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-C2LrHIeW-C912HLwz.js";import"./normalizeUtilsSync-DslYq1HB-qeCJM4zI.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./dehydratedFeatures-CE8L86IW-CAy5Hrpy.js";const x=2;class ut extends ot{constructor(t){super(),this.element=t,this._handles=new X,this.isWrapAround=!1,this.perspectiveTransform=st(),this.wrapAroundShift=0,this.clipGeometry=null,this._handles.add(Z(()=>this.element,()=>{const e=this.element;this.ready(),e&&this._handles.add(j(e,"play",()=>this.requestRender()))},y))}getMesh(t){throw new Error("Method not implemented.")}destroy(){this._handles.destroy(),this.texture=K(this.texture)}get textureSize(){if(!this.texture)return[1,1];const t=this.texture.descriptor;return[t.width,t.height]}get dvsMat3(){return this.parent.dvsMat3}beforeRender(t){const e=this.element;if(e==null)return;const{context:l}=t,{videoWidth:n,videoHeight:r}=e;if(n!==0&&r!==0){if(this.texture)e.paused||this.texture.setData(e);else{const i=new mt;i.wrapMode=lt.CLAMP_TO_EDGE,i.preMultiplyAlpha=!0,i.width=n,i.height=r,this.texture=new ht(l,i,e)}e.paused||(this.texture.generateMipmap(),this.requestRender()),super.beforeRender(t)}}_createTransforms(){return null}updateDrawCoords(t,e,l,n){const r=this.element,i=this._getFrameInfo();if(!r||!i)return;const{spatialReference:a}=l;this._initializeData(t,i,a);const{controlPoints:m,horizon:h}=i,p=Math.sqrt(m.length),o=p,{x:u,y:S}=t,v=this._vertices,C=m[0],W=m[p-1],$=m[(o-1)*p],I=m[(o-1)*p+p-1],G=_(h?h[0].mapPoint:C.mapPoint,a),P=_(h?h[1].mapPoint:W.mapPoint,a),g=_($.mapPoint,a),A=_(I.mapPoint,a);this.clipGeometry=h?new at({geometry:Q.fromJSON({rings:[[[g.x,g.y],[A.x,A.y],[P.x,P.y],[G.x,G.y],[g.x,g.y]]],spatialReference:a})}):null;for(let d=0;d<m.length;d++){const E=m[d],{sourcePoint:M,mapPoint:V}=E;if(M==null||V==null)continue;const w=_(V,a);v[d*x+0]=w.x-u,v[d*x+1]=w.y-S}let D=e;if(n){const d=Math.min(G.x,P.x,g.x,A.x),E=Math.max(G.x,P.x,g.x,A.x),{worldWidth:M,xBounds:V}=n,[w,R]=V;d<w&&E>w?D=M:E>R&&d<R&&(D=-M)}this.wrapAroundShift=D,this.isWrapAround=D!==0}draw(t,e){if(this.visible){if(!(this.isReady&&this._vertices&&this._indices&&this._texCoords))return void this.requestRender();this.stage||console.warn("OverlayMultipoint: stage is null"),e.render(t,{transform:{dvs:this.dvsMat3},config:{perspective:this.perspectiveTransform,texSize:this.textureSize,wrapAroundShift:this.wrapAroundShift,isWrapAround:this.isWrapAround,opacity:this.opacity,texture:{texture:this.texture,unit:0}},position:this._vertices,tex:this._texCoords,index:this._indices})}}_initializeData(t,e,l){if(this._vertices!=null&&this._indices!=null)return;const{controlPoints:n}=e,r=Math.sqrt(n.length),i=r,a=new Float32Array(x*n.length),m=new Uint16Array(2*n.length);for(let o=0;o<n.length;o++){const u=n[o],{sourcePoint:S,mapPoint:v}=u;if(S==null||v==null)continue;const C=_(v,l);a[o*x+0]=C.x-t.x,a[o*x+1]=C.y-t.y,m[2*o+0]=S.x,m[2*o+1]=S.y}const h=new Uint16Array(i*r+(i-2)*(r+2));let p=0;for(let o=0;o<i;o++){for(let u=0;u<r;u++)h[p++]=o*r+u,h[p++]=(o+1)*r+u;o<i-2&&(h[p++]=(o+1)*r+(r-1),h[p++]=(o+1)*r)}this._vertices=a,this._texCoords=m,this._indices=h}_getFrameInfo(){if(!this.groundControlPoints)return null;const t=this._getFrameControlPoints(),e=this.frameHorizonPoints;let l=null;if(e){const n=e.startX,r=e.startY,i=e.endX,a=e.endY;l=[{sourcePoint:z(n,r),mapPoint:new H(e.startLongitude,e.startLatitude)},{sourcePoint:z(i,a),mapPoint:new H(e.endLongitude,e.endLatitude)}]}return{controlPoints:t,horizon:l}}_getFrameControlPoints(){const t=this.groundControlPoints,e=t?.length;if(!e)return[];const l=new Array(e),n=Math.max(...t.map(({x:i})=>i)),r=this.element.videoWidth/n;for(let i=0;i<e;i++){const{x:a,y:m,lat:h,lon:p}=t[i];l[i]={sourcePoint:z(a*r,-m*r),mapPoint:new H(p,h)}}return l}}const O=new Y([255,127,0]),dt=10005,ft=10018;let f=class extends nt(ct){constructor(){super(...arguments),this._graphicsLayer=new tt,this._frameOutlineGraphic=new L({symbol:new B({outline:{type:"simple-line",color:O}})}),this._frameCenterGraphic=new L({symbol:new q({color:O,style:"cross"})}),this._sensorTrailGraphic=new L({symbol:new F({color:O})}),this._sensorSightlineGraphic=new L({symbol:new F({color:O})}),this._sensorLocationGraphic=new L({symbol:new q({color:O})}),this._overlayContainer=null,this._sensorLocationSymbolType=null,this.layer=null,this.sensorLocationSymbol=null,this.symbolAngle=0,this.visibleTelemetryElements=null}destroy(){this._graphicsLayer=k(this._graphicsLayer)}initialize(){this._sensorLocationSymbolType=this.layer?.sensorSymbol.type,this._graphicsLayer.graphics.addMany([this._frameCenterGraphic,this._frameOutlineGraphic,this._sensorLocationGraphic,this._sensorSightlineGraphic,this._sensorTrailGraphic]),this.visibleTelemetryElements=new U({frame:this.layer.telemetryDisplay?.frame??!1,frameCenter:this.layer.telemetryDisplay?.frameCenter??!0,frameOutline:this.layer.telemetryDisplay?.frameOutline??!0,lineOfSight:this.layer.telemetryDisplay?.lineOfSight??!0,sensorLocation:this.layer.telemetryDisplay?.sensorLocation??!0,sensorTrail:this.layer.telemetryDisplay?.sensorTrail??!0})}attach(){this._overlayContainer=new rt,this.container.addChild(this._overlayContainer),this._addOverlayMultipoint(),this.graphicsView=new yt({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new pt(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([c(()=>[this.layer.telemetryDisplay?.frame,this.layer.telemetryDisplay?.frameCenter,this.layer.telemetryDisplay?.frameOutline,this.layer.telemetryDisplay?.sensorLocation,this.layer.telemetryDisplay?.sensorTrail,this.layer.telemetryDisplay?.lineOfSight],()=>this._updateVisibleTelemetryElements(),y),c(()=>[this.layer.telemetry,this.visibleTelemetryElements?.frameCenter,this.visibleTelemetryElements?.frameOutline,this.visibleTelemetryElements?.sensorLocation,this.visibleTelemetryElements?.sensorTrail,this.visibleTelemetryElements?.lineOfSight],()=>this._updateGraphicGeometries(),y),c(()=>this.layer.metadata,()=>this._updateSensorLocationSymbolAngle(),y),c(()=>this.layer?.frameCenterSymbol,()=>this._updateFrameCenterSymbol(),y),c(()=>this.layer?.frameOutlineSymbol,()=>this._updateFrameOutlineSymbol(),y),c(()=>this.layer?.sensorSightLineSymbol,()=>this._updateSensorSightlineSymbol(),y),c(()=>this.layer?.sensorSymbol,()=>this._updateSensorLocationSymbol(),y),c(()=>this.layer?.sensorTrailSymbol,()=>this._updateSensorTrailSymbol(),y),c(()=>this.symbolAngle,()=>this._updateSensorLocationSymbol(),y)])}detach(){this._overlayContainer.removeAllChildren(),this.container.removeAllChildren(),this.graphicsView=k(this.graphicsView)}supportsSpatialReference(s){return!0}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(s){this.graphicsView.processUpdate(s)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateVisibleTelemetryElements(){this.visibleTelemetryElements&&this.layer.telemetryDisplay&&(this.visibleTelemetryElements.frame=this.layer.telemetryDisplay.frame,this.visibleTelemetryElements.frameCenter=this.layer.telemetryDisplay.frameCenter,this.visibleTelemetryElements.frameOutline=this.layer.telemetryDisplay.frameOutline,this.visibleTelemetryElements.lineOfSight=this.layer.telemetryDisplay.lineOfSight,this.visibleTelemetryElements.sensorLocation=this.layer.telemetryDisplay.sensorLocation,this.visibleTelemetryElements.sensorTrail=this.layer.telemetryDisplay.sensorTrail)}_updateGraphicGeometries(){const{telemetry:s}=this.layer,{visibleTelemetryElements:t}=this;s&&t&&(t.frameOutline&&s.frameOutline?this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline:this._frameOutlineGraphic.geometry=null,t.sensorTrail&&s.sensorTrail?this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail:this._sensorTrailGraphic.geometry=null,t.lineOfSight&&s.lineOfSight?this._sensorSightlineGraphic.geometry=this.layer.telemetry.lineOfSight:this._sensorSightlineGraphic.geometry=null,t.sensorLocation&&s.sensorLocation?this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation:this._sensorLocationGraphic.geometry=null,t.frameCenter&&s.frameCenter?this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter:this._frameCenterGraphic.geometry=null)}_updateSensorLocationSymbolAngle(){if(!this.layer?.metadata?.size)return;const{source:s,symbolOffset:t=0}=this.layer.sensorSymbolOrientation||{};if(!s&&!t)return;const e=this.layer?.metadata?.get(dt)?.value??0,l=this.layer?.metadata?.get(ft)?.value??0,n=et({cameraAzimuth:l,platformHeading:e,source:this.layer.sensorSymbolOrientation?.source,symbolOffset:this.layer.sensorSymbolOrientation?.symbolOffset??0});this.symbolAngle=Math.round(Math.abs(n))}_updateSensorLocationSymbol(){switch(this._sensorLocationSymbolType){case"simple-marker":this.sensorLocationSymbol=this.layer.sensorSymbol.clone(),this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol.clone();break;case"picture-marker":this.sensorLocationSymbol=this.layer.sensorSymbol,this.sensorLocationSymbol.angle=this.symbolAngle,this._sensorLocationGraphic.symbol=this.sensorLocationSymbol;break;case"cim":this.sensorLocationSymbol=this.layer.sensorSymbol,it(this.sensorLocationSymbol,this.symbolAngle,!0),this._sensorLocationGraphic.symbol=this.sensorLocationSymbol}}_updateFrameCenterSymbol(){this.layer?.frameCenterSymbol&&(this._frameCenterGraphic.symbol=this.layer.frameCenterSymbol.clone())}_updateFrameOutlineSymbol(){this.layer?.frameOutlineSymbol&&(this._frameOutlineGraphic.symbol=this.layer.frameOutlineSymbol.clone())}_updateSensorSightlineSymbol(){this.layer?.sensorSightLineSymbol&&(this._sensorSightlineGraphic.symbol=this.layer.sensorSightLineSymbol.clone())}_updateSensorTrailSymbol(){this.layer?.sensorTrailSymbol&&(this._sensorTrailGraphic.symbol=this.layer.sensorTrailSymbol.clone())}async _addOverlayMultipoint(){if(!this.layer.videoElement)return;const s=new ut(this.layer.videoElement);this.addAttachHandles([c(()=>[this.layer.frameHorizonPoints,this.layer.groundControlPoints,this.layer.frameOpacity,this.layer.telemetryDisplay?.frame],()=>{const{visibleTelemetryElements:t}=this;s.frameHorizonPoints=this.layer.frameHorizonPoints,s.groundControlPoints=this.layer.groundControlPoints,s.opacity=this.layer.frameOpacity,s.visible=t?.frame??!1},y)]),this._overlayContainer.addChild(s),this.view.stage.requestRender()}};b([T()],f.prototype,"graphicsView",void 0),b([T()],f.prototype,"layer",void 0),b([T({types:J})],f.prototype,"sensorLocationSymbol",void 0),b([T()],f.prototype,"symbolAngle",void 0),b([T({type:U})],f.prototype,"visibleTelemetryElements",void 0),f=b([N("esri.views.2d.layers.VideoLayerView2D")],f);const mr=f;export{mr as default};
