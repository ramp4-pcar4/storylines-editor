import{a0 as Q,o as be,h as H,a1 as Ie,ag as Ee,a6 as E,bB as j,D as O,u as q,aM as he,s as Se,l as pe,B as we,bM as _e,v as w,S as M,n as Ae}from"./main-X7X5lK3e.js";import{T as K,j as Re,v as ze,O as Ge,A as Fe,$ as de,x as Oe,D as Be,k as Pe,C as Ue,R as je,a as Qe,S as We,L as z,b as He,G as ee,M as Me,c as Ve}from"./KnowledgeGraphSublayer-BpP550Rh-xPpCw0WD.js";import{w as Xe}from"./MultiOriginJSONSupport-BqiFJbbt-Cd6n2dmg.js";import{e as qe}from"./Layer-DvVVmz9x-DwruG3B6.js";import{U as J}from"./featureConversionUtils-Bjjlcfdo-DiC3iU_h.js";import{_ as C,I as te,t as ie,S as A,o as Je}from"./constants-5AlnYBiV-SxxbBSOD.js";import{u as Ke}from"./BlendLayer-DjW_5k0v-JIMZGsg3.js";import{u as Ye,i as Ze}from"./OperationalLayer-CbXUnTH0-DtaPLyMR.js";import{S as $e}from"./ScaleRangeLayer-x42fwED3-DiqU1U40.js";import{u as et}from"./knowledgeGraphService-bSKUKu5m-BTa7n5Fu.js";import"./OptimizedGeometry-pzfNw1AT-CZJO9fij.js";import"./memoryEstimations-DeWfxwaV-CdGwR7R6.js";import"./projectionUtils-B-CplN3q-Cx7Hi_9h.js";import"./OptimizedFeature-mIz_HhJg-hqq65q9E.js";import"./GraphicsLayer-BiEC2-gS-B1rTdFmU.js";import"./GraphicsCollection-uWAVmks7-CGV52KkV.js";import"./ElevationInfo-DE5to86a-BDndMFMY.js";import"./lengthUtils-C61nRlXw-C5cwLcPe.js";import"./TimeExtent-Cf2Pienb-D6MFx45c.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-ta7FV_4K.js";import"./parser-CWccHtwJ-DcjuCE7r.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-cXICjqeY.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Relationship-CQMFhJpR-DPD5ykpa.js";import"./Query-n1aoaaFC-BXH8eJ_F.js";import"./Field-BIQ-quF4-DiIyGDUR.js";import"./fieldType-PhcL4ff8-vZ_8vtTV.js";import"./workers-CeRXsnNJ-BaVm5oh3.js";import"./Queue-DV3gpSdl-CPqjJMXI.js";import"./intl-BAA1onnp-86oM-p1b.js";import"./FeatureStore-DfjNNhD_-Bd8U5_8B.js";import"./BoundsStore-DffHzOYo-BXsnoLvf.js";import"./PooledRBush-DfSXIoUa-BdeV_V20.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./timeSupport-C2LrHIeW-B4H60W7c.js";import"./queryUtils-DZy8hWx3-Bp1ujV9f.js";import"./normalizeUtils-u00NGW3M-S0ENrDeK.js";import"./normalizeUtilsCommon-ClagynAA-Ftq9Xsie.js";import"./utils-BO8hgPs3-BYjqPl0S.js";import"./utils-DpLVEUvg-BEzCSHN-.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./optimizedFeatureQueryEngineAdapter-LiTJLGWN-D106zpOy.js";import"./QueryEngine-B7NH52mH-CCk_spnw.js";import"./WhereClauseCache-CixYkZwn-CfLH7G7l.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./WhereClause-D4rZJkVN-BEnV1n1m.js";import"./TimeOnly-CGkId3bj-Cjs0r1JG.js";import"./enum-g1DWyQyu-B3XMCHFk.js";import"./UnknownTimeZone-DxjyzFvs-elby-hbN.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";import"./quantizationUtils-D907S7Bm-D4hZBICn.js";import"./utils-s7ypkCzr-DAiKPmG6.js";import"./heatmapUtils-DRTN9U3a-C8BuF1cz.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./utils-CdIngiRE-HXeo-eSt.js";import"./timeZoneUtils-d5p0Jda1-CZNSeyzU.js";import"./utils-CKRJGBD_-ChY_W8AC.js";import"./ClassBreaksDefinition-BZ4FJdWb-BktduVsp.js";import"./SnappingCandidate-DIiHATRz-CuetCfU1.js";import"./FixedIntervalBinParameters-CsFyInBi-CEmFqsid.js";import"./NormalizationBinParametersMixin-70JA0FRq-CmORCgQo.js";import"./FieldsIndex-Bt0Y8aWr-B5ZT2xa7.js";import"./Scheduler-BV4C4cVP-V5z4SpHX.js";import"./debugFlags-8tOwPnHK-DTrBgChg.js";import"./clientSideDefaults-BoAP7ZAL-Cp3kLso_.js";import"./fieldProperties-Cgp0UdcB-BN0X3ZeS.js";import"./labelingInfo-DuLk-IW_-B73eVuCQ.js";import"./asyncUtils-BPUlNCrX-B9A8BycM.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./SimpleRenderer-C1YRhRzu-EL86XAq3.js";import"./commonProperties-CJLeiNuA-sHVNMjRh.js";import"./colorRamps-trM-CPFS-CvEfVDQJ.js";import"./ColorStop-CL7v3R-A-DX_IEk-8.js";import"./visualVariableUtils-BTS148WR-CKEFUkfL.js";import"./UniqueValueRenderer-CLXHFtg9-t_vPkJEg.js";import"./diffUtils-BxG8DCnW-DxDSknUA.js";import"./RendererLegendOptions-Bil_IDab-DNTUsldT.js";import"./styleUtils-DBPDLVBX-Ds27bwL7.js";import"./RelationshipQuery-CaEbQySU-DhCkrqBg.js";import"./labelUtils-Oapo6DRu-CoqVBRjM.js";import"./DisplayFilteredLayer-DTxK0R7U-BjoMC0dy.js";import"./scaleUtils-Br-smv3A-x-EXuRi-.js";import"./displayFilterUtils-DvWUbJDp-C8pVM1VK.js";import"./FeatureEffectLayer-BVJTjFhg-CtA_Uwqv.js";import"./FeatureEffect-D3G_gJ5F-RS-l4qei.js";import"./FeatureFilter-DXpQKGs4-CT9zO-Cd.js";import"./FeatureReductionLayer-vR-evpIv-DBszRYko.js";import"./FeatureReductionSelection-DzXAxMK9-DoxVAjhP.js";import"./jsonUtils-CzRaZnmS-D_79kY0F.js";import"./typeUtils-CB2EGBWO-CBE_kTGq.js";import"./ClassBreaksRenderer-Bq2XGpfI-D1t9K7CN.js";import"./DictionaryScriptEvaluator-DW5hOK9A-D1vDVV6K.js";import"./Version-CnwD6MZa-Co-C_DNT.js";import"./ArcadeExpression-XjY3x7KV-CLe8I-vX.js";import"./utils-BfXZnjCE-BkJNLlT9.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./OrderedLayer-BD-wnvgD-D_uds28J.js";import"./OrderByInfo-SNGyPlhJ-DE1MLCih.js";import"./RefreshableLayer-Qpvyi8qY-ZzSFLWwk.js";import"./TemporalLayer-lQRje9wB-DSQmW-sp.js";import"./TimeInfo-COHxjenm-DQ4tmz_C.js";import"./FeatureSet-BVGGhhH9-DcY9Op89.js";import"./popupUtils-B99PyAFi-CDp-6ZjI.js";import"./utils-Cb2uXNfG-DBn5djur.js";import"./cimSymbolUtils-DCedSSCN-WXRjMkyv.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./networkEnums-DHCOt6o_-D7odd18E.js";import"./GPMessage-KKjIcGuy-DdPnjMxt.js";var Y;(function(e){e.MULTIPLIER="multiplier",e.ABSOLUTE="absolute-value"})(Y||(Y={}));let f=class extends Ye(Ke($e(Xe(qe)))){constructor(e){if(super(e),this.url=null,this.dataPreloadedInLocalCache=!1,this.initializationLinkChartConfig=null,this.membershipModified=!0,this._currentLinkChartConfig={layoutMode:"organic-standard"},this._graphTypeLookup=new Map,this.dataManager=null,this.knowledgeGraph=null,this.layers=new(Q.ofType(K)),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map,this.linkChartExtent=new be({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="LinkChartLayer",this.sublayerIdsCache=new Map,this.tables=new(Q.ofType(K)),this.type="link-chart",this.chronologicalAuxiliaryGraphics=null,this._originalInclusionList=e?.initializationInclusionModeDefinition,e?.dataPreloadedInLocalCache&&!e?.initializationInclusionModeDefinition)throw new H("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");this.addHandles(Ie(()=>this.layers.concat(this.tables),(t,i)=>this._handleSublayersChange(t,i),Ee))}normalizeCtorArgs(e){if(!e)return{};const{url:t,title:i,dataPreloadedInLocalCache:n,initializationLinkChartConfig:a}=e;return{url:t,title:i,dataPreloadedInLocalCache:n,initializationLinkChartConfig:a}}_initializeLayerProperties(e){if(!this.title&&this.url){const o=this.url.split("/");this.title=o[o.length-2]}const t=new Set;let i=[],n=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new H("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.inclusionModeDefinition?.generateAllSublayers?(i=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach((o,s)=>{const h=this._graphTypeLookup.get(s);if(!h)return E.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(s);h.type==="relationship"?t.has(s)||(t.add(s),n.push(h)):h.type==="entity"?t.has(s)||(t.add(s),i.push(h)):(E.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(s))}):(i=e.knowledgeGraph.dataModel.entityTypes??[],n=e.knowledgeGraph.dataModel.relationshipTypes??[]);const a=new Re({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=i,this.memberRelationshipTypes=n,this.dataManager=a}load(e){const t=async()=>{const i=[],n=[];this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await de(this),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(a=>{a.useAllData=!1}),await this._initializeDiagram(),this.layers.forEach(a=>{n.push(a.refreshCachedQueryEngine()),i.push(new Promise(o=>{a.on("layerview-create",()=>{o(null)})}))}),this.tables.forEach(a=>{n.push(a.refreshCachedQueryEngine())}),await Promise.all(n)};return this.addResolvingPromise(new Promise(i=>{et(this.url).then(async n=>{n.dataModel.entityTypes?.forEach(o=>{o.name&&this._graphTypeLookup.set(o.name,o)}),n.dataModel.relationshipTypes?.forEach(o=>{o.name&&this._graphTypeLookup.set(o.name,o)});const a=this.linkChart?.linkChartProperties;if(a?.originIdOf("entitiesUrl")===j.LINK_CHART&&(this.membershipModified=!1,this._originalInclusionList=await ze.fetchAndConvertSerializedLinkChart({entitiesUrl:a?.entitiesUrl,relationshipsUrl:a?.relationshipsUrl}),this._alignLayersDataModelAndInclusionDefinition(n.dataModel),this.initializationLinkChartConfig={layoutSettings:a?.layoutSettings??void 0,layoutMode:Ge(a.layoutType)}),this._initializeLayerProperties({knowledgeGraph:n,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach(o=>{o.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(o.name,{useAllData:!0})}),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach(o=>{o.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(o.name,{useAllData:!0})})),this.dataPreloadedInLocalCache){const o=Ve.getInstance();for(const[s,h]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions??[])for(const c of h.members?.values()??[]){const m=o.readFromStoreById(`${s}__${c.id}`);m&&O(this.dataManager.sublayerCaches,s,()=>new Map).set(c.id,m)}await t()}else{const o=this.initializationLinkChartConfig?.layoutMode==="geographic-organic-standard";this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,o,!0).then(async()=>{q(e),await t()}))}i(null)})})),Promise.resolve(this)}set initializationInclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("initializationInclusionModeDefinition",e):E.getLogger(this).error("#initializationInclusionModeDefinition","initializationInclusionModeDefinition cannot be changed after the layer is loaded.")}get linkChart(){return this.parent}async addRecords(e,t){let i=[];t?.cascadeAddRelationshipEndNodes&&this.dataManager.knowledgeGraph.dataModel&&(i=await Fe(e,this.dataManager.knowledgeGraph));const n=e.concat(i).filter(a=>!this.sublayerIdsCache.get(a.typeName)?.has(a.id));n.length>0&&(this.membershipModified=!0),await this._handleNewRecords(n,t)}async createSublayerForNamedType(e){await this.load();const t=this._graphTypeLookup.get(e);if(!t)throw new H("knowledge-graph:missing-type","The specified type does not exist in the knowledge graph.");if(this.dataManager.sublayerCaches.has(e))throw new H("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),O(this.sublayerIdsCache,e,()=>new Set);const i=this._createSublayer(t);return t.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.set(e,{useAllData:!1,members:new Map}),i.geometryType?this.layers.push(i):this.tables.push(i),await de(this,[e]),this._refreshNamedTypes(),i}async removeRecords(e,{cascadeRemoveRelationships:t=!0,recalculateLayout:i=!1,overrideMembershipCheck:n=!1}={cascadeRemoveRelationships:!0,recalculateLayout:!1,overrideMembershipCheck:!1}){let a=[];for(const h of e)(n||this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(h.typeName)?.useAllData===!1&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(h.typeName)?.members?.has(h.id))&&a.push(h);if(t){const h=new Set,c=[];for(const m of a)if(this.dataManager.nodeConnectionsLookup.has(m.id))for(const y of this.dataManager.nodeConnectionsLookup.get(m.id))h.add(y);for(const m of h)if(this.dataManager.memberIdTypeLookup.has(m))for(const y of this.dataManager.memberIdTypeLookup.get(m))this.dataManager.relationshipTypeNames.has(y)&&c.push({id:m,typeName:y});a=a.concat(c)}this.dataManager.removeFromLayer(a);for(const h of a)this.sublayerIdsCache.get(h.typeName)?.delete(h.id),this.dataManager.relationshipTypeNames.has(h.typeName)?this.relationshipLinkChartDiagramLookup.delete(h.id):this.entityLinkChartDiagramLookup.delete(h.id);const o=i?void 0:this.getCurrentNodeLocations();await this._calculateLayoutWithSublayerTimeInfo(this._currentLinkChartConfig.layoutMode,{layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:o}),a.length>0&&(this.membershipModified=!0);const s=[];return this.layers.forEach(h=>{s.push(h.refreshCachedQueryEngine())}),await Promise.all(s),this._refreshNamedTypes(),a}async expand(e,t){let i=[];try{const n=await this.dataManager.getConnectedRecordIds(e,t?.relationshipTypeNames,t);i=n.filter(a=>!this.sublayerIdsCache.get(a.typeName)?.has(a.id)),await this._handleNewRecords(i,t),n.length>0&&(this.membershipModified=!0),q(t?.signal)}catch(n){throw he(n)&&i.length>0&&await this.removeRecords(i,{overrideMembershipCheck:!0}),n}return{records:i}}loadLayerAssumingLocalCache(){const e=[...this.memberRelationshipTypes,...this.memberEntityTypes];this.layers.length||this.originIdOf("tables")===j.DEFAULTS?this.originIdOf("layers")===j.DEFAULTS?this._createSublayers(e,this.layers,t=>!!t.geometryType):this._updateSublayers(e,this.layers):this.layers=new Q,this.tables.length||this.originIdOf("layers")===j.DEFAULTS?this.originIdOf("tables")===j.DEFAULTS?this._createSublayers(e,this.tables,t=>!t.geometryType):this._updateSublayers(e,this.tables):this.tables=new Q,this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t,i)=>{const n=O(this.sublayerIdsCache,i,()=>new Set);t.members?.forEach(({id:a,linkChartLocation:o})=>{if(n.add(a),o){const s="coords"in o&&"lengths"in o?o:J(o);this.dataManager.relationshipTypeNames.has(i)?this.relationshipLinkChartDiagramLookup.set(a,s):this.entityLinkChartDiagramLookup.set(a,s)}})})}async calculateLinkChartLayout(e="organic-standard",t){const i=[],n=[],a=[];this.dataManager.sublayerCaches.forEach((r,p)=>{this.dataManager.entityTypeNames.has(p)?r.forEach(l=>{i.push({typeName:p,feature:l})}):this.dataManager.relationshipTypeNames.has(p)&&r.forEach(l=>{n.push({typeName:p,feature:l})})}),this.entityLinkChartDiagramLookup=new Map,this.relationshipLinkChartDiagramLookup=new Map;const o=new Map,s=new Map,h=new Map,c=new Map,m=new Uint8Array(i.length),y=new Float64Array(i.length),L=new Float64Array(i.length),W=new Float64Array(i.length),_=new Float64Array(i.length),T=new Uint32Array(n.length),ae=new Uint32Array(n.length),ce=new Float64Array(n.length),ue=new Float64Array(n.length),g=[],ke="organic-standard";let me=!1;const N=new be({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let B,ye="organic-standard",u=0,D=0;const Ce=Oe.apply;switch(ye=e==="geographic-organic-standard"?ke:e,ye){case"organic-standard":B=We.apply;break;case"organic-community":B=Qe.apply;break;case"hierarchical-bottom-to-top":B=je.apply;break;case"radial-root-centric":B=Ue.apply;break;case"tree-left-to-right":B=Pe.apply;break;default:B=Be.apply}let ne=!1;i.forEach(({typeName:r,feature:p})=>{if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"&&t?.lockedNodeLocations?.has(p.attributes[C])){e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(r)?m[u]=z.IsGeographic:m[u]=z.None;const l=t.lockedNodeLocations.get(p.attributes[C]);y[u]=l.x,L[u]=l.y}else if(e==="geographic-organic-standard"&&this.dataManager.geographicLookup.has(r)){m[u]=z.IsGeographic;let l=null;const k=p.attributes[this.dataManager.geographicLookup.get(r).name];switch(this.dataManager.geographicLookup.get(r)?.geometryType){case"esriGeometryPoint":y[u]=k?.x,L[u]=k?.y;break;case"esriGeometryPolygon":l=k?.centroid,l?.x!=null&&l?.y!=null?(y[u]=l.x,L[u]=l.y):m[u]=z.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":l=k?.extent?.center,l?.x!=null&&l?.y!=null?(y[u]=l.x,L[u]=l.y):m[u]=z.IsMovable;break;default:m[u]=z.IsMovable}(y[u]==null||L[u]==null||Number.isNaN(y[u])||Number.isNaN(L[u]))&&(m[u]=z.IsMovable,y[u]=0,L[u]=0)}else if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){!ne&&t?.lockedNodeLocations?.has(p.attributes[C])&&(ne=!0);const l=t?.timeInfoByTypeName?.get(r),k=l?.startField,x=k&&l?.startField?p.attributes[k]:null;W[u]=x?new Date(x).getTime():NaN;const b=l?.endField,I=b&&l?.endField?p.attributes[b]:null;_[u]=I?new Date(I).getTime():NaN,y[u]=0,L[u]=0,m[u]=z.IsMovable}else m[u]=z.IsMovable,y[u]=0,L[u]=0;c.set(p.attributes[C],u),g[u]={feature:p,typeName:r},u++}),ne&&E.getLogger(this).warn("Locked node locations are not supported for chronological layout at this time.  Requested node locations were ignored");let ge=!1;const oe=new Map;n.forEach(r=>{const p=r.feature.attributes[te],l=r.feature.attributes[ie],k=c.get(p),x=c.get(l),b=t?.timeInfoByTypeName?.get(r.typeName),I=t?.timeInfoByTypeName?b?.startField:null,R=I?r.feature.attributes[I]:null,$=b?.endField,P=$?r.feature.attributes[$]:null;if(k!==void 0&&x!==void 0){let G=p+"-"+l;e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(G=G+"-"+R+"-"+P);const X=oe.get(G);X?.has(r.typeName)||(T[D]=k,ae[D]=x,e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"||(ce[D]=R?new Date(R).getTime():NaN,ue[D]=P?new Date(P).getTime():NaN),X===void 0?oe.set(G,new Map([[r.typeName,D]])):X.set(r.typeName,D),D++),a.push(r)}else ge=!0,this.relationshipLinkChartDiagramLookup.set(p,null)}),ge&&E.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null");const Te=this._validateOrganicLayoutSettings(e,t?.layoutSettings?.organicLayoutSettings),re=this._convertValidatedOrganicSettingsToCalculationSettings(Te);await He();let V=ee.Error,v=null;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){let r;({status:V,links:v,graphics:r}=Ce(()=>t?.signal?.aborted??!1,m,y,L,W,_,T.subarray(0,D),ae.subarray(0,D),ce.subarray(0,D),ue.subarray(0,D),e==="chronological-multi-timeline",t?.layoutSettings?.chronologicalLayoutSettings)),V===ee.Success&&(this.chronologicalAuxiliaryGraphics=r)}else({status:V,links:v}=B(()=>t?.signal?.aborted??!1,m,y,L,T.subarray(0,D),ae.subarray(0,D),re.computationBudgetTime,re.idealEdgeLengthMultiplier,re.repulsionRadiusMultiplier));if(q(t?.signal),V===ee.Error)throw new H("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");if(V===ee.Canceled)throw Se();for(let r=0;r<g.length;r++){if(L[r]>84.9999?L[r]=84.9999:L[r]<-84.9999&&(L[r]=-84.9999),y[r]>179.9999?y[r]=179.9999:y[r]<-179.9999&&(y[r]=-179.9999),g[r].feature.attributes[A]=new pe(y[r],L[r]),o.has(g[r].typeName))o.get(g[r].typeName)?.set(g[r].feature.attributes[C],g[r].feature);else{const b=new Map;b.set(g[r].feature.attributes[C],g[r].feature),o.set(g[r].typeName,b)}h.set(g[r].feature.attributes[C],g[r].feature);const p=J(g[r].feature.attributes[A]);this.entityLinkChartDiagramLookup.set(g[r].feature.attributes[C],g[r].feature.attributes[A]?p:null);const l=O(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,g[r].typeName,()=>({useAllData:!1,members:new Map}));O(l.members,g[r].feature.attributes[C],()=>({id:g[r].feature.attributes[C],linkChartLocation:void 0})).linkChartLocation=g[r].feature.attributes[A];const{x:k,y:x}=g[r].feature.attributes[A];me?(N.xmin=Math.min(N.xmin,k),N.xmax=Math.max(N.xmax,k),N.ymin=Math.min(N.ymin,x),N.ymax=Math.max(N.ymax,x)):(N.xmin=k-1e-7,N.xmax=k+1e-7,N.ymin=x-1e-7,N.ymax=x+1e-7,me=!0)}if(this.linkChartExtent.xmin=N.xmin,this.linkChartExtent.xmax=N.xmax,this.linkChartExtent.ymin=N.ymin,this.linkChartExtent.ymax=N.ymax,!v)throw new H("knowledge-graph:layout-failed","Attempting to retrieve link geometry from diagram engine failed");const Z=new Map,se=new Map,le=new Map,fe=new Set;for(let r=0;r<a.length;r++){const p=[],l=a[r],k=l.feature.attributes[te],x=l.feature.attributes[ie];let b=k+"-"+x;if(e==="chronological-mono-timeline"||e==="chronological-multi-timeline"){const d=t?.timeInfoByTypeName?.get(l.typeName),S=t?.timeInfoByTypeName?d?.startField:null,F=S?l.feature.attributes[S]:null,U=d?.endField;b+="-"+F+"-"+(U?l.feature.attributes[U]:null)}const I=oe.get(b).get(l.typeName),R=I===0?0:v?.vertexEndIndex[I-1];if(!fe.has(I)){if(fe.add(I),v.types[I]===Me.Recursive){const d=[v.vertices[2*R],v.vertices[2*R+1]],S=[v.vertices[2*(R+1)],v.vertices[2*(R+1)+1]],F=[.5*(d[0]+S[0]),.5*(d[1]+S[1])],U=[F[0]-d[0],F[1]-d[1]],ve=[F[0]+U[1],F[1]-U[0]],xe=[F[0]-U[1],F[1]+U[0]];p.push(d),p.push(ve),p.push(S),p.push(xe),p.push(d)}else{if(v.types[I]!==Me.Regular){E.getLogger(this).warn("A relationship generated an unsupported link geometry type.  It will not be rendered");continue}for(let d=R;d<v.vertexEndIndex[I];d++)p.push([v.vertices[2*d],v.vertices[2*d+1]])}if(e!=="chronological-mono-timeline"&&e!=="chronological-multi-timeline"){const d=g[c.get(k)]?.feature.attributes[A],S=g[c.get(x)]?.feature.attributes[A];p[0][0]===d.x&&p[0][1]===d.y||(p[0]=[d.x,d.y]),p[p.length-1][0]===S.x&&p[p.length-1][1]===S.y||(p[p.length-1]=[S.x,S.y])}for(let d=1;d<p.length-1;d++)p[d][1]>85.5?p[d][1]=85.5:p[d][1]<-85.5&&(p[d][1]=-85.5),p[d][0]>179.9999?p[d][0]=179.9999:p[d][0]<-179.9999&&(p[d][0]=-179.9999);Z.has(b)?Z.get(b).push(p):Z.set(b,[p])}const $=Z.get(b);se.has(b)||(se.set(b,new Map),le.set(b,new Map));const P=se.get(b),G=le.get(b);P.has(l.typeName)||(P.set(l.typeName,$.shift()),G.set(l.typeName,0));const X=P.get(l.typeName);G.set(l.typeName,G.get(l.typeName)+1);const Ne=new we({paths:[X]});if(l.feature.attributes[A]=Ne,s.has(l.typeName))s.get(l.typeName)?.set(l.feature.attributes[C],l.feature);else{const d=new Map;d.set(l.feature.attributes[C],l.feature),s.set(l.typeName,d)}h.set(l.feature.attributes[C],l.feature);const Le=J(l.feature.attributes[A]);this.relationshipLinkChartDiagramLookup.set(l.feature.attributes[C],l.feature.attributes[A]?Le:null);const De=O(this.dataManager.inclusionModeDefinition.namedTypeDefinitions,l.typeName,()=>({useAllData:!1,members:new Map}));O(De.members,l.feature.attributes[C],()=>({id:l.feature.attributes[C],linkChartLocation:void 0})).linkChartLocation=Le}for(const r of a)r.feature.attributes[Je]=le.get(r.feature.attributes[te]+"-"+r.feature.attributes[ie])?.get(r.typeName)??null;return this._currentLinkChartConfig={layoutMode:e,layoutSettings:t?.layoutSettings?.clone()},{nodes:o,links:s,idMap:h}}async applyNewLinkChartLayout(e="organic-standard",t){const i=[];await this._calculateLayoutWithSublayerTimeInfo(e,t),this.layers.forEach(n=>{i.push(n.refreshCachedQueryEngine())}),this.membershipModified=!0,await Promise.all(i),this._refreshNamedTypes()}getCurrentNodeLocations(){const e=new Map;for(const[t,i]of this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.entries()??[])this.dataManager.relationshipTypeNames.has(t)||i?.members?.forEach(n=>{const a=n.linkChartLocation;let o;const s=n.id;a&&(o="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(s,new pe({x:o.x,y:o.y})))});return e}async refreshLinkChartCache(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach(i=>{t.push(i.refreshCachedQueryEngine())}),await Promise.all(t),this._refreshNamedTypes()}async connectBetweenEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let n=[];for(const a of this.dataManager.relationshipTypeNames){const o=this.sublayerIdsCache.get(a);o&&(n=n.concat(Array.from(o.keys())))}i=await this.dataManager.getRelationshipsBetweenNodes(e,n,t),await this._handleNewRecords(i,t),q(t)}catch(n){throw he(n)&&this.removeRecords(i),n}return{records:i}}async connectFromEntities(e,t){if(!e.length)return{records:[]};let i=[];try{let n=[];for(const o of this.dataManager.relationshipTypeNames){const s=this.sublayerIdsCache.get(o);s&&(n=n.concat(Array.from(s.keys())))}let a=[];for(const o of this.dataManager.entityTypeNames){const s=this.sublayerIdsCache.get(o);s&&(a=a.concat(Array.from(s)))}i=await this.dataManager.getRelationshipsFromNodes(e,a,n,t),await this._handleNewRecords(i,t),i.length>0&&(this.membershipModified=!0),q(t)}catch(n){throw he(n)&&this.removeRecords(i),n}return{records:i}}getCurrentLayout(){return this._currentLinkChartConfig.layoutMode}async _calculateLayoutWithSublayerTimeInfo(e="organic-standard",t){const i=new Map;this.layers.forEach(n=>{i.set(n.objectType.name,n.timeInfo)}),await this.calculateLinkChartLayout(e,{timeInfoByTypeName:i,...t}),this.linkChart?.handleChronologicalOverlay()}async _handleNewRecords(e,t){const i=new Set,n=[],a=this.layers.concat(this.tables);for(const s of e)this._graphTypeLookup.has(s.typeName)&&(a.some(h=>h.objectType.name===s.typeName)===!1&&(this.dataManager.sublayerCaches.set(s.typeName,new Map),i.add(s.typeName)),O(this.sublayerIdsCache,s.typeName,()=>new Set).add(s.id),n.push(s));this.dataManager.addToLayer(n);for(const s of i){const h=this._graphTypeLookup.get(s);if(h){const c=this._createSublayer(h);h.type==="entity"?this.dataManager.entityTypeNames.add(s):this.dataManager.relationshipTypeNames.add(s),c.geometryType?this.layers.push(c):this.tables.push(c)}}await de(this,Array.from(i),t),await this.dataManager.refreshCacheContent(e.map(s=>s.id),void 0,void 0,void 0,t);const o={layoutSettings:this._currentLinkChartConfig.layoutSettings,lockedNodeLocations:new Map};for(const[s,h]of this.entityLinkChartDiagramLookup.entries())h&&o.lockedNodeLocations.set(s,new pe(h.coords[0],h.coords[1]));await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,o)}_createSublayers(e,t,i){e.forEach(n=>{const a=this._createSublayer(n);i(a)&&t.push(a),this._updateSublayerCaches(n)})}_updateSublayers(e,t){t.forEach(i=>{i.parentCompositeLayer=this;const n=e.find(a=>a.type===i.graphType&&a.name===i.graphTypeName);n&&(i.objectType=n,i.read({title:n.name},{origin:"service"}),this._updateSublayerCaches(n))})}_updateSublayerCaches({name:e}){if(!e)return;const t=this.dataManager.sublayerCaches;t.has(e)||t.set(e,new Map)}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=j.PORTAL_ITEM&&e<j.USER}async _initializeDiagram(){this.initializationLinkChartConfig?this.initializationLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e,t)=>{e?.members?.forEach(i=>{const n=i.linkChartLocation;let a;const o=i.id;if(!n)return;a="x"in n?{x:n.x,y:n.y}:{x:n.coords[0],y:n.coords[1]};const s=J(a);this.dataManager.relationshipTypeNames.has(t)?this.relationshipLinkChartDiagramLookup.set(o,s):this.entityLinkChartDiagramLookup.set(o,s),this.linkChartExtent.xmin>a.x&&(this.linkChartExtent.xmin=a.x),this.linkChartExtent.xmax<a.x&&(this.linkChartExtent.xmax=a.x),this.linkChartExtent.ymin>a.y&&(this.linkChartExtent.ymin=a.y),this.linkChartExtent.ymax<a.y&&(this.linkChartExtent.ymax=a.y)})}),this.memberRelationshipTypes.forEach(e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach(t=>{const i=this.relationshipLinkChartDiagramLookup.get(t.attributes[te]),n=this.relationshipLinkChartDiagramLookup.get(t.attributes[ie]);if(i&&n){const a=J(new we({paths:[[[i.coords[0],i.coords[1]],[n.coords[0],n.coords[1]]]]}));this.relationshipLinkChartDiagramLookup.set(t.attributes[C],a)}else this.relationshipLinkChartDiagramLookup.set(t.attributes[C],null)})})):await this._calculateLayoutWithSublayerTimeInfo(this.initializationLinkChartConfig.layoutMode,{lockedNodeLocations:this.getCurrentNodeLocations(),...this.initializationLinkChartConfig||{}}):await this._calculateLayoutWithSublayerTimeInfo("organic-standard",{lockedNodeLocations:this.getCurrentNodeLocations()})}_refreshNamedTypes(){for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}_validateOrganicLayoutSettings(e,t){const i=T=>typeof T=="number"&&!isNaN(T),n=T=>i(T)&&T>=1,a=T=>i(T)&&T>=1,o=T=>Object.values(Y).includes(T),s=T=>i(T)&&T>=0,h={};if(!new Set(["organic-standard","organic-community","geographic-organic-standard","chronological-multi-timeline","chronological-mono-timeline"]).has(e)||!t)return h;const{computationBudgetTime:c,autoRepulsionRadius:m,repulsionRadiusMultiplier:y,absoluteIdealEdgeLength:L,multiplicativeIdealEdgeLength:W,idealEdgeLengthType:_}=t;return a(c)?h.computationBudgetTime=c:c&&E.getLogger(this).warn("Invalid layout computationBudgetTime setting, will revert to default setting"),h.autoRepulsionRadius=m,!m&&n(y)?h.repulsionRadiusMultiplier=y:m||(h.autoRepulsionRadius=!0,E.getLogger(this).warn("Invalid layout repulsionRadiusMultiplier setting, will revert to default setting")),e==="geographic-organic-standard"&&(o(_)?h.idealEdgeLengthType=_:_!==void 0&&E.getLogger(this).warn('Invalid layout idealEdgeLengthType setting, will revert to "multiplier" setting'),_==="absolute-value"&&s(L)?h.absoluteIdealEdgeLength=L:_==="absolute-value"&&L!==void 0?E.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting"):_==="multiplier"&&s(W)?h.multiplicativeIdealEdgeLength=W:_==="multiplier"&&W!==void 0&&E.getLogger(this).warn("Invalid layout idealEdgeLength setting, will revert to default setting")),h}_convertValidatedOrganicSettingsToCalculationSettings(e){let t=e.idealEdgeLengthType===Y.ABSOLUTE?e.absoluteIdealEdgeLength:e.multiplicativeIdealEdgeLength;return e.idealEdgeLengthType===Y.ABSOLUTE&&(t===void 0?t=-1:t*=-1),{computationBudgetTime:e.computationBudgetTime??void 0,repulsionRadiusMultiplier:e.repulsionRadiusMultiplier&&!e.autoRepulsionRadius?e.repulsionRadiusMultiplier:void 0,idealEdgeLengthMultiplier:t}}_createSublayer(e){return new K({objectType:e,parentCompositeLayer:this,graphType:e.type})}_handleSublayersChange(e,t){t&&(t.forEach(i=>{i.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(i=>{i.parent=this}),this.addHandles([e.on("after-add",({item:i})=>{i.parent=this}),e.on("after-remove",({item:i})=>{i.parent=null})],"sublayers-owner"))}_alignLayersDataModelAndInclusionDefinition(e){const t=new Set((e.entityTypes??[]).map(a=>a.name).concat((e.relationshipTypes??[]).map(a=>a.name))),i=new Set((e.entityTypes??[]).map(a=>a.name)),n=new Set((e.relationshipTypes??[]).map(a=>a.name));if(this.layers){for(const o of this.layers)!o.graphType&&t.has(o.graphTypeName)&&(o.graphType=i.has(o.graphTypeName)?"entity":"relationship");const a=this.layers.filter(o=>t.has(o.graphTypeName)&&(o.graphType==="entity"?i.has(o.graphTypeName):n.has(o.graphTypeName)));this.setAtOrigin("layers",a,_e(this.originIdOf("layers")))}else this.layers=new Q;if(this.layers&&this._originalInclusionList){const a=new Set(this._originalInclusionList.namedTypeDefinitions.keys()),o=this.tables?.map(c=>c.graphTypeName)??[],s=this.layers.map(c=>c.graphTypeName).concat(o);for(const c of s)a.has(c)||this._originalInclusionList.namedTypeDefinitions.set(c,{useAllData:!1,members:new Map});const h=[];for(const c of this._originalInclusionList.namedTypeDefinitions.keys())s.includes(c)||(E.getLogger(this).warn(`A named type, ${c}, was in the serialized feature collection but did not have a sublayer config in the item, so will be removed`),h.push(c));for(const c of h)this._originalInclusionList.namedTypeDefinitions.delete(c)}}};w([M(Ze)],f.prototype,"url",void 0),w([M()],f.prototype,"dataPreloadedInLocalCache",void 0),w([M()],f.prototype,"initializationLinkChartConfig",void 0),w([M()],f.prototype,"membershipModified",void 0),w([M()],f.prototype,"dataManager",void 0),w([M()],f.prototype,"initializationInclusionModeDefinition",null),w([M()],f.prototype,"knowledgeGraph",void 0),w([M({type:Q.ofType(K),json:{write:{ignoreOrigin:!0}}})],f.prototype,"layers",void 0),w([M({readOnly:!0})],f.prototype,"linkChart",null),w([M()],f.prototype,"entityLinkChartDiagramLookup",void 0),w([M()],f.prototype,"relationshipLinkChartDiagramLookup",void 0),w([M()],f.prototype,"linkChartExtent",void 0),w([M()],f.prototype,"memberEntityTypes",void 0),w([M()],f.prototype,"memberRelationshipTypes",void 0),w([M({type:["LinkChartLayer"]})],f.prototype,"operationalLayerType",void 0),w([M()],f.prototype,"sublayerIdsCache",void 0),w([M({type:Q.ofType(K),json:{write:{ignoreOrigin:!0}}})],f.prototype,"tables",void 0),w([M({json:{read:!1}})],f.prototype,"type",void 0),w([M({json:{read:!1}})],f.prototype,"chronologicalAuxiliaryGraphics",void 0),f=w([Ae("esri.layers.LinkChartLayer")],f);const sa=f;export{sa as default};
