import{eU as m,eV as S,eW as s,eX as l,eY as N}from"./main-BTSN56ll.js";function p(n,r){return{...r,filterMode:n.mode}}function y(n,r){return I(n,r).next().value??null}function E(n,r,e){const t=x(n);if(t&&(s(r,t[0])||l(e,t[1])))return"";const o=Array.from(I(n,r,e)),i=T(o,r,e)?"1=1":o.map(u=>u.where||"1=1").reduce((u,f)=>N(u,f),"");return i&&i!=="1=1"?i:""}function x(n){if(d(n)==="manual")return null;const r=[Number.NEGATIVE_INFINITY,Number.POSITIVE_INFINITY];for(const{minScale:e,maxScale:t}of n.filters)r[0]=Math.max(r[0],a(e)),r[1]=Math.min(r[1],c(t));return r}function*I(n,r,e){if(d(n)==="manual"){const t=n.filters.find(o=>o.id===n.activeFilterId);t&&(yield t)}else{typeof r=="object"&&(r=r.scale);for(const t of n.filters)h(t.minScale,t.maxScale,r,e)&&(yield t)}}function T(n,r,e){if(n.length===0)return!0;const t=a(n.at(0)?.minScale),o=c(n.at(-1)?.maxScale);if(l(t,r)||s(o,e))return!0;for(let i=0;i<n.length-1;i++){const u=n[i],f=n[i+1];if(l(a(f.minScale),c(u.maxScale)))return!0}return!1}function h(n,r,e,t){return n=a(n),e=a(e),r=c(r),!(!m(e,n)&&(t??e)>n)&&!S(r,e)&&(t===void 0||!m(t,n))}function d(n){return"mode"in n?n.mode:n.filterMode}function a(n){return n||Number.POSITIVE_INFINITY}function c(n){return n||0}export{E as T,p as b,y as x};
