import{v as t,S as s,eb as n,i as h,ag as m,ah as l,av as o,am as d}from"./main-PkUfCtZc.js";import{X as V,Y as w}from"./LayerView-Bish-E63-1en-vcJ9.js";import"./Container-BcuL1ZEG-DZUep4PS.js";import"./MapView-BGOJJ8ch-DV3cjPZE.js";import"./Cyclical-C_9rKUUQ-DmdmUk7N.js";import"./CollectionFlattener-DkHuHn5E-DJm1gVA7.js";import"./workers-PiCjreoO-DC8LKuhk.js";import"./projection-BA9M1R7d-CEMBntY6.js";import"./projectBuffer-CvCBvJ6W-BidsYWbI.js";import"./TileInfo-CWIRDhZl-2m3RtlXM.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./themeUtils-YjM7iIiX-Cq1T_lmi.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-CUu3u1ms-CMJu6zm9.js";import"./signal-CETehA7D-CVS4Eu_L.js";import"./Map-1zd11DKO-C9xVe8J7.js";import"./Basemap-BEqqSTw9-BIxv7lzu.js";import"./loadAll-e978YItg-BlAB5afu.js";import"./PortalItem-CctGdnxF-cseT3Sep.js";import"./writeUtils-D5qlLkwk-lN913TsQ.js";import"./compilerUtils-CV1QYWI8-IEvo0gcy.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-CUu7Zlsp.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./TablesMixin-C8RojhYs-D_vX8mQm.js";import"./Layer-ChoECxvZ-CFpNXouS.js";import"./TimeExtent-Cn0Jofqr-BHdxbPt1.js";import"./GraphicsCollection-CWTXNZOX-CMdywVSz.js";import"./HeightModelInfo-C5vFqzyF-NluWYcSW.js";import"./ReactiveMap-CFk6jPfN-C40wNi1s.js";import"./Query-BrwMGK8U-ZwX-vWLl.js";import"./Field-C6hA1tZj-6xEI4e6j.js";import"./fieldType-CD2CL2hr-Bek59CPy.js";import"./arcgisLayerUrl-HNYh8jvG-B-yKSPOM.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2f64-CeODonrJ-CkkJCdRC.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./Tile-D75RMC64-DFeNxIVx.js";import"./TileKey-C5IL-JBr-BrjktF4d.js";import"./QueueProcessor-DbfV9fLy-C6EmS-tC.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./normalizeUtils-Bxmy9MNI-5QdwczPf.js";import"./normalizeUtilsCommon-CRJlkfEA-BuvKpMlW.js";import"./utils-9sQxfkoa-BJQaEAdw.js";import"./utils-Bq23Xwmj-yx2_xLDr.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./unitBezier-CGtWxaCq-BRwEDigF.js";import"./Scheduler-B7UX7Wr5-CDypEFOP.js";import"./vec32-D9GsKZ1t-BPuCIkp8.js";import"./definitions-DJSdSb77-DkoRHaVx.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-BCt2hphT-RcwstS72.js";import"./imageUtils-BA2D6Uf1-BcE7v9WP.js";import"./capabilities-agoTWNzb-CtsNgRyk.js";import"./Version-CoKzbupV-seSiso37.js";import"./ColorBackground-gVZldRLm-CA7OFXtp.js";import"./parser-DyDJ-rlI-CA5JYGFD.js";import"./layerViewUtils-DURAPenP-BZPNDxrN.js";let r=class extends w{constructor(i){super(i),this.type="group",this.layerViews=new m}destroy(){this.layerViews.length=0}_allLayerViewVisibility(i){this.layerViews.forEach(e=>{e.visible=i})}initialize(){this.addHandles([this.layerViews.on("change",i=>this._layerViewsChangeHandler(i)),l(()=>this.layer?.visibilityMode,()=>{this.layer&&this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(null))},o),l(()=>this.visible,i=>{this._applyVisibility(()=>this._allLayerViewVisibility(i),()=>{})},o)],"grouplayerview"),this._layerViewsChangeHandler({target:null,added:this.layerViews.toArray(),removed:[],moved:[]})}get creatingLayerViews(){return this.view?.layerViewManager?.isCreatingLayerViewsForLayer(this.layer)??!1}set layerViews(i){this._set("layerViews",d(i,this._get("layerViews")))}get updatingProgress(){return this.layerViews.length===0?1:this.layerViews.reduce((i,e)=>i+e.updatingProgress,0)/this.layerViews.length}isUpdating(){return this.creatingLayerViews||this.layerViews.some(i=>i.updating)}_hasLayerViewVisibleOverrides(){return this.layerViews.some(i=>i._isOverridden("visible"))}_findLayerViewForLayer(i){return i&&this.layerViews.find(e=>e.layer===i)}_firstVisibleOnLayerOrder(){const i=this.layer.layers.find(e=>!!this._findLayerViewForLayer(e)?.visible);return i&&this._findLayerViewForLayer(i)}_applyExclusiveVisibility(i){i==null&&(i=this._firstVisibleOnLayerOrder())==null&&this.layerViews.length>0&&(i=this._findLayerViewForLayer(this.layer.layers.at(0))),this.layerViews.forEach(e=>{e.visible=e===i})}_layerViewsChangeHandler(i){this.removeHandles("grouplayerview:visible"),this.addHandles(this.layerViews.map(a=>l(()=>a.visible,y=>this._applyVisibility(()=>{y!==this.visible&&(a.visible=this.visible)},()=>this._applyExclusiveVisibility(y?a:null)),o)).toArray(),"grouplayerview:visible");const e=i.added[i.added.length-1];this._applyVisibility(()=>this._allLayerViewVisibility(this.visible),()=>this._applyExclusiveVisibility(e?.visible?e:null))}_applyVisibility(i,e){this._hasLayerViewVisibleOverrides()&&(this.layer?.visibilityMode==="inherited"?i():this.layer?.visibilityMode==="exclusive"&&e())}};t([s({readOnly:!0})],r.prototype,"creatingLayerViews",null),t([s({cast:n})],r.prototype,"layerViews",null),t([s({readOnly:!0})],r.prototype,"updatingProgress",null),t([s()],r.prototype,"view",void 0),r=t([h("esri.views.layers.GroupLayerView")],r);const v=r;let p=class extends V(v){attach(){this._updateStageChildren(),this.addAttachHandles(this.layerViews.on("after-changes",()=>this._updateStageChildren()))}detach(){this.container.removeAllChildren()}update(i){}viewChange(){}moveEnd(){}_updateStageChildren(){this.container.removeAllChildren(),this.layerViews.forEach((i,e)=>this.container.addChildAt(i.container,e))}};p=t([h("esri.views.2d.layers.GroupLayerView2D")],p);const Li=p;export{Li as default};
