import{$ as m,o as s,P as p}from"./main-B4qmu9Sm.js";import{o as n}from"./MeshVertexAttributes-CbNpPur2-CBqho5_B.js";import{b as c}from"./vertexSpaceConversion-CiKaVq_u-Bwe1c8IH.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4-DX7gBViE-DzwQEsJx.js";import"./mat4f64-Dn1WEGBx-C99QVUMW.js";import"./vec32-D9GsKZ1t-CI3NU4uk.js";import"./spatialReferenceEllipsoidUtils-DUrKTvup-C1BMrAVE.js";import"./computeTranslationToOriginAndRotation-wF0y9WQG-B3acUz6Y.js";import"./projectBuffer-CvCBvJ6W-DoZ2jUop.js";import"./projectPointToVector-B2UUY9SE-Df5GI31i.js";import"./projection-BA9M1R7d-BBLUP_tV.js";import"./meshVertexSpaceUtils-B4l_Zo0M-DNqwZb94.js";import"./MeshLocalVertexSpace-BqgocsoS-DB_q2ESV.js";import"./vec3-BazNroeq-BB76CeF9.js";import"./BufferView-PQoE3GL7-CFTMJWz6.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4-DWDdg1fj-ByC7bhvb.js";async function U(o,r,t){await Promise.resolve(),m(t);const i=c(o,r,{useEllipsoid:t?.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=o.cloneAndModifyVertexAttributes(new n({...i,uv:p(o.vertexAttributes.uv),color:p(o.vertexAttributes.color)}),r);return e.transform=null,e}export{U as convertMeshVertexSpace};
