import{$ as m,o as s,P as p}from"./main-56aZ5vH0.js";import{o as n}from"./MeshVertexAttributes-CbNpPur2-DvxsRg0C.js";import{b as c}from"./vertexSpaceConversion-CiKaVq_u-Cdo2OzFl.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4-DX7gBViE-DIgGG_pY.js";import"./mat4f64-Dn1WEGBx-C99QVUMW.js";import"./vec32-D9GsKZ1t-BsTU1GX6.js";import"./spatialReferenceEllipsoidUtils-DUrKTvup-RGBO5aOy.js";import"./computeTranslationToOriginAndRotation-wF0y9WQG-B40SM_HH.js";import"./projectBuffer-CvCBvJ6W-BilkNYBU.js";import"./projectPointToVector-B2UUY9SE-BAfz6NIo.js";import"./projection-BA9M1R7d-D3mELU7Q.js";import"./meshVertexSpaceUtils-B4l_Zo0M-BzqIyynA.js";import"./MeshLocalVertexSpace-BqgocsoS-D51KFKhq.js";import"./vec3-BazNroeq-yoZ7ZBz9.js";import"./BufferView-PQoE3GL7-DidR3cfa.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4-DWDdg1fj-VOEk17WZ.js";async function U(o,r,t){await Promise.resolve(),m(t);const i=c(o,r,{useEllipsoid:t?.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=o.cloneAndModifyVertexAttributes(new n({...i,uv:p(o.vertexAttributes.uv),color:p(o.vertexAttributes.color)}),r);return e.transform=null,e}export{U as convertMeshVertexSpace};
