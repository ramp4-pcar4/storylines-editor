function i(f,a,l,c){const e=3*f,h=3*(l-f)-e,x=1-e-h,p=3*a,I=3*(c-a)-p,O=1-p-I;function N(n){return((x*n+h)*n+e)*n}function g(n){return((O*n+I)*n+p)*n}function k(n){return(3*x*n+2*h)*n+e}function y(n,b){let u,o,t,s,m,M;for(t=n,M=0;M<8;M++){if(s=N(t)-n,Math.abs(s)<b)return t;if(m=k(t),Math.abs(m)<1e-6)break;t-=s/m}if(u=0,o=1,t=n,t<u)return u;if(t>o)return o;for(;u<o;){if(s=N(t),Math.abs(s-n)<b)return t;n>s?u=t:o=t,t=.5*(o-u)+u}return t}return function(n,b=1e-6){return g(y(n,b))}}const z=/^cubic-bezier\((.*)\)/,r={};function F(f){let a=r[f]||null;if(!a){const l=z.exec(f);if(l){const c=l[1].split(",").map(e=>parseFloat(e.trim()));c.length!==4||c.some(e=>isNaN(e))||(a=i.apply(i,c))}}return a}r.ease=i(.25,.1,.25,1),r.linear=i(0,0,1,1),r.easeIn=r["ease-in"]=i(.42,0,1,1),r.easeOut=r["ease-out"]=i(0,0,.58,1),r.easeInOut=r["ease-in-out"]=i(.42,0,.58,1);export{F,r,i as u};
