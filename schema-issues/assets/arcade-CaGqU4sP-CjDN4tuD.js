import{o as w,P,ex as L,r as M,bi as j}from"./main-Cc0QI1EX.js";import{m as T,O,r as g}from"./TimeOnly-DSMefxKy-BGe_3b4Y.js";import{n as I}from"./ImmutableArray-CiJxhY8_-Kqx7aWRu.js";import J from"./FeatureLayer-BrRKw5Si-lzBZf0Ln.js";import{O as z}from"./FeatureSet-BkVNthuN-O0F3dtSF.js";import"./UnknownTimeZone-C--TOcPG-B0xPjNjt.js";import"./UniqueValueRenderer-fS5V0Ej1-Bo4b2SsD.js";import"./RendererLegendOptions-K3md58-X-CpsQz6Ua.js";import"./diffUtils-Cz3Fi8Xb-r2mzXzuM.js";import"./colorRamps-q0bZVhs2-BNUmAgQd.js";import"./sizeVariableUtils-t52KcLLi-D0hbQF8b.js";import"./visualVariableUtils-D3kZJRyn-DFkhgFZp.js";import"./compilerUtils-CV1QYWI8-Cbup4MF-.js";import"./lengthUtils-DKpMe5qR-DGUzXGSH.js";import"./styleUtils-BtpNqZyT-DTS2dMTg.js";import"./jsonUtils-C64Zfu7c-D3sbpJXn.js";import"./LRUCache-C3erQTWv-DQMylKL4.js";import"./Version-CoKzbupV-CiGDntq7.js";import"./FieldsIndex-HmzMbJQG-BtycaJ6v.js";import"./OverrideHelper-DWRbVlj1-BSLftDed.js";import"./colorUtils-Cthpxcks-7BL8OWiW.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./utils-SPbpQbmm-DwShGIB8.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./quantizationUtils-bJy1cRwp-BYbqB_1y.js";import"./heatmapUtils-seiMkkkR-Bb7inT_O.js";import"./MultiOriginJSONSupport-DKRh9P6w-Bj3a9-Aw.js";import"./commonProperties-BtIqvFU_-DVeQnsnU.js";import"./ElevationInfo-yv2-9tj6-ZEHkAVoO.js";import"./FeatureLayerBase-vvYyZTfh-DiHBda0i.js";import"./Field-C6hA1tZj-DICWHgfo.js";import"./fieldType-CD2CL2hr-D05exeyY.js";import"./HeightModelInfo-C5vFqzyF-BsTNH8LI.js";import"./arcgisLayerUrl-HNYh8jvG-DqEd0tWm.js";import"./featureLayerUtils-DgfQQyK4-qSozYLrr.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./Query-BrwMGK8U-DZn_x96n.js";import"./TimeExtent-Cn0Jofqr-DdHADgDc.js";import"./RelationshipQuery-DJsz3K0U-2oKMxdnw.js";import"./LayerFloorInfo-DRJ8wfwx-CDdAZGm6.js";import"./Relationship-PyhUibYK-ChKDMaaY.js";import"./serviceCapabilitiesUtils-rPjN5QBe-DKC1PCXp.js";import"./Layer-ChoECxvZ-BBOyQTVP.js";import"./workers-PiCjreoO-BVmCrtB6.js";import"./editsZScale-BDsX6vv--C1HR8hQk.js";import"./queryZScale-BiYV6Pr6-CC3zyxRU.js";import"./projection-BA9M1R7d-hUTO5x5d.js";import"./projectBuffer-CvCBvJ6W-DW1mHKor.js";import"./APIKeyMixin-BUMSx9ny-LWC5HLNU.js";import"./ArcGISService-BYA-y6X6-Dugw6pAm.js";import"./BlendLayer-D1WkSmwP-Ce4V939s.js";import"./jsonUtils-wIllKWI4-BHit9EIT.js";import"./parser-DyDJ-rlI--HRz-xe-.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-C_p1lNFv.js";import"./CustomParametersMixin-vdKsTHer-odoaXLzI.js";import"./EditBusLayer-Df29OyJh-CWqWXc2h.js";import"./FeatureEffectLayer-Cro89IEC-BceoWWW1.js";import"./FeatureEffect-CDEk9Es7-DwuQ2p7O.js";import"./FeatureFilter-BCFHgLVU-CLHMDmDi.js";import"./FeatureReductionLayer-BTZjL0_Z-DJuwM48B.js";import"./FeatureReductionSelection-BjX3h7Sz-BxnQiRQE.js";import"./labelingInfo-DGVNul26-B8G8PGMh.js";import"./labelUtils-BW14kBqX-DGySY-U3.js";import"./MD5-CHHr-oed-SuyrCYQ0.js";import"./OperationalLayer-B5IXiMa2-BBSWGDK-.js";import"./OrderedLayer-6Qsmrd_l-Di3OGVw5.js";import"./OrderByInfo-GD2XnU8e-BAasG4PZ.js";import"./PortalLayer-CElnYuSQ-Aoqh7j8e.js";import"./PortalItem-CctGdnxF-DsqUK6iP.js";import"./portalItemUtils-B8bw6SAG-CqQ1Qx8i.js";import"./RefreshableLayer-a8BQ58Xh-BZsQ6emQ.js";import"./ScaleRangeLayer-Bz0DcnvM-arox8zU0.js";import"./TemporalLayer-CpOrN_w9-DrgR4woK.js";import"./TimeInfo-w_HB2CsF-D7BefblK.js";import"./FeatureTemplate-SPHPD45f-6HQfEOV7.js";import"./FeatureType-C9hJmS6_-Ffousg3W.js";import"./fieldProperties-Bq26w7gt-a9Vr3tUj.js";import"./versionUtils-LZYZz-38-BzRjOQ2h.js";import"./styleUtils-ChrJTYIw-DWdr7jD6.js";import"./popupUtils-B0uZcXX0-RB7GCfvS.js";import"./AlphaCutoff-ZPx1GqOi-UcccL64p.js";import"./interfaces-Cwm0pihk-Ptzy6gTd.js";let d=null;function E(e,i,r,o={}){const a=i.elementType,n="value",c=a.type==="array"?[{name:n,type:a.type,elementType:a.elementType}]:a.type==="dictionary"?[{name:n,type:a.type,properties:a.properties}]:[{name:n,type:a.type}];return new I(e.map(p=>{const t={};return h(t,c,{[n]:p},r,o),t[n]}))}function N(e,i,r={}){const o=e instanceof z?new J({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return i.constructFeatureSet(o,r.spatialReference,null,!0,r.lruCache,r.interceptor)}function Y(e,i,r={}){const{spatialReference:o,interceptor:a,lruCache:n}=r;return typeof e=="string"?i.createFeatureSetCollectionFromService(e,o,n,a):i.createFeatureSetCollectionFromMap(e,o,n,a)}function q(e,i,r,o={}){const a={};return h(a,i.properties,e,r,o),new d.Dictionary(a)}function h(e,i,r,o,a={}){const n={};for(const c of Object.keys(r))n[c.toLowerCase()]=r[c];for(const c of i){const p=c.name.toLowerCase();if(a.variablesPreProcessed)e[p]=n[p];else switch(c.type){case"array":{const t=n[p];e[p]=t==null?null:E(t,c,o,a);break}case"feature":{const t=n[p];e[p]=t==null?null:d.Feature.createFromGraphic(t,a?.timeZone);break}case"featureSet":{const t=n[p];e[p]=t==null?null:o?N(t,o,a):null;break}case"featureSetCollection":{const t=n[p];e[p]=t==null?null:o?Y(t,o,a):null;break}case"dictionary":{const t=n[p];e[p]=t==null?null:q(t,c,o,a);break}case"date":{const t=n[p];e[p]=t?t instanceof g?t:a?.timeZone?g.dateJSAndZoneToArcadeDate(t,a?.timeZone):g.dateJSToArcadeDate(t):null;break}case"dateOnly":{const t=n[p];e[p]=t?t instanceof O?t:O.fromReader(t):null;break}case"time":{const t=n[p];e[p]=t?t instanceof T?t:T.fromReader(t):null;break}case"knowledgeGraph":case"geometry":case"boolean":case"text":case"number":e[p]=n[p]}}}function Z(e,i){for(const r of e)i.push(r),r.type==="dictionary"&&Z(r.properties,i);return i}function R(e,i,r,o,a){const{spatialReference:n,interceptor:c,lruCache:p,console:t,abortSignal:u,timeZone:m,services:S={portal:M.getDefault()}}=r,b={vars:{},spatialReference:n,interceptor:c,timeZone:m,lrucache:p,useAsync:a,services:S,console:t,abortSignal:u};return i&&h(b.vars,e.variables,i,o,r),b}function v(e,i){switch(i.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"time":case"dateOnly":return e.toString();case"feature":{const r=(e.type,e),o="geometry"in r?r.geometry():null,a="readAttributes"in r?r.readAttributes():r.attributes;return new j({geometry:o,attributes:a})}case"dictionary":{const r=e,o=r.attributes,a={};for(const n of Object.keys(o))a[n]=v(r.field(n),i);return a}case"array":return("toArray"in e?e.toArray():e).map(r=>v(r,i))}return e}const F={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$userInput",type:"geometry"},{name:"$graph",type:"knowledgeGraph"}]},D={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"}]},U=new Map([["aggregate-field",{variables:[{name:"$feature",type:"feature"}]}],["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"}]}],["popup",F],["popup-element",F],["feature-reduction-popup",D],["feature-reduction-popup-element",D],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"}]}]}]]);function $t(e){const i=U.get(e);if(!i){const r=Array.from(U.keys()).map(o=>`'${o}'`).join(", ");throw new w("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${r}`)}return P(i)}async function At(e,i,r={}){d||(d=await L());const{arcade:o,arcadeUtils:a}=d,{loadScriptDependencies:n,referencesMember:c,scriptIsAsync:p}=o,t=Z(i.variables,[]),u=t.filter(s=>s.type==="featureSet"||s.type==="featureSetCollection").map(s=>s.name.toLowerCase()),m=o.parseScript(e,u);if(!m)throw new w("arcade:invalid-script","Unable to create SyntaxTree");const S=a.extractFieldNames(m),b=o.scriptTouchesGeometry(m),C=t.map(s=>s.name.toLowerCase()).filter(s=>c(m,s)),l=p(m,u);await n(m,l,u);const $={vars:{},spatialReference:null,useAsync:l};for(const s of C)$.vars[s]="any";const{lruCache:A}=r,x=o.compileScript(m,$),k=o.featureSetUtils(),{services:G}=r;return{execute:(s,f={})=>{if(l)throw new w("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const y=x(R(i,s,{lruCache:A,...f},k,l));return f.rawOutput?y:v(y,a)},executeAsync:async(s,f={})=>{const y=await x(R(i,s,{lruCache:A,services:G,...f},k,l));return f.rawOutput?y:v(y,a)},isAsync:l,variablesUsed:C,fieldsUsed:S,geometryUsed:b,syntaxTree:m}}export{At as createArcadeExecutor,$t as createArcadeProfile};
