import{v as i,S as r,i as d,a0 as v,jy as w,du as S,aB as O,bp as F,n as b,K as q,J as I,W as N,a as _,o as c}from"./main-D-Kke8Lj.js";import J from"./FeatureLayer-BrRKw5Si-C-7Xxg4P.js";import{q as C}from"./workers-PiCjreoO-CPt93ezP.js";import{O as P}from"./FeatureSet-BkVNthuN-67o9ccTm.js";import{$ as j}from"./clientSideDefaults-BqqayPct-CUxfTygs.js";import{b as l}from"./Query-BrwMGK8U-CyXXnJZT.js";import"./UniqueValueRenderer-fS5V0Ej1-BwKUjyXw.js";import"./RendererLegendOptions-K3md58-X-DdvLG1gr.js";import"./diffUtils-Cz3Fi8Xb-C2I2Fham.js";import"./colorRamps-q0bZVhs2-C31fSNu-.js";import"./sizeVariableUtils-t52KcLLi-D0hbQF8b.js";import"./visualVariableUtils-D3kZJRyn-CnctMbHv.js";import"./compilerUtils-CV1QYWI8-CDJG9F89.js";import"./lengthUtils-DKpMe5qR-vHTFUtL4.js";import"./styleUtils-BtpNqZyT--pwyVTcU.js";import"./jsonUtils-C64Zfu7c-BnzwYRg5.js";import"./LRUCache-C3erQTWv-BpX3qgIf.js";import"./Version-CoKzbupV-CDC7AhEA.js";import"./FieldsIndex-HmzMbJQG-CFTRIR-9.js";import"./UnknownTimeZone-C--TOcPG-ChgHrze0.js";import"./OverrideHelper-DWRbVlj1-D0mSQMrq.js";import"./colorUtils-Cthpxcks-Dq-kwGph.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./utils-SPbpQbmm-CtpFJOyn.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./quantizationUtils-bJy1cRwp-CWYPdOus.js";import"./heatmapUtils-seiMkkkR-C9GtyJ__.js";import"./MultiOriginJSONSupport-DKRh9P6w-DkSssHMO.js";import"./commonProperties-BtIqvFU_-DmBZv-N4.js";import"./ElevationInfo-yv2-9tj6-DL2mo32t.js";import"./FeatureLayerBase-vvYyZTfh-OL5Bezh1.js";import"./Field-C6hA1tZj-BB0gJlZ3.js";import"./fieldType-CD2CL2hr-CNhwhspC.js";import"./HeightModelInfo-C5vFqzyF-G-3ZlgT_.js";import"./arcgisLayerUrl-HNYh8jvG-DsuvL94C.js";import"./featureLayerUtils-DgfQQyK4-CAo4NNg6.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./RelationshipQuery-DJsz3K0U-XkZKxq_v.js";import"./TimeExtent-Cn0Jofqr-N_w3PkOY.js";import"./LayerFloorInfo-DRJ8wfwx-qTBRWbeT.js";import"./Relationship-PyhUibYK-B31_vXXh.js";import"./serviceCapabilitiesUtils-rPjN5QBe-CErn62uW.js";import"./Layer-ChoECxvZ-DeQaCT46.js";import"./editsZScale-BDsX6vv--DV-K1tj3.js";import"./queryZScale-BiYV6Pr6-Bbut9rgo.js";import"./projection-BA9M1R7d-BA3bqAuI.js";import"./projectBuffer-CvCBvJ6W-DkbiSFMe.js";import"./APIKeyMixin-BUMSx9ny-C3cT7Q09.js";import"./ArcGISService-BYA-y6X6-9psRM3pP.js";import"./BlendLayer-D1WkSmwP-DhD035vZ.js";import"./jsonUtils-wIllKWI4-gkjN-1rN.js";import"./parser-DyDJ-rlI-Bno-Sv-c.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-CqRk3nyi.js";import"./CustomParametersMixin-vdKsTHer-BwTYnM8Z.js";import"./EditBusLayer-Df29OyJh-CYxOgxLU.js";import"./FeatureEffectLayer-Cro89IEC-BH1eqgtQ.js";import"./FeatureEffect-CDEk9Es7-D_swZHbw.js";import"./FeatureFilter-BCFHgLVU-BZezVqEJ.js";import"./FeatureReductionLayer-BTZjL0_Z-BdF9nxfS.js";import"./FeatureReductionSelection-BjX3h7Sz-Cg7Z7Xz2.js";import"./labelingInfo-DGVNul26-Cjp97EJO.js";import"./labelUtils-BW14kBqX-DjofBA5j.js";import"./MD5-CHHr-oed-SuyrCYQ0.js";import"./OperationalLayer-B5IXiMa2-BEcq6mfq.js";import"./OrderedLayer-6Qsmrd_l-CLTblHc4.js";import"./OrderByInfo-GD2XnU8e-B966iqZd.js";import"./PortalLayer-CElnYuSQ-VVV9bx5g.js";import"./PortalItem-CctGdnxF-w_Dcfi9A.js";import"./portalItemUtils-B8bw6SAG-DitJ1-6x.js";import"./RefreshableLayer-a8BQ58Xh-BYWSyQwU.js";import"./ScaleRangeLayer-Bz0DcnvM-B_Ff5B03.js";import"./TemporalLayer-CpOrN_w9-CJwwGGKd.js";import"./TimeInfo-w_HB2CsF-Do-b2TyD.js";import"./FeatureTemplate-SPHPD45f-DUj0AnoW.js";import"./FeatureType-C9hJmS6_-dY8h5_Kf.js";import"./fieldProperties-Bq26w7gt-BQiFbKQz.js";import"./versionUtils-LZYZz-38-B3r5BBRp.js";import"./styleUtils-ChrJTYIw-Cshh8M8l.js";import"./popupUtils-B0uZcXX0-Cf99ETio.js";import"./AlphaCutoff-ZPx1GqOi-UcccL64p.js";import"./interfaces-Cwm0pihk-Ptzy6gTd.js";import"./QueryEngineCapabilities-Gr588n9t-DjYb9CEb.js";import"./capabilities-Cjn77swe-Y9lFlGVh.js";let n=class extends O{constructor(t){super(t),this.type="csv",this.refresh=F(async e=>{await this.load();const{extent:s,timeExtent:a}=await this._connection.invoke("refresh",e);return s&&(this.sourceJSON.extent=s),a&&(this.sourceJSON.timeInfo.timeExtent=[a.start,a.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const s=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return P.fromJSON(s)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const s=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:s.count,extent:b.fromJSON(s.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async _startWorker(t){this._connection=await C("CSVSourceWorker",{strategy:q("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:s,fields:a,latitudeField:m,longitudeField:h,spatialReference:y,timeInfo:f}=this.loadOptions,p=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:a?.map(g=>g.toJSON()),latitudeField:m,longitudeField:h,spatialReference:y?.toJSON(),timeInfo:f?.toJSON()}},{signal:t});this.locationInfo=p.locationInfo,this.sourceJSON=p.layerDefinition,this.delimiter=p.delimiter}};i([r()],n.prototype,"type",void 0),i([r()],n.prototype,"loadOptions",void 0),i([r()],n.prototype,"customParameters",void 0),i([r()],n.prototype,"locationInfo",void 0),i([r()],n.prototype,"sourceJSON",void 0),i([r()],n.prototype,"delimiter",void 0),n=i([d("esri.layers.graphics.sources.CSVSource")],n);function u(t,e){throw new c(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let o=class extends J{constructor(...t){super(...t),this.geometryType="point",this.capabilities=j(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=I.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(N).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!e.layerDefinition?.drawingInfo?.labelingInfo}set url(t){if(!t)return void this._set("url",t);const e=_(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new n({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(s=>{if(s?.features)for(const a of s.features)a.layer=a.sourceLayer=this;return s})}queryObjectIds(t,e){return this.load().then(()=>this.source.queryObjectIds(l.from(t)||this.createQuery()))}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new c("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return u(this,"csv-layer:save")}async saveAs(t,e){return u(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],o.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],o.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),i([v("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],o.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],o.prototype,"operationalLayerType",void 0),i([r()],o.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],o.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:n,readOnly:!0})],o.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],o.prototype,"type",void 0),i([r({json:{read:w,write:{isRequired:!0,ignoreOrigin:!0,writer:S}}})],o.prototype,"url",null),o=i([d("esri.layers.CSVLayer")],o);const ue=o;export{ue as default};
