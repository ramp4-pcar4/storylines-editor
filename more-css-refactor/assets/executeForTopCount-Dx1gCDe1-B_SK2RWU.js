import{y as i}from"./utils-9sQxfkoa-CNDGeWEv.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Cp7LiUZ7.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DvHmPFlJ.js";import"./main-CDRbqrVn.js";import"./normalizeUtils-Bxmy9MNI-fC9cmSF-.js";import"./normalizeUtilsCommon-CRJlkfEA-CpQZ6x_6.js";import"./utils-Bq23Xwmj-CEi055_o.js";import"./query-DFW9-NG_-B7_F7fO5.js";import"./pbfQueryUtils-F4ZE8-K8-DZ2JB32V.js";import"./pbf-D-y3_eZO-BCJgN0jB.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-bjMjrrAm.js";import"./projection-BA9M1R7d-DKl5heQ7.js";import"./projectBuffer-CvCBvJ6W-nrkMI9a3.js";import"./TimeExtent-Cn0Jofqr-CDh8wImo.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
