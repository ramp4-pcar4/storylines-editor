import{y as i}from"./utils-9sQxfkoa-C66uO2X_.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Cg3xJ2S8.js";import a from"./TopFeaturesQuery-Ckj_IYM7-B9Or1a_M.js";import"./main-DeeL4Oiq.js";import"./normalizeUtils-Bxmy9MNI-DsbqOptd.js";import"./normalizeUtilsCommon-CRJlkfEA-QfPXilm_.js";import"./utils-Bq23Xwmj-COpak95H.js";import"./query-DFW9-NG_-so4jYTst.js";import"./pbfQueryUtils-F4ZE8-K8-DI6FJYES.js";import"./pbf-D-y3_eZO-rYxZsn2a.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-D2pKuM_C.js";import"./projection-BA9M1R7d-DRdP0LUM.js";import"./projectBuffer-CvCBvJ6W-BStw1B-X.js";import"./TimeExtent-Cn0Jofqr-BgsIbVhn.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
