const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./editingSupport-gUqP9iyf-Dt6mL382.js","./main-BduBn-9A.js","./main-DWu944Yv.css","./uuid-Dj9mdEVg-BaKSCiyT.js","./normalizeUtils-Bxmy9MNI-DeEIWKr5.js","./normalizeUtilsCommon-CRJlkfEA-B5cuu0Ql.js","./utils-9sQxfkoa-D95DaAF6.js","./utils-Bq23Xwmj-D1W3sAS5.js","./EditBusLayer-Df29OyJh-Bfy9zler.js","./infoFor3D-DIuYZyyK-BtH19JJ7.js"])))=>i.map(i=>d[i]);
import{v as r,S as i,i as E,J as O,W as w,bT as y,em as J,a as f,_ as N,bQ as j,n as S,bW as F,bL as R,aB as T,bp as q,o as g,l as P,K as $,a1 as v}from"./main-BduBn-9A.js";import"./UniqueValueRenderer-fS5V0Ej1-e3Pheh16.js";import{m as D,u as k}from"./jsonUtils-C64Zfu7c-DIUrdT08.js";import{m as C}from"./MultiOriginJSONSupport-DKRh9P6w-BnWuWxFE.js";import{D as Q}from"./Layer-ChoECxvZ-zGuh_myl.js";import{q as G}from"./workers-PiCjreoO-D-QflGOr.js";import{$ as L}from"./clientSideDefaults-BqqayPct-Bm36-1gs.js";import{O as Z}from"./FeatureSet-BkVNthuN-CGd_B-jB.js";import{u as z}from"./BlendLayer-D1WkSmwP-1OFvaTdr.js";import{i as V}from"./CustomParametersMixin-vdKsTHer-C8UO7voK.js";import{l as W}from"./FeatureEffectLayer-Cro89IEC-DZz5a8fk.js";import{v as A}from"./FeatureReductionLayer-BTZjL0_Z-Iqr7KYxf.js";import{E as B}from"./OperationalLayer-B5IXiMa2-Bzs5Xm7f.js";import{p as U}from"./OrderedLayer-6Qsmrd_l-Dw1Rxc3o.js";import{C as Y}from"./PortalLayer-CElnYuSQ-BtVURmj6.js";import{T as M}from"./RefreshableLayer-a8BQ58Xh-slPyOHlF.js";import{S as X}from"./ScaleRangeLayer-Bz0DcnvM-DYEtuyiT.js";import{x as H}from"./TemporalLayer-CpOrN_w9-BNjw2TbC.js";import{i as K,$ as ee,e as te,Y as re,_ as ie,E as oe,X as se,V as ne,Z as ae}from"./commonProperties-BtIqvFU_-CF0XCmKH.js";import{p as le}from"./FeatureTemplate-SPHPD45f-BOHi9ivJ.js";import{y as pe}from"./Field-C6hA1tZj-Bx6V8ZIX.js";import{f as ue}from"./fieldProperties-Bq26w7gt-Ca87IhbT.js";import{C as de,q as he}from"./labelingInfo-DGVNul26-CHkW4iyh.js";import{b as d}from"./Query-BrwMGK8U-DKdk_fdm.js";import{w as me}from"./popupUtils-B0uZcXX0-CEASkWW6.js";import"./RendererLegendOptions-K3md58-X-DcqkzRqO.js";import"./diffUtils-Cz3Fi8Xb-hrmJMe2g.js";import"./colorRamps-q0bZVhs2-pfNrIELh.js";import"./sizeVariableUtils-t52KcLLi-D0hbQF8b.js";import"./visualVariableUtils-D3kZJRyn-CbENxWwu.js";import"./compilerUtils-CV1QYWI8-BlnRWrpC.js";import"./lengthUtils-DKpMe5qR-N3Y2In4V.js";import"./styleUtils-BtpNqZyT-BWvfK5iN.js";import"./LRUCache-C3erQTWv-DAT_dtBd.js";import"./Version-CoKzbupV-DcszQauq.js";import"./FieldsIndex-HmzMbJQG-DGZ-baaJ.js";import"./UnknownTimeZone-C--TOcPG-CGRqg3Ot.js";import"./OverrideHelper-DWRbVlj1-BQQUCfUt.js";import"./colorUtils-Cthpxcks-D1gZb1NJ.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./utils-SPbpQbmm-BNVcN0SZ.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./quantizationUtils-bJy1cRwp-MyZusDRs.js";import"./heatmapUtils-seiMkkkR-qFErt6oO.js";import"./TimeExtent-Cn0Jofqr-gkQNFmqf.js";import"./QueryEngineCapabilities-Gr588n9t-DjYb9CEb.js";import"./capabilities-Cjn77swe-Y9lFlGVh.js";import"./jsonUtils-wIllKWI4-DzA03Xwm.js";import"./parser-DyDJ-rlI-42yJC53L.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-ChsaljY7.js";import"./FeatureEffect-CDEk9Es7-DnjcEt1n.js";import"./FeatureFilter-BCFHgLVU-CYC2_Iw2.js";import"./fieldType-CD2CL2hr-BdtWhn8j.js";import"./FeatureReductionSelection-BjX3h7Sz-DnvICyGL.js";import"./featureLayerUtils-DgfQQyK4-DmAKtItm.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./RelationshipQuery-DJsz3K0U-B-3DHSwt.js";import"./MD5-CHHr-oed-SuyrCYQ0.js";import"./OrderByInfo-GD2XnU8e-CsQ88tCv.js";import"./PortalItem-CctGdnxF-CFQrrzEu.js";import"./portalItemUtils-B8bw6SAG-D9ipFwB_.js";import"./projection-BA9M1R7d-dO6P0TBE.js";import"./projectBuffer-CvCBvJ6W-BBv7vn3W.js";import"./TimeInfo-w_HB2CsF-D86gk1Fk.js";import"./ElevationInfo-yv2-9tj6-CnniVrr3.js";import"./labelUtils-BW14kBqX-9G8ayL22.js";let l=class extends T{constructor(){super(...arguments),this.type="geojson",this.refresh=q(async e=>{await this.load();const{extent:t,timeExtent:s}=await this._connection.invoke("refresh",e);return this.sourceJSON.extent=t,s&&(this.sourceJSON.timeInfo.timeExtent=[s.start,s.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(e){const t=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}applyEdits(e){return this.load().then(()=>this._applyEdits(e))}openPorts(){return this.load().then(()=>this._connection.openPorts())}queryFeatures(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)).then(s=>Z.fromJSON(s))}queryFeaturesJSON(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))}queryFeatureCount(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t))}queryObjectIds(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t))}queryExtent(e,t={}){return this.load(t).then(()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t)).then(s=>({count:s.count,extent:S.fromJSON(s.extent)}))}querySnapping(e,t={}){return this.load(t).then(()=>this._connection.invoke("querySnapping",e,t))}_applyEdits(e){if(!this._connection)throw new g("geojson-layer-source:edit-failure","Memory source not loaded");const t=this.layer.objectIdField,s=[],n=[],h=[];if(e.addFeatures)for(const a of e.addFeatures)s.push(this._serializeFeature(a));if(e.deleteFeatures)for(const a of e.deleteFeatures)"objectId"in a&&a.objectId!=null?n.push(a.objectId):"attributes"in a&&a.attributes[t]!=null&&n.push(a.attributes[t]);if(e.updateFeatures)for(const a of e.updateFeatures)h.push(this._serializeFeature(a));return this._connection.invoke("applyEdits",{adds:s,updates:h,deletes:n}).then(({extent:a,timeExtent:p,featureEditResults:m})=>(this.sourceJSON.extent=a,p&&(this.sourceJSON.timeInfo.timeExtent=[p.start,p.end]),this._createEditsResult(m)))}_createEditsResult(e){return{addFeatureResults:e.addResults?e.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:e.updateResults?e.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:e.deleteResults?e.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new g("geojson-layer-source:edit-failure",t.description,{code:t.code}):null}}_serializeFeature(e){const{attributes:t}=e,s=this._geometryForSerialization(e);return s?{geometry:s.toJSON(),attributes:t}:{attributes:t}}_geometryForSerialization(e){const{geometry:t}=e;return t==null?null:t.type==="mesh"||t.type==="extent"?P.fromExtent(t.extent):t}async _startWorker(e){this._connection=await G("GeoJSONSourceWorker",{strategy:$("feature-layers-workers")?"dedicated":"local",signal:e,registryTarget:this});const{fields:t,spatialReference:s,hasZ:n,geometryType:h,objectIdField:a,url:p,timeInfo:m,customParameters:I}=this.layer,x=this.layer.originOf("spatialReference")==="defaults",_={url:p,customParameters:I,fields:t&&t.map(c=>c.toJSON()),geometryType:F.toJSON(h),hasZ:n,objectIdField:a,timeInfo:m?m.toJSON():null,spatialReference:x?null:s&&s.toJSON()},u=await this._connection.invoke("load",_,{signal:e});for(const c of u.warnings)v.getLogger(this.layer).warn("#load()",`${c.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:c});u.featureErrors.length&&v.getLogger(this.layer).warn("#load()",`Encountered ${u.featureErrors.length} validation errors while loading features. (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{errors:u.featureErrors}),this.sourceJSON=u.layerDefinition,this.capabilities=L(this.sourceJSON.hasZ,!0)}};r([i()],l.prototype,"capabilities",void 0),r([i()],l.prototype,"type",void 0),r([i({constructOnly:!0})],l.prototype,"layer",void 0),r([i()],l.prototype,"sourceJSON",void 0),l=r([E("esri.layers.graphics.sources.GeoJSONSource")],l);const b=ue();let o=class extends U(V(A(W(z(H(X(M(B(Y(C(Q))))))))))){constructor(e){super(e),this.attributeTableTemplate=null,this.copyright=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new l({layer:this}),this.spatialReference=O.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson"}destroy(){this.source?.destroy()}load(e){const t=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},e).catch(w).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),y(this.renderer,this.fieldsIndex),J(this.timeInfo,this.fieldsIndex)});return this.addResolvingPromise(t),Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&this.geometryType==null}get parsedUrl(){return this.url?f(this.url):null}set renderer(e){y(e,this.fieldsIndex),this._set("renderer",e)}set url(e){if(!e)return void this._set("url",e);const t=f(e);this._set("url",t.path),t.query&&(this.customParameters={...this.customParameters,...t.query})}async applyEdits(e,t){const{applyEdits:s}=await N(()=>import("./editingSupport-gUqP9iyf-Dt6mL382.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]),import.meta.url);await this.load();const n=await s(this,this.source,e,t);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),n}on(e,t){return super.on(e,t)}createPopupTemplate(e){return me(this,e)}createQuery(){const e=new d,t=this.capabilities?.data;e.returnGeometry=!0,t&&t.supportsZ&&(e.returnZ=!0),e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:s,timeExtent:n}=this;return e.timeExtent=s!=null&&n!=null?n.offset(-s.value,s.unit):n||null,e}getFieldDomain(e,t){return this.getField(e)?.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then(()=>this.source.queryFeatures(d.from(e)||this.createQuery(),t)).then(s=>{if(s?.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}queryObjectIds(e,t){return this.load().then(()=>this.source.queryObjectIds(d.from(e)||this.createQuery(),t))}queryFeatureCount(e,t){return this.load().then(()=>this.source.queryFeatureCount(d.from(e)||this.createQuery(),t))}queryExtent(e,t){return this.load().then(()=>this.source.queryExtent(d.from(e)||this.createQuery(),t))}async hasDataChanged(){try{const{dataChanged:e,updates:t}=await this.source.refresh(this.customParameters);return t!=null&&this.read(t,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};r([i(K)],o.prototype,"attributeTableTemplate",void 0),r([i({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",null),r([i({type:String})],o.prototype,"copyright",void 0),r([i({readOnly:!0})],o.prototype,"createQueryVersion",null),r([i(j("dateFieldsTimeReference"))],o.prototype,"dateFieldsTimeZone",void 0),r([i({readOnly:!0})],o.prototype,"defaultPopupTemplate",null),r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),r([i({type:String})],o.prototype,"displayField",void 0),r([i({type:Boolean})],o.prototype,"editingEnabled",void 0),r([i(ee)],o.prototype,"elevationInfo",void 0),r([i({type:[pe],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],o.prototype,"fields",void 0),r([i(b.fieldsIndex)],o.prototype,"fieldsIndex",void 0),r([i({type:S,json:{name:"extent"}})],o.prototype,"fullExtent",void 0),r([i({type:["point","polygon","polyline","multipoint"],json:{read:{reader:F.read}}})],o.prototype,"geometryType",void 0),r([i({type:Boolean})],o.prototype,"hasZ",void 0),r([i(te)],o.prototype,"id",void 0),r([i({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),r([i(re)],o.prototype,"labelsVisible",void 0),r([i({type:[de],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:he},write:!0}})],o.prototype,"labelingInfo",void 0),r([i(ie)],o.prototype,"legendEnabled",void 0),r([i({type:["show","hide"]})],o.prototype,"listMode",void 0),r([i({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],o.prototype,"objectIdField",void 0),r([i(oe)],o.prototype,"opacity",void 0),r([i({type:["GeoJSON"]})],o.prototype,"operationalLayerType",void 0),r([i(b.outFields)],o.prototype,"outFields",void 0),r([i({readOnly:!0})],o.prototype,"parsedUrl",null),r([i(se)],o.prototype,"popupEnabled",void 0),r([i({type:R,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),r([i({types:D,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:k}}}})],o.prototype,"renderer",null),r([i(ne)],o.prototype,"screenSizePerspectiveEnabled",void 0),r([i({readOnly:!0})],o.prototype,"source",void 0),r([i({type:O})],o.prototype,"spatialReference",void 0),r([i({type:[le]})],o.prototype,"templates",void 0),r([i()],o.prototype,"title",void 0),r([i({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),r([i(ae)],o.prototype,"url",null),o=r([E("esri.layers.GeoJSONLayer")],o);const Nt=o;export{Nt as default};
