import{$ as m,o as s,P as p}from"./main-wmvYI2gk.js";import{o as n}from"./MeshVertexAttributes-CbNpPur2-Ccu8Uj8_.js";import{b as c}from"./vertexSpaceConversion-CiKaVq_u-BzwbhcIe.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4-DX7gBViE-kL2LyBIW.js";import"./mat4f64-Dn1WEGBx-C99QVUMW.js";import"./vec32-D9GsKZ1t-BZOwo21s.js";import"./spatialReferenceEllipsoidUtils-DUrKTvup-BV4nbHUy.js";import"./computeTranslationToOriginAndRotation-wF0y9WQG-ChHpH9j4.js";import"./projectBuffer-CvCBvJ6W-D0w6YVdf.js";import"./projectPointToVector-B2UUY9SE-BKwpE5gp.js";import"./projection-BA9M1R7d-BroCQWRQ.js";import"./meshVertexSpaceUtils-B4l_Zo0M-BnxxxGlK.js";import"./MeshLocalVertexSpace-BqgocsoS-C_tCowWR.js";import"./vec3-BazNroeq-C_EjUKZY.js";import"./BufferView-PQoE3GL7-BIyqz-Xh.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4-DWDdg1fj-j8zwXbMT.js";async function U(o,r,t){await Promise.resolve(),m(t);const i=c(o,r,{useEllipsoid:t?.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=o.cloneAndModifyVertexAttributes(new n({...i,uv:p(o.vertexAttributes.uv),color:p(o.vertexAttributes.color)}),r);return e.transform=null,e}export{U as convertMeshVertexSpace};
