import{f as a,h as n,bq as s}from"./main-CD6yn4tp.js";import{o as f,O as g}from"./project-TZjL1vJA-Bz7f0HoV.js";import"./utils-BO8hgPs3-BsBbHFJv.js";import"./utils-DpLVEUvg-Bh4RXHT6.js";async function m(e=null,i){if(a.geometryServiceUrl)return a.geometryServiceUrl;if(!e)throw new n("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");let r;r="portal"in e?e.portal||s.getDefault():e,await r.load({signal:i});const t=r.helperServices?.geometry?.url;if(!t)throw new n("internal:geometry-service-url-not-configured","No geometryServiceUrl in configuration");return t}async function w(e,i,r=null,t){const l=await m(r,t),c=new f({geometries:[e],outSpatialReference:i}),o=await g(l,c,{signal:t});if(o&&Array.isArray(o)&&o.length===1)return o[0];throw new n("internal:geometry-service-projection-failed","Geometry projection failed on service")}export{m as getGeometryServiceURL,w as projectGeometry};
