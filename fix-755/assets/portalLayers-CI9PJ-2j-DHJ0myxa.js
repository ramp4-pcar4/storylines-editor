import{h,iu as m,iv as L,it as v}from"./main-CVqSukrg.js";import{q as g}from"./associatedFeatureServiceUtils-5tlRvHRs-tSaAvxub.js";import{g as I}from"./fetchService-IPSkq0MP-D_qBO9dw.js";import{u as p,d,p as M,b as T,L as C,w as G,f as P}from"./loadUtils-B4p6zboh-C3FOIXqM.js";import{t as b}from"./lazyLayerLoader-zoCpoQZ8-DDt_p_In.js";import N from"./PortalItem-BP-IQXnZ-Of4tQHUm.js";import{o as y}from"./portalItemUtils-BfWDJg-S-C23iZulx.js";import"./projectionUtils-B-CplN3q-gTXLUpmY.js";async function ue(e){let{portalItem:a}=e;!a||a instanceof N||(a=new N(a));const r=await V(a);return new r.constructor({portalItem:a,...r.properties})}async function V(e){await e.load();const a=new P;return j(await $(e,a))}async function $(e,a){switch(e.type){case"3DTiles Service":return e.typeKeywords.includes("3DObject")?A():q();case"CSV":return R();case"Feature Collection":return D(e);case"Feature Service":return K(e,a);case"Feed":return Y();case"GeoJson":return U();case"Group Layer":return Z();case"Image Service":return O(e,a);case"KML":return B();case"Knowledge Graph Layer":return E();case"Map Service":return F(e,a);case"Media Layer":return _();case"Scene Service":return W(e,a);case"Stream Service":return J();case"Video Service":return k(e,a);case"Vector Tile Service":return x();case"WCS":return H();case"WFS":return z();case"WMS":return Q();case"WMTS":return X();default:throw new h("portal:unknown-item-type","Unknown item type '${type}'",{type:e.type})}}async function j(e){const a=e.className,r=b[a];return{constructor:await r(),properties:e.properties}}async function F(e,a){return await ee(e,a)?{className:"TileLayer"}:{className:"MapImageLayer"}}async function K(e,a){const r=await w(e,a);if(typeof r=="object"){const{sourceJSON:t,className:c}=r,n={sourceJSON:t};return r.id!=null&&(n.layerId=r.id),{className:c||"FeatureLayer",properties:n}}return{className:"GroupLayer"}}async function W(e,a){const r=await w(e,a,async()=>{try{if(!e.url)return[];const{serverUrl:t}=await g(e.url,{sceneLayerItem:e});return(await a.fetchServiceMetadata(t))?.tables??[]}catch{return[]}});if(typeof r=="object"){const t={};let c;if(r.id!=null?(t.layerId=r.id,c=`${e.url}/layers/${r.id}`):c=e.url,e.typeKeywords?.length){for(const s of Object.keys(m))if(e.typeKeywords.includes(s))return{className:m[s]}}const n=await a.fetchServiceMetadata(c,{customParameters:await a.fetchCustomParameters(e,s=>p(s)?.customParameters)});return{className:m[n?.layerType]||"SceneLayer",properties:t}}return r===!1&&(await a.fetchServiceMetadata(e.url))?.layerType==="Voxel"?{className:"VoxelLayer"}:{className:"GroupLayer"}}async function D(e){await e.load();const a=y(e,"Map Notes"),r=y(e,"Markup");if(a||r)return{className:"MapNotesLayer"};if(y(e,"Route Layer"))return{className:"RouteLayer"};const t=await e.fetchData();return d(t)===1?{className:"FeatureLayer"}:{className:"GroupLayer"}}async function O(e,a){await e.load();const r=e.typeKeywords?.map(o=>o.toLowerCase())??[];if(r.includes("elevation 3d layer"))return{className:"ElevationLayer"};if(r.includes("tiled imagery"))return{className:"ImageryTileLayer"};const t=await a.fetchItemData(e),c=t?.layerType;if(c==="ArcGISTiledImageServiceLayer")return{className:"ImageryTileLayer"};if(c==="ArcGISImageServiceLayer")return{className:"ImageryLayer"};const n=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)}),s=n.cacheType?.toLowerCase(),l=n.capabilities?.toLowerCase().includes("tilesonly"),i=n.tileInfo?.format?.toLowerCase()??"",u=s==null&&["jpg","jpeg","png","png8","png24","png32","mixed"].includes(i);return s==="map"||u||l?{className:"ImageryTileLayer"}:{className:"ImageryLayer"}}function J(){return{className:"StreamLayer"}}async function k(e,a){return typeof await w(e,a)=="object"?{className:"VideoLayer"}:{className:"GroupLayer"}}function x(){return{className:"VectorTileLayer"}}function U(){return{className:"GeoJSONLayer"}}function q(){return{className:"IntegratedMesh3DTilesLayer"}}function A(){return{className:"UnsupportedLayer"}}function R(){return{className:"CSVLayer"}}function B(){return{className:"KMLLayer"}}function E(){return{className:"KnowledgeGraphLayer"}}function H(){return{className:"WCSLayer"}}function z(){return{className:"WFSLayer"}}function Q(){return{className:"WMSLayer"}}function X(){return{className:"WMTSLayer"}}function Y(){return{className:"StreamLayer"}}function Z(){return{className:"GroupLayer"}}function _(){return{className:"MediaLayer"}}async function ee(e,a){const{tileInfo:r}=await a.fetchServiceMetadata(e.url,{customParameters:await a.fetchCustomParameters(e)});return r}async function w(e,a,r){const{url:t,type:c}=e,n=c==="Feature Service";if(!t)return{};if(/\/\d+$/.test(t)){if(n){const i=await a.fetchServiceMetadata(t,{customParameters:await a.fetchCustomParameters(e,u=>p(u)?.customParameters)});return L(e,v()),{id:i.id,className:I(i.type),sourceJSON:i}}return{}}if(c==="Video Service")return!(((await a.fetchServiceMetadata(t)).layers?.length??0)>1)&&{};await e.load();let s=await a.fetchItemData(e);if(n){const{data:i,preferredHost:u}=await M(s,t,a);L(e,u);const o=f(i);if(typeof o=="object"){const S=T(i,o.id);o.className=C(S?.layerType)}return o}if(c==="Scene Service"&&(s=await G(e,s,a)),d(s)>0)return f(s);const l=await a.fetchServiceMetadata(t);return r&&(l.tables=await r()),f(l)}function f(e){return d(e)===1&&{id:p(e)?.id}}export{ue as fromItem,$ as selectLayerClassPath};
