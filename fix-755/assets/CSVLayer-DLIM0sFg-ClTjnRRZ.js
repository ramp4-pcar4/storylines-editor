import{v as i,S as r,n as d,w as v,dM as w,cY as S,al as O,bv as F,o as b,an as q,ar as I,t as N,M as _,h as m}from"./main-CVqSukrg.js";import J from"./FeatureLayer-D09djTpa-DJwo9QX1.js";import{x}from"./workers-CeRXsnNJ-BWt83nO3.js";import{c as C}from"./FeatureSet-BVGGhhH9-BdcrL4Ge.js";import{$ as j}from"./clientSideDefaults-BoAP7ZAL-UtB3Q7T9.js";import{R as l}from"./Query-n1aoaaFC-CjzNvggd.js";import"./MultiOriginJSONSupport-BqiFJbbt-CtDVEERt.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./FeatureLayerBase-B8QtBTYG-mgJJUE4s.js";import"./Field-BIQ-quF4-CROwSESQ.js";import"./fieldType-PhcL4ff8-CY5EmZUa.js";import"./HeightModelInfo-C4voFc4k-BzOWfWJT.js";import"./OperationalLayer-CbXUnTH0-CoYsPFpH.js";import"./ElevationInfo-DE5to86a-CMOglIe4.js";import"./lengthUtils-C61nRlXw-D7uvZtMu.js";import"./TimeExtent-Cf2Pienb-RKrdxh5h.js";import"./timeZoneUtils-d5p0Jda1-B5VYEish.js";import"./labelingInfo-DuLk-IW_-kYcbLblP.js";import"./asyncUtils-BPUlNCrX-tRl6XJzv.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./SimpleRenderer-C1YRhRzu-CFs9bY7h.js";import"./commonProperties-CJLeiNuA-CvRjaUYa.js";import"./colorRamps-trM-CPFS-BSiZbh0y.js";import"./ColorStop-CL7v3R-A-D8sKP5ZN.js";import"./visualVariableUtils-BTS148WR-BwREzSbM.js";import"./UniqueValueRenderer-CLXHFtg9-DTaC0ZAz.js";import"./diffUtils-BxG8DCnW-IsOmOs5g.js";import"./RendererLegendOptions-Bil_IDab-CvnZ0zml.js";import"./styleUtils-DBPDLVBX-BS52An2S.js";import"./RelationshipQuery-CaEbQySU-DyoPECYp.js";import"./NormalizationBinParametersMixin-70JA0FRq-DTdKcGqG.js";import"./labelUtils-Oapo6DRu-CZfyHkc3.js";import"./LayerFloorInfo-CkeH-P4_-CTVq3X7D.js";import"./Relationship-B6fQjk3--BHsAm5y7.js";import"./serviceCapabilitiesUtils-BerH-9mt-CZlEEQ-H.js";import"./infoFor3D-BeWnZejW-DJyBSoCy.js";import"./portalItemUtils-BfWDJg-S-C23iZulx.js";import"./projectionUtils-B-CplN3q-gTXLUpmY.js";import"./Layer-DvVVmz9x-CXpEYeeP.js";import"./editsZScale-BWHgeDdL-CE9-1lBn.js";import"./queryZScale-CwrUzBjP-Dg1TuZHl.js";import"./APIKeyMixin-BNzYY3QS-BdPlOlez.js";import"./ArcGISService-B6M5rzsr-Bg_Q_GRh.js";import"./BlendLayer-DjW_5k0v-D3VJi_KI.js";import"./jsonUtils-BwLwuQj7-xtpyWvjJ.js";import"./parser-CWccHtwJ-Bpp5K1Fc.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-DZPdKZWO.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./CustomParametersMixin-CSMgHDaw-Cgrf6-Pb.js";import"./DisplayFilteredLayer-DTxK0R7U-nG5_nJ_x.js";import"./scaleUtils-Br-smv3A-DUAahfOg.js";import"./displayFilterUtils-DvWUbJDp-Bl1wJwwb.js";import"./EditBusLayer-CAIKbP5V-Du98fw99.js";import"./FeatureEffectLayer-BVJTjFhg-Bx0Lc5iQ.js";import"./FeatureEffect-D3G_gJ5F-CkJ9Gy0d.js";import"./FeatureFilter-DXpQKGs4-CpI8KFQT.js";import"./FeatureReductionLayer-vR-evpIv-CZIplrkP.js";import"./FeatureReductionSelection-DzXAxMK9-C3_hqdFF.js";import"./jsonUtils-CzRaZnmS-Blm7rOXZ.js";import"./typeUtils-CB2EGBWO-DdB8hYTh.js";import"./ClassBreaksRenderer-Bq2XGpfI-CMTIdKPE.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./DictionaryScriptEvaluator-DW5hOK9A-ChKYvlUx.js";import"./Version-CnwD6MZa-QYwYdljK.js";import"./FieldsIndex-Bt0Y8aWr-D48-Yfso.js";import"./UnknownTimeZone-DxjyzFvs-DQDPzpwx.js";import"./ArcadeExpression-XjY3x7KV-BB8QcnxX.js";import"./TimeOnly-CGkId3bj-BsrIV69W.js";import"./enum-g1DWyQyu-_vTNUSIK.js";import"./utils-BfXZnjCE-D564ekcJ.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./heatmapUtils-DRTN9U3a-k5AP-fWz.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./OrderedLayer-BD-wnvgD-B-oehpli.js";import"./OrderByInfo-SNGyPlhJ-2_enq1Yy.js";import"./PortalLayer-B34ZUA2x-CSLmqVUl.js";import"./PortalItem-BP-IQXnZ-Of4tQHUm.js";import"./RefreshableLayer-Qpvyi8qY-CCbl9fVw.js";import"./ScaleRangeLayer-x42fwED3-DL1-xtbR.js";import"./TemporalLayer-lQRje9wB-Div3MKSz.js";import"./TimeInfo-COHxjenm-CAZkuaVt.js";import"./TrackableLayer-D0OccxDX-CHdP1iHf.js";import"./FeatureTemplate-CW5LOQ_p-D9gszrDU.js";import"./FeatureType-DdIqcZ2U-dW_JGW6R.js";import"./fieldProperties-Cgp0UdcB-CfeQJsnd.js";import"./TitleCreator-DZ9r9lVc-Dy_Uyp4i.js";import"./versionUtils-BwTR8Ufq-CXt8Oo77.js";import"./styleUtils-BnJpZ0Gl-BDFsAYBw.js";import"./popupUtils-B99PyAFi-dNFJXAGl.js";import"./interfaces-Cwm0pihk-Ptzy6gTd.js";import"./Queue-DV3gpSdl-DkaK380U.js";import"./intl-BAA1onnp-BALkOO9I.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";let n=class extends O{constructor(t){super(t),this.type="csv",this.refresh=F(async e=>{await this.load();const{extent:s,timeExtent:a}=await this._connection.invoke("refresh",e);return s&&(this.sourceJSON.extent=s),a&&(this.sourceJSON.timeInfo.timeExtent=[a.start,a.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const s=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return C.fromJSON(s)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const s=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:s.count,extent:b.fromJSON(s.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async queryAttributeBins(t,e={}){return await this.load(),this._connection.invoke("queryAttributeBins",t?t.toJSON():null,e)}async _startWorker(t){this._connection=await x("CSVSourceWorker",{strategy:q("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:s,fields:a,latitudeField:c,longitudeField:h,spatialReference:y,timeInfo:f}=this.loadOptions,p=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:a?.map(g=>g.toJSON()),latitudeField:c,longitudeField:h,spatialReference:y?.toJSON(),timeInfo:f?.toJSON()}},{signal:t});this.locationInfo=p.locationInfo,this.sourceJSON=p.layerDefinition,this.delimiter=p.delimiter}};i([r()],n.prototype,"type",void 0),i([r()],n.prototype,"loadOptions",void 0),i([r()],n.prototype,"customParameters",void 0),i([r()],n.prototype,"locationInfo",void 0),i([r()],n.prototype,"sourceJSON",void 0),i([r()],n.prototype,"delimiter",void 0),n=i([d("esri.layers.graphics.sources.CSVSource")],n);function u(t,e){throw new m(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let o=class extends J{constructor(...t){super(...t),this.geometryType="point",this.capabilities=j(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=I.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(N).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!e.layerDefinition?.drawingInfo?.labelingInfo}set url(t){if(!t)return void this._set("url",t);const e=_(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new n({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(s=>{if(s?.features)for(const a of s.features)a.layer=a.sourceLayer=this;return s})}async queryObjectIds(t,e){return await this.load(),this.source.queryObjectIds(l.from(t)||this.createQuery())}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new m("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return u(this,"csv-layer:save")}async saveAs(t,e){return u(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],o.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],o.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),i([v("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],o.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],o.prototype,"operationalLayerType",void 0),i([r()],o.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],o.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:n,readOnly:!0})],o.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],o.prototype,"type",void 0),i([r({json:{read:w,write:{isRequired:!0,ignoreOrigin:!0,writer:S}}})],o.prototype,"url",null),o=i([d("esri.layers.CSVLayer")],o);const Fe=o;export{Fe as default};
