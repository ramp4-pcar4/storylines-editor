import{m as i}from"./utils-BO8hgPs3-B93N9jv9.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-oiNC8GM5.js";import a from"./TopFeaturesQuery-BmMRhRdq-CrBTkIYH.js";import"./main-BwrA98zM.js";import"./normalizeUtils-u00NGW3M-DihROgJ8.js";import"./normalizeUtilsCommon-ClagynAA-C6e-nxGB.js";import"./utils-DpLVEUvg-_OMf49aP.js";import"./query-COAsogFA-BJJvbMbB.js";import"./pbfQueryUtils-aBcHX3TJ-ChlVMJEr.js";import"./pbf-hoLeQyp2-Crx5T42m.js";import"./memoryEstimations-DeWfxwaV-CXRMQIi5.js";import"./OptimizedGeometry-pzfNw1AT-u8izTill.js";import"./OptimizedFeature-mIz_HhJg-BNs0KtVS.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-CoyaeH-r.js";import"./projectionUtils-B-CplN3q-DxIO03Jo.js";import"./TimeExtent-Cf2Pienb-CwVjhCH7.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
