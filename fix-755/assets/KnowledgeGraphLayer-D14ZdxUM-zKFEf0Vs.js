import{a0 as y,a1 as T,ag as D,t as _,h as p,bB as l,bM as S,a6 as m,D as c,bk as L,bA as v,dN as M,cJ as A,v as r,S as n,w as k,F as N,n as E,bL as I}from"./main-BwrA98zM.js";import{T as u,$ as g,j as C,I as G,E as R}from"./KnowledgeGraphSublayer-BpP550Rh-C33Qy9-t.js";import{w as x}from"./MultiOriginJSONSupport-BqiFJbbt-DhX40EnI.js";import{r as O}from"./uuid-Dj9mdEVg-BaKSCiyT.js";import{e as F}from"./Layer-DvVVmz9x-SxsuM8AS.js";import{a as K}from"./ArcGISService-B6M5rzsr-CSFom1fX.js";import{u as U}from"./BlendLayer-DjW_5k0v-BGgBD2VW.js";import{i as $}from"./CustomParametersMixin-CSMgHDaw-DlToSxA2.js";import{u as j,i as P}from"./OperationalLayer-CbXUnTH0-oAQjR1UK.js";import{x as z}from"./PortalLayer-B34ZUA2x-CeWvh70o.js";import{T as H}from"./RefreshableLayer-Qpvyi8qY-BP2mpzk6.js";import{S as Y}from"./ScaleRangeLayer-x42fwED3-j9XWTMoE.js";import{u as B}from"./knowledgeGraphService-bSKUKu5m-BItRA_lf.js";import"./OptimizedGeometry-pzfNw1AT-u8izTill.js";import"./memoryEstimations-DeWfxwaV-CXRMQIi5.js";import"./projectionUtils-B-CplN3q-DxIO03Jo.js";import"./constants-5AlnYBiV-SxxbBSOD.js";import"./featureConversionUtils-Bjjlcfdo-eSkJjzzV.js";import"./OptimizedFeature-mIz_HhJg-BNs0KtVS.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./GraphicsLayer-BiEC2-gS-CZpeSxuq.js";import"./GraphicsCollection-uWAVmks7-Bl0VRym2.js";import"./ElevationInfo-DE5to86a-BP3iYVui.js";import"./lengthUtils-C61nRlXw-Dob_XEh_.js";import"./TimeExtent-Cf2Pienb-CwVjhCH7.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-Dz3pr5Nc.js";import"./parser-CWccHtwJ-B0j4YZRx.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-CjSS9WE9.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Relationship-CQMFhJpR-Q-EUrEaQ.js";import"./Query-n1aoaaFC-CxDHBCLC.js";import"./Field-BIQ-quF4-2jecDKOo.js";import"./fieldType-PhcL4ff8-DkDi8HIE.js";import"./workers-CeRXsnNJ-BANymjkY.js";import"./Queue-DV3gpSdl-CbVdS62U.js";import"./intl-BAA1onnp-D3jP1AIh.js";import"./FeatureStore-DfjNNhD_-Bp-x8VtP.js";import"./BoundsStore-DffHzOYo-D_7sUIaZ.js";import"./PooledRBush-DfSXIoUa-naUFAGkQ.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./timeSupport-C2LrHIeW-B1J-xs_o.js";import"./queryUtils-DZy8hWx3-Dq-FEmD6.js";import"./normalizeUtils-u00NGW3M-DihROgJ8.js";import"./normalizeUtilsCommon-ClagynAA-C6e-nxGB.js";import"./utils-BO8hgPs3-B93N9jv9.js";import"./utils-DpLVEUvg-_OMf49aP.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./optimizedFeatureQueryEngineAdapter-LiTJLGWN-BFkUb54l.js";import"./QueryEngine-B7NH52mH-DXuiPenh.js";import"./WhereClauseCache-CixYkZwn-Bc4FwgYP.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./WhereClause-D4rZJkVN-BWV1W7O7.js";import"./TimeOnly-CGkId3bj-CXDpuv-B.js";import"./enum-g1DWyQyu-asy3nBqN.js";import"./UnknownTimeZone-DxjyzFvs-DQwi0Zdp.js";import"./QueryEngineCapabilities-CFs6iCek-Cjdn3gaY.js";import"./quantizationUtils-D907S7Bm-CQDXbVdj.js";import"./utils-s7ypkCzr-OAbFGfsk.js";import"./heatmapUtils-DRTN9U3a-93ckBW9U.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./utils-CdIngiRE-BDpgQSrB.js";import"./timeZoneUtils-d5p0Jda1-C-RhmemF.js";import"./utils-CKRJGBD_-CLqclYYe.js";import"./ClassBreaksDefinition-BZ4FJdWb-CP0zDNQ1.js";import"./SnappingCandidate-DIiHATRz-CuetCfU1.js";import"./FixedIntervalBinParameters-CsFyInBi-C4IVvhrv.js";import"./NormalizationBinParametersMixin-70JA0FRq-C3rPN60D.js";import"./FieldsIndex-Bt0Y8aWr-DuXO9pex.js";import"./Scheduler-BV4C4cVP-DWRbN6yI.js";import"./debugFlags-8tOwPnHK-CgOlZyIE.js";import"./clientSideDefaults-BoAP7ZAL-0ARi_izs.js";import"./fieldProperties-Cgp0UdcB-i7nfkfzq.js";import"./labelingInfo-DuLk-IW_-CbmWjuCI.js";import"./asyncUtils-BPUlNCrX-D9-2F_OI.js";import"./SimpleRenderer-C1YRhRzu-ql20fODg.js";import"./commonProperties-CJLeiNuA-B7gcOW0k.js";import"./colorRamps-trM-CPFS-C6eI-xyy.js";import"./ColorStop-CL7v3R-A-BOr-ujFM.js";import"./visualVariableUtils-BTS148WR-Ccl5my0y.js";import"./UniqueValueRenderer-CLXHFtg9-w5cuBULK.js";import"./diffUtils-BxG8DCnW-DPd0tD6Z.js";import"./RendererLegendOptions-Bil_IDab-CQA1E0Im.js";import"./styleUtils-DBPDLVBX-DZFRyEvV.js";import"./RelationshipQuery-CaEbQySU-MXc73Lal.js";import"./labelUtils-Oapo6DRu-DpDzXb5s.js";import"./DisplayFilteredLayer-DTxK0R7U-DPChiSHI.js";import"./scaleUtils-Br-smv3A-DAk47sdW.js";import"./displayFilterUtils-DvWUbJDp-mr5fU1hD.js";import"./FeatureEffectLayer-BVJTjFhg-Czzjm42l.js";import"./FeatureEffect-D3G_gJ5F-DAiWFGE6.js";import"./FeatureFilter-DXpQKGs4-BkwO1nPY.js";import"./FeatureReductionLayer-vR-evpIv-DALdj8hO.js";import"./FeatureReductionSelection-DzXAxMK9-BFbZTr5g.js";import"./jsonUtils-CzRaZnmS-D68N97Pc.js";import"./typeUtils-CB2EGBWO-Cf_IAQP5.js";import"./ClassBreaksRenderer-Bq2XGpfI-DVokfwVP.js";import"./DictionaryScriptEvaluator-DW5hOK9A-D1qOE7Fi.js";import"./Version-CnwD6MZa-CKHDqXFg.js";import"./ArcadeExpression-XjY3x7KV-CVqZSKTG.js";import"./utils-BfXZnjCE-C0n5baVn.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./OrderedLayer-BD-wnvgD-BfKScjio.js";import"./OrderByInfo-SNGyPlhJ-HHLK-Cb2.js";import"./TemporalLayer-lQRje9wB-RbGEVW_Y.js";import"./TimeInfo-COHxjenm-BX5cDR8B.js";import"./FeatureSet-BVGGhhH9-CTo6M60T.js";import"./popupUtils-B99PyAFi-9XiMGmPu.js";import"./utils-Cb2uXNfG-BWObhpcN.js";import"./cimSymbolUtils-DCedSSCN-D_BxXcsb.js";import"./PortalItem-BP-IQXnZ-BXo4YLPg.js";import"./portalItemUtils-BfWDJg-S-DXX-bUon.js";import"./networkEnums-DHCOt6o_-sTDTFgtK.js";import"./GPMessage-KKjIcGuy-qr3iPYmS.js";let o=class extends U(Y(H(K(j(z(x($(F)))))))){constructor(e){super(e),this._graphTypeLookup=new Map,this._namedTypesModified=!1,this.dataManager=null,this.definitionSetMap=null,this.knowledgeGraph=null,this.layers=new(y.ofType(u)),this.memberEntityTypes=null,this.memberRelationshipTypes=null,this.operationalLayerType="KnowledgeGraphLayer",this.sublayerIdsCache=new Map,this.tables=new(y.ofType(u)),this.type="knowledge-graph",this.url=null,this.addHandles(T(()=>this.layers.concat(this.tables),(i,t)=>this._handleSublayersChange(i,t),D))}load(e){return this.addResolvingPromise(this._doLoad(e)),Promise.resolve(this)}async _doLoad(e){try{await this.loadFromPortal({supportedTypes:["Knowledge Graph Layer"]},e)}catch(i){_(i)}await this._fetchMetadata(),await this._initializeLayerProperties(),this.loadLayerAssumingLocalCache(),this._layersLoadedFromAuthoritativeItem()||await g(this)}async _fetchMetadata(){if(!this.url)throw new p("knowledge-graph:missing-url","KnowledgeGraphLayer must be created with a url");const e=await B(this.url);this.knowledgeGraph=e,this._forEachGraphType(i=>{i.name&&this._graphTypeLookup.set(i.name,i)})}async _initializeLayerProperties(){this.originIdOf("inclusionModeDefinition")===l.USER?this._validateInclusionModeDefinition():await this._initializeInclusionModeDefinition(),this._setMemberTypes(),this.dataManager=new C({knowledgeGraph:this.knowledgeGraph,inclusionModeDefinition:this.inclusionModeDefinition})}async _initializeInclusionModeDefinition(){const e=this.definitionSetMap?await G(this.definitionSetMap,!0):{generateAllSublayers:!0,namedTypeDefinitions:new Map};[...this.layers.toArray(),...this.tables.toArray()].forEach(i=>{const t=this._graphTypeLookup.get(i.graphTypeName);t&&!e.namedTypeDefinitions.has(t.name)&&e.namedTypeDefinitions.set(t.name,{useAllData:!0})}),this.setAtOrigin("inclusionModeDefinition",e,S(this.originIdOf("definitionSetMap")))}_validateInclusionModeDefinition(){const{inclusionModeDefinition:e}=this;if(!e)return;const{namedTypeDefinitions:i}=e;if(i?.size>0)i.forEach((t,a)=>{const s=this._graphTypeLookup.get(a);if(!s)return m.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't in the data model and will be removed`),void i.delete(a);s.type!=="relationship"&&s.type!=="entity"&&(m.getLogger(this).warn(`A named type, ${a}, was in the inclusion list that wasn't properly modeled and will be removed`),i.delete(a))});else if(!e.generateAllSublayers)throw new p("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined")}_setMemberTypes(){let e=[],i=[];const{inclusionModeDefinition:t}=this,a=t?.namedTypeDefinitions;!t||t.generateAllSublayers?(e=this.knowledgeGraph.dataModel?.entityTypes??[],i=this.knowledgeGraph.dataModel?.relationshipTypes??[]):a&&a.size>0&&a.forEach((s,d)=>{const h=this._graphTypeLookup.get(d);switch(h?.type){case"relationship":i.push(h);break;case"entity":e.push(h)}}),this.memberEntityTypes=e,this.memberRelationshipTypes=i}_forEachGraphType(e){[...this.knowledgeGraph.dataModel?.entityTypes??[],...this.knowledgeGraph.dataModel?.relationshipTypes??[]].forEach(i=>{e(i)})}_refreshNamedTypes(){this._namedTypesModified=!0;for(const e of this.layers)e.emit("refresh",{dataChanged:!0});for(const e of this.tables)e.emit("refresh",{dataChanged:!0})}async _handleNewRecords(e){const i=new Set,t=[];for(const a of e)this._graphTypeLookup.has(a.typeName)&&(this.layers.concat(this.tables).some(s=>s.objectType.name===a.typeName)===!1&&(this.dataManager.sublayerCaches.set(a.typeName,new Map),i.add(a.typeName)),c(this.sublayerIdsCache,a.typeName,()=>new Set).add(a.id),t.push(a));this.dataManager.addToLayer(t);for(const a of i){const s=this._graphTypeLookup.get(a);s&&(this._addSublayer(s),s.type==="entity"?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a))}await g(this,Array.from(i)),this._refreshNamedTypes()}_createSublayers(e,i,t){e.forEach(a=>{const s=this._createSublayer(a);t(s)&&i.push(s),this._updateSublayerCaches(a)})}_addSublayer(e){const i=this._createSublayer(e);return i.geometryType?this.layers.push(i):this.tables.push(i),i}_createSublayer(e){return new u({objectType:e,parentCompositeLayer:this,graphType:e.type})}_updateSublayers(e,i){i.forEach(t=>{t.parentCompositeLayer=this;const a=e.find(s=>s.type===t.graphType&&s.name===t.graphTypeName);a&&(t.objectType=a,this._updateSublayerCaches(a))})}_updateSublayerCaches({name:e}){if(!e)return;const i=this.dataManager.sublayerCaches;i.has(e)||i.set(e,new Map)}_saveUrlAsNewResource(e,i,t,a){e[i]="<pending>",t.pendingOperations.push(Z(this.inclusionModeDefinition).then(s=>{const d=J(a);e[i]=d.itemRelativeUrl,t.toAdd.push({resource:d,content:{type:"blob",blob:s},compress:!1,finish:h=>{this.definitionSetMap=h.url}})}))}_displaysAllRecords(e){for(const[,{useAllData:i}]of e.namedTypeDefinitions)if(!i)return!1;return!0}_handleSublayersChange(e,i){i&&(i.forEach(t=>{t.parent=null}),this.removeHandles("sublayers-owner")),e&&(e.forEach(t=>{t.parent=this}),this.addHandles([e.on("after-add",({item:t})=>{t.parent=this}),e.on("after-remove",({item:t})=>{t.parent=null})],"sublayers-owner"))}_layersLoadedFromAuthoritativeItem(){const e=this.originIdOf("layers");return e>=l.PORTAL_ITEM&&e<l.USER}readDefinitionSetMap(e,i,t){return L(e,t)}writeDefinitionSetMap(e,i,t,a){const s=a?.portalItem,d=a?.resources,h=v(a?.origin);if(!s||!d||h==null)return void(e&&(i[t]=M(e,a)));const{inclusionModeDefinition:w}=this;if(!w||this._displaysAllRecords(w))return void(this.definitionSetMap=null);const f=this.originIdOf("inclusionModeDefinition");if(f===l.USER||this._namedTypesModified||h<f)this._saveUrlAsNewResource(i,t,d,s);else if(h===f&&e){const b=M(e,a);A(b)?this._saveUrlAsNewResource(i,t,d,s):i[t]=b}}set inclusionModeDefinition(e){this.loadStatus!=="loaded"&&this.loadStatus!=="failed"?this._set("inclusionModeDefinition",e):m.getLogger(this).error("#inclusionModeDefinition","inclusionModeDefinition cannot be changed after the layer is loaded.")}loadLayerAssumingLocalCache(){const e=[...this.memberEntityTypes,...this.memberRelationshipTypes];this.layers.length||this.originIdOf("tables")===l.DEFAULTS?this.originIdOf("layers")===l.DEFAULTS?this._createSublayers(e,this.layers,i=>!!i.geometryType):this._updateSublayers(e,this.layers):this.layers=new y,this.tables.length||this.originIdOf("layers")===l.DEFAULTS?this.originIdOf("tables")===l.DEFAULTS?this._createSublayers(e,this.tables,i=>!i.geometryType):this._updateSublayers(e,this.tables):this.tables=new y,this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((i,t)=>{const a=c(this.sublayerIdsCache,t,()=>new Set);i.members?.forEach(s=>{a.add(s.id)})})}async addRecords(e){await this.load(),await this._handleNewRecords(e)}async createSublayerForNamedType(e){await this.load();const i=this._graphTypeLookup.get(e);if(!i)throw new p("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");if(this.dataManager.sublayerCaches.has(e))throw new p("knowledge-graph:duplicate-type","The specified type already exists as a sublayer.");this.dataManager.sublayerCaches.set(e,new Map),c(this.sublayerIdsCache,e,()=>new Set);const t=this._addSublayer(i);return i.type==="entity"?this.dataManager.entityTypeNames.add(e):this.dataManager.relationshipTypeNames.add(e),this.dataManager.inclusionModeDefinition&&this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!0}),await g(this,[e]),this._refreshNamedTypes(),t}convertSublayerToDynamicData(e){if(!this.dataManager.inclusionModeDefinition)throw new p("knowledge-graph:fully-dynamic-membership","This Knowledge Graph Layer already uses fully dynamic membership, individual sublayers cannot be converted");if(!this._graphTypeLookup.get(e))throw new p("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");if(!this.dataManager.sublayerCaches.has(e))throw new p("knowledge-graph:duplicate-type","The specified type does not exist as a sublayer.");this.dataManager.inclusionModeDefinition.namedTypeDefinitions.get(e)?.useAllData?m.getLogger(this).warn("This Knowledge Graph Layer already uses dynamic membership for the sublayer - no conversion was made"):(this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!0}),this.sublayerIdsCache.delete(e),this._refreshNamedTypes())}convertSublayerToExplicitMembership(e){if(!this.dataManager.inclusionModeDefinition)throw new p("knowledge-graph:fully-dynamic-membership","This Knowledge Graph Layer already uses fully dynamic membership, individual sublayers cannot be converted");if(!this._graphTypeLookup.get(e))throw new p("knowledge-graph:missing-type","The specified type does not exist in the layer's graph data model.");const i=this.dataManager.inclusionModeDefinition.namedTypeDefinitions.get(e);if(!i||i.useAllData){if(!this.dataManager.sublayerCaches.has(e))throw new p("knowledge-graph:duplicate-type","The specified type does not exist as a sublayer.");this.sublayerIdsCache.set(e,new Set),this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map}),this._refreshNamedTypes()}else m.getLogger(this).warn("This Knowledge Graph Layer already uses explicit membership for the sublayer - no conversion was made")}convertToFullyDynamicData(){this.dataManager.inclusionModeDefinition||m.getLogger(this).warn("This Knowledge Graph Layer already uses fully dynamic membership - no conversion was made"),this.sublayerIdsCache.clear(),this.dataManager.inclusionModeDefinition=null,this._refreshNamedTypes()}convertToExplicitMembership(){this.dataManager.inclusionModeDefinition&&this.dataManager.inclusionModeDefinition.namedTypeDefinitions.size>0&&m.getLogger(this).warn("This Knowledge Graph Layer already uses explicit membership - no conversion was made"),this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map};for(const e of this.dataManager.sublayerCaches.keys())c(this.sublayerIdsCache,e,()=>new Set),this.dataManager.inclusionModeDefinition.namedTypeDefinitions.set(e,{useAllData:!1,members:new Map});this._refreshNamedTypes()}async removeRecords(e){await this.load();const i=[];for(const t of e)this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.useAllData===!1&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.get(t.typeName)?.members?.has(t.id)&&i.push(t);this.dataManager.removeFromLayer(i);for(const t of i)this.sublayerIdsCache.get(t.typeName)?.delete(t.id);return this._refreshNamedTypes(),i}};r([n()],o.prototype,"dataManager",void 0),r([n({json:{write:{ignoreOrigin:!0,writerEnsuresNonNull:!0}}})],o.prototype,"definitionSetMap",void 0),r([k("definitionSetMap")],o.prototype,"readDefinitionSetMap",null),r([N("definitionSetMap")],o.prototype,"writeDefinitionSetMap",null),r([n()],o.prototype,"inclusionModeDefinition",null),r([n()],o.prototype,"knowledgeGraph",void 0),r([n({type:y.ofType(u),json:{write:{ignoreOrigin:!0}}})],o.prototype,"layers",void 0),r([n()],o.prototype,"memberEntityTypes",void 0),r([n()],o.prototype,"memberRelationshipTypes",void 0),r([n({type:["KnowledgeGraphLayer"]})],o.prototype,"operationalLayerType",void 0),r([n()],o.prototype,"sublayerIdsCache",void 0),r([n({type:y.ofType(u),json:{write:{ignoreOrigin:!0}}})],o.prototype,"tables",void 0),r([n({json:{read:!1}})],o.prototype,"type",void 0),r([n(P)],o.prototype,"url",void 0),o=r([E("esri.layers.KnowledgeGraphLayer")],o);const rt=o;async function Z(e){const i=await R(e);return new Blob([i],{type:"application/x-protobuf"})}function J(e){const i=`definitionSetMap-${O()}.dat`,t=I("knowledgeGraphLayer",i);return e.resourceFromPath(t)}export{rt as default};
