import{d8 as n,cG as y}from"./main-CVqSukrg.js";function E(r){return U(r,!0)}function U(r,t){if(Array.isArray(r)){if(r.length<n)return r}else if(r.length<n)return Array.from(r);let e=!0,i=!0;return r.some((o,w)=>(e=e&&o===0,i=i&&o===w,!e&&!i)),e?g(r.length):i?h(r.length):y(r)&&r.BYTES_PER_ELEMENT===Uint16Array.BYTES_PER_ELEMENT?r:c(r,!t)}function c(r,t){for(const e of r){if(e>=65536)return y(r)?r:new Uint32Array(r);e>=256&&(t=!1)}return t?new Uint8Array(r):new Uint16Array(r)}function m(r){return r<=n?new Array(r):r<=65536?new Uint16Array(r):new Uint32Array(r)}function M(r){return r<=n?new Array(r):new Uint32Array(r)}let f=l(131072);const A=[0],u=(()=>{const r=new Uint16Array(65536);for(let t=0;t<r.length;++t)r[t]=t;return r})();function h(r){return r===1?A:r<n?Array.from(new Uint16Array(u.buffer,0,r)):r<u.length?new Uint16Array(u.buffer,0,r):(r>f.length&&(f=l(Math.max(2*f.length,r))),new Uint32Array(f.buffer,0,r))}function l(r){const t=new Uint32Array(r);for(let e=0;e<t.length;e++)t[e]=e;return t}let a=new Uint8Array(65536);function g(r){if(r===1)return A;if(r<n)return new Array(r).fill(0);if(r>a.length){const t=Math.max(2*a.length,r);a=new Uint8Array(t)}return new Uint8Array(a.buffer,0,r)}export{m as E,E as h,M as m,U as o,g as s,h as w};
