const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./screen-BDf9tJq8-BurzbPsf.js","./main-CD6yn4tp.js","./main-qdlkWMCO.css"])))=>i.map(i=>d[i]);
import{fv as p,g6 as c,_ as u,fy as m,g8 as f,hd as i,g2 as L,he as v,hf as s,hg as I,hh as g,gv as b,fz as x,fA as E,fC as S,fD as C,fE as A,fF as w,fG as y,fI as R}from"./main-CD6yn4tp.js";class $ extends L{_parseConfig(e){const l=e?.headerControls?.slice()??["wizard","layerReorder","groupToggle","visibilityToggle"];if(i(this.$vApp.$pinia).headerControls=l,!e||!e.root.children)return;i(this.$vApp.$pinia).multilineItems=e.multilineItems?.enabled??!0;const a=[1,2,3,4,5,6];!e.multilineItems?.maxLines||!a.includes(e.multilineItems?.maxLines)?i(this.$vApp.$pinia).maxLines=3:i(this.$vApp.$pinia).maxLines=e.multilineItems.maxLines,this.handlePanelWidths(["legend"]),this.handlePanelTeleports(["legend"]);const r=this.getLayerFixtureConfigs();e.root.children.forEach(t=>{t.layerLegendConfigs=r,this.addItem(t)}),this.$iApi.geo.layer.allLayers().forEach(t=>{this.updateLegend(t)})}createItem(e,l){let a;e.layerId===void 0?a=new v(this.$iApi,e,l):(e.sublayerIndex!==void 0&&(e.layerId=this.$iApi.geo.layer.sublayerId(e.layerId,e.sublayerIndex)),a=new s(this.$iApi,e,l));const r=e.children;return r&&r.forEach(t=>{e.layerLegendConfigs!==void 0&&(t.layerLegendConfigs=e.layerLegendConfigs),a.children.push(this.createItem(t,a))}),a}addItem(e,l){const a=e instanceof I?e:this.createItem(e,l);return this._insertItem(a,l),a}async addLayerItem(e,l){const a=new s(this.$iApi,{layerId:e.id,sublayerIndex:e.isSublayer?e.layerIdx:void 0,name:e.name},l);return this._insertItem(a,l),this.updateLegend(e),a}get config(){return super.config}getLegend(){return i(this.$vApp.$pinia).children||[]}getLegendConfig(){return{root:{children:this.getLegend().map(e=>e.getConfig())}}}getItem(e){const l=this.getLegend();let a;return l.some(r=>(a=this.searchTreeFirst(r,t=>t.uid===e),a!==void 0)),a}getLayerItem(e){let l,a,r;return typeof e=="string"?(a=e,l=e):(a=e.id,l=e.uid),this.getLegend().some(t=>(r=this.searchTreeFirst(t,n=>n instanceof s&&(n.layerId===a||n.uid===l)),r!==void 0)),r}getAllExpanded(e){const l=e??!0;return this.searchLegend(a=>a.children.length>0&&a.expanded===l)}getAllVisible(e){const l=e??!0;return this.searchLegend(a=>a.visibility===l)}getLayerBoundItems(e){let l="";const a=e instanceof g?e:this.$iApi.geo.layer.getLayer(e);if(a)l=a.isSublayer?a.parentLayer?.id||"":a.id;else return[];return this.searchLegend(r=>r instanceof s&&(r.layerId===l||r.parentLayerId===l))}updateLegend(e){const l=(a,r)=>{const t=this.getLayerItem(a);r?(t&&a instanceof g&&(t.layer=a),t?.error()):t?.load(a instanceof g?a:void 0)};e.loadPromise().then(()=>{let a=this.getLayerItem(e);if(e.layerType===b.MAPIMAGE){const r=t=>{if(t.isLayerRoot&&!t.isLogicalLayer)a=this.getLayerItem(e),l(e,!1),a&&!a.treeGrown&&(t.children.map(n=>this._treeWalker(e,n)).map(n=>this.addItem(n,a)),a.treeGrown=!0),t.children.forEach(n=>r(n));else if(!t.isLayerRoot&&!t.isLogicalLayer){if(a=this.getLayerItem(this.$iApi.geo.layer.sublayerId(e.id,t.layerIdx)),a){const n=a.getConfig();delete n.layerId,delete n.sublayerIndex,delete n.children,n.name||delete n.name;const o={...this._treeWalker(e,t),...n},d=this.createItem(o);this._replaceItem(a,d)}t.children.forEach(n=>r(n))}else t.isLogicalLayer&&l(this._treeWalker(e,t).layer,!1)};r(e.getLayerTree())}else l(e,!1)}).catch(()=>{l(e,!0),e.supportsSublayers&&e.config.sublayers.forEach(a=>{l(this.$iApi.geo.layer.sublayerId(e.id,a.index),!0)})})}expandItems(e,l){const a=this.getLegend(),r=l===void 0?a:l.children;l!==void 0&&this._toggleState(l,{expanded:e}),r.forEach(t=>{this._toggleState(t,{expanded:e})})}showItems(e,l){const a=this.getLegend(),r=l===void 0?a:l.children;l!==void 0&&this._toggleState(l,{visibility:e}),r.forEach(t=>{this._toggleState(t,{visibility:e})})}reloadLayerItem(e){const l=this.getLayerBoundItems(e);return l.forEach(a=>a.reload()),l.length>0}removeItem(e){const l=typeof e=="string"?this.getItem(e):e;return l!==void 0?this._deleteItem(l):!1}removeLayerItem(e){const l=this.getLayerItem(e);return l!==void 0?this._deleteItem(l):!1}searchTreeFirst(e,l){if(l(e))return e;{let a;return e.children.some(r=>(a=this.searchTreeFirst(r,l),a!==void 0)),a}}searchTreeAll(e,l){const a=[],r=[e];for(;r.length>0;){const t=r.shift();t&&l(t)&&a.push(t),t&&r.push(...t.children)}return a}searchLegend(e){return this.getLegend().map(l=>this.searchTreeAll(l,e)).flat()}_toggleState(e,l){const a=l.visibility,r=l.expanded;a!==void 0&&e.toggleVisibility(a),r!==void 0&&e.children.length>0&&e.toggleExpanded(r),e.children&&e.children.length>0&&e.children.forEach(t=>{this._toggleState(t,l)})}_insertItem(e,l){i(this.$vApp.$pinia).addItem({item:e,parent:l})}_deleteItem(e){const l=i(this.$vApp.$pinia),a=r=>{r.children.length>0&&r.children.forEach(t=>{a(t)}),r instanceof s&&r.handlers.forEach(t=>this.$iApi.event.off(t)),l.removeItem(r)};return a(e),!0}_replaceItem(e,l){i(this.$vApp.$pinia).replaceItem({oldItem:e,newItem:l})}_treeWalker(e,l,a){const r=(n=>{const o=[e];for(;o.length>0;){const d=o.shift();if(d&&d.uid===n)return d;d&&o.push(...d.sublayers)}})(l.uid),t={};return l.isLayerRoot&&!l.isLogicalLayer?(t.layer=r,t.name=r.name,t.children=l.children.map(n=>this._treeWalker(e,n,a))):!l.isLayerRoot&&!l.isLogicalLayer?(t.name=l.name,t.children=l.children.map(n=>this._treeWalker(e,n,a))):l.isLogicalLayer&&(t.layer=r,t.name=r.name,t.layerId=r.id,t.sublayerIndex=e.isSublayer?e.layerIdx:void 0),{...t,...a}}}const _=p({__name:"nav-button",setup(h){const{t:e}=x(),l=E("iApi"),a=()=>{l.panel.toggle("legend")};return(r,t)=>{const n=S("mapnav-button");return C(),A(n,{onClickFunction:a,tooltip:R(e)("legend.title")},{default:w(()=>t[0]||(t[0]=[y("svg",{class:"fill-current w-32 h-20",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},[y("path",{d:"M0 0h24v24H0z",fill:"none"}),y("path",{d:"M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27-7.38 5.74zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16z"})],-1)])),_:1},8,["tooltip"])}}}),T={en:{"legend.title":"Legend","legend.header.addlayer":"Add Layer","legend.header.reorderlayers":"Reorder Layers","legend.header.groups":"Toggle Groups","legend.header.groups.expand":"Expand All","legend.header.groups.collapse":"Collapse All","legend.header.visible":"Toggle Visibility","legend.header.visible.show":"Show All","legend.header.visible.hide":"Hide All","legend.group.expand":"Expand Group","legend.group.collapse":"Collapse Group","legend.visibility.showLayer":"Show layer","legend.visibility.hideLayer":"Hide layer","legend.visibility.showSymbol":"Show symbol","legend.visibility.hideSymbol":"Hide symbol","legend.visibility.showGroup":"Show group","legend.visibility.hideGroup":"Hide group","legend.symbology.expand":"Expand legend","legend.symbology.hide":"Hide legend","legend.symbology.loading":"Loading...","legend.layer.data":"Show more data","legend.layer.data.only":"Layer not on map","legend.layer.offscale":"Layer out of scale","legend.layer.zoomToVisible":"Zoom to visible scale","legend.layer.options":"More options","legend.layer.controls.metadata":"Metadata","legend.layer.controls.settings":"Settings","legend.layer.controls.datatable":"Datatable","legend.layer.controls.symbology":"Legend","legend.layer.controls.boundaryzoom":"Zoom to Layer Boundary","legend.layer.controls.cancel":"Cancel","legend.layer.controls.remove":"Remove","legend.layer.controls.reload":"Reload","legend.layer.controls.reloadDisabled":"Layer cannot be reloaded","legend.layer.features.count":"{count} features","legend.layer.type.ESRIFeature":"ESRI Feature Layer","legend.layer.type.ESRIMapImage":"ESRI Map Image Layer","legend.layer.type.ESRITile":"ESRI Tile Layer","legend.layer.type.ESRIImagery":"ESRI Image Service","legend.layer.type.ESRIGraphic":"ESRI Graphic Layer","legend.layer.type.wfs":"OGC WFS 3.0 Layer","legend.layer.type.wms":"OGC WMS Layer","legend.layer.type.geoJson":"GeoJSON Layer","legend.layer.type.csv":"CSV File Layer","legend.layer.type.shapefile":"Shapefile Layer","legend.layer.type.osm":"OpenStreetMap Tile Layer","legend.layer.type.datatable":"ESRI Table Layer","legend.layer.type.dataCsv":"Non-Spatial CSV File Layer","legend.layer.type.dataJson":"Compact JSON File Layer","legend.layer.type.sublayer":"Sublayer","legend.layer.type.unknown":"Unknown Layer Type","legend.alert.symbologyExpanded":"Layer legend expanded","legend.alert.symbologyCollapsed":"Layer legend collapsed","legend.alert.groupExpanded":"Legend group expanded","legend.alert.groupCollapsed":"Legend group collapsed","legend.alert.layerAdded":"{name} layer added to legend","legend.alert.layerRemoved":"{name} layer removed from legend"},fr:{"legend.title":"Légende","legend.header.addlayer":"Ajouter une couche","legend.header.reorderlayers":"Réorganiser les couches","legend.header.groups":"Basculer les Groupes","legend.header.groups.expand":"Élargir les groupes","legend.header.groups.collapse":"Réduire les groupes","legend.header.visible":"Basculer la Visibilité","legend.header.visible.show":"Montrer tout","legend.header.visible.hide":"Cacher tout","legend.group.expand":"Développer un groupe","legend.group.collapse":"Réduire un groupe","legend.visibility.showLayer":"Afficher la couche","legend.visibility.hideLayer":"Masquer la couche","legend.visibility.showSymbol":"Afficher le symbole","legend.visibility.hideSymbol":"Masquer le symbole","legend.visibility.showGroup":"Afficher le groupe","legend.visibility.hideGroup":"Masquer le groupe","legend.symbology.expand":"Développer la légende","legend.symbology.hide":"Masquer la légende","legend.symbology.loading":"Chargement en cours...","legend.layer.data":"Afficher plus de données","legend.layer.data.only":"Couche non visualisable","legend.layer.offscale":"Couche hors de portée","legend.layer.zoomToVisible":"Zoom sur l'échelle visible","legend.layer.options":"Plus d'options","legend.layer.controls.metadata":"Métadonnées","legend.layer.controls.settings":"Paramètres","legend.layer.controls.datatable":"Tableau de données","legend.layer.controls.symbology":"Légende","legend.layer.controls.boundaryzoom":"Zoomer à la limite","legend.layer.controls.cancel":"Annuler","legend.layer.controls.remove":"Retirer","legend.layer.controls.reload":"Recharger","legend.layer.controls.reloadDisabled":"Le calque ne peut pas être rechargé","legend.layer.features.count":"{count} fonctionnalités","legend.layer.type.ESRIFeature":"Couche d'entités ESRI","legend.layer.type.ESRIMapImage":"Couche d'image cartographique ESRI","legend.layer.type.ESRITile":"Couche de tuiles ESRI","legend.layer.type.ESRIImagery":"Service d'images ESRI","legend.layer.type.ESRIGraphic":"Couche graphique ESRI","legend.layer.type.wfs":"Couche OGC WFS 3.0","legend.layer.type.wms":"Couche WMS OGC","legend.layer.type.geoJson":"Couche GeoJSON","legend.layer.type.csv":"Couche de fichier CSV","legend.layer.type.shapefile":"Couche Shapefile","legend.layer.type.osm":"Couche de tuiles OpenStreetMap","legend.layer.type.datatable":"Couche de table ESRI","legend.layer.type.dataCsv":"Couche de fichier CSV non spatiale","legend.layer.type.dataJson":"Couche de fichiers JSON compacte","legend.layer.type.sublayer":"Sous-couche","legend.layer.type.unknown":"Type de couche inconnu","legend.alert.symbologyExpanded":"Légende de la couche développée","legend.alert.symbologyCollapsed":"Légende de la couche réduite","legend.alert.groupExpanded":"Groupe de légende développé","legend.alert.groupCollapsed":"Groupe de légende réduit","legend.alert.layerAdded":"{name} couche ajoutée à la légende","legend.alert.layerRemoved":"Couche {name} retiré de la légende"}};class G extends ${added(){this.$iApi.component("legend-nav-button",_),this.$iApi.panel.register({legend:{screens:{"legend-screen":()=>c(u(()=>import("./screen-BDf9tJq8-BurzbPsf.js"),__vite__mapDeps([0,1,2]),import.meta.url))},style:{width:"350px"},alertName:"legend.title",button:{tooltip:"legend.title",icon:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none" /><path d="M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27-7.38 5.74zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16z" /></svg>'}}},{i18n:{messages:T}}),this._parseConfig(this.config!==void 0?JSON.parse(JSON.stringify(this.config)):void 0);const e=this.$vApp.$watch(()=>this.config,l=>this._parseConfig(l!==void 0?JSON.parse(JSON.stringify(l)):void 0));this.removed=()=>{e(),this.$iApi.fixture.exists("appbar")&&m(this.$vApp.$pinia).removeButton("legend"),this.$iApi.fixture.exists("mapnav")&&f(this.$vApp.$pinia).removeItem("legend"),i().$reset(),this.$iApi.panel.remove("legend")}}}export{G as default};
