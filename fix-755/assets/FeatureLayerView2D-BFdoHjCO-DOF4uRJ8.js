import{v as p,S as y,n as P,w as Vt,aA as xt,s as $e,H as ge,b3 as se,h as k,dU as Et,b$ as Rt,e_ as Ot,ku as Ct,ci as kt,ba as be,a0 as Tt,a8 as qt,aD as Je,o as Mt,an as g,a1 as ve,ak as Te,a6 as R,jk as Qe,aM as He,kS as zt,bJ as A,ac as ct,ar as At,u as Se,K as Pt,q as ce,bD as we,X as dt,eW as Ge,ax as Ut,jc as pt,b9 as Nt,f8 as ie,aj as Lt,a3 as Oe,eH as We,kT as ht,kU as Ze,kV as Bt,kW as Ke,kX as Dt,kY as jt,ej as M,kZ as $t,k_ as Jt,ei as ae,eI as ft,bT as Qt,ex as Ht,J as yt,eK as mt,eu as Gt,eJ as Wt}from"./main-BwrA98zM.js";import{i as gt}from"./UpdatingHandles-Bd2FQ26N-CbV3hzQf.js";import{f as Xe}from"./EffectView-Bpu5U548-D0hDoJg_.js";import{L as Ye}from"./featureConversionUtils-Bjjlcfdo-eSkJjzzV.js";import H from"./FeatureFilter-DXpQKGs4-BkwO1nPY.js";import{H as Zt,J as Kt,a as Xt}from"./labelingInfo-DuLk-IW_-CbmWjuCI.js";import{c as Yt}from"./timeSupport-BlIpM2Fj-DNkbXRQO.js";import{c as qe}from"./FeatureSet-BVGGhhH9-CTo6M60T.js";import{s as ei}from"./AttributeBinsFeatureSet-f4NTpSO_-CSjT60xy.js";import ti from"./AttributeBinsQuery-DHrHi_6j-Bw184Fyc.js";import{R as Ie}from"./Query-n1aoaaFC-CxDHBCLC.js";import{G as ii}from"./LayerView2D-BaefGYf9-CN7m4R-q.js";import{j as ri,Z as et,G as tt}from"./TechniqueInstance-CwLUZ8IR-DwGZKu9a.js";import{j as de,J as K,Q as Ce}from"./enums-CQnCd4Rx-TUdtBpJ1.js";import{v as si,e as _e,X as F,B as j,a as Ae,$ as E,n as ai,E as Fe,h as ni,u as pe,Q as G,i as ue,Z as Pe}from"./FeatureCommandQueue-C2MKcQFq-B62AW2FO.js";import{i as Ve}from"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import{i as bt}from"./CircularArray-DaQg3PQl-BXS52LZy.js";import{s as Me}from"./TileKey-_zikB14n-_pJeI94Z.js";import{r as oi}from"./WGLContainer-qQmF3DRB--w_xcUSd.js";import{l as it,h as li}from"./MapView-DVZSZHRJ-CgcNrO5u.js";import{x as ui}from"./workers-CeRXsnNJ-BANymjkY.js";import{o as ci}from"./ReactiveMap-iPeM8evD-BxIIyeT0.js";import{c as w}from"./featureReductionUtils-CT3zJdMo-COEl9dk_.js";import{m as di}from"./lengthUtils-C61nRlXw-Dob_XEh_.js";import{i as L}from"./visualVariableUtils-BTS148WR-Ccl5my0y.js";import{e as pi}from"./OrderByInfo-SNGyPlhJ-HHLK-Cb2.js";import{A as hi}from"./heatmapUtils-DRTN9U3a-93ckBW9U.js";import{V as re,O as fi,F as yi}from"./CIMSymbolHelper-34UsTwam-B11oCyVd.js";import{o as ee,r as he}from"./enums-a_LDTPYU-CBIcy3mM.js";import{V as mi}from"./SDFHelper-DBQuFSTG-iKHQb-kw.js";import"./Utils-Co3xiu1z-BXjSyD7P.js";import{C as fe}from"./definitions-MCCItX4r-o3EUznKY.js";import{E as vt}from"./constants-5AlnYBiV-SxxbBSOD.js";import"./Field-BIQ-quF4-2jecDKOo.js";import{e as gi}from"./bundle-CEMFEMun-CfnQz3oA.js";import{s as bi}from"./capabilities-BaKzUyhi-y5w2NMiP.js";import{x as vi}from"./displayFilterUtils-DvWUbJDp-mr5fU1hD.js";import{l as Si}from"./FeatureEffect-D3G_gJ5F-DAiWFGE6.js";import{i as rt}from"./floorFilterUtils-4r-vVdzs-C43jLoAE.js";import{i as st,I as at}from"./popupUtils-B9dNptlM-USn-CtN8.js";import{t as Ii}from"./LayerView-DdANuT-Y-Ys35lafe.js";import{o as wi}from"./RefreshableLayerView-CqFW21Do-qmMZXeXv.js";import{d as _i}from"./utils-Dd8gTonD-QkV3yg0-.js";import"./parser-CWccHtwJ-B0j4YZRx.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-CjSS9WE9.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./OptimizedFeature-mIz_HhJg-BNs0KtVS.js";import"./memoryEstimations-DeWfxwaV-CXRMQIi5.js";import"./OptimizedGeometry-pzfNw1AT-u8izTill.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./TimeExtent-Cf2Pienb-CwVjhCH7.js";import"./fieldType-PhcL4ff8-DkDi8HIE.js";import"./asyncUtils-BPUlNCrX-D9-2F_OI.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./SimpleRenderer-C1YRhRzu-ql20fODg.js";import"./commonProperties-CJLeiNuA-B7gcOW0k.js";import"./colorRamps-trM-CPFS-C6eI-xyy.js";import"./ColorStop-CL7v3R-A-BOr-ujFM.js";import"./UniqueValueRenderer-CLXHFtg9-w5cuBULK.js";import"./diffUtils-BxG8DCnW-DPd0tD6Z.js";import"./RendererLegendOptions-Bil_IDab-CQA1E0Im.js";import"./styleUtils-DBPDLVBX-DZFRyEvV.js";import"./RelationshipQuery-CaEbQySU-MXc73Lal.js";import"./NormalizationBinParametersMixin-70JA0FRq-C3rPN60D.js";import"./labelUtils-Oapo6DRu-DpDzXb5s.js";import"./queryUtils-DZy8hWx3-Dq-FEmD6.js";import"./projectionUtils-B-CplN3q-DxIO03Jo.js";import"./normalizeUtils-u00NGW3M-DihROgJ8.js";import"./normalizeUtilsCommon-ClagynAA-C6e-nxGB.js";import"./utils-BO8hgPs3-B93N9jv9.js";import"./utils-DpLVEUvg-_OMf49aP.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./FixedIntervalBinParameters-CsFyInBi-C4IVvhrv.js";import"./timeZoneUtils-d5p0Jda1-C-RhmemF.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./Container-Dr2EdOEZ-C-auDEAA.js";import"./layerViewUtils-DLIaYA64-CqaMd9sG.js";import"./UpdateTracking2D-GEad80KZ-Bk7t9ghA.js";import"./enums-wEDHPbCF-Cf76M5_x.js";import"./FramebufferObject-D3QloItC-Bsy8nQaq.js";import"./VertexArrayObject-CieliEx4-De0kP_0q.js";import"./Texture-D5XWO2GQ-DCbjvR6W.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./TileContainer-CAC1uSjc-nQDcJCup.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./Queue-DV3gpSdl-CbVdS62U.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./GraphShaderModule-Baq-N_YO-DIK_btx7.js";import"./ProgramTemplate-C4wmhGXE-vWnX36J_.js";import"./ShaderBuilder-CU5v4tk1-CxGg53H1.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./utils-OrDMNKn4-D3jMaqPb.js";import"./constants-oLcGh8d3-CJuD0gcX.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./rasterizingUtils-1wASRzSP-UfWdXS99.js";import"./floatRGBA-DRFmbkvz-D7QpkArO.js";import"./streamLayerUtils-Dae818Yl-CG3QJc_N.js";import"./QueueProcessor-BSpvDXZs-BuuKQ_Ar.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./vec32-Cj8pVsU0-B1j-O7Zo.js";import"./vec3f32-GX_cKsFD-UJPpzdNc.js";import"./StyleDefinition-BOKVAZI1-BlGlrLNa.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./config-CmYJx2vm-DFBdNYhW.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./Cyclical-DgD7_U1C-CUQYX7EX.js";import"./CollectionFlattener-DyEG1Q6J-C-WJDxV0.js";import"./TileInfo-U28GysF5-BNxCIUZP.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-BDFn0EFT.js";import"./intl-BAA1onnp-D3jP1AIh.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./Map-7V1pm_Jo-CI3qMBRs.js";import"./Basemap-C_NhFN5u-Cylu3xLg.js";import"./loadAll-DQWsVoX1-COD2KZRD.js";import"./PortalItem-BP-IQXnZ-BXo4YLPg.js";import"./writeUtils-DAOvycBP-DblFrbij.js";import"./persistable-DgPk2hdg-C0xzNZVB.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-CsXwsa2N.js";import"./PolygonCollection-Btw6sA7T-DqOrjBqA.js";import"./editableLayers-DFUBlMJy-Ch1GV9oQ.js";import"./TablesMixin-BORwbVPt-DQnp3mA7.js";import"./Layer-DvVVmz9x-SxsuM8AS.js";import"./GraphicsCollection-uWAVmks7-Bl0VRym2.js";import"./HeightModelInfo-C4voFc4k-CfyynqRj.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-JbzKdQYJ.js";import"./projectionUtils-Dt6hj1Xh-HdHGqYS4.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./Scheduler-BV4C4cVP-DWRbN6yI.js";import"./debugFlags-8tOwPnHK-CgOlZyIE.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./imageUtils-D3tfFRL_-0-k7BJKi.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-CDKN4cKz.js";import"./Version-CnwD6MZa-CKHDqXFg.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./BidiEngine-DusKzrO8-BlAgW8mu.js";import"./fontUtils-C37p4Hgq-8F5ZCwMp.js";import"./GeometryUtils-B8e3Iwyx-PNuvsIfE.js";import"./utils-BfXZnjCE-C0n5baVn.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./BoundingBox-DlCd_wcU-DBB4UfPl.js";import"./jsonUtils-BwLwuQj7-Dz3pr5Nc.js";async function Fi(e,t,i,r){const s=new Array(t.length),a=new Map,n=new Map,l=ht(e.fieldsIndex,i.outFields),o=r?.hasRequiredFields??ft;for(let f=0;f<t.length;f++){const m=t[f];if(m.isAggregate){s[f]=m;continue}let v=!1;if(r?.getPopupTemplate){const S=m.origin?.layer??m.sourceLayer??m.layer,b=r.getPopupTemplate(S);if(b==null)continue;const x=await St(b);Se(r),v=x&&x.arcadeUtils.hasGeometryOperations(b)}if(v||!o(m,l)){const S=m.getObjectId();if(S!=null){a.set(S,{graphic:m,index:f});continue}const b=m.getGlobalId();if(b!=null){n.set(b,{graphic:m,index:f});continue}}s[f]=m}if(!e.queryFeatures||a.size===0&&n.size===0)return s.filter(Boolean);const u=[],c=(f,m)=>{m&&(f.outFields??=[],f.outFields.includes(m)||f.outFields.push(m))};if(a.size>0){const f=i.clone();c(f,e.objectIdField),"uniqueIdFields"in e&&e.uniqueIdFields?.length&&(f.outFields??=[],f.outFields.push(...e.uniqueIdFields)),f.objectIds=Array.from(a.keys()),u.push({type:"object-id",query:f,map:a})}const d="globalIdField"in e?e.globalIdField:null;if(d!=null&&n.size>0){const f=i.clone();c(f,d);const m=Array.from(n.keys());f.where=A(i.where,`${d} IN (${m.map(v=>`'${v}'`).join(",")})`),u.push({type:"global-id",query:f,map:n})}const h=r?.updateSourceAttributes??!1;for(const{type:f,query:m,map:v}of u)try{const S=await e.queryFeatures(m,r);for(const b of S.features){const x=f==="object-id"?b.getObjectId():b.getGlobalId();if(x==null)continue;const Q=v.get(x);if(!Q)continue;const{graphic:N,index:C}=Q;if(h&&b.attributes){N.attributes??={};for(const Re of l)Re in b.attributes&&(N.attributes[Re]=b.attributes[Re])}const{geometry:_t,origin:Ft}=N;b.geometry||=_t,b.origin=Ft,s[C]=b}}catch{}return s.filter(Boolean)}async function St(e){if(e.expressionInfos?.length||Array.isArray(e.content)&&e.content.some(t=>t.type==="expression"))return Qt()}let ye=class extends be{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer?.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.attributes.aggregateId}};p([y({type:Boolean})],ye.prototype,"isAggregate",void 0),ye=p([P("esri.AggregateGraphic")],ye);const Ue=ye;let me=class extends be{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer?.trackInfo;return t?.enabled&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.attributes.aggregateId}};p([y({type:Boolean})],me.prototype,"isAggregate",void 0),me=p([P("esri.TrackGraphic")],me);const Vi=me;let V=class extends ct{constructor(e){super(e),this._filter=null,this.duration=g("mapview-transitions-duration"),this._excludedEffectView=new Xe(e),this._includedEffectView=new Xe(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){return this._filter||this.featureEffect?.filter||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}get transitioningToEmpty(){return!this._excludedEffectView.final&&!this._includedEffectView.final}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}endTransition(){this._includedEffectView.endTransition(),this._excludedEffectView.endTransition(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),i=e,r=i?.includedEffect,s=i?.excludedEffect,a=this._includedEffectView.canTransitionTo(r)&&this._excludedEffectView.canTransitionTo(s);this._includedEffectView.effect=r,this._excludedEffectView.effect=s,this._set("featureEffect",i),this._filter=i?.filter||t?.filter||null,a||this.endTransition()}};p([y()],V.prototype,"_filter",void 0),p([y()],V.prototype,"_excludedEffectView",void 0),p([y()],V.prototype,"_includedEffectView",void 0),p([y()],V.prototype,"duration",void 0),p([y()],V.prototype,"excludedEffects",null),p([y()],V.prototype,"featureEffect",null),p([y()],V.prototype,"filter",null),p([y()],V.prototype,"hasEffects",null),p([y()],V.prototype,"includedEffects",null),p([y({value:0})],V.prototype,"scale",null),p([y()],V.prototype,"transitioning",null),p([y()],V.prototype,"transitioningToEmpty",null),V=p([P("esri.layers.effects.FeatureEffectView")],V);let le=class extends qe{constructor(){super(...arguments),this.features=[]}readFeatures(e,t){const i=At.fromJSON(t.spatialReference),r=[];for(let s=0;s<e.length;s++){const a=e[s],n=Ue.fromJSON(a),l=a.geometry?.spatialReference;n.geometry==null||l||(n.geometry.spatialReference=i);const o=a.aggregateGeometries,u=n.aggregateGeometries;if(o&&u!=null)for(const c in u){const d=u[c],h=o[c],f=h?.spatialReference;d==null||f||(d.spatialReference=i)}r.push(n)}return r}};p([y({type:[Ue],json:{write:!0}})],le.prototype,"features",void 0),p([Vt("features")],le.prototype,"readFeatures",null),le=p([P("esri.rest.support.AggregateFeatureSet")],le);let xi=class{constructor(){this._instanceById=new Map}destroy(){this._instanceById.clear()}get size(){return this._instanceById.size}entries(){return this._instanceById.entries()}find(e){for(const t of this.values())if(t.techniqueRef.type===e)return t;return null}updateStart(e){e&&(this._instanceByIdNext=new Map,this._shaderCountByMesh=new Map,this._shaderIndices=new Map)}updateEnd(e){if(e){if(!this._instanceByIdNext)throw new Error("InternalError: Found updateEnd call without corresponding updateStart");for(const t of this._instanceById.keys())this._instanceByIdNext.has(t)||this._instanceById.delete(t);for(const[t,i]of this._instanceByIdNext.entries()){const r=this._instanceById.get(t);r?r.setInput(i.getInput()):this._instanceById.set(t,i)}this._instanceByIdNext=null,this._shaderCountByMesh=null,this._shaderIndices=null}}values(){return this._instanceById.values()}ensureInstance(e,t){let i;if(typeof t=="object"&&"optionalAttributes"in t&&"uniforms"in t){const s=`${e.type}.${JSON.stringify(t.optionalAttributes)}`,a=s+`.${JSON.stringify(t.uniforms)}`;let n=0;this._instanceByIdNext!=null&&(this._shaderIndices.has(a)?n=this._shaderIndices.get(a):(n=this._shaderCountByMesh.get(s)??0,this._shaderCountByMesh.set(s,n+1),this._shaderIndices.set(a,n))),i=s+`.${n}`}else i=`${e.type}.${JSON.stringify(t)}`;const r=pt(i);if(this._instanceByIdNext){const s=new et(tt(r),e,t);return this._instanceByIdNext.set(r,s),s}if(!this._instanceById.has(r)){const s=new et(tt(r),e,t);this._instanceById.set(r,s)}return this._instanceById.get(r)}getInstance(e){const t=this._instanceById.get(e);if(t==null)throw new Error(`InternalError: Unable to get instance for ${e}`);return t}};const Ei=1e3;let Ri=class{constructor(e,t,i,r,s,a){this.getStage=e,this.getSubscriptionVersion=t,this.version=i,this._fader=r,this._container=s,this._tileInfoView=a,this._pendingUpdates=new bt(Ei),this._locked=!1,this._tiles=new Map}destroy(){for(const e of this.tiles())this._fader.unregisterFeatureTile(e),e.destroy();this._pendingUpdates.clear(),this._tiles.clear(),this._container=null,this._fader=null}tiles(){return this._tiles.values()}size(){return this._tiles.size}getTile(e){return this._tiles.get(e)}setTiles(e){this._tiles.clear();for(const t of e)this._tiles.set(t.key.id,t)}lockUploads(){this._locked=!0}unlockUploads(){this._locked=!1,this.flush()}enqueueUpdate(e){this._pendingUpdates.enqueue(e)}update(e){if(!this._locked)for(;this._pendingUpdates.size;){const t=this._pendingUpdates.peek();if(t==null||t.inner.attributeEpoch>e)break;this._updateTile(t),this._pendingUpdates.dequeue()}}removeTile(e){const t=this._tiles.get(e);g("esri-2d-update-debug")&&console.debug(`Tile[${e}] RenderState.removeTile`),t&&(this._fader.unregisterFeatureTile(t),t.destroy()),this._tiles.delete(e)}isTileDone(e){const t=this._tiles.get(e.id);return!!t&&t.isReady&&t.decluttered}flush(){for(;this._pendingUpdates.size;){const e=this._pendingUpdates.dequeue();e!=null&&this._updateTile(e)}for(const e of this._tiles.values())e.upload()}_updateTile(e){const{inner:t,objectIdMap:i}=e,r=this.getSubscriptionVersion(t.id);if(r!==t.subscriptionVesrion){if(g("esri-2d-update-debug")){const l=`${t.subscriptionVesrion} != ${r}`;console.debug(`Version[${l}] Tile[${t.id}] FeatureContainer - Dropping message, outdated version]`,t)}return}if(g("esri-2d-update-debug")){const l=t.debugInfo?.chunkId??"<EnsureEnd>";console.debug(`Version[${t.version}] Tile[${t.id}] Chunk[${l}] RenderState.updateTile [${t.type}]`,t)}const s=this._ensureTile(t.id);if(t.type==="update"){const[l,...o]=t.modify;s.onMessage({type:"update",modify:l,remove:t.remove,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});for(const u of o){const c=this._tiles.get(u.tileId);c&&c.onMessage({type:"update",modify:u,remove:t.remove,end:!1,isPixelBuffer:!0,attributeEpoch:null,objectIdMap:i})}return}if(t.append==null)return void s.onMessage({type:"append",clear:t.clear,debugInfo:t.debugInfo,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});const[a,...n]=t.append;s.onMessage({type:"append",clear:t.clear,append:a,debugInfo:t.debugInfo,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});for(const l of n){const o=this._tiles.get(l.tileId);o&&o.onMessage({type:"update",modify:l,remove:[],sort:!1,end:!1,isPixelBuffer:!0,attributeEpoch:null,objectIdMap:i})}}_ensureTile(e){if(!this._tiles.has(e)){const t=this._createTile(e);this._copyPixelBufferedEntitiesInto(t),this._tiles.set(e,t)}return this._tiles.get(e)}_createTile(e){g("esri-2d-update-debug")&&console.debug(`Version[${this.version}] Tile[${e}] RenderState.createTile`);const t=new Me(e),i=this._tileInfoView.getTileBounds(Nt(),t),r=i[0],s=i[3],a=this._tileInfoView.getTileResolution(t.level),n=this._container.instanceStore.find(Ve.Label)?.instanceId,l=new oi(t,a,r,s,this._fader,n,!0);if(this._fader.registerFeatureTile(l),l.stage=this.getStage(),!l.stage){const o=new k("featurelayerview:webgl","Cannot create tile with empty stage");R.getLogger("esri.views.2d.layers.features.RenderState").error(o)}return l}_copyPixelBufferedEntitiesInto(e){let t=7;const i=this._tileInfoView.getLODInfoAt(e.key);for(let r=-1;r<=1;r++)for(let s=-1;s<=1;s++){if(r===0&&s===0)continue;const a=e.key.getNormalizedNeighbor(s,r,i).id,n=this._tiles.get(a);if(n!=null){const l=1<<t;e.copyPixelBufferedEntitesFrom(n,l,s,r)}t--}}};class Oi{constructor(t,i){this.id=t,this.version=i,this._resolver=ge(),this._done=!1}get done(){return this._done}get promise(){return this._resolver.promise}end(){this._resolver.resolve(),this._done=!0}destroy(){this._resolver.reject()}}let Ci=class extends ri{constructor(e){super(e.view.featuresTilingScheme),this.updatingHandles=new gt,this._hitTestsRequests=[],this._store=new xi,this._visibleTiles=new Set,this._subscriptions=new Map,this._updateStatisticsRequests=[],this._lockStatisticUpdates=!1,this._shouldUnlockAttributeView=!1,this._layerView=e,this.addTransitionable(this._layerView.featureEffectView)}destroy(){super.destroy(),this._renderState=Te(this._renderState),this._renderStateNext=Te(this._renderStateNext)}renderChildren(e){if(this._updateAttributeView(),this._renderState?.update(this.attributeView.currentEpoch),this._layerView.requestUpdate(),this._renderState){const i=Array.from(this._renderState.tiles()).filter(r=>r.needsUpload);i.length&&(i[Math.floor(Math.random()*i.length)].upload(),i.length>=2&&this.requestRender());for(const r of this._renderState.tiles())r.tryReady(this.attributeView.currentEpoch)&&(this._subscriptions.get(r.key.id)?.end(),this._layerView.requestUpdate(),this.hasLabels&&this._layerView.view.labelManager.requestUpdate(),this._layerView.view.labelManager.symbolFader.restartDeclutter(),this.requestRender())}const t=this._layerView.subscriptionManager.updateVisibility();this.setVisibleTiles(t);for(const i of this.children)i.setTransform(e.state);switch(super.renderChildren(e),e.drawPhase){case de.MAP:return this._renderMapPhase(e);case de.HIGHLIGHT:return this._renderHighlightPhase(e);case de.LABEL:return this._renderLabelPhase(e)}}subscriptions(){return this._subscriptions.values()}get _instanceStore(){return this._store}get instanceStore(){return this._store}get layerView(){return this._layerView}get hasLabels(){return this._layerView.labelingCollisionInfos.length>0}get hasHighlight(){return this._layerView.hasHighlight}get _layer(){return this._layerView.layer}_getHeatmapInstance(e){if(this._instanceStore==null||!(e.drawPhase&F.heatmap.drawPhase))return null;for(const t of this._instanceStore.values())if(ki(t))return t;return null}get tiles(){return this._renderState?.tiles()}get children(){return this._renderState?Array.from(this._renderState.tiles()).filter(e=>this._visibleTiles.has(e.key.id)):[]}updateAttributeView(e){this.requestRender(),this.attributeView.requestUpdate(e),this.hasLabels&&(this._layerView.view.labelManager.requestUpdate(),this._layerView.view.labelManager.symbolFader.restartDeclutter())}updateSubscriptions(e){for(const{tileId:t,version:i}of e.subscribe)if(this._subscriptions.has(t))this._subscriptions.get(t).version=i;else{const r=new Oi(t,i);this._subscriptions.set(t,r),this.updatingHandles.addPromise(r.promise)}for(const t of e.unsubscribe)this._subscriptions.get(t)?.destroy(),this._subscriptions.delete(t),this.removeTile(t)}isDone(e){return!!this._renderState&&this._renderState.isTileDone(e)}async updateRenderState(e){g("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureContainer.updateRenderState`),this._renderStateNext=new Ri(()=>this._stage,t=>this._subscriptions.get(t)?.version,e,this.layerView.view.labelManager.symbolFader,this,this.tileInfoView)}getDisplayStatistics(e,t){const i=this._statisticsByLevel.get(e);return i?i.get(t):null}updateStatistics(e,t){if(this._lockStatisticUpdates)return void this._updateStatisticsRequests.push({level:e,statistics:t});let i=this._statisticsByLevel.get(e);i||(i=new Map,this._statisticsByLevel.set(e,i));for(const r of t)i.set(r.fieldName,{minValue:r.minValue,maxValue:r.maxValue})}lockForOverrides(){this._renderState?.lockUploads(),this._lockStatisticUpdates=!0,this.attributeView.locked||(this.attributeView.lockTextureUploads(),this._shouldUnlockAttributeView=!0)}unlockForOverrides(){this._renderState?.unlockUploads(),this._shouldUnlockAttributeView&&(this.attributeView.unlockTextureUploads(),this._shouldUnlockAttributeView=!1),this._lockStatisticUpdates=!1;for(const e of this._updateStatisticsRequests)this.updateStatistics(e.level,e.statistics);this._updateStatisticsRequests=[],this._renderState?.flush(),this.requestRender()}trySwapRenderState(){if(this._renderStateNext){g("esri-2d-update-debug")&&console.debug(`Version[${this._renderStateNext.version}] FeatureContainer.update.swapRenderState`);const e=new Map;for(const t of this._renderState?.tiles()||[])e.set(t.id,t.metricsVisibility);this._renderState?.destroy(),this._renderState=this._renderStateNext,this._renderState.flush();for(const t of this._renderState.tiles())t.copyMetricsVisibility(e.get(t.id)||new Set);this._renderStateNext=null}this.requestRender()}setVisibleTiles(e){this._visibleTiles=e;for(const t of this.tiles??[])t.rendering=e.has(t.key.id)}async onMessage(e,t){Se(t);const i=e.inner;if(!this._subscriptions.has(i.id))return;const r=this._subscriptions.get(i.id);if(r.version!==i.subscriptionVesrion){if(g("esri-2d-update-debug")){const a=`${i.subscriptionVesrion} != ${r.version}`;console.debug(`Version[${a}] Tile[${i.id}] FeatureContainer - Dropping message, outdated version]`,i)}return}const s=this._renderStateNext??this._renderState;if(!s)throw new Error("InternalError: No renderState defined");s.version!==i.version&&console.error(`InternalError: Version mismatch. [renderState: ${s.version}, message: ${i.version}]`),s.enqueueUpdate(e),this.requestRender(),this._layerView.view.labelManager.requestUpdate(),this._layerView.requestUpdate()}removeTile(e){(this._renderState||this._renderStateNext)&&(this._renderState&&this._renderState.removeTile(e),this._renderStateNext&&this._renderStateNext.removeTile(e))}hitTest(e){let t=this._hitTestsRequests.find(({x:r,y:s})=>r===e.x&&s===e.y);const i=ge();return t?t.resolvers.push(i):(t={x:e.x,y:e.y,resolvers:[i]},this._hitTestsRequests.push(t)),this.requestRender(),i.promise}getSortKeys(e){const t=new Set(e),i=new Map;for(const r of this.children)if(r.getSortKeys(t).forEach((s,a)=>i.set(a,s)),i.size===t.size)break;return i}get hasAnimation(){return this.hasLabels}doRender(e){const{minScale:t,maxScale:i}=this._layer.effectiveScaleRange,r=e.state.scale;r<=(t||1/0)&&r>=i&&super.doRender(e)}afterRender(e){super.afterRender(e),this._hitTestsRequests.length&&this.requestRender()}setStencilReference(e){if(this._getHeatmapInstance(e)==null)super.setStencilReference(e);else for(const t of this.children)t.stencilRef=F.heatmap.getStencilReference(t)}_renderMapPhase(e){this._layerView.featureEffectView.hasEffects?(this._renderOutsideEffect(e),this._renderInsideEffect(e)):this._renderFeatures(e,K.All),this._hitTestsRequests.length>0&&this._renderHittest(e)}_renderHighlightPhase(e){this.hasHighlight&&li(e,!1,t=>{this._renderFeatures(t,K.Highlight)})}_renderLabelPhase(e){this._renderFeatures(e,K.All)}_renderInsideEffect(e){const t=e.painter.effects.insideEffect;t.bind(e),this._renderFeatures(e,K.InsideEffect),t.draw(e,this._layerView.featureEffectView.includedEffects),t.unbind()}_renderOutsideEffect(e){const t=e.painter.effects.outsideEffect;t.bind(e),this._renderFeatures(e,K.OutsideEffect),t.draw(e,this._layerView.featureEffectView.excludedEffects),t.unbind()}_renderHittest(e){const{context:t}=e,i=e.painter.effects.hittest,r=t.getBoundFramebufferObject(),s=t.getViewport(),a=e.passOptions,n=e.drawPhase;i.bind(e),e.passOptions=i.createOptions(e,this._hitTestsRequests),e.drawPhase=de.HITTEST;const{distance:l,smallSymbolDistance:o}=e.passOptions,u=Math.max(l,o);for(const c of this.children)c.visible&&c.containsScreenPoint(e.state,e.passOptions.position,2*u)&&this._renderTile(c,e,K.All);i.draw(e),i.unbind(),t.bindFramebuffer(r),t.restoreViewport(s),e.passOptions=a,e.drawPhase=n}_renderFeatures(e,t){const i=this._getHeatmapInstance(e);i!=null?this._renderHeatmapFeatures(e,t,i):this._renderGeometryFeatures(e,t)}_renderGeometryFeatures(e,t){for(const i of this.children)i.visible&&this._renderTile(i,e,t)}_renderHeatmapFeatures(e,t,i){for(const r of this.children)r.visible&&this._renderTile(r,e,t,Ve.Heatmap);i.techniqueRef.renderResolvePass(e,i)}_renderTile(e,t,i,r){const s=g("featurelayer-strict-draw-order")?Ce.STRICT_ORDER:g("featurelayer-force-marker-text-draw-order")?Ce.STRICT_MARKERS_AND_TEXT:Ce.BATCHING,a=e.getDisplayList(this._instanceStore,s);t.selection=i,a?.render(t,r)}};function ki(e){return e.techniqueRef.type===Ve.Heatmap}async function Ti(e){const t=await ui("FeaturePipelineWorker",{client:e,strategy:"dedicated"});return new qi(t)}let qi=class{constructor(e){this._connection=e,this.pipeline=this._connection.createInvokeProxy(),this.features=this._connection.createInvokeProxy("features"),this.aggregates=this._connection.createInvokeProxy("aggregates"),this.streamMessenger=this._connection.createInvokeProxy("streamMessenger")}destroy(){this._connection.destroy()}get closed(){return this._connection.closed}};const Mi=10;let z=class extends ct{constructor(){super(...arguments),this.events=new Pt,this._updatingStrategy=!0,this._tileToEvent=new ci,this._fetchStatus={outstanding:0,done:0}}get hasAllData(){return!this._updatingStrategy&&this._hasAllTileData()}get willQueryAllFeatures(){return this._strategyInfo?.willQueryAllFeatures??!1}get willQueryFullResolutionGeometry(){return this._strategyInfo?.willQueryAllFeatures??!1}onEvent(e){switch(e.type){case"subscribe":case"unsubscribe":case"loaded":case"error":this._handleTileEvent(e);break;case"updateStrategyStart":this._updatingStrategy=!0,this._fetchStatus={done:0,outstanding:0},this._strategyInfo=e.about;break;case"updateStrategyEnd":this._updatingStrategy=!1;break;case"updateFieldsStart":this._fetchStatus={done:0,outstanding:0};break;case"updateFieldsEnd":break;case"updateFieldsError":this.events.emit("error",e);break;case"fetchStart":this._fetchStatus.outstanding+=1,this.events.emit("status",this._fetchStatus);break;case"fetchEnd":this._fetchStatus.done+=1,this.events.emit("status",this._fetchStatus),e.done&&(this._fetchStatus={done:0,outstanding:0})}}_hasAllTileData(){for(const e of this._tileToEvent.values())if(e.peekLast()?.type!=="loaded")return!1;return!0}_handleTileEvent(e){switch(e.type){case"subscribe":{const t=new bt(Mi);t.enqueue(e),this._tileToEvent.set(e.tile,t);break}case"unsubscribe":this._tileToEvent.delete(e.tile);break;case"loaded":{const t=this._tileToEvent.get(e.tile);if(!t)return;t.enqueue(e),this._tileToEvent.set(e.tile,t);break}case"error":{const t=this._tileToEvent.get(e.tile);if(!t)return;t.enqueue(e),this._tileToEvent.set(e.tile,t),this.events.emit("error",e);break}}}};p([y({readOnly:!0})],z.prototype,"hasAllData",null),p([y()],z.prototype,"willQueryAllFeatures",null),p([y()],z.prototype,"willQueryFullResolutionGeometry",null),p([y()],z.prototype,"_updatingStrategy",void 0),p([y()],z.prototype,"_strategyInfo",void 0),p([y()],z.prototype,"_tileToEvent",void 0),z=p([P("esri.views.2d.layers.features.FeatureSourceEventLog")],z);function q(e){switch(e.geometryType){case"point":return"esriGeometryPoint";case"polyline":return"esriGeometryPolyline";case"mesh":case"polygon":return"esriGeometryPolygon";case"multipatch":return"esriGeometryMultiPatch";case"multipoint":return"esriGeometryMultipoint";default:return null}}const zi=Math.PI;function It(e,t){switch(t.transformationType){case L.Additive:return Ai(e,t);case L.Constant:return Pi(t,e);case L.ClampedLinear:return Ui(e,t);case L.Proportional:return Ni(e,t);case L.Stops:return Li(e,t);case L.RealWorldSize:return Bi(e,t);case L.Identity:return e;case L.Unknown:return null}}function O(e,t){return typeof e=="number"?e:It(t,e)}function Ai(e,t){return e+(O(t.minSize,e)||t.minDataValue)}function Pi(e,t){const i=e.stops;let r=i?.length&&i[0].size;return r==null&&(r=e.minSize),O(r,t)}function Ui(e,t){const i=t.minDataValue,r=t.maxDataValue,s=(e-i)/(r-i),a=O(t.minSize,e),n=O(t.maxSize,e);return e<=i?a:e>=r?n:a+s*(n-a)}function Ni(e,t){const i=e/t.minDataValue,r=O(t.minSize,e),s=O(t.maxSize,e);let a=null;return a=i*r,yt(a,r,s)}function Li(e,t){const[i,r,s]=Di(e,t.cache.ipData);if(i===r)return O(t.stops[i].size,e);{const a=O(t.stops[i].size,e);return a+(O(t.stops[r].size,e)-a)*s}}function Bi(e,t){const i=di[t.valueUnit],r=O(t.minSize,e),s=O(t.maxSize,e),{valueRepresentation:a}=t;let n=null;return n=a==="area"?2*Math.sqrt(e/zi)/i:a==="radius"||a==="distance"?2*e/i:e/i,yt(n,r,s)}function Di(e,t){if(!t)return;let i=0,r=t.length-1;return t.some((s,a)=>e<s?(r=a,!0):(i=a,!1)),[i,r,(e-t[i])/(t[r]-t[i])]}function U(e){return(e.labelsVisible&&e.labelingInfo?.every(t=>t.deconflictionStrategy!=="none"))??!1}function W(e,t){const i=w(e,t);if(i?.labelsVisible&&i.labelingInfo?.length)return i.labelingInfo.every(r=>r.deconflictionStrategy!=="none")}function ji(e){return t=>ie(It(t,e))}function $(e){const t=e!=null&&"visualVariables"in e&&e.visualVariables;if(!t)return null;for(const i of t)if(i.type==="size")return ji(i);return null}function Z(e,t,i,r){const s=e.subtypeCode!=null?`${e.subtypeField} = ${e.subtypeCode}`:null,a=A(e.definitionExpression,s),n=e.customParameters??{},l=t.displayFilterEnabled&&e.displayFilterInfo?e.displayFilterInfo.toJSON():null;return r&&(n.token=r),{type:"feature",mutable:{sourceRefreshVersion:i,availableFields:t.availableFields,displayFilterInfo:l,dataFilter:{definitionExpression:a,customParameters:n,gdbVersion:e.gdbVersion,historicMoment:e.historicMoment?.getTime(),queryScaleRanges:e.queryScaleRanges??[],timeExtent:e.timeExtent?.toJSON()}}}}function $i(e,t,i=0){if(t==null)return e[i]=0,e[i+1]=0,e[i+2]=0,void(e[i+3]=0);const{r,g:s,b:a,a:n}=t;e[i]=r*n/255,e[i+1]=s*n/255,e[i+2]=a*n/255,e[i+3]=n}async function T(e,t){if(!e)return[];switch(e.type){case"simple-fill":return ze(e,t);case"picture-fill":return er(e,t);case"simple-marker":return nt(e,t);case"picture-marker":return Gi(e,t);case"simple-line":return te(e,t,!1);case"text":return Zi(e,t);case"label":return Ki(e,t);case"cim":return _e(e.data,t);case"web-style":return T(await e.fetchSymbol({acceptedFormats:["cim","web"]}),t);case"line-3d":return R.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${e.type}" unsupported in MapView. Defaulting to simple-line`),te(new Wt,t,!1);case"point-3d":return R.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${e.type}" unsupported in MapView. Defaulting to simple-marker`),nt(new Gt,t);case"polygon-3d":return R.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${e.type}" unsupported in MapView. Defaulting to simple-fill`),ze(new mt,t);case"mesh-3d":case"label-3d":return R.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${e.type}" unsupported in MapView. Ignoring`),[];case"CIMSymbolReference":throw new Error("InternalError: CIMSymbolReference should already be resolved")}}async function Ji(e,t){const{schemaOptions:i}=t,{store:r}=i,s=new Array(fe),a=new Array(fe/4);for(let d=0;d<fe;d++){const h=d<e.attributes.length?e.attributes[d].color:null;s[d]=[0,0,0,0],$i(s[d],h)}for(let d=0;d<fe/4;d++)a[d]=[0,0,0,0],a[d][0]=4*d<e.attributes.length?1:0,a[d][1]=4*d+1<e.attributes.length?1:0,a[d][2]=4*d+2<e.attributes.length?1:0,a[d][3]=4*d+3<e.attributes.length?1:0;const n={uniforms:{isActive:a,colors:s,dotValue:e.dotValue,dotScale:e.referenceScale,blending:e.dotBlendingEnabled,dotSize:e.dotSize,seed:e.seed},optionalAttributes:{}},l=r.ensureInstance(F.dotDensity,n).createMeshInfo({effects:null}),o=[],u=new mt({color:e.backgroundColor??[0,0,0,0],outline:null}),c=await T(u,t);if(o.push(...c),o.push(l),e.outline){const d=te(e.outline,t,!0);o.push(...d)}return o}async function Qi(e,t){const{store:i}=t,{radius:r,minDensity:s,maxDensity:a,referenceScale:n,field:l,valueExpression:o,colorStops:u}=e,c=hi(u);return[i.ensureInstance(F.heatmap,{uniforms:{radius:ie(r),minDensity:s,maxDensity:a,referenceScale:n,isFieldActive:!(!l&&!o),gradient:c,gradientHash:c.join(",")},optionalAttributes:{}}).createMeshInfo({effects:null})]}async function Hi(e,t){const{store:i}=t,r=e.outline?.width||0,s=E(e),a=i.ensureInstance(F.pieChart,{uniforms:{shader:{outlineWidth:Math.round(ie(r)),defaultColor:pe(e.defaultColor),outlineColor:pe(e.outline?.color),othersColor:pe(e.othersCategory?.color),donutRatio:e.holePercentage,sectorThreshold:e.othersCategory?.threshold||0,colors:e.attributes.map(n=>pe(n.color)),visualVariableOpacity:s.visualVariableOpacity,visualVariableSizeMinMaxValue:s.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:s.visualVariableSizeScaleStops,visualVariableSizeStops:s.visualVariableSizeStops,visualVariableSizeUnitValue:s.visualVariableSizeUnitValue,hittestUniforms:null,highlightUniforms:null},numberOfFields:e.attributes.length},optionalAttributes:{}}).createMeshInfo({size:e.size,outlineWidth:r,effects:null,scaleInfo:null,minPixelBuffer:G(s)});return[...e.backgroundFillSymbol?await ze(e.backgroundFillSymbol,{schemaOptions:t,uniforms:Fe}):[],a]}function wt(e){if(e.style==="path"){if(e.path==null)throw new Error("Symbol with a style of type path must define a path");return{type:"sprite-rasterization-param",overrides:[],resource:{type:"path",path:e.path,asFill:!0}}}const t=re.fromSimpleMarker(e);if("outline"in e&&e.outline&&e.outline.style!=="none"&&e.outline.style!=="solid"){if(!t||!t.symbolLayers)throw new Error("Error handling marker! ");return{type:"sprite-rasterization-param",resource:t.symbolLayers[0],overrides:[]}}return{type:"sprite-rasterization-param",resource:mi(t),overrides:[]}}async function nt(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r;if(e.style==="path"||e.outline&&e.outline.style!=="solid"&&e.outline.style!=="none"){const h=re.fromSimpleMarker(e);if(!h||!h.symbolLayers)throw new Error("Error handling marker! ");if(i.visualVariableRotation&&(h.angleAlignment="Map"),e.style!=="path"){const f=h.symbolLayers[0];if(ue(t.uniforms)){const m=G(t.uniforms,0,1);if(m>f.size){const v=m/f.size;f.size=m;const S=f.markerGraphics?.[0].symbol;(S.symbolLayers&&S.symbolLayers[0]).width*=v}}}return _e({type:"CIMSymbolReference",symbol:h},t)}const a=s.ensureInstance(F.marker,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeMinMaxValue:i.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:i.visualVariableSizeScaleStops,visualVariableSizeStops:i.visualVariableSizeStops,visualVariableSizeUnitValue:i.visualVariableSizeUnitValue,visualVariableRotation:i.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),n=wt(e);let l=e.color?.toArray()??[0,0,0,0];n.resource.type==="CIMVectorMarker"&&(l=[255,255,255,255]);const o=e.style==="triangle"?124/116:1,u=e.size,c=u*o,d=i.visualVariableColor!=null&&(e.style==="cross"||e.style==="x");return[a.createMeshInfo({type:"simple",color:l,height:u,width:c,offsetX:e.xoffset,offsetY:e.yoffset,angle:e.angle,alignment:Pe(i)?ee.MAP:ee.SCREEN,outlineColor:e.outline?.color?.toArray()??[0,0,0,0],outlineSize:e.outline?.width??1,referenceSize:u,sprite:n,overrideOutlineColor:d,hasSizeVV:ue(i),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:G(i)})]}function Gi(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r,a=s.ensureInstance(F.marker,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeMinMaxValue:i.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:i.visualVariableSizeScaleStops,visualVariableSizeStops:i.visualVariableSizeStops,visualVariableSizeUnitValue:i.visualVariableSizeUnitValue,visualVariableRotation:i.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),n=re.createPictureMarkerRasterizationParam(e);return n?[a.createMeshInfo({type:"picture",color:[255,255,255,255],height:e.height,width:e.width,offsetX:e.xoffset,offsetY:e.yoffset,angle:e.angle,alignment:Pe(i)?ee.MAP:ee.SCREEN,outlineColor:null,outlineSize:0,referenceSize:e.height,sprite:n,overrideOutlineColor:!1,hasSizeVV:ue(i),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:G(i)})]:[]}function Wi(e,t,i){const{uniforms:r,schemaOptions:s}=i,{store:a}=s,n=a.ensureInstance(F.marker,{uniforms:{visualVariableColor:r.visualVariableColor,visualVariableOpacity:r.visualVariableOpacity,visualVariableSizeMinMaxValue:r.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:r.visualVariableSizeScaleStops,visualVariableSizeStops:r.visualVariableSizeStops,visualVariableSizeUnitValue:r.visualVariableSizeUnitValue,visualVariableRotation:r.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),l=wt(e),o=6,u=o*t.width,c=u,d=e.color?.toArray()??t.color?.toArray()??[0,0,0,0],h=e.style==="cross"||e.style==="x";let f;switch(e.placement){case"begin-end":f=he.Both;break;case"begin":f=he.JustBegin;break;case"end":f=he.JustEnd;break;default:f=he.None}const m={type:"cim-marker-placement-param",placement:{type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:f,offsetAlongLine:0},overrides:[]};return[n.createMeshInfo({type:"simple",color:d,height:c,width:u,offsetX:0,offsetY:0,angle:0,alignment:Pe(r)?ee.MAP:ee.SCREEN,outlineColor:d,outlineSize:h?t.width:0,referenceSize:c/o,sprite:l,overrideOutlineColor:h&&r.visualVariableColor!=null,hasSizeVV:ue(r),placement:m,transforms:null,effects:null,scaleInfo:null,minPixelBuffer:G(r)})]}function Zi(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r;return[s.ensureInstance(F.text,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableRotation:i.visualVariableRotation,visualVariableSizeMinMaxValue:i.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:i.visualVariableSizeScaleStops,visualVariableSizeStops:i.visualVariableSizeStops,visualVariableSizeUnitValue:i.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1,clipAngle:!1,referenceSymbol:!1,visibility:!1}}).createMeshInfo({boxBackgroundColor:e.backgroundColor?.toArray(),boxBorderLineColor:e.borderLineColor?.toArray(),boxBorderLineSize:e.borderLineSize??0,color:e.color?.toArray()??[0,0,0,0],offsetX:e.xoffset,offsetY:e.yoffset,postAngle:e.angle,fontSize:e.font.size,decoration:e.font.decoration,haloColor:e.haloColor?.toArray()??[0,0,0,0],haloSize:e.haloSize??0,outlineColor:[0,0,0,0],outlineSize:0,lineWidth:e.lineWidth,lineHeightRatio:e.lineHeight,horizontalAlignment:e.horizontalAlignment,verticalAlignment:e.verticalAlignment,useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:e.font.toJSON(),textString:e.text,symbol:re.createCIMTextSymbolfromTextSymbol(e)},overrides:[]},referenceSize:null,effects:null,placement:null,scaleInfo:null,transforms:null,scaleFactor:1,minPixelBuffer:G(i),repeatLabel:null,repeatLabelDistance:null,allowOverrun:null,labelPosition:null,labelClassId:-1})]}function Ki(e,t){const{schemaOptions:i,uniforms:r}=t,{store:s}=i,a=e.symbol,{allowOverrun:n,repeatLabel:l,repeatLabelDistance:o}=e,u={maxScale:e.maxScale??0,minScale:e.minScale??0},c=s.ensureInstance(F.label,{uniforms:{visualVariableColor:null,visualVariableOpacity:null,visualVariableRotation:r.visualVariableRotation,visualVariableSizeMinMaxValue:r.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:r.visualVariableSizeScaleStops,visualVariableSizeStops:r.visualVariableSizeStops,visualVariableSizeUnitValue:r.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!0,clipAngle:!0,referenceSymbol:!0,visibility:!0}}),d=e.labelPlacement,[h,f]=fi(d);return[c.createMeshInfo({boxBackgroundColor:a.backgroundColor?.toArray(),boxBorderLineColor:a.borderLineColor?.toArray(),boxBorderLineSize:a.borderLineSize??0,color:a.color?.toArray()??[0,0,0,0],offsetX:a.xoffset,offsetY:a.yoffset,postAngle:a.angle,fontSize:a.font.size,decoration:a.font.decoration,outlineColor:[0,0,0,0],outlineSize:0,haloColor:a.haloColor?.toArray()??[0,0,0,0],haloSize:a.haloSize??0,lineWidth:a.lineWidth,lineHeightRatio:a.lineHeight,horizontalAlignment:h,verticalAlignment:f,repeatLabel:l,repeatLabelDistance:ie(o),allowOverrun:n,labelPosition:e.labelPosition,scaleInfo:u,minPixelBuffer:G(r),useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:a.font.toJSON(),textString:a.text,symbol:re.createCIMTextSymbolfromTextSymbol(a),primitiveName:"label-override"},useLegacyLabelEvaluationRules:e.labelExpressionInfo?.expression==null,overrides:[{valueExpressionInfo:{type:"CIMExpressionInfo",expression:e.labelExpressionInfo?.expression??e.labelExpression,returnType:"String"},primitiveName:"label-override",propertyName:"textString",defaultValue:""}]},referenceSize:null,effects:null,placement:null,transforms:null,scaleFactor:1,labelClassId:t.labelClassId})]}function Ne(e,t){const i=e.width;return{outlineColor:e.color?.toArray()||[0,0,0,1],width:i,referenceWidth:i,capType:e.cap??"round",joinType:e.join??"round",miterLimit:e.miterLimit,hasSizeVV:t,outlineUsesColorVV:!1}}function Xi(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r,a=e.color?.toArray()??[0,0,0,0],n={type:"sprite-rasterization-param",resource:{type:"fill-style",style:e.style},overrides:[]};if(e.outline?.style==="solid")return[s.ensureInstance(F.patternOutlineFill,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeScaleStops:i.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:a,...Ne(e.outline,!!i.visualVariableSizeOutlineScaleStops),sprite:n,scaleInfo:null,effects:null})];const l=[],o=s.ensureInstance(F.patternFill,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:e.color?.toArray()??[0,0,0,0],sprite:n,scaleInfo:null,effects:null});return l.push(o),e.outline&&l.push(...te(e.outline,t,!0)),l}function Yi(e,t){const{uniforms:i,schemaOptions:r}=t,{store:s}=r,a=e.color?.toArray()??[0,0,0,0];if(e.style!=="none"&&e.outline?.style==="solid")return[s.ensureInstance(F.outlineFill,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeScaleStops:i.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:a,...Ne(e.outline,!!i.visualVariableSizeOutlineScaleStops),scaleInfo:null,effects:null})];const n=[];if(e.style!=="none"){const l=s.ensureInstance(F.fill,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:a,scaleInfo:null,effects:null});n.push(l)}return e.outline&&n.push(...te(e.outline,t,!0)),n}async function ze(e,t){if(e.type==="cim")return _e(e.data,t);const{style:i}=e;return i&&i!=="none"&&i!=="solid"?Xi(e,t):Yi(e,t)}function er(e,t){const{outline:i}=e,{uniforms:r,schemaOptions:s}=t,{store:a}=s,n=[],l=re.createPictureFillRasterizationParam(e);if(!l)return[];const{width:o,height:u,xoffset:c,yoffset:d,xscale:h,yscale:f}=e,m={color:[255,255,255,255],sprite:l,height:u,aspectRatio:o/u,offsetX:c,offsetY:d,scaleX:h,scaleY:f,angle:0,applyRandomOffset:!1,sampleAlphaOnly:!1,scaleProportionally:!1,effects:null,scaleInfo:null};if(i?.style==="solid")return[a.ensureInstance(F.complexOutlineFill,{uniforms:{visualVariableColor:r.visualVariableColor,visualVariableOpacity:r.visualVariableOpacity,visualVariableSizeScaleStops:r.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({...m,...Ne(i,!!r.visualVariableSizeOutlineScaleStops)})];const v=a.ensureInstance(F.complexFill,{uniforms:{visualVariableColor:r.visualVariableColor,visualVariableOpacity:r.visualVariableOpacity},optionalAttributes:{zoomRange:!1}});return n.push(v.createMeshInfo(m)),i&&n.push(...te(i,t,!0)),n}function te(e,t,i){const{color:r,style:s,width:a,cap:n,join:l}=e,{schemaOptions:o}=t,{store:u}=o,c=[],d=i?{...Fe,visualVariableSizeScaleStops:t.uniforms.visualVariableSizeOutlineScaleStops}:t.uniforms,h={uniforms:{visualVariableColor:d.visualVariableColor,visualVariableOpacity:d.visualVariableOpacity,visualVariableSizeMinMaxValue:d.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:d.visualVariableSizeScaleStops,visualVariableSizeStops:d.visualVariableSizeStops,visualVariableSizeUnitValue:d.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1}},f={color:r?.toArray()??[0,0,0,0],width:a,referenceWidth:a,capType:n,joinType:l,miterLimit:e.miterLimit,hasSizeVV:ue(d),effects:null,scaleInfo:null};if(s==null||s==="solid"){const m=u.ensureInstance(F.line,h).createMeshInfo(f);c.push(m)}else if(s!=="none"){const m=u.ensureInstance(F.texturedLine,h).createMeshInfo({...f,offsetAlongLine:0,shouldScaleDash:!0,shouldSampleAlphaOnly:!1,isSDF:!0,sprite:{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:yi(s,n)},overrides:[]}});c.push(m)}return e.marker!=null&&c.push(...Wi(e.marker,e,t)),c}async function B(e,t,i){const r=t.labelsVisible&&t.labelingInfo||[],s=q(t),a=Xt(r,s);return{type:"label",classes:await Promise.all(a.map((n,l)=>tr(e,n,t.labelsVisible,t.labelingInfoSource,l,s,i)))}}async function tr(e,t,i,r,s,a,n){const l=pt(`${r} ${s}`),o=await T(t,{schemaOptions:e,uniforms:n,labelClassId:l});return{maxScale:t.maxScale,minScale:t.minScale,deconflictionEnabled:t.deconflictionStrategy!=="none"&&i,expression:t.labelExpressionInfo?.expression??t.labelExpression,where:t.where,meshes:o,labelClassId:l,geometryType:a}}async function D(e,t){if(!t)return{type:"simple",meshes:[]};switch(t.type){case"simple":return ir(e,t);case"dot-density":return rr(e,t);case"class-breaks":return sr(e,t);case"unique-value":return ar(e,t);case"dictionary":return nr(t);case"heatmap":return or(e,t);case"pie-chart":return lr(e,t)}}async function ir(e,t){const i=t.symbols,r=i.length?i[0]:null,s=E(t);return{type:"simple",meshes:await T(r,{schemaOptions:e,uniforms:s})}}async function rr(e,t){const i=E(t);return{type:"dot-density",meshes:await Ji(t,{schemaOptions:e,uniforms:i})}}async function sr(e,t){const i=E(t),r=t.backgroundFillSymbol,s=t.normalizationType,a=s==="log"?"esriNormalizeByLog":s==="percent-of-total"?"esriNormalizeByPercentOfTotal":s==="field"?"esriNormalizeByField":null,n=t.classBreakInfos.map(async c=>({meshes:await T(c.symbol,{path:`renderer-stop-${c.minValue}-${c.maxValue}`,schemaOptions:e,uniforms:i}),min:c.minValue,max:c.maxValue})),l=(await Promise.all(n)).sort((c,d)=>c.min-d.min),o=await T(r,{schemaOptions:e,uniforms:{...Fe,visualVariableSizeOutlineScaleStops:i.visualVariableSizeOutlineScaleStops}}),u=await T(t.defaultSymbol,{schemaOptions:e,uniforms:i});return{type:"interval",field:t.field,expression:t.valueExpression,backgroundFill:o,defaultSymbol:u,intervals:l,normalizationField:t.normalizationField,normalizationTotal:t.normalizationTotal,normalizationType:a,isMaxInclusive:t.isMaxInclusive}}async function ar(e,t){const i=[],r=E(t),s=await T(t.backgroundFillSymbol,{schemaOptions:e,uniforms:{...Fe,visualVariableSizeOutlineScaleStops:r.visualVariableSizeOutlineScaleStops}}),a=await T(t.defaultSymbol,{schemaOptions:e,uniforms:r});for(const n of t.uniqueValueInfos??[]){const l=await T(n.symbol,{path:`renderer-unique-value-${n.value}`,schemaOptions:e,uniforms:r});i.push({value:""+n.value,symbol:l})}return{type:"map",field:t.field,expression:t.valueExpression,field2:t.field2,field3:t.field3,fieldDelimiter:t.fieldDelimiter,backgroundFill:s,defaultSymbol:a,map:i}}async function nr(e){const t=E(e),i=await e.getDictionaryInfo(),r=e.scaleExpression,s=r!=null&&r!=="1"?{valueExpressionInfo:{type:"CIMExpressionInfo",expression:e.scaleExpression,returnType:"Numeric"},defaultValue:1}:void 0;return{type:"dictionary",dictionaryInfo:i,userConfig:e.config??{},fieldMap:e.fieldMap??{},scaleExpression:s,visualVariableUniforms:t}}async function or(e,t){return{type:"heatmap",meshes:await Qi(t,e)}}async function lr(e,t){return{type:"pie-chart",meshes:await Hi(t,e)}}async function ur(e,t){const i=t.renderer,r=E(i);return{symbology:await D(e,i),labels:await B(e,t,r)}}async function J(e,t,i,r){const s=i.featureReduction;if(s)switch(s.type){case"binning":return dr(s,e,t,i,r);case"cluster":return pr(s,e,t,i,r)}if(i.trackInfo?.enabled)return hr(i.trackInfo,e,t,i,r);const a=fr(i.orderBy,i.renderer,i.objectIdField),n=Ae(i.renderer,t.filters),l=await ur(e,i),o=xe(l.symbology);return{storage:n,mesh:{properties:{sortKey:a,timeZone:t.timeZone,returnMeshObjectId:o,displayRefreshVersion:r,currentUser:t.currentUser},strategy:{type:"feature"},factory:l},expressionProperties:{timeExtent:t.timeExtent?.toJSON()}}}function Le(e,t){return e.fields.map(i=>({...i.toJSON(),type:cr(i,t)}))}function cr(e,t){const{onStatisticExpression:i,onStatisticField:r,statisticType:s}=e;switch(s){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(i){const{returnType:n}=i;return n?n==="string"?"esriFieldTypeString":"esriFieldTypeDouble":"esriFieldTypeString"}const a=t.find(n=>n.name===r);return a?a.type:"esriFieldTypeString"}}}async function dr(e,t,i,r,s){const a=Le(e,r.fields),n=e.renderer,l=await D(t,n),o=Ae(n,[null,null]),u=E(n),c=await B(t,{geometryType:"polygon",labelingInfoSource:r.labelingInfoSource+"-binning",labelingInfo:e.labelingInfo,labelsVisible:e.labelsVisible},u),d=xe(l),h=e.binType==="geohash"?{type:"geohash",fixBinLevel:e.fixedBinLevel??3}:{type:"grid",size:ie(e.size),fixedBinLevel:e.fixedBinLevel};return{storage:o,mesh:{properties:{sortKey:null,timeZone:i.timeZone,returnMeshObjectId:d,displayRefreshVersion:s,currentUser:i.currentUser},strategy:{type:"binning",fields:a,index:h,featureFilter:i.filters[0]},factory:{labels:c,symbology:l}},expressionProperties:{timeExtent:i.timeExtent?.toJSON()}}}async function pr(e,t,i,r,s){const a=Le(e,r.fields),n={type:"cluster",feature:await D(t,e.effectiveFeatureRenderer),cluster:await D(t,e.effectiveClusterRenderer)},l=E(e.effectiveFeatureRenderer),o={type:"cluster",feature:await B(t,r,l),cluster:await B(t,{geometryType:"point",labelingInfoSource:r.labelingInfoSource+"-clusters",labelingInfo:e.labelingInfo,labelsVisible:e.labelsVisible},l)},u=Ae(e.effectiveFeatureRenderer,[null,null]),c=xe(n);return{storage:u,mesh:{properties:{sortKey:null,timeZone:i.timeZone,displayRefreshVersion:s,returnMeshObjectId:c,currentUser:i.currentUser},strategy:{type:"cluster",fields:a,featureFilter:i.filters[0],clusterRadius:ie(e.clusterRadius/2)},factory:{labels:o,symbology:n}},expressionProperties:{timeExtent:i.timeExtent?.toJSON()}}}async function hr(e,t,i,r,s){const a=Le(e,r.fields),n={type:"track",previousObservation:await D(t,e.previousObservations.renderer),latestObservation:await D(t,e.latestObservations.renderer),trackLine:await D(t,e.trackLines.renderer)},l={type:"track",previousObservation:await B(t,{geometryType:r.geometryType,labelingInfoSource:r.labelingInfoSource+"-track-prev",labelingInfo:e.previousObservations.labelingInfo,labelsVisible:e.previousObservations.labelsVisible},E(e.previousObservations.renderer)),latestObservation:await B(t,{geometryType:r.geometryType,labelingInfoSource:r.labelingInfoSource+"-track-latest",labelingInfo:e.latestObservations.labelingInfo,labelsVisible:e.latestObservations.labelsVisible},E(e.latestObservations.renderer)),trackLine:await B(t,{geometryType:"polyline",labelingInfoSource:r.labelingInfoSource+"-track-line",labelingInfo:e.trackLines.labelingInfo,labelsVisible:e.trackLines.labelsVisible},E(e.trackLines.renderer))},o=ai(e,[null,null]),u=xe(n);return{storage:o,mesh:{properties:{sortKey:null,timeZone:i.timeZone,returnMeshObjectId:u,displayRefreshVersion:s,currentUser:i.currentUser},strategy:{type:"track",featureFilter:i.filters[0],fields:a,maxDisplayDuration:e.maxDisplayDuration?.toMilliseconds()??0,maxDisplayObservationsPerTrack:e.maxDisplayObservationsPerTrack,showLatestObservation:e.latestObservations.visible,showPreviousObservations:e.previousObservations.visible,showTrackLine:e.trackLines.visible,timeField:e.timeField},factory:{labels:l,symbology:n}},expressionProperties:{timeExtent:i.timeExtent?.toJSON()}}}function fr(e,t,i){const r=t!=null&&t.type==="unique-value"&&t.orderByClassesEnabled;if(e!=="default"||r||(e=[new pi({field:i,order:"descending"})]),e!=="default"&&e?.length){e.length;const s=e[0],a=s.order==="ascending"?"asc":"desc";return s.field?{field:s.field,order:a}:s.valueExpression?{expression:s.valueExpression,order:a}:null}return r?{byRenderer:!0,order:"asc"}:null}function ne(e){return e.techniqueType===Ve.AnimatedMarker}function xe(e){return!!(e.type==="simple"&&e.meshes.some(ne)||e.type==="interval"&&(e.intervals.some(t=>t.meshes.some(ne))||e.backgroundFill.some(ne))||e.type==="map"&&(e.map.some(t=>t.symbol.some(ne))||e.backgroundFill.some(ne)))}let yr=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=U(t);return[{vvEvaluators:{0:$(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,editingInfo:r,objectIdField:s,globalIdField:a,datesInUnknownTimezone:n,dateFieldsTimeZone:l,orderBy:o,parsedUrl:u}=t,c=t.fieldsIndex.toJSON(),d=q(t),h=t.timeInfo?.toJSON(),f=t.spatialReference.toJSON(),m=ce(u);let v=s;if(o?.length){const x=!o[0].valueExpression&&o[0].field;x&&(v=x)}const S=we(m.path),b=e.spatialReference.toJSON();return{type:"feature-service",source:m,isSourceHosted:S,orderByFields:v,outSpatialReference:b,metadata:{timeReferenceUnknownClient:n,dateFieldsTimeZone:l,globalIdField:a,fieldsIndex:c,geometryType:d,featureIdInfo:{type:"object-id",fieldName:s},timeInfo:h,spatialReference:f,outSpatialReference:b,subtypeField:null,subtypes:null,typeIdField:null,types:null},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:r?.lastEditDate?.getTime(),snapshotInfo:null}}}createSourceSchema(e,t){const{definitionExpression:i,displayFilterInfo:r,customParameters:s,timeExtent:a,apiKey:n}=this.layer;return Z({definitionExpression:i,displayFilterInfo:r,customParameters:s,timeExtent:a},e,t,n)}createProcessorSchema(e,t,i){const{fields:r,geometryType:s,orderBy:a,objectIdField:n,renderer:l,labelingInfo:o,labelsVisible:u}=this.layer,c={featureReduction:null,labelingInfoSource:this.layer.id,fields:r.map(d=>d.toJSON()),geometryType:s,labelingInfo:o,labelsVisible:u,objectIdField:n,orderBy:a??"default",renderer:l?.clone()};return J(e,t,c,i)}get hasRequiredSupport(){return j(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(e){return[()=>this.layer.apiKey,()=>this.layer.customParameters,()=>this.layer.definitionExpression,()=>this.layer.outFields,()=>this.layer.renderer,()=>this.layer.labelsVisible?this.layer.labelingInfo:null,()=>this.layer.orderBy]}setGraphicOrigin(e){e.origin={type:"catalog",layer:this.layer}}};function Ee(e){const{objectIdField:t,uniqueIdFields:i}=e;return i?.length?i.length>=2?{type:"unique-id-composite",fieldNames:i}:{type:"unique-id-simple",fieldName:i[0]}:{type:"object-id",fieldName:t}}function Be(e,t,i,r,s,a){const n=vr(r);if(!(g("featurelayer-snapshot-enabled")&&i?.query.supportsPagination&&!i?.operations.supportsEditing&&!t))return null;const l=br(s,a),{min:o,max:u}=n,c=l?u:o,d=gr(r);let h=g("featurelayer-snapshot-initial-tolerance");return r!=="esriGeometryPoint"&&r!=="esriGeometryMultipoint"||(h=null),{supportsExceedsLimit:mr(e,i),initialTolerance:h,maxFeatureCount:c,maxVertexCount:d}}function mr(e,t){return!(!e&&!g("featurelayer-snapshot-non-hosted-exceedslimit-enabled"))&&t?.operations.supportsExceedsLimitStatistics}function gr(e){switch(e){case"esriGeometryPoint":return null;case"esriGeometryPolyline":case"esriGeometryPolygon":case"esriGeometryMultiPatch":case"esriGeometryMultipoint":return g("featurelayer-snapshot-max-vertex-count")}}function br(e,t){const i=t?.clone().intersection(e),r=i!=null?i.width*i.height:0,s=t?t.width*t.height:0,a=s===0?0:r/s,n=g("featurelayer-snapshot-coverage");return!isNaN(a)&&a>=n}function vr(e){switch(e){case"esriGeometryMultipoint":return{min:g("featurelayer-snapshot-multipoint-min-threshold"),max:g("featurelayer-snapshot-multipoint-max-threshold")};case"esriGeometryPoint":return{min:g("featurelayer-snapshot-point-min-threshold"),max:g("featurelayer-snapshot-point-max-threshold")};case"esriGeometryMultiPatch":case"esriGeometryPolygon":return{min:g("featurelayer-snapshot-polygon-min-threshold"),max:g("featurelayer-snapshot-polygon-max-threshold")};case"esriGeometryPolyline":return{min:g("featurelayer-snapshot-polyline-min-threshold"),max:g("featurelayer-snapshot-polyline-max-threshold")}}}function De(e,t){return e.floorInfo!=null&&(e.floorInfo.viewAllLevelIds.length>0||t.floors.length>0)}function je(e,t,i){const r=Sr(e,t?.where,i);return r&&(t??=new H,t.where=r),t}function Sr(e,t,i){if(e.floorInfo==null||!i.floors?.length)return t;let r=i.floors;const{floorField:s,viewAllLevelIds:a}=e.floorInfo;a.length&&(r=a);const n=r.filter(o=>o!=="").map(o=>"'"+o+"'");if(n.push("''"),t?.includes(s)){let o=new RegExp("AND \\("+s+".*NULL\\)","g");t=t.replace(o,""),o=new RegExp("\\("+s+".*NULL\\)","g"),t=(t=t.replace(o,"")).replaceAll(/\s+/g," ").trim()}let l="("+s+" IN ({ids}) OR "+s+" IS NULL)";return l=l.replace("{ids}",n.join(", ")),A(t,l)}let Ir=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=W(t,e)??U(t),r=w(t,e),s=[...t.labelingInfo||[],...r?.labelingInfo||[]];return[{vvEvaluators:{0:$(t.renderer)},deconflictionEnabled:i,labelingInfo:s}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,editingInfo:r,typeIdField:s,globalIdField:a,datesInUnknownTimezone:n,dateFieldsTimeZone:l,orderBy:o,subtypeField:u,refreshInterval:c}=t,d=t.fieldsIndex.toJSON(),h=q(t),f=t.timeInfo?.toJSON(),m=t.spatialReference.toJSON(),v=t.types?.map(C=>C.toJSON()),S=ce(this.layer.parsedUrl);this.layer.dynamicDataSource&&(S.query={layer:JSON.stringify({source:this.layer.dynamicDataSource})});let b=this.layer.objectIdField;if(o?.length){const C=!o[0].valueExpression&&o[0].field;C&&(b=C)}const x=we(S.path),Q=Be(x,r?.lastEditDate==null&&c>0,i,h,e.extent,t.fullExtent),N=e.spatialReference.toJSON();return{type:"feature-service",source:S,isSourceHosted:x,orderByFields:b,outSpatialReference:N,metadata:{typeIdField:s??void 0,types:v,timeReferenceUnknownClient:n,dateFieldsTimeZone:l,subtypeField:u,globalIdField:a,fieldsIndex:d,geometryType:h,featureIdInfo:Ee(t),timeInfo:f,spatialReference:m,outSpatialReference:N,subtypes:this.layer.subtypes?.map(C=>C.toJSON())},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:r?.lastEditDate?.getTime(),snapshotInfo:Q}}}createSourceSchema(e,t){const{apiKey:i,definitionExpression:r,displayFilterInfo:s,customParameters:a,gdbVersion:n,historicMoment:l,subtypeCode:o,subtypeField:u,timeExtent:c}=this.layer;return Z({definitionExpression:r,displayFilterInfo:s,customParameters:a,gdbVersion:n,historicMoment:l,subtypeCode:o,subtypeField:u,timeExtent:c},e,t,i)}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:n,labelsVisible:l,orderBy:o,objectIdField:u,trackInfo:c}=this.layer,d={fields:r.map(h=>h.toJSON()),renderer:s?.clone(),labelingInfoSource:this.layer.id,featureReduction:w(this.layer,t),geometryType:a,labelingInfo:n,labelsVisible:l,objectIdField:u,orderBy:o??"default",trackInfo:c};return J(e,t,d,i)}get hasRequiredSupport(){return j(this.layer.renderer)}get timeOptions(){return this.layer}addFilters(e,t){return je(this.layer,e,t)}getUpdateHashProperties(e){return[()=>this.layer.apiKey,()=>this.layer.customParameters,()=>this.layer.definitionExpression,()=>w(this.layer,e),()=>De(this.layer,e)?e.floors:null,()=>this.layer.gdbVersion,()=>this.layer.historicMoment,()=>this.layer.labelsVisible?this.layer.labelingInfo:null,()=>this.layer.orderBy,()=>this.layer.outFields,()=>this.layer.renderer,()=>this.layer.subtypeCode,()=>this.layer.trackInfo]}};function wr(e){if(!("openPorts"in e))throw new k("featurelayer:source-not-supported","source is not supported")}class ot{constructor(t){this.layer=t}getLabelingDeconflictionInfo(t){const i=this.layer,r=W(i,t)??U(i),s=w(i,t),a=[...i.labelingInfo||[],...s?.labelingInfo||[]];return[{vvEvaluators:{0:$(i.renderer)},deconflictionEnabled:r,labelingInfo:a}]}async createServiceOptions(t){const i=this.layer,{capabilities:r,objectIdField:s}=i,a=i.fieldsIndex.toJSON(),n=q(i),l=i.timeInfo?.toJSON(),o=i.spatialReference.toJSON();wr(i.source);const u=await i.source.openPorts(),c=s,d=t.spatialReference.toJSON();return{type:"memory",source:u,orderByFields:c,outSpatialReference:d,metadata:{fieldsIndex:a,geometryType:n,featureIdInfo:{type:"object-id",fieldName:i.objectIdField},timeInfo:l,spatialReference:o,outSpatialReference:d,subtypes:null,subtypeField:null,globalIdField:null,typeIdField:null,types:null,timeReferenceUnknownClient:"datesInUnknownTimezone"in i?i.datesInUnknownTimezone:null,dateFieldsTimeZone:"dateFieldsTimeZone"in i?i.dateFieldsTimeZone:null},queryMetadata:{maxRecordCount:r.query.maxRecordCount,supportsCompactGeometry:r.query.supportsCompactGeometry,supportsDefaultSpatialReference:r.query.supportsDefaultSpatialReference,supportsFormatPBF:r.query.supportsFormatPBF,supportsMaxRecordCountFactor:r.query.supportsMaxRecordCountFactor,supportsQuantization:r.query.supportsQuantization,lastEditDate:null,snapshotInfo:null}}}createSourceSchema(t,i){const{definitionExpression:r,timeExtent:s,displayFilterInfo:a}=this.layer;return Z({customParameters:null,definitionExpression:r,displayFilterInfo:a,timeExtent:s},t,i,null)}createProcessorSchema(t,i,r){const{fields:s,renderer:a,geometryType:n,labelingInfo:l,labelsVisible:o,orderBy:u,objectIdField:c}=this.layer,d="trackInfo"in this.layer?this.layer.trackInfo:null,h={fields:s.map(f=>f.toJSON()),renderer:a?.clone(),labelingInfoSource:this.layer.id,featureReduction:w(this.layer,i),geometryType:n,labelingInfo:l,labelsVisible:o,objectIdField:c,orderBy:u??"default",trackInfo:d};return J(t,i,h,r)}get hasRequiredSupport(){return j(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(t){return[()=>this.layer.definitionExpression,()=>this.layer.displayFilterInfo,()=>this.layer.orderBy,()=>"outFields"in this.layer?this.layer.outFields:null,()=>this.layer.renderer,()=>this.layer.labelsVisible?this.layer.labelingInfo:null,()=>w(this.layer,t),()=>"trackInfo"in this.layer?this.layer.trackInfo:null]}}class _r{constructor(t){this.layer=t}getLabelingDeconflictionInfo(t){const i=this.layer,r=W(i,t)??U(i);return[{vvEvaluators:{0:$(i.renderer)},deconflictionEnabled:r}]}async createServiceOptions(t){const i=this.layer,{capabilities:r,objectIdField:s}=i,a=i.fieldsIndex.toJSON(),n=q(i),l=i.spatialReference.toJSON(),o=await i.source.openPorts(),u=s,c=t.spatialReference.toJSON();return{type:"memory",source:o,orderByFields:u,outSpatialReference:c,metadata:{fieldsIndex:a,geometryType:n,featureIdInfo:{type:"object-id",fieldName:i.objectIdField},spatialReference:l,outSpatialReference:c,globalIdField:null,subtypeField:null,subtypes:null,timeInfo:i.timeInfo?.toJSON(),timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null},queryMetadata:{maxRecordCount:r.query.maxRecordCount,supportsCompactGeometry:r.query.supportsCompactGeometry,supportsDefaultSpatialReference:r.query.supportsDefaultSpatialReference,supportsFormatPBF:r.query.supportsFormatPBF,supportsMaxRecordCountFactor:r.query.supportsMaxRecordCountFactor,supportsQuantization:r.query.supportsQuantization,lastEditDate:null,snapshotInfo:null}}}createSourceSchema(t,i){const{definitionExpression:r,displayFilterInfo:s}=this.layer;return Z({definitionExpression:r,displayFilterInfo:s,customParameters:null},t,i,null)}createProcessorSchema(t,i,r){const{fields:s,renderer:a,geometryType:n,labelingInfo:l,labelsVisible:o,objectIdField:u}=this.layer,c={fields:s.map(d=>d.toJSON()),renderer:a?.clone(),labelingInfoSource:this.layer.id,featureReduction:w(this.layer,i),geometryType:n,labelingInfo:l,labelsVisible:o,objectIdField:u,orderBy:"default"};return J(t,i,c,r)}get hasRequiredSupport(){return j(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(t){return[()=>this.layer.definitionExpression,()=>this.layer.renderer,()=>this.layer.labelsVisible?this.layer.labelingInfo:null,()=>w(this.layer,t),()=>ke(this.layer)]}hasFilters(t){return ke(this.layer)}addFilters(t,i){if(ke(this.layer)){const r=A(t?.where,`${vt}=1`);if(!r)return t;t??=new H,t.where=r}return t}}function ke(e){return e.parentCompositeLayer.type==="link-chart"&&e.parentCompositeLayer.linkChart?.linkChartProperties.nonspatialDataDisplay?.mode==="hidden"}let Fr=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=W(t,e)??U(t);return[{vvEvaluators:{0:$(t.renderer)},deconflictionEnabled:i,labelingInfo:t.labelingInfo}]}async createServiceOptions(e){const t=this.layer,{capabilities:i}=t,r=t.fieldsIndex.toJSON(),s=q(t),a=t.timeInfo?.toJSON(),n=t.spatialReference.toJSON(),l=t.source.getSource(),o=this.layer.objectIdField,u=ce(i);u.query.maxRecordCount=l.maxRecordCount;const c=e.spatialReference.toJSON();return{type:"ogc",source:l,orderByFields:o,outSpatialReference:c,metadata:{fieldsIndex:r,geometryType:s,featureIdInfo:{type:"object-id",fieldName:t.objectIdField},timeInfo:a,spatialReference:n,outSpatialReference:c,globalIdField:null,subtypeField:null,subtypes:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,typeIdField:null,types:null},queryMetadata:{maxRecordCount:u.query.maxRecordCount,supportsCompactGeometry:u.query.supportsCompactGeometry,supportsDefaultSpatialReference:u.query.supportsDefaultSpatialReference,supportsFormatPBF:u.query.supportsFormatPBF,supportsMaxRecordCountFactor:u.query.supportsMaxRecordCountFactor,supportsQuantization:u.query.supportsQuantization,lastEditDate:null,snapshotInfo:null}}}createSourceSchema(e,t){const{customParameters:i,timeExtent:r,apiKey:s}=this.layer;return Z({customParameters:i,timeExtent:r},e,t,s)}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:n,labelsVisible:l,orderBy:o,objectIdField:u}=this.layer,c={fields:r.map(d=>d.toJSON()),renderer:s?.clone(),labelingInfoSource:this.layer.id,featureReduction:w(this.layer,t),geometryType:a,labelingInfo:n,labelsVisible:l,objectIdField:u,orderBy:o??"default"};return J(e,t,c,i)}get hasRequiredSupport(){return j(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(e){return[()=>this.layer.apiKey,()=>this.layer.customParameters,()=>w(this.layer,e),()=>this.layer.labelsVisible?this.layer.labelingInfo:null,()=>this.layer.orderBy,()=>this.layer.renderer]}},Vr=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=W(t,e)??U(t);return[{vvEvaluators:{0:$(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,globalIdField:r,orderBy:s,refreshInterval:a}=t,n=t.fieldsIndex.toJSON(),l=q(t),o=t.timeInfo?.toJSON(),u=t.spatialReference.toJSON(),c=ce(this.layer.parsedUrl);let d=this.layer.objectIdField;if(s?.length){const S=!s[0].valueExpression&&s[0].field;S&&(d=S)}const h=a>0,f=we(c.path),m=e.spatialReference.toJSON(),v=Be(f,h,i,l,e.extent,t.fullExtent);return{type:"feature-service",source:c,isSourceHosted:f,orderByFields:d,outSpatialReference:m,metadata:{globalIdField:r,fieldsIndex:n,geometryType:l,featureIdInfo:{type:"object-id",fieldName:t.objectIdField},timeInfo:o,spatialReference:u,outSpatialReference:m,timeReferenceUnknownClient:t.datesInUnknownTimezone,dateFieldsTimeZone:t.dateFieldsTimeZone,subtypeField:null,subtypes:null,typeIdField:null,types:null},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:null,snapshotInfo:v}}}createSourceSchema(e,t){const{definitionExpression:i,displayFilterInfo:r,customParameters:s,timeExtent:a}=this.layer;return Z({definitionExpression:i,displayFilterInfo:r,customParameters:s,timeExtent:a},e,t,null)}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:n,labelsVisible:l,orderBy:o,objectIdField:u}=this.layer,c={fields:r.map(d=>d.toJSON()),renderer:s?.clone(),labelingInfoSource:this.layer.id,featureReduction:w(this.layer,t),geometryType:a,labelingInfo:n,labelsVisible:l,objectIdField:u,orderBy:o??"default"};return J(e,t,c,i)}get hasRequiredSupport(){return j(this.layer.renderer)}get timeOptions(){return this.layer}addFilters(e,t){return je(this.layer,e,t)}getUpdateHashProperties(e){return[()=>this.layer.outFields,()=>this.layer.orderBy,()=>this.layer.definitionExpression,()=>this.layer.renderer,()=>this.layer.labelsVisible?this.layer.labelingInfo:null,()=>w(this.layer,e),()=>this.layer.customParameters,()=>De(this.layer,e)?e.floors:null]}},oe=class extends dt{constructor(e){super(e),this.type="location",this.latitudeFieldName=null,this.longitudeFieldName=null}};p([y({type:["location"],readOnly:!0,json:{write:!0}})],oe.prototype,"type",void 0),p([y({json:{write:!0}})],oe.prototype,"latitudeFieldName",void 0),p([y({json:{write:!0}})],oe.prototype,"longitudeFieldName",void 0),oe=p([P("esri.layers.support.ParquetEncodingLocation")],oe);let X=class extends dt{constructor(e){super(e),this.type="wkb",this.primaryFieldName=null}};p([y({type:["wkb"],readOnly:!0,json:{write:!0}})],X.prototype,"type",void 0),p([y({json:{write:!0}})],X.prototype,"multiscale",void 0),p([y({json:{write:!0}})],X.prototype,"orientation",void 0),p([y({json:{write:!0}})],X.prototype,"primaryFieldName",void 0),X=p([P("esri.layers.support.ParquetEncodingWkb")],X);const xr=new xt({esriGeometryPoint:"point",esriGeometryPolygon:"polygon",esriGeometryPolyline:"polyline",esriGeometryMultipoint:"multipoint"});function Er(e){return xr.toJSON(e)}class Rr{constructor(t){this.layer=t}get hasRequiredSupport(){return j(this.layer.renderer)}get timeOptions(){return null}getLabelingDeconflictionInfo(t){const i=this.layer,r=W(i,t)??U(i),s=w(i,t),a=[...i.labelingInfo||[],...s?.labelingInfo||[]];return[{vvEvaluators:{0:$(i.renderer)},deconflictionEnabled:r,labelingInfo:a}]}getUpdateHashProperties(t){return[()=>this.layer.outFields,()=>this.layer.labelsVisible?this.layer.labelingInfo:null,()=>w(this.layer,t),()=>this.layer.customParameters,()=>this.layer.orderBy,()=>this.layer.renderer,()=>this.layer.popupTemplate]}async createServiceOptions(t){const i=q(this.layer),r=t.spatialReference.toJSON(),s=this.layer.encoding;if(s==null)throw new k("parquet-layer:unsupported","creating a parquet layer view requires an encoding",{layer:this.layer});return{type:"parquet",source:{urls:this.layer.urls.items},outSpatialReference:r,geometryInfo:{geometryType:Er(this.layer.geometryType),spatialReference:this.layer.spatialReference.toJSON(),encoding:s.toJSON()},metadata:{spatialReference:this.layer.spatialReference,outSpatialReference:r,fieldsIndex:this.layer.fieldsIndex.toJSON(),featureIdInfo:{type:"object-id",fieldName:this.layer.objectIdField},geometryType:i,types:null,subtypes:null,timeInfo:null,typeIdField:null,subtypeField:null,globalIdField:null,timeReferenceUnknownClient:null,dateFieldsTimeZone:null}}}createSourceSchema(t,i){return{type:"parquet",mutable:{sourceRefreshVersion:i,availableFields:t.availableFields.includes("*")?this.layer.fields.map(r=>r.name):t.availableFields,dataFilter:{customParameters:this.layer.customParameters??null}}}}createProcessorSchema(t,i,r){const s={fields:this.layer.fields.map(a=>a.toJSON()),renderer:this.layer.renderer?.clone(),labelingInfoSource:this.layer.id,featureReduction:w(this.layer,i),geometryType:this.layer.geometryType,labelingInfo:this.layer.labelingInfo,labelsVisible:this.layer.labelsVisible,objectIdField:this.layer.objectIdField,orderBy:this.layer.orderBy};return J(t,i,s,r)}}let Or=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=W(t,e)??U(t),r=w(t,e),s=[...t.labelingInfo||[],...r?.labelingInfo||[]];return[{vvEvaluators:{0:$(t.renderer)},deconflictionEnabled:i,labelingInfo:s}]}async createServiceOptions(e){const t=this.layer,i=q(t),r=t.timeInfo?.toJSON()||null,s=t.spatialReference?t.spatialReference.toJSON():null,a=e.spatialReference.toJSON();return{type:"stream",source:this.layer.parsedUrl,outSpatialReference:a,metadata:{fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:i,featureIdInfo:{type:"object-id",fieldName:this.layer.objectIdField},timeInfo:r,timeReferenceUnknownClient:null,dateFieldsTimeZone:null,spatialReference:s,outSpatialReference:a,subtypeField:null,subtypes:null,globalIdField:null,typeIdField:null,types:null}}}createSourceSchema(e,t){const{definitionExpression:i,geometryDefinition:r,customParameters:s}=this.layer;return{type:"stream",mutable:{sourceRefreshVersion:t,availableFields:e.availableFields,dataFilter:{geometryDefinition:r?.toJSON(),definitionExpression:i,customParameters:s??null,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,purgeOptions:this.layer.purgeOptions.toJSON()}}}}createProcessorSchema(e,t,i){const{fields:r,renderer:s,geometryType:a,labelingInfo:n,labelsVisible:l,objectIdField:o,trackInfo:u}=this.layer,c={fields:r.map(d=>d.toJSON()),renderer:s?.clone(),labelingInfoSource:this.layer.id,featureReduction:w(this.layer,t),geometryType:a,labelingInfo:n,labelsVisible:l,objectIdField:o,orderBy:"default",trackInfo:u};return J(e,t,c,i)}get hasRequiredSupport(){return j(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(e){return[()=>this.layer.definitionExpression,()=>this.layer.renderer,()=>this.layer.labelsVisible?this.layer.labelingInfo:null,()=>w(this.layer,e),()=>this.layer.customParameters,()=>this.layer.geometryDefinition,()=>this.layer.definitionExpression,()=>this.layer.trackInfo]}};async function Cr(e,{subtypeField:t,sublayers:i}){const r=await Promise.all(i.map(({renderer:s})=>D(e,s)));return{type:"subtype",subtypeField:t,renderers:i.reduce((s,{subtypeCode:a},n)=>({...s,[a]:r[n]}),{})}}function kr(e,t){const i=bi();return{type:"multi",filters:e.filters,capabilities:{maxTextureSize:i.maxTextureSize},keyField:t.subtypeField,target:"feature",bindings:t.sublayers.reduce((r,{renderer:s,subtypeCode:a})=>{const n=ni(s);return{...r,[a]:n}},{})}}async function Tr(e,{subtypeField:t,sublayers:i,labelingInfoSource:r}){const s=await Promise.all(i.map(a=>{const n=E(a.renderer),l={...a,geometryType:a.geometryType??null,labelingInfoSource:r};return B(e,l,n)}));return{type:"subtype",subtypeField:t,renderers:i.reduce((a,{subtypeCode:n},l)=>({...a,[n]:s[l]}),{})}}async function qr(e,t,i,r){return{storage:kr(t,i),mesh:{properties:{timeZone:t.timeZone,displayRefreshVersion:r,returnMeshObjectId:!1,sortKey:null,currentUser:t.currentUser},strategy:{type:"feature"},factory:{symbology:await Cr(e,i),labels:await Tr(e,i)}},expressionProperties:{timeExtent:t.timeExtent?.toJSON()}}}class Mr{constructor(t){this.layer=t}getLabelingDeconflictionInfo(t){const i=this.layer;return[{vvEvaluators:{},deconflictionEnabled:i.sublayers.some(r=>U(r)),labelingInfo:i.sublayers.toArray().filter(r=>!!r.labelingInfo).flatMap(r=>r.labelingInfo)}]}async createServiceOptions(t){const i=this.layer,{capabilities:r,datesInUnknownTimezone:s,dateFieldsTimeZone:a,editingInfo:n,globalIdField:l,objectIdField:o,refreshInterval:u,subtypeField:c}=i,d=i.fieldsIndex.toJSON(),h=q(i),f=i.timeInfo?.toJSON(),m=i.spatialReference.toJSON(),v=ce(this.layer.parsedUrl),S=o,b=n?.lastEditDate==null&&u>0,x=we(v.path),Q=t.spatialReference.toJSON(),N=Be(x,b,r,h,t.extent,i.fullExtent);return{type:"feature-service",source:v,isSourceHosted:x,orderByFields:S,outSpatialReference:Q,metadata:{timeReferenceUnknownClient:s,dateFieldsTimeZone:a,subtypeField:c,globalIdField:l,fieldsIndex:d,geometryType:h,featureIdInfo:Ee(this.layer),timeInfo:f,spatialReference:m,outSpatialReference:Q,subtypes:this.layer.subtypes?.map(C=>C.toJSON()),typeIdField:null,types:null},queryMetadata:{maxRecordCount:r.query.maxRecordCount,supportsCompactGeometry:r.query.supportsCompactGeometry,supportsDefaultSpatialReference:r.query.supportsDefaultSpatialReference,supportsFormatPBF:r.query.supportsFormatPBF,supportsMaxRecordCountFactor:r.query.supportsMaxRecordCountFactor,supportsQuantization:r.query.supportsQuantization,lastEditDate:n?.lastEditDate?.getTime(),snapshotInfo:N}}}createSourceSchema(t,i){const{definitionExpression:r,customParameters:s,gdbVersion:a,historicMoment:n,subtypeField:l,timeExtent:o,apiKey:u,displayFilterInfo:c}=this.layer,d={queryScaleRanges:this.layer.sublayers.items.map(h=>({subtypeCode:h.subtypeCode,minScale:h.minScale,maxScale:h.maxScale})),definitionExpression:r,displayFilterInfo:c,customParameters:s,gdbVersion:a,historicMoment:n,subtypeField:l,timeExtent:o};return Z(d,t,i,u)}createProcessorSchema(t,i,r){const s={labelingInfoSource:this.layer.id,subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers,(a,n)=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfoSource:this.layer.id+`-${n}`,labelingInfo:a.labelingInfo,labelsVisible:a.labelsVisible,renderer:a.renderer,subtypeCode:a.subtypeCode,orderBy:null}))};return qr(t,i,s,r)}addFilters(t,i){t=je(this.layer,t,i);const r=this.layer.sublayers.filter(a=>!zr(a,i)).map(a=>a.subtypeCode);if(!r.length)return t;t??=new H;const s=`NOT ${this.layer.subtypeField} IN (${r.join(",")})`;return t.where=A(t.where,s),t}get hasRequiredSupport(){return!0}get timeOptions(){return this.layer}getUpdateHashProperties(t){return[()=>this.layer.apiKey,()=>this.layer.customParameters,()=>this.layer.definitionExpression,()=>De(this.layer,t)?t.floors:null,()=>this.layer.outFields,()=>this.layer.gdbVersion,()=>this.layer.historicMoment,()=>this.layer.sublayers.map(({renderer:i,labelsVisible:r,labelingInfo:s,visible:a,minScale:n,maxScale:l})=>({renderer:i,labelsVisible:r,labelingInfo:s,visible:a,minScale:n,maxScale:l}))]}setGraphicOrigin(t){const i=this.layer.fieldsIndex.get(this.layer.subtypeField),r=t.attributes[i.name],s=this.layer.sublayers.find(a=>a.subtypeCode===r);t.layer=t.sourceLayer=s}}function zr(e,t){return e.visible&&(e.minScale===0||Ge(t.scale,e.minScale)||t.scale<e.minScale)&&(e.maxScale===0||Ge(t.scale,e.maxScale)||t.scale>e.maxScale)}let lt=class{constructor(){this._commands=new Map,this._historicMoment=null}add(e){switch(e.type){case"override":return this._addOverride(e);case"override-by-id":return this._addOverrideById(e)}}toMessage(){const e={historicMoment:this._historicMoment,commands:{updateByIdWeak:[],updateWeak:[],removeWeak:[],update:[],remove:[],release:[]}};for(const[t,i]of this._commands.entries())switch(i.type){case"override-update-by-id":e.commands.updateByIdWeak.push(t);break;case"override-update":i.isWeak?e.commands.updateWeak.push(i.feature):e.commands.update.push(i.feature);break;case"override-remove":i.isWeak?e.commands.removeWeak.push(t):e.commands.remove.push(t);break;case"override-release":e.commands.release.push(t)}return e}_addOverrideById(e){this._historicMoment=e.historicMoment;for(const t of e.updates)this._commands.set(t,{type:"override-update-by-id",isWeak:e.isWeak});for(const t of e.removed)this._commands.set(t,{type:"override-remove",isWeak:e.isWeak})}_addOverride(e){this._historicMoment=e.historicMoment;for(const t of e.updates)this._commands.set(t.objectId,{type:"override-update",feature:t,isWeak:e.isWeak});for(const t of e.removed)this._commands.set(t,{type:"override-remove",isWeak:e.isWeak});for(const t of e.release)this._commands.set(t,{type:"override-release"})}};async function I(e,t){try{return await e}catch(i){if(i.name!=="no-queryEngine")throw i;return t}}function Y(e,t){const i=new Set;for(const r of e instanceof Set?e.values():e.keys())t.has(r)||i.add(r);return i}class Ar{constructor(t,i,r){const s=r?t.getTileCoverage(r,0,!0,"closest"):null,a=t.getTileCoverage(i,0,!0,"closest");if(this._tileKeys=new Map,s)for(const n of s.keys())this._tileKeys.set(n.id,n);if(a)for(const n of a.keys())this._tileKeys.set(n.id,n)}get coverageSet(){return new Set(this._tileKeys.keys())}keys(){return this._tileKeys.values()}}let Pr=class{constructor(e){this.version=e}};class Ur{constructor(t){this._subscriptions=new Map,this._visible=new Set,this._paused=new Set,this._version=0,this._config=t}destroy(){}get coverageSet(){return this._coverage?.coverageSet??new Set}get subscriptions(){return new Set(this._subscriptions.keys())}suspend(){this._suspendedOverage=this._coverage,this._coverage=null,this._updateSubscriptions()}resume(){this._coverage==null&&(this._coverage=this._suspendedOverage,this._suspendedOverage=null,this._updateSubscriptions())}update(t,i){return this._version=(this._version+1)%Number.MAX_SAFE_INTEGER,this._updateCoverage(t,i),this._updateSubscriptions(),new Set(this._visible)}updateVisibility(){const t=this._updateVisibility();return this._visible=t,this._visible}_updateCoverage(t,i){this._coverage=new Ar(this._config.tileInfoView,t,i)}_updateSubscriptions(){const t=this.coverageSet,i=this._updateVisibility(),r=Y(i,t),s=Y(this._subscriptions,i),a=Y(t,this._subscriptions),n=Y(s,t),l=Y(r,n),o=Y(l,this._paused);this._visible=i;for(const u of a.values())this._subscriptions.set(u,new Pr(this._version));for(const u of o.values())this._paused.add(u);for(const u of n.values())this._subscriptions.delete(u),this._paused.delete(u);(a.size||n.size||o.size)&&this._sendUpdateSubscriptions(a,n,o)}_sendUpdateSubscriptions(t,i,r){const s=Array.from(t.values()).map(a=>({tileId:a,version:this._subscriptions.get(a).version}));this._config.updateSubscriptions({subscribe:s,unsubscribe:Array.from(i.values()),pause:Array.from(r.values())})}_updateVisibility(){const t=new Set,i=new Set;if(!this._coverage)return t;for(const r of this._coverage.keys()){if(this._config.isDone(r)){t.add(r.id);continue}this._addVisibleParent(t,i,r)||this._addVisibleChildren(t,r)||t.add(r.id)}return t}_addVisibleParent(t,i,r){let s=!1;for(const a of this._visible.values())new Me(a).containsChild(r)&&(t.add(a),i.add(a),s=!0);return s}_addVisibleChildren(t,i){let r=!1;for(const s of this._visible.values()){const a=new Me(s);i.containsChild(a)&&(t.add(s),r=!0)}return r}}function Nr(e,t){if(t.type!=="feature"&&t.type!=="subtype-group")return[];if(!t.url)return[];const i="utilityNetworks"in e.map?e.map.utilityNetworks??[]:[];for(const r of i)if(r.isUtilityLayer(t)){const s=t.fieldsIndex.get("assetgroup"),a=t.fieldsIndex.get("assettype");return[s?.name,a?.name].filter(n=>n!=null)}return[]}class Lr{constructor(t){this._fieldsIndex=t,this._clauses=[]}async finish(){return{requiresCurrentUser:(await Promise.all(this._clauses)).some(t=>t.currentUserRequired)}}visitClientWhereClause(t){t&&this._clauses.push(Ht(t,this._fieldsIndex))}visitFeatureReduction(t){if(t)switch(t.type){case"binning":case"cluster":this.visitLabelingInfo(t.labelsVisible,t.labelingInfo)}}visitLabelingInfo(t,i){if(t&&i!=null)for(const r of i)this.visitClientWhereClause(r.where)}visitDisplayFilter(t,i){if(t)for(const r of i?.filters??[])this.visitClientWhereClause(r.where)}visitFilter(t){this.visitClientWhereClause(t?.where)}visitTrackInfo(t){t!=null&&(this.visitLabelingInfo(t?.latestObservations.labelsVisible,t?.latestObservations.labelingInfo),this.visitLabelingInfo(t?.previousObservations.labelsVisible,t?.previousObservations.labelingInfo),this.visitLabelingInfo(t?.trackLines.labelsVisible,t?.trackLines.labelingInfo))}}const Br=e=>{let t=class extends e{constructor(...i){super(...i),this._updatingRequiredPromise=null,this.filter=null,this.layer=null,this.requiresCurrentUser=!1,this.requiredFields=[],this.view=null}initialize(){this.addHandles([ve(()=>{const i=this.layer,r=this.view;return[i&&"elevationInfo"in i?i.elevationInfo?.featureExpressionInfo:null,i&&"displayField"in i?i.displayField:null,i&&"timeInfo"in i&&i.timeInfo,i&&"renderer"in i&&i.renderer,i&&"labelingInfo"in i&&i.labelingInfo,i&&"floorInfo"in i&&i.floorInfo,r?.requiredFieldsOptions?.featureTitleFields&&i&&"featureTitleFields"in i&&i.featureTitleFields,r?.requiredFieldsOptions?.utilityNetworkFields&&Nr(r,i),i.displayFilterInfo,this.displayFilterEnabled,this.filter,this.featureEffect,this.timeExtent,i?.type==="knowledge-graph-sublayer"&&i.parentCompositeLayer.type==="link-chart"&&i.parentCompositeLayer.linkChart?.linkChartProperties.nonspatialDataDisplay?.mode,i?.type==="parquet"&&i.popupTemplate]},()=>this._handleChange(),Lt),Oe(()=>this.view?.floors,"change",()=>this._handleChange()),Oe(()=>this.layer.displayFilterInfo?.filters,"change",()=>this._handleChange()),Oe(()=>this.layer&&"sublayers"in this.layer?this.layer.sublayers:null,"change",()=>this._handleChange())])}get availableFields(){if(!this.layer)return[];const{layer:i,layer:{fieldsIndex:r},requiredFields:s}=this;return"outFields"in i&&i.outFields?We(r,[...ht(r,i.outFields),...s]):We(r,s)}get displayFilterEnabled(){return(this.view?.displayFilterEnabled??!0)&&(!("displayFilterEnabled"in this.layer)||(this.layer?.displayFilterEnabled??!0))}get effectiveDisplayFilter(){const i=this.layer;return this.displayFilterEnabled&&i.displayFilterInfo?vi(i.displayFilterInfo,this.view):null}get featureEffect(){return this.layer&&"featureEffect"in this.layer?this.layer.featureEffect:null}set featureEffect(i){this._override("featureEffect",i)}get maximumNumberOfFeatures(){return 0}set maximumNumberOfFeatures(i){R.getLogger(this).error("#maximumNumberOfFeatures=","Setting maximum number of features is not supported")}get maximumNumberOfFeaturesExceeded(){return!1}get signedInUser(){return this.layer?.url?Kt(this.layer.url):Promise.resolve(null)}highlight(i,r){throw new Error("missing implementation")}createQuery(){const i={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference},r=this.filter!=null?this.filter.createQuery(i):new Ie(i);return"floorInfo"in this.layer&&this.layer.floorInfo&&(r.where=A(r.where,rt(this))),this.displayFilterEnabled&&(r.where=A(r.where,this.effectiveDisplayFilter?.where)),this.timeExtent!=null&&(r.timeExtent=r.timeExtent!=null?r.timeExtent.intersection(this.timeExtent):this.timeExtent.clone()),r}createAggregateQuery(){const i={outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference};return new Ie(i)}queryFeatures(i,r){throw new Error("missing implementation")}queryObjectIds(i,r){throw new Error("missing implementation")}queryFeatureCount(i,r){throw new Error("missing implementation")}queryExtent(i,r){throw new Error("missing implementation")}async fetchPopupFeaturesFromGraphics(i,r){const s=await this._createPopupQuery(i.map(a=>a.origin?.layer??a.layer),r);return await Fi(this.layer,i,s,{getPopupTemplate:a=>a&&"popupEnabled"in a&&a.popupEnabled?st(a,r):null,hasRequiredFields:(a,n)=>this._popupFeatureHasRequiredFields(a,n),...r})}_handleChange(){const i=Promise.all([this._updateRequiredFields(),this._updateClientWhereClauseRequirements()]).then(()=>{});return this._set("_updatingRequiredPromise",i),i.then(()=>{this._updatingRequiredPromise===i&&this._set("_updatingRequiredPromise",null)}),i}async _updateClientWhereClauseRequirements(){if(!this.layer||!this.view)return;const{layer:i}=this,r=new Lr(i.fieldsIndex);if(r.visitFilter(this.filter),"featureReduction"in i&&r.visitFeatureReduction(i.featureReduction),"labelingInfo"in i&&r.visitLabelingInfo(i.labelsVisible,i.labelingInfo),"trackInfo"in i&&r.visitTrackInfo(i.trackInfo),this.view.type==="2d"&&(r.visitFilter(this.featureEffect?.filter),r.visitDisplayFilter(this.displayFilterEnabled,i.displayFilterInfo),"featureReduction"in i&&r.visitFeatureReduction(i.featureReduction)),i.type==="subtype-group")for(const s of i.sublayers)r.visitLabelingInfo(s.labelsVisible,s.labelingInfo);try{const s=await r.finish();this._set("requiresCurrentUser",s.requiresCurrentUser)}catch(s){R.getLogger(this).error(s)}}async _updateRequiredFields(){if(!this.layer||!this.view)return;const i=this.view.type==="3d",{layer:r,layer:{fieldsIndex:s}}=this,a="renderer"in r&&r.renderer,n="orderBy"in r&&r.orderBy,l="featureReduction"in r?r.featureReduction:null,o=new Set,u=[a?a.collectRequiredFields(o,s):null,Ze(o,r),i&&"elevationInfo"in r?Bt(o,r):null,this.filter!=null?Ke(o,r,this.filter):null,i||this.featureEffect==null?null:Ke(o,r,this.featureEffect.filter),!i&&l?Dt(o,r,l):null,!i&&n?jt(o,r,n):null];if("timeInfo"in r&&r.timeInfo&&this.timeExtent&&M(o,r.fieldsIndex,[r.timeInfo.startField,r.timeInfo.endField]),"timeInfo"in r&&r.timeInfo&&"trackInfo"in r&&r.trackInfo){const{trackInfo:h}=r;M(o,r.fieldsIndex,[r.timeInfo.trackIdField]),r.type!=="feature"&&h.timeField!=="startTimeField"||M(o,r.fieldsIndex,[r.timeInfo.startField]),h.timeField==="endTimeField"&&M(o,r.fieldsIndex,[r.timeInfo.endField]),await $t(o,r)}if("floorInfo"in r&&r.floorInfo&&M(o,r.fieldsIndex,[r.floorInfo.floorField]),"featureTitleFields"in r&&this.view?.requiredFieldsOptions?.featureTitleFields&&r.featureTitleFields&&M(o,r.fieldsIndex,r.featureTitleFields),r.type==="feature"&&r.globalIdField&&this.view?.requiredFieldsOptions?.globalIdField&&M(o,r.fieldsIndex,[r.globalIdField]),this.displayFilterEnabled&&u.push(Jt(o,r,r.displayFilterInfo)),r.type==="feature"&&i&&r.infoFor3D!=null&&(r.globalIdField==null&&R.getLogger(this).error("globalIdField missing on 3DObjectFeatureLayer"),M(o,r.fieldsIndex,[r.globalIdField])),r.type==="subtype-group"){ae(o,s,r.subtypeField);const h=r.sublayers.map(f=>Promise.all([f.renderer?.collectRequiredFields(o,s),Ze(o,f)]));u.push(Promise.all(h))}if(r.type==="catalog-footprint"&&r.parent){const h=r.parent;M(o,s,[h.itemNameField,h.itemSourceField,h.itemTypeField,h.maxScaleField,h.minScaleField])}r.type==="knowledge-graph-sublayer"&&r.parentCompositeLayer.type==="link-chart"&&ae(o,s,vt),r.type==="parquet"&&u.push(at(r,r.popupTemplate).then(h=>{for(const f of h)o.add(f)}));const c=await Promise.allSettled(u);if(i)ae(o,s,r.objectIdField);else for(const h of gi(Ee(r)))ae(o,s,h);i&&"displayField"in r&&r.displayField&&ae(o,s,r.displayField);for(const h of c)h.status==="rejected"&&R.getLogger(this).error(h.reason);const d=Array.from(o).sort();this._set("requiredFields",d)}_popupFeatureHasRequiredFields(i,r){return ft(i,r)}async _createPopupQuery(i,r){const s=this.layer.createQuery(),a=new Set;let n=!1;const l=i??[this.layer];for(const o of l){if(!("popupEnabled"in o))continue;const u=st(o,r);if(u==null)continue;const c=await St(u);Se(r);const d=c&&c.arcadeUtils.hasGeometryOperations(u);n=!(this.layer.geometryType!=="point"&&!d);const h=await at(this.layer,u);Se(r);for(const f of h)a.add(f)}return s.returnGeometry=n,s.returnZ=n,s.returnM=n,s.outFields=Array.from(a),s.outSpatialReference=this.view.spatialReference,"floorInfo"in this.layer&&this.layer.floorInfo&&(s.where=A(s.where,rt(this))),s}canResume(){return!!super.canResume()&&(this.timeExtent==null||!this.timeExtent.isEmpty)}getTest(){}get test(){}};return p([y()],t.prototype,"_updatingRequiredPromise",void 0),p([y({readOnly:!0})],t.prototype,"availableFields",null),p([y({readOnly:!0})],t.prototype,"displayFilterEnabled",null),p([y({readOnly:!0})],t.prototype,"effectiveDisplayFilter",null),p([y({type:Si})],t.prototype,"featureEffect",null),p([y({type:H})],t.prototype,"filter",void 0),p([y()],t.prototype,"layer",void 0),p([y({type:Number})],t.prototype,"maximumNumberOfFeatures",null),p([y({readOnly:!0,type:Boolean})],t.prototype,"maximumNumberOfFeaturesExceeded",null),p([y()],t.prototype,"requiresCurrentUser",void 0),p([y({readOnly:!0})],t.prototype,"requiredFields",void 0),p([y({readOnly:!0})],t.prototype,"signedInUser",null),p([y()],t.prototype,"suspended",void 0),p([y()],t.prototype,"view",void 0),t=p([P("esri.views.layers.FeatureLayerView")],t),t};function Dr(e,t){const i=new Set;return e&&e.forEach(r=>i.add(r)),t&&t.forEach(r=>i.add(r)),i.has("*")?["*"]:Array.from(i)}const ut=4294967294;function jr(e,t){return Ut(e.map(i=>ve(()=>{const r=i();return r&&typeof r=="object"?"getTime"in r&&typeof r.getTime=="function"?r.getTime():JSON.stringify(r):r},t)))}let _=class extends Br(wi(ii(Ii))){constructor(){super(...arguments),this._commandsQueue=new si({process:e=>{switch(e.type){case"override-batch":return this._doOverride(e);case"update":return this._doUpdate();case"highlight":return this._updateHighlights()}}}),this._visibilityOverrides=new Set,this._lastAvailableFields=[],this._lastTargetState=null,this.eventLog=new z,this._sourceRefreshVersion=1,this._displayRefreshVersion=1,this._pipelineUpdating=!1,this._editUpdatingHandles=new gt,this._fields=null,this._sourceUpdating=!1,this.featureEffectView=new V}destroy(){this._workerProxy?.destroy(),this._workerAttached.reject($e()),this._commandsQueue.destroy()}initialize(){this._workerAttached=ge(),se(this._workerAttached.promise),this.addResolvingPromise(this._initProxy()),this.featureEffectView.featureEffect=this.featureEffect,this.featureEffectView.endTransition()}async _initProxy(){const e=this.layer;if("isTable"in e&&e.isTable)throw new k("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:e});if((e.type==="feature"||e.type==="subtype-group")&&Et(e)?.operations.supportsQuery===!1)throw new k("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e});this._workerProxy&&this._workerProxy.destroy();const t=this._createClientOptions();this._workerProxy=await Ti(t)}async _attachProxy(){const e={service:await this.layerAdapter.createServiceOptions(this.view),tileInfoJSON:this.view?.featuresTilingScheme?.tileInfo?.toJSON()};let t=[];Array.isArray(e.service.source)&&(t=e.service.source);try{await this._workerProxy.pipeline.onAttach(e,{transferList:t}),this._workerAttached.resolve()}catch(i){this._workerAttached.reject($e()),Rt(i)}}async _detachProxy(){return this._workerProxy.pipeline.onDetach()}async getWorker(){return await this._workerAttached.promise,this._workerProxy}get dataUpdating(){return this._sourceUpdating||this._editUpdatingHandles.updating}get effectiveDisplayFilterClause(){const e=this.effectiveDisplayFilter?.where??null;return e&&this.hasHighlight?Ot(e,Ct(this.layer.objectIdField,this.highlightIds)):e}get hasAllFeatures(){return this.layer.visible&&!this.suspended&&this.eventLog.hasAllData&&this.eventLog.willQueryAllFeatures}get hasAllFeaturesInView(){const e=this.effectiveDisplayFilter?.where||null,t=!this.eventLog.willQueryAllFeatures&&e!=null&&e!=="1=1";return this.layer.visible&&!this.suspended&&this.eventLog.hasAllData&&!t}get hasFullGeometries(){return this.layer.visible&&!this.suspended&&this.eventLog.hasAllData&&this.eventLog.willQueryFullResolutionGeometry}get labelingCollisionInfos(){const e=this.layerAdapter.getLabelingDeconflictionInfo(this.view),t=this.layer.geometryType,i=!this.suspended;return e.map(({vvEvaluators:r,deconflictionEnabled:s,labelingInfo:a})=>({labelingInfo:a,container:this.featureContainer,vvEvaluators:r,deconflictionEnabled:s,geometryType:t,visible:i}))}get layerAdapter(){switch(this.layer.type){case"feature":return this.layer.source.type==="memory"?new ot(this.layer):new Ir(this.layer);case"geojson":case"csv":case"wfs":return new ot(this.layer);case"parquet":return new Rr(this.layer);case"subtype-group":return new Mr(this.layer);case"ogc-feature":return new Fr(this.layer);case"stream":return new Or(this.layer);case"oriented-imagery":return new Vr(this.layer);case"knowledge-graph-sublayer":return new _r(this.layer);case"catalog-footprint":return new yr(this.layer);default:kt(this.layer)}return null}get timeExtent(){return Yt(this.layerAdapter.timeOptions,this.view?.timeExtent,this._get("timeExtent"))}getDisplayStatistics(e,t){return this.featureContainer?.getDisplayStatistics(e,t)}async queryHeatmapStatistics(e){return(await this.getWorker()).pipeline.queryHeatmapStatistics(e)}highlight(e,t){let i;e instanceof be?i=[e.getObjectId()]:typeof e=="number"||typeof e=="string"?i=[e]:Tt.isCollection(e)&&e.length>0?i=e.map(a=>a?.getObjectId()).toArray():Array.isArray(e)&&e.length>0&&(i=typeof e[0]=="number"||typeof e[0]=="string"?e:e.map(a=>a?.getObjectId()));const r=i?.filter(qt);if(!r?.length)return Je();const s=t?.name??_i;return this._addHighlights(r,s),Je(()=>!this.destroyed&&this._removeHighlights(r,s))}async hitTest(e,t){const i=await this.featureContainer.hitTest(t);if(i.length===0)return null;const r=await this.getWorker(),{features:s,aggregates:a,tracks:n}=await r.pipeline.getDisplayFeatures(i),l=this.featureContainer.getSortKeys(i),o=({displayId:u},{displayId:c})=>l.has(u)&&l.has(c)?l.get(u)-l.get(c):u-c;return s.sort(o).reverse(),a.sort(o).reverse(),[...a.map(u=>this._createGraphicHit(e,Ue.fromJSON(u))),...n.map(u=>this._createGraphicHit(e,Vi.fromJSON(u))),...s.map(u=>this._createGraphicHit(e,be.fromJSON(u)))]}async queryStatistics(){const e=await this.getWorker();return I(e.pipeline.queryStatistics(),{featureCount:0,ringCount:0,vertexCount:0})}async querySummaryStatistics(e,t,i){const r=await this.getWorker(),s={...t,scale:this.view.scale},a=r.features.executeQueryForSummaryStatistics(this._cleanUpQuery(e),s,i);return I(a,{})}async queryAggregateSummaryStatistics(e,t,i){const r={...t,scale:this.view.scale},s=(await this.getWorker()).aggregates.executeQueryForSummaryStatistics(this._cleanUpAggregateQuery(e),r,i);return I(s,{})}async queryUniqueValues(e,t,i){const r=await this.getWorker(),s={...t,scale:this.view.scale},a=r.features.executeQueryForUniqueValues(this._cleanUpQuery(e),s,i);return I(a,{uniqueValueInfos:[]})}async queryAggregateUniqueValues(e,t,i){const r=await this.getWorker(),s={...t,scale:this.view.scale},a=r.aggregates.executeQueryForUniqueValues(this._cleanUpAggregateQuery(e),s,i);return I(a,{uniqueValueInfos:[]})}async queryClassBreaks(e,t,i){const r=await this.getWorker(),s={...t,scale:this.view.scale},a=r.features.executeQueryForClassBreaks(this._cleanUpQuery(e),s,i);return I(a,{classBreakInfos:[]})}async queryAggregateClassBreaks(e,t,i){const r=await this.getWorker(),s={...t,scale:this.view.scale},a=r.aggregates.executeQueryForClassBreaks(this._cleanUpAggregateQuery(e),s,i);return I(a,{classBreakInfos:[]})}async queryHistogram(e,t,i){const r=await this.getWorker(),s={...t,scale:this.view.scale},a=r.features.executeQueryForHistogram(this._cleanUpQuery(e),s,i);return I(a,{bins:[],maxValue:null,minValue:null,normalizationTotal:null})}async queryAggregateHistogram(e,t,i){const r=await this.getWorker(),s={...t,scale:this.view.scale},a=r.aggregates.executeQueryForHistogram(this._cleanUpAggregateQuery(e),s,i);return I(a,{bins:[],maxValue:null,minValue:null,normalizationTotal:null})}queryFeatures(e,t){return this.queryFeaturesJSON(e,t).then(i=>{const r=qe.fromJSON(i);return r.features.forEach(s=>this._setLayersForFeature(s)),r})}async queryVisibleFeatures(e,t){const i=(await this.getWorker()).pipeline.queryVisibleFeatures(this._cleanUpQuery(e),t),r=await I(i,{features:[]}),s=qe.fromJSON(r);return s.features.forEach(a=>this._setLayersForFeature(a)),s}async queryAggregates(e,t){const i=(await this.getWorker()).aggregates.executeQuery(this._cleanUpAggregateQuery(e),t),r=await I(i,{features:[]}),s=le.fromJSON(r);return s.features.forEach(a=>this._setLayersForFeature(a)),s}async queryAggregateIds(e,t){const i=(await this.getWorker()).aggregates.executeQueryForIds(this._cleanUpAggregateQuery(e),t);return I(i,[])}async queryAggregateCount(e,t){const i=(await this.getWorker()).aggregates.executeQueryForCount(this._cleanUpAggregateQuery(e),t);return I(i,0)}async queryAggregateJSON(e,t){const i=(await this.getWorker()).aggregates.executeQuery(this._cleanUpAggregateQuery(e),t);return I(i,{features:[]})}async queryFeaturesJSON(e,t){const i=(await this.getWorker()).features.executeQuery(this._cleanUpQuery(e),t);return I(i,{features:[]})}async queryObjectIds(e,t){const i=(await this.getWorker()).features.executeQueryForIds(this._cleanUpQuery(e),t);return I(i,[])}async queryFeatureCount(e,t){const i=(await this.getWorker()).features.executeQueryForCount(this._cleanUpQuery(e),t);return I(i,0)}async queryExtent(e,t){const i=(await this.getWorker()).features.executeQueryForExtent(this._cleanUpQuery(e),t),r=await I(i,{count:0,extent:null});return{count:r.count,extent:Mt.fromJSON(r.extent)}}async queryAttributeBins(e,t){const i=(await this.getWorker()).features.executeAttributeBinsQuery(this._cleanUpAttributeBinsQuery(e),t),r=await I(i,{features:[]});return ei.fromJSON(r)}async getSampleFeatures(e){return(await this.getWorker()).pipeline.getSampleFeatures(e)}setVisibility(e,t){t?this._visibilityOverrides.delete(e):this._visibilityOverrides.add(e),this._update()}update(e){if(!this.subscriptionManager)return;this.view.animation&&!this._lastTargetState&&(this._lastTargetState=e.state.clone()),!this.view.animation&&this._lastTargetState&&(this._lastTargetState=null);const t=this.subscriptionManager.update(e.targetState,this._lastTargetState),i=this.subscriptionManager.coverageSet;for(const r of this.featureContainer.tiles||[])r.isCoverage=i.has(r.id),r.neededForCoverage=t.has(r.id)||r.isCoverage;this.featureContainer.setVisibleTiles(t)}attach(){g("esri-2d-update-debug")&&console.debug("FeatureLayerView2D.attach"),se(this._updatingHandles.addPromise(this._workerAttached.promise)),se(this._attachProxy()),this.featureContainer=new Ci(this),this.container.addChild(this.featureContainer),this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this.subscriptionManager=new Ur({tileInfoView:this.view.featuresTilingScheme,updateSubscriptions:e=>{this.featureContainer.updateSubscriptions(e),se(this._updatingHandles.addPromise(this.getWorker().then(t=>t.pipeline.updateSubscriptions(e))))},isDone:e=>this.featureContainer.isDone(e)}),this.requestUpdate(),this.addAttachHandles([jr([()=>this._displayRefreshVersion,()=>this.layer.displayFilterInfo,()=>this.timeExtent,()=>this.clips,()=>this.filter,()=>this.effectiveDisplayFilterClause,()=>this.featureEffect,()=>this._sourceRefreshVersion,()=>this.view.timeZone,()=>this.view.timeExtent,...this.layerAdapter.getUpdateHashProperties(this.view)],()=>this._update()),ve(()=>this.updateSuspended,e=>{e||(this.subscriptionManager.resume(),this.view.labelManager.requestUpdate())}),ve(()=>this.visible,e=>{this.view.labelManager.requestUpdate()})]),this._update(),this.layer.type!=="stream"&&this.layer.type!=="parquet"&&this.layer.type!=="catalog-footprint"&&this.addAttachHandles(this.layer.on("edits",e=>this._editUpdatingHandles.addPromise(this._edit(e))))}detach(){g("esri-2d-update-debug")&&console.debug("FeatureLayerView2D.detach"),this._detachProxy(),this._fields=null,this.view.labelManager.removeContainer(this.featureContainer),this.featureContainer.destroy(),this.featureContainer=null,this._commandsQueue.clear(),this.container.removeAllChildren(),this.subscriptionManager=Te(this.subscriptionManager),this._workerProxy.pipeline.onDetach(),this._workerAttached=ge(),se(this._workerAttached.promise),this._lastAvailableFields=[],this._lastSchema=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}addOverrides(e){return this._commandsQueue.push({type:"override",options:{...e,release:[]}})}removeOverrides(e){for(const i of e)if(i==null)throw new k("featurelayerview:bad-override","Tried to remove an override for an invalid objectId",{objectId:i});const t={added:[],updated:[],removed:[],release:e,isWeak:!1,historicMoment:null};return this._commandsQueue.push({type:"override",options:t})}isUpdating(){const e="renderer"in this.layer&&this.layer.renderer!=null,t=this._commandsQueue.updateTracking.updating,i=this._updatingRequiredPromise!=null,r=this.featureContainer.updatingHandles.updating,s=this.updateRequested||e&&(t||i)||r||this._pipelineUpdating||this.dataUpdating;if(g("esri-2d-log-updating")){console.log(`Updating FLV2D (${this.layer.id}): ${s}
  -> updateRequested ${this.updateRequested}
  -> hasRenderer ${e}
  -> updatingRequiredFields ${i}
  -> hasPendingCommand ${t}
  -> dataUpdating ${this.dataUpdating}
  -> processing ${this._pipelineUpdating}
  -> updatingContainer ${r}
`);for(const a of this.featureContainer.subscriptions())console.log(`    -> Tile[${a.id}] Done: ${a.done}`)}return s}_createClientOptions(){const e=this;return{get container(){return e.featureContainer},setUpdating:t=>{this._set("_pipelineUpdating",t.pipeline),this._set("_sourceUpdating",t.source)},emitEvent:t=>{this.emit(t.name,t.event)},get eventLog(){return e.eventLog},fetch:async t=>{if(g("esri-2d-stabilize-glyphs")){const i=[];for(const r of t)i.push(await e.view.stage.painter.textureManager.rasterizeItem(r));return i}return Promise.all(t.map(i=>e.view.stage.painter.textureManager.rasterizeItem(i)))},fetchDictionary:t=>Promise.all(t.map(i=>this._fetchDictionaryRequest(i)))}}async _fetchDictionaryRequest(e){try{if(this.layer.type==="subtype-group")throw new Error("InternalError: SubtypeGroupLayer does not support dictionary renderer");const t=this.layer.renderer;if(!t||t.type!=="dictionary")throw new Error("InternalError: Expected layer to have a DictionaryRenderer");const i=this._lastSchema.processor.mesh.factory.symbology;if(i.type!=="dictionary")throw new Error("InternalError: Expected schema to be of type 'dictionary'");const r={cimAnalyzer:this.view.stage.cimAnalyzer,cimResourceManager:this.view.stage.painter.textureManager.resourceManager,store:this.featureContainer.instanceStore,scaleExpression:i.scaleExpression};this._fields||(this._fields=this.layer.fields.map(l=>l.toJSON()));const s=i.visualVariableUniforms,a=it(this.layer.geometryType),n=await t.getSymbolForControlString(e.controlString,a,!1);return!n||!n.data?{type:"dictionary-response",meshes:[]}:{type:"dictionary-response",meshes:await _e({...n.data,hasTextStringTemplates:!0},{uniforms:s,path:"renderer",schemaOptions:r})}}catch{return{type:"dictionary-response",meshes:[]}}}_cleanUpQuery(e){const t=Ie.from(e)||this.createQuery();return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t.toJSON()}_cleanUpAttributeBinsQuery(e){const t=ti.from(e);return t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference),t.toJSON()}_cleanUpAggregateQuery(e){const t=Ie.from(e)||this.createAggregateQuery();t.outSpatialReference||(t.outSpatialReference=this.view.spatialReference);const i=t.objectIds??[];for(const r of t.aggregateIds??[])i.push(r);return t.objectIds=i,t.aggregateIds=[],t.toJSON()}async _update(){return this._commandsQueue.push({type:"update"})}_edit(e){return this.updateSuspended?(this.subscriptionManager.suspend(),Promise.resolve()):this._commandsQueue.push({type:"edit",event:e})}async doRefresh(e){this.attached&&(this.updateSuspended&&e||(e?this.incrementSourceRefreshVersion():this.incrementDisplayRefreshVersion()))}incrementSourceRefreshVersion(){this._sourceRefreshVersion=(this._sourceRefreshVersion+1)%ut+1}incrementDisplayRefreshVersion(){this._displayRefreshVersion=(this._displayRefreshVersion+1)%ut+1}async _resolveIdenifiers(e){const t=[],i=[];for(const a of e)a.objectId==null||a.objectId===-1?a.globalId==null?R.getLogger(this).warn("mapview-apply-edits","A feature identifier must contain either a GlobalId or ObjectId. Ignoring",{identifier:a}):i.push(a.globalId):t.push(a.objectId);const r="globalIdField"in this.layer&&this.layer.globalIdField,s=r&&this.availableFields.includes(r);if(i.length&&!s)return R.getLogger(this).error(new k("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${r} to be included the layer's outFields for updates to be reflected on the map`)),t;if(i.length){const a=await this._workerProxy.pipeline.getObjectIdsFromGlobalIds(i);for(const n of a)t.push(n)}return t}_resolveOverrides(e){const t=it(this.layer.geometryType),i=Ee(this.layer),r=[];for(const s of e.added){const a=Ye(s,t,!1,!1,i);if(a.objectId==null)throw new k("featurelayerview:bad-override","Feature does not have an objectId",{feature:s});r.push(a)}for(const s of e.updated){const a=Ye(s,t,!1,!1,i);if(a.objectId==null)throw new k("featurelayerview:bad-override","Feature does not have an objectId",{feature:s});r.push(a)}for(const s of e.removed)if(s==null)throw new k("featurelayerview:bad-override","Tried to remove an invalid objectId",{objectId:s});return{type:"override",updates:r,removed:e.removed,release:e.release,isWeak:e.isWeak??!1,historicMoment:e.historicMoment??null}}async _resolveEdit(e){const t=this.layer,i=e.historicMoment?.getTime()??null,r="layerId"in t&&e.editedFeatures?.find(l=>l.layerId===t.layerId);if(r&&this._canEditByFeature(r)){const{adds:l,deletes:o,updates:u}=r.editedFeatures,c=this.layer.objectIdField,d=u.map(m=>m.current),h=o.map(m=>"attributes"in m?{objectId:c?m.attributes[c]:null}:m),f=await this._resolveIdenifiers(h);return this._resolveOverrides({added:l,updated:d,removed:f,historicMoment:i,isWeak:!0,release:[]})}const[s,a,n]=await Promise.all([this._resolveIdenifiers(e.addedFeatures),this._resolveIdenifiers(e.updatedFeatures),this._resolveIdenifiers(e.deletedFeatures)]);return{type:"override-by-id",updates:[...s,...a],removed:n,historicMoment:i,isWeak:!0}}_canEditByFeature(e){const{adds:t,updates:i}=e.editedFeatures;return t.every(r=>this.view.spatialReference.equals(r.geometry?.spatialReference))&&i.every(r=>this.view.spatialReference.equals(r.current.geometry?.spatialReference))}async _doUpdate(){"featureReduction"in this.layer&&this.layer.featureReduction&&this.layer.featureReduction!==this._lastFeatureReduction&&(this.layer.featureReduction=this.layer.featureReduction?.clone(),this._lastFeatureReduction=this.layer.featureReduction);try{if(await Promise.allSettled([this._handleChange(),Zt(this.layer)]),this.destroyed||!this.layerAdapter?.hasRequiredSupport||!this.subscriptionManager)return;const e=this.featureContainer.instanceStore;this.featureContainer.attributeView.lockTextureUploads();const t=this._lastSchema?.processor.mesh.factory.symbology?.type;let i=!0;this.layer.type!=="subtype-group"&&this.layer.renderer?.type==="dictionary"&&t==="dictionary"&&(i=!1),e.updateStart(i);const r=this.featureEffect,s={store:e,cimAnalyzer:this.view.stage.cimAnalyzer,cimResourceManager:this.view.stage.painter.textureManager.resourceManager,scaleExpression:void 0},a=await this._createViewSchemaConfig(),n={source:this.layerAdapter.createSourceSchema(a,this._sourceRefreshVersion),processor:await this.layerAdapter.createProcessorSchema(s,a,this._displayRefreshVersion)},l=n.processor.mesh.factory.labels;l&&this.view.labelManager.setLabelSchemaStyles(l,this.featureContainer);const o=Qe(this._lastSchema?.source.mutable,n.source.mutable)||Qe(this._lastSchema?.processor,n.processor);if(!o)return this.featureContainer.requestRender(),this.featureContainer.attributeView.unlockTextureUploads(),e.updateEnd(i),void(this.featureEffectView.featureEffect=r);this._lastSchema=n,this._fields=null;const u=Math.round(performance.now());g("esri-2d-update-debug")&&console.debug(`Id[${this.layer.uid}] Version[${u}] FeatureLayerView2D._doUpdate`,{changes:o}),await(await this.getWorker()).pipeline.updateSchema(n,u),e.updateEnd(i),this.featureEffectView.featureEffect=r,this.featureEffectView.endTransition(),this.featureContainer.restartAllAnimations(),this.featureContainer.attributeView.unlockTextureUploads(),this.featureContainer.trySwapRenderState(),this.featureContainer.requestRender(),g("esri-2d-update-debug")&&console.debug(`Version[${u}] FeatureLayerView2D.updateEnd`),this.requestUpdate()}catch(e){g("esri-2d-update-debug")&&console.error("Encountered an error during update",e)}}async _doOverride(e){const t=await this.getWorker();try{for(const i of e.messages)switch(i.type){case"edit":{const r=new lt;r.add(await this._resolveEdit(i.event)),await t.pipeline.onOverride(r.toMessage());break}case"override":{const r=new lt;r.add(this._resolveOverrides(i.options)),await t.pipeline.onOverride(r.toMessage());break}}}catch(i){He(i)}}_getEffectiveAvailableFields(e){const t=Dr(this._lastAvailableFields,e);return this._lastAvailableFields=t,zt(this.layer.fieldsIndex,t)}async _createViewSchemaConfig(){const e=this.requiresCurrentUser?await this.signedInUser:null,t=[$r(this.view,this.layerAdapter,this.timeExtent,this._visibilityOverrides,this.filter,this.effectiveDisplayFilterClause),this.featureEffect?.filter?.toJSON()??null];return{availableFields:this._getEffectiveAvailableFields(this.availableFields),displayFilterEnabled:this.displayFilterEnabled,filters:t,scale:this.view.scale,timeZone:this.view.timeZone,timeExtent:this.view.timeExtent,currentUser:e}}_processHighlight(){this._commandsQueue.push({type:"highlight"})}async _updateHighlights(){const e=this._getHighlights(),t=await this.getWorker();if(this.destroyed)return;const i=t.pipeline.updateHighlight({highlights:e}).catch(r=>{He(r)||R.getLogger(this).error(r)});this._updatingHandles.addPromise(i)}_setLayersForFeature(e){e.layer=e.sourceLayer=this.layer,this.layerAdapter.setGraphicOrigin&&this.layerAdapter.setGraphicOrigin(e)}_createGraphicHit(e,t){return this._setLayersForFeature(t),t.geometry!=null&&(t.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:t,layer:this.layer,mapPoint:e}}};function $r(e,t,i,r,s,a){s&&(s=s.clone());const n=s!=null?s.timeExtent:null,l=i!=null&&n!=null?i.intersection(n):i||n;l&&(s??=new H,s.timeExtent=l),s=t.addFilters?.(s,e)??s,a&&(s??=new H,s.where=A(s.where,a));let o=s?.toJSON()??null;return r.size&&(o??=new H().toJSON(),o.hiddenIds=Array.from(r)),o}p([y()],_.prototype,"_commandsQueue",void 0),p([y()],_.prototype,"_sourceRefreshVersion",void 0),p([y()],_.prototype,"_displayRefreshVersion",void 0),p([y({readOnly:!0})],_.prototype,"_pipelineUpdating",void 0),p([y()],_.prototype,"_sourceUpdating",void 0),p([y({readOnly:!0})],_.prototype,"dataUpdating",null),p([y({readOnly:!0})],_.prototype,"effectiveDisplayFilterClause",null),p([y({readOnly:!0})],_.prototype,"hasAllFeatures",null),p([y({readOnly:!0})],_.prototype,"hasAllFeaturesInView",null),p([y({readOnly:!0})],_.prototype,"hasFullGeometries",null),p([y()],_.prototype,"featureEffectView",void 0),p([y()],_.prototype,"labelingCollisionInfos",null),p([y()],_.prototype,"layerAdapter",null),p([y({readOnly:!0})],_.prototype,"timeExtent",null),p([y()],_.prototype,"updating",void 0),_=p([P("esri.views.2d.layers.FeatureLayerView2D")],_);const Un=Object.freeze(Object.defineProperty({__proto__:null,get default(){return _}},Symbol.toStringTag,{value:"Module"}));export{Un as F,_ as c,I as n};
