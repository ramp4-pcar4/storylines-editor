import{y as i}from"./utils-9sQxfkoa-DYQwQ-oD.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-CrZibxJ6.js";import a from"./TopFeaturesQuery-Ckj_IYM7-z8uF27kp.js";import"./main-B3OQGJDx.js";import"./normalizeUtils-Bxmy9MNI-CNRTETBy.js";import"./normalizeUtilsCommon-CRJlkfEA-UW7EjBRr.js";import"./utils-Bq23Xwmj-BnkHVXgt.js";import"./query-DFW9-NG_-_A8Hjg6h.js";import"./pbfQueryUtils-F4ZE8-K8-Dd1vvsk0.js";import"./pbf-D-y3_eZO-DHclSXMT.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-C7sPT0Bt.js";import"./projection-BA9M1R7d-CSRo_Z0k.js";import"./projectBuffer-CvCBvJ6W-Dl0REzaw.js";import"./TimeExtent-Cn0Jofqr-B5EmPIo9.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
