import{y as i}from"./utils-DuaeuwP5-Dsh27Z3U.js";import{S as p}from"./queryTopFeatures-BdkfRugo-CSVjKnHb.js";import a from"./TopFeaturesQuery-C3E7qv-F-xvnuDZA6.js";import"./main-O0jfiq4b.js";import"./normalizeUtils-b-vZURob-BDZbzw9H.js";import"./utils-Jw-4AGsF-B94mt40T.js";import"./query-nJmB7Ppn-UWJmAN-a.js";import"./pbfQueryUtils-1j64fqcx-B6kfk1WH.js";import"./pbf-Ijhb7ANA-jU7jDAK1.js";import"./memoryEstimations-iHVpvWPf-DtLA0DQj.js";import"./OptimizedGeometry-1qDYm3YK-EyMB-2cR.js";import"./OptimizedFeatureSet-D6mgsKNr-DoJM588w.js";import"./queryZScale-DBCLQqDI-CsDENYNI.js";import"./projection-m8vi7Cxv-CzwAE3GT.js";import"./TimeExtent-gZaEUVeW-CaQTy1Kv.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
