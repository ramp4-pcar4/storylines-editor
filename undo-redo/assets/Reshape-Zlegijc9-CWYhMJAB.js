import{v as h,eu as w,K as tt,a0 as O,m1 as et,ai as it,a1 as x,ak as I,jE as st,B as ot,b0 as P,ao as U,ba as k,m2 as rt,l as V,gJ as b,a6 as K,h as nt,S as l,ac as at,ek as D,D as pt,aD as z,ax as H,ah as R,a7 as ht,gK as ct,n as A,aj as lt,ag as j,aG as dt,a2 as mt,u as vt}from"./main-1TLIC4dQ.js";import{g as J}from"./asyncUtils-BPUlNCrX-C1KVWzz5.js";import C from"./GraphicsLayer-BiEC2-gS-Dmr8SPVA.js";import{o as yt}from"./ViewingMode-CdRKcXnc-Dab70bGf.js";import{w as ut}from"./SnappingVisualizer2D-Di4uotAR-a6xQSmBs.js";import{i as gt}from"./UpdatingHandles-Bd2FQ26N-DuRv0fSE.js";import{W as _t}from"./symbolUtils-D5Wjfwrf-By2S-nqv.js";import{i as Y,r as ft,l as xt}from"./SelectedVertexTooltipInfo-4SubR9ql-DKN2EpLZ.js";import{J as Gt}from"./drawUtils-pJlGx3nm-BhMlnOC_.js";import{a as Mt,E as wt}from"./GraphicMover-BruWidUQ-C3PV-T4T.js";import{w as W,aq as bt,ap as Vt,A as St}from"./SketchViewModel-B0qFHK0t-DPQUv6xT.js";import{y as L}from"./quantityUtils-B1Ov7DZK-Dlgv854k.js";import{b as It,y as Et,w as Ot,k as Tt,v as kt}from"./SketchTooltipInfo-CkyYTifq-C5BURnCd.js";import{t as Rt}from"./TranslateTooltipInfo-A8pO5CNj-Db_5xN5o.js";import{u as Ct}from"./settings-Dt5EB2Ay-DdviEZMO.js";import{V as Lt,g as Ht}from"./utils-Dd8gTonD-CMoarV7d.js";import{a as At,q as Ft,c as Pt}from"./SnappingContext-OY7xJ98b-B9cGaxUP.js";import"./GraphicsCollection-uWAVmks7-DU0kKp2c.js";import"./Layer-DvVVmz9x-C1rwqT3J.js";import"./TimeExtent-Cf2Pienb-Cbtup1ck.js";import"./BlendLayer-DjW_5k0v-CnXdOvqk.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-CSIVYh72.js";import"./parser-CWccHtwJ-BPqt9maW.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-ChZDtipV.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./ScaleRangeLayer-x42fwED3-BTnlGsWQ.js";import"./ElevationInfo-DE5to86a-jyecZdCj.js";import"./lengthUtils-C61nRlXw-DzP-f01b.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./TooltipInfoWithCoordinates-Xxefy9Or-Bpr9Kn3O.js";import"./PointSnappingHint-OKXicQ1z-Iyl38Vsz.js";import"./vec32-Cj8pVsU0-C89FOKpl.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./utils-Cb2uXNfG-BxBQ9zMx.js";import"./cimSymbolUtils-DCedSSCN-gLkZ5StQ.js";import"./utils-BfXZnjCE-hL7CDaEn.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./colorUtils-Eg6lOlXm-D48X3NMj.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./jsxFactory-Cua8zWVZ-DcgPvK68.js";import"./intl-BAA1onnp-xI81fu9q.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./webStyleSymbolUtils-r0H5toyk-CQUh8H-3.js";import"./devEnvironmentUtils-CxrVv3RG-CX5aoxVE.js";import"./styleUtils-DBPDLVBX-BQs7HaYG.js";import"./layerViewUtils-DLIaYA64-D1-SzmsQ.js";import"./GraphicManipulator-D_ewLKOT-BBXrwkfi.js";import"./projectionUtils-B-CplN3q-siptSTK4.js";import"./projectPointToVector-BZJhoF_5-DAbXJM8v.js";import"./elevationInfoUtils-Ccn2Wfoe-D760R_YM.js";import"./drapedUtils-DARF9dbf-BphcNeZ2.js";import"./editableLayers-DFUBlMJy-Bg3mheNh.js";import"./Cyclical-DgD7_U1C-7kwH-69-.js";import"./projectVectorToVector-DcyiGOWJ-yji-tmep.js";import"./geodesicUtils-DKS2UG72-q-2Lniu6.js";import"./Query-n1aoaaFC-CEO1sopr.js";import"./Field-BIQ-quF4-sUHXhj45.js";import"./fieldType-PhcL4ff8-34GIWCPv.js";import"./plane-Cf3Koz3c-D4EqpBSA.js";import"./vectorStacks-5ZZtmT9E-oq9Owx7h.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./sphere-zPMQWhGG-Lbt4GAOx.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./geodeticLengthOperator-DHGBHzf3-DbTV9LxX.js";import"./geodeticCurveType-D_etKnbP-CirnHLSB.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./triangle-BM89wdHY-z3NJ6-fX.js";import"./lineSegment-BAWQVP9P-BfYp_mnk.js";import"./spatialReferenceEllipsoidUtils-BK0OQJn2-BpWQZ_Xu.js";import"./Queue-DV3gpSdl-D2zN47dd.js";import"./Version-CnwD6MZa-CpoOge2F.js";import"./MeshTransform-ByFk-Izc-CO48UJLB.js";import"./quat-DQgq9Ar5-CT2qeOgP.js";import"./axisAngleDegrees-BTSCyz4U-CFmScIMl.js";import"./meshVertexSpaceUtils-CCr86FVF-APQtGhD0.js";import"./MeshLocalVertexSpace-Cfxtmv6L-vQhtrC0O.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./a11yUtils-CoCwThtH-BfNSgEOP.js";import"./memoize-DvEt8OkT-Cy_RrfpZ.js";import"./unitFormatUtils-FAypDaT5-teC2UYVH.js";import"./ByteSizeUnit-DL8UhsB0-B2-AmVRx.js";import"./index-kib5quT9-CS4JsQME.js";import"./draw-store-DnCf4IRI-_U6qJmos.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./widget-p2YDjs4S-B5RSfPPT.js";import"./substitute-B3zxyWVi-CCqKlQPs.js";var E;(function(t){t[t.FeatureMove=0]="FeatureMove",t[t.VertexMove=1]="VertexMove"})(E||(E={}));const Ut=()=>K.getLogger("esri.views.draw.support.ConnectedReshapeManager"),Dt=Symbol();let M=class extends at{constructor(t){super(t),this.activeOperationType=null,this.providerFactories=[],this.view=null,this._activeProviders=new Set,this._graphics=new Map,this._modifiedFeatures=new Map,this._modifiedGraphicsLayer=new C({listMode:"hide",internal:!0,title:"Connected Reshape Modified Graphics (Internal)"}),this._pendingGraphicsLayer=new C({listMode:"hide",internal:!0,title:"Connected Reshape Pending Graphics (Internal)"}),this._pendingFeatures=new Map,this._updatingHandles=new gt}initialize(){this.view.map.addMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer])}destroy(){this.view.destroyed||this.view.map.removeMany([this._modifiedGraphicsLayer,this._pendingGraphicsLayer]),this._modifiedGraphicsLayer.destroy(),this._pendingGraphicsLayer.destroy(),this._updatingHandles.destroy()}get updating(){return this._updatingHandles.updating||Array.from(this._activeProviders).some(t=>t.updating)}startFeatureMove(t){this.activeOperationType=E.FeatureMove,this._activeProviders.clear();for(const e of this.providerFactories)D(this._activeProviders,e.getFeatureReshapeProvider(t))}startVertexMove(t,e){this.activeOperationType=E.VertexMove,this._activeProviders.clear();for(const i of this.providerFactories)D(this._activeProviders,i.getVertexReshapeProvider(t,e))}finish(){this.activeOperationType=null,this._activeProviders.clear();for(const[t,e]of this._pendingFeatures){this._pendingFeatures.delete(t),this._modifiedFeatures.set(t,e);const i=this._graphics.get(t);i&&(this._modifiedGraphicsLayer.add(i),this._pendingGraphicsLayer.remove(i))}}translate(t,e,i=0){if(this.activeOperationType===null)return;const s=T(t),r=T(e),o=T(i);for(const n of this._activeProviders){const a=n.translate(s,r,o);this._update(a)}}async _initializeGraphic(t,e){t.symbol??=await this._updatingHandles.addPromise(_t(t,{scale:this.view.scale,useSourceLayer:!0})),this._pendingFeatures.has(e.uniqueId)?this._pendingGraphicsLayer.add(t):this._modifiedFeatures.has(e.uniqueId)&&this._modifiedGraphicsLayer.add(t),this.addHandles(await zt(e.originalGraphic,t,this.view),Dt)}_update(t){for(const e of t){const i=this._modifiedFeatures.delete(e.uniqueId);this._pendingFeatures.set(e.uniqueId,e);const s=pt(this._graphics,e.uniqueId,()=>{const r=e.graphic.cloneShallow();return this._initializeGraphic(r,e),r});s.geometry=e.graphic.geometry,i&&(this._modifiedGraphicsLayer.remove(s),this._pendingGraphicsLayer.add(s))}}get test(){return{activeProviders:this._activeProviders,modifiedFeatures:this._modifiedFeatures,modifiedGraphicsLayer:this._modifiedGraphicsLayer,pendingFeatures:this._pendingFeatures,pendingGraphicsLayer:this._pendingGraphicsLayer}}};async function zt(t,e,i){const s=t.sourceLayer,r=t.getObjectId();if(r==null)return Ut().error("editing:cannot-hide-graphic","Unable to hide original graphic because it has no objectId."),z();let o=null;function n(a){o?.abort(),o=J(async c=>{const p=await $(i,s);vt(c),p&&p.setVisibility?.(r,a)})}return await qt(i,e),n(!1),H([$t(i,e,a=>n(!a)),z(async()=>{n(!0);const a=await $(i,s);await R(()=>!a?.updating)})])}function $t(t,e,i){if(t.type==="3d"){const s=new Y({graphic:e});return H([t.trackGraphicState(s),x(()=>s.displaying,i)])}return x(()=>e.visible,i)}async function qt(t,e){if(t.type==="3d"){const i=new Y({graphic:e}),s=t.trackGraphicState(i);await R(()=>i.displaying||i.error),s.remove()}else await R(()=>e.visible)}async function $(t,e){const i=ht(e)||ct(e)?e.parent:e;return i?t.whenLayerView(i):null}function T(t){return isNaN(t)?0:t}h([l()],M.prototype,"activeOperationType",void 0),h([l()],M.prototype,"providerFactories",void 0),h([l()],M.prototype,"updating",null),h([l({constructOnly:!0})],M.prototype,"view",void 0),M=h([A("esri.views.draw.support.ConnectedReshapeManager")],M);let G=class extends Tt{constructor(t){super(t),this.type="translate-vertex",this.distance=L,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=L,this.elevation=null,this.area=null,this.totalLength=null}};h([l()],G.prototype,"type",void 0),h([l()],G.prototype,"distance",void 0),h([l()],G.prototype,"elevation",void 0),h([l()],G.prototype,"area",void 0),h([l()],G.prototype,"totalLength",void 0),G=h([A("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],G);function Bt(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new ft(e),selectedVertex:new xt(e),translateGraphic:new Rt(e),translateVertices:new G(e)}}function Nt(t,e){function i(){const o=e(),n=o.sketchOptions.tooltips.effectiveEnabled?o.activeTooltipInfo:null;return{...o,activeTooltipInfo:n}}let s=!1;function r(o){s||(s=!0,o(),s=!1)}return H([x(()=>{const o=i();return{context:o,geometry:o.graphic?.geometry,vertexGeometry:o.selectedVertex?.geometry}},({context:o})=>{r(()=>{Zt(o),t.info=o.activeTooltipInfo})},lt),x(()=>{const o=i(),{activeTooltipInfo:n}=o;if(n&&"key"in n)return{context:o,key:n.key}},(o,n)=>{o&&n&&o.key!==n.key&&r(()=>q(o.context))},j),Ot(t,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{q(i()),s=!1}})])}function Zt(t){const e=t.activeTooltipInfo;if(e){switch(e?.type){case"move-point":return Kt(e,t);case"selected-vertex":return jt(e,t)}e.sketchOptions=t.sketchOptions}}function Kt(t,{graphic:e}){X(t,e,e?.geometry)}function jt(t,{graphic:e,selectedVertex:i,automaticAreaMeasurementUtils:s,automaticLengthMeasurementUtils:r}){X(t,e,i?.geometry);const o=e?.geometry;switch(o?.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=s.autoArea2D(o);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=r.autoLength2D(o),t.area.visible=!1}}function X(t,e,i){e&&i?.type==="point"&&(t.setLocationFromPoint(i),t.elevation.actual=St(i),t.elevation.visible=!!e.geometry?.hasZ,t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function q(t){function e(o,n){const a=n?.geometry;if(!a||a.type!=="point")return;const{dx:c,dy:p,dz:d}=kt(o,a);if(c===0&&p===0&&d===0)return;const{x:v,y,z:u,m:_,spatialReference:f}=a,S=new V({x:v+c,y:y+p,z:u!=null?u+d:void 0,m:_,spatialReference:f});t.updateGeometry(n,S,a,c,p)}const{activeTooltipInfo:i,graphic:s,selectedVertex:r}=t;switch(i?.type){case"move-point":return e(i,s);case"selected-vertex":return e(i,r)}}function Jt(t,e,i,s){t.clear(),Q(t,e,s,i)}function Yt(t,e,i,s,r){t.clear();const{automaticAreaMeasurementUtils:o,automaticLengthMeasurementUtils:n}=s;i?.type==="polygon"?t.area=o.autoArea2D(i):i?.type==="polyline"&&(t.totalLength=n.autoLength2D(i)),Q(t,e,r,s)}function Q(t,e,i,{automaticLengthMeasurementUtils:s}){if(!i)return;const{x:r,y:o}=i.origin,n=e.toMap(i),a=e.toMap(dt(r,o)),c=s.autoDistanceBetweenPoints2D(a,n);t.distance=c??L}class Wt{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-start"}}class Xt{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape"}}class Qt{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-stop"}}class te{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-start"}}class ee{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move"}}class ie{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-stop"}}class se{constructor(e){this.added=e,this.type="vertex-select"}}class oe{constructor(e){this.removed=e,this.type="vertex-deselect"}}class re{constructor(e,i,s,r){this.added=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-add"}}class ne{constructor(e,i,s,r){this.removed=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-remove"}}const g=Ct.reshapeGraphics,ae={vertices:{default:new w({style:"circle",size:g.vertex.size,color:g.vertex.color,outline:{color:g.vertex.outlineColor,width:1}}),hover:new w({style:"circle",size:g.vertex.hoverSize,color:g.vertex.hoverColor,outline:{color:g.vertex.hoverOutlineColor,width:1}}),selected:new w({style:"circle",size:g.selected.size,color:g.selected.color,outline:{color:g.selected.outlineColor,width:1}})},midpoints:{default:new w({style:"circle",size:g.midpoint.size,color:g.midpoint.color,outline:{color:g.midpoint.outlineColor,width:1}}),hover:new w({style:"circle",size:g.midpoint.size,color:g.midpoint.color,outline:{color:g.midpoint.outlineColor,width:1}})}};let m=class extends tt.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._connectedReshapeManager=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.connectedReshapeProviders=[],this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.highlightName=null,this.highlightsEnabled=!0,this.layer=null,this.midpointGraphics=new O,this.midpointSymbol=new w({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new O,this.snappingManager=null,this.symbols=ae,this.sketchOptions=new W,this.type="reshape",this.vertexGraphics=new O,this.view=null}initialize(){const t=this.view;this._highlightHelper=new Mt({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=et(()=>this.graphic?.geometry,e=>{if(!e)return;const i=new Set(this.selectedVertices.map(p=>p.attributes?.pointIndex));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter(p=>i.has(p.attributes.pointIndex)).forEach(p=>this._addToSelection(p));const{enableMovement:s,_mover:r,graphic:o,midpointGraphics:n,vertexGraphics:a}=this,c=a.concat(n).items;s&&c.push(o),r?.set("graphics",c)},j),this.tooltip=It(()=>({view:t,options:this.sketchOptions.tooltips})),this.tooltipInfos=Bt(this.sketchOptions),this.addHandles([it(()=>t?.ready,()=>{const{layer:e,view:i}=this;Vt(i,e),this.addHandles(i.on("key-down",s=>this._keyDownHandler(s),Ht.TOOL))},{once:!0,initial:!0}),x(()=>this.graphic,()=>this.refresh()),x(()=>this.layer,(e,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),x(()=>[this.highlightsEnabled,this.highlightName],()=>{this._highlightHelper?.removeAll(),this._setUpHighlights()}),x(()=>this.enableMidpoints,()=>this.refresh()),Nt(this.tooltip,()=>this._tooltipsContext),x(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),mt),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this._connectedReshapeManager=I(this._connectedReshapeManager),this.tooltip=I(this.tooltip)}get _coordinateHelper(){return this._editGeometryOperations?.data.coordinateHelper??At(!!this.graphic.geometry?.hasZ,!!this.graphic.geometry?.hasM,this.view.spatialReference)}get _selectedVertex(){return this.selectedVertices.length===1?this.selectedVertices.at(0):void 0}get _tooltipsContext(){const{automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,sketchOptions:i,activeTooltipInfo:s,graphic:r}=this;return{sketchOptions:i,activeTooltipInfo:s,graphic:r,selectedVertex:this._selectedVertex,automaticAreaMeasurementUtils:t,automaticLengthMeasurementUtils:e,updateGeometry:(o,n,a,c,p)=>{this._setUpGeometryHelper();const d=o===this.graphic;if(d?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(o),this._syncGeometryAfterVertexMove(o,n,c,p,!0),d){const{view:v}=this,y=v.toScreen(a),u=v.toScreen(n),_=(u?.x??0)-(y?.x??0),f=(u?.y??0)-(y?.y??0);this._emitMoveEvent(_,f),this._emitMoveStopEvent(_,f)}else this._emitReshapeEvent(o),this._emitReshapeStopEvent(o);this._editGeometryOperations=I(this._editGeometryOperations)}}}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||t?.geometry==null)return;const i=t.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&st(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover(),this._setupConnectedReshapeManager()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic,this.highlightName)}_setUpGeometryHelper(){const t=this.graphic.geometry;if(t==null||t.type==="mesh"||t.type==="extent")return void this._logGeometryTypeError();const e=t.type==="multipoint"?new ot({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=Ft.fromGeometry(e,yt.Local)}_saveSnappingContextForHandle(t,e){this._snappingGraphicsLayer=new C({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;P(i),this._snappingContext=new Pt({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:e.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new ut(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._snappingGraphicsLayer!=null&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=I(this._editGeometryOperations),this._snappingTask=U(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach(i=>i.destroy()),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach(i=>i.destroy()),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(t!=null&&(t.type==="polyline"||t.type==="polygon")){const e=B(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];return t?.forEach((r,o)=>{r.forEach((n,a)=>{s.push(new k({geometry:this._coordinateHelper.arrayToPoint(n),symbol:i?.vertices?.default,attributes:{...e,pathIndex:o,pointIndex:a}}))})}),s}_createMidpointGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];for(let r=0;r<t.length;r++){const o=t[r];for(let n=0;n<o.length;n++){const a=(n+1)%o.length;if(this.graphic.geometry?.type==="polyline"&&a===0)continue;const c=o[n],p=o[a],d=this._getMidpoint(c,p);s.push(new k({geometry:d,symbol:i.midpoints.default,attributes:{...e,pathIndex:r,pointIndexStart:n,pointIndexEnd:a}}))}}return s}_updateSymbolsForTheme(){const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:this.symbols.vertices.hover?.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const e of this.vertexGraphics)this._isSelected(e)?e.symbol=this.symbols.vertices.selected:this._hoverGraphic===e?e.symbol=this.symbols.vertices.hover:e.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<e.length;i++){const s=[];for(let r=0;r<e.length;r++){if(i===r)continue;const o=e[i],n=e[r];o.x===n.x&&o.y===n.y&&s.push(r)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:s,view:r}=this,o=s.concat(i).items;t&&o.push(e),this._mover=new wt({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:o,view:r,callbacks:{onGraphicClick:n=>this._onGraphicClickCallback(n),onGraphicMoveStart:n=>this._onGraphicMoveStartCallback(n),onGraphicMove:n=>this._onGraphicMoveCallback(n),onGraphicMoveStop:n=>this._onGraphicMoveStopCallback(n),onGraphicPointerOver:n=>this._onGraphicPointerOverCallback(n),onGraphicPointerOut:n=>this._onGraphicPointerOutCallback(n)}})}_setupConnectedReshapeManager(){const{connectedReshapeProviders:t}=this;t.length!==0&&(this._connectedReshapeManager=new M({providerFactories:t,view:this.view}))}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick?.(t);else if(this._isMidpoint(e)){if(t.viewEvent.button===2)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,s)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),t.viewEvent.button===2?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:s}=t,r=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:r?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:s}=t,r=this._connectedReshapeManager,o=r?pe(this.graphic):null;if(s===this.graphic){const{geometry:a}=s;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),o&&r?.startFeatureMove([o]),void(a!=null&&a.type==="point"&&this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}))}const{selectedVertices:n}=this;if(!n.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const a=this.graphic.clone(),c=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],a,c)}this._addToSelection(s)}this._setUpOperation(t),o&&r?.startVertexMove(o,he(n)),this._emitReshapeStartEvent(s),this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)})}_onGraphicMoveCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t;e.totalDx+=i,e.totalDy+=s;const{operationType:o}=e,{geometry:n}=r;if(n!=null){if(o!=="move")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(r,t.viewEvent),this._emitReshapeEvent(r)});else if(n.type==="point")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)});else if(n.type==="polyline"||n.type==="polygon"){const a=B(n);this._updateVertexGraphicLocations(a);const{dxMap:c,dyMap:p}=ce(i,s,this.view);this._connectedReshapeManager?.translate(c,p,0),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}}}_onGraphicMoveStopCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t,{operationType:o}=e;e.totalDx+=i,e.totalDy+=s,this._onHandleMove(r,i,s,t,()=>o==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(r)),this._isMidpoint(r)?this.refresh():(this._updateTooltip(this._isVertex(r)?r:null),this._resetSnappingStateVars(),this._connectedReshapeManager?.finish(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:r}=i.attributes;i.geometry=e.arrayToPoint(t[s][r])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=e.attributes,o=t[i];e.geometry=this._getMidpoint(o[s],o[r])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,s=i.arrayToVector(t),r=i.arrayToVector(e),o=i.toXYZ(s),n=i.toXYZ(r),[a,c,p]=rt(o,n),d=i.hasM()?0:void 0;return new V({x:a,y:c,z:p,m:d,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){const[e,i]=N(t);return P(this._editGeometryOperations),this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,i,s,r){U(this._snappingTask);const o=this._snappingContext;if(!o)return;const n=t.geometry,a=s.type==="graphic-move-stop";if(this.snappingManager!=null&&this.selectedVertices.length<2&&!a){const c=this.snappingManager;this._stagedVertex=c.update({point:n,context:o}),this._syncGeometryAfterVertexMove(t,new V(this._stagedVertex),e,i,a),r(),this._snappingTask=J(async p=>{const d=await c.snap({point:n,context:o,signal:p});d.valid&&(this._stagedVertex=d.apply(),this._syncGeometryAfterVertexMove(t,new V(this._stagedVertex),e,i,a),r())})}else{const c=this._stagedVertex!=null?new V(this._stagedVertex):n;this._syncGeometryAfterVertexMove(t,c,e,i,a),r()}}_syncGeometryAfterVertexMove(t,e,i,s,r=!1){const o=this._editGeometryOperations?.data.geometry;if(o)if(o.type==="point")t.geometry=e;else if(o.type==="mesh")t.geometry=o.centerAt(e);else{const{_coordinateHelper:n}=this,[a,c]=N(t);let p=b(o);const d=p[a].length-1,v=n.pointToArray(e);p[a][c]=v,o.type==="polygon"&&(c===0?p[a][d]=v:c===d&&(p[a][0]=v)),this._isVertex(t)&&(p=this._moveRelatedCoordinates(p,t,v),p=this._moveSelectedHandleCoordinates(p,t,i,s,o.type==="polygon"),this._updateMidpointGraphicLocations(p)),this._updateGraphicGeometry(o.clone());const y=n.pointToVector(e),u=this._getVertexFromEditGeometry(t),_=n.getZ(y),f=y[0]-u.pos[0],S=y[1]-u.pos[1],F=_!=null?_-u.pos[2]:0;this._editGeometryOperations?.moveVertices([u],f,S,F),this._connectedReshapeManager?.translate(f,S,F),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:s}=e.attributes;for(const r of s){const o=this.vertexGraphics.at(r),{pathIndex:n,pointIndex:a}=o.attributes;t[n][a]=i,o.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,r){for(const o of this.selectedVertices)if(o!==e){const{pathIndex:n,pointIndex:a,relatedGraphicIndices:c}=o.attributes,p=Gt(o.geometry,i,s,this.view),d=b(p),v=t[n].length-1;t[n][a]=d,o.geometry=p,r&&(a===0?t[n][v]=d:a===v&&(t[n][0]=d));for(const y of c){const u=this.vertexGraphics.at(y),{pathIndex:_,pointIndex:f}=u.attributes;t[_][f]=d,u.geometry=p}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,s=i.geometry;if(s==null||s.type!=="polygon"&&s.type!=="polyline")return[];const r=s.clone(),o=[],{pathIndex:n,pointIndexStart:a,pointIndexEnd:c}=t.attributes,p=b(t.geometry),d=c===0?a+1:c,v=b(r);return v[n].splice(d,0,p),t.attributes={...e,pathIndex:n,pointIndex:d,relatedGraphicIndices:[]},o.push({coordinates:v[n][d],componentIndex:n,vertexIndex:d}),this._updateGraphicGeometry(r),o}_addToSelection(t){const e=Z(t);for(const i of e)i.symbol=this.symbols.vertices.selected,this.selectedVertices.add(i),this._updateTooltip(i);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=s,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){this._activeOperationInfo==null&&Et(t,this.tooltip)||Lt.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(e==null||e.type!=="polygon"&&e.type!=="polyline"||e.type==="polygon"&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),s=e.clone();let r=b(s);const o=[],n=Z(t);for(const a of n){const{x:c,y:p}=a.geometry;for(let d=0;d<r.length;d++){const v=r[d];for(let y=0;y<v.length;y++){const[u,_]=v[y];c===u&&p===_&&(o.push({coordinates:r[d][y],componentIndex:d,vertexIndex:y}),r[d].splice(Number(y),1))}}}if(s.type==="polygon")r=r.filter(a=>{if(a.length<2)return!1;const[c,p]=a[0],[d,v]=a[a.length-1];return(a.length!==2||c!==d||p!==v)&&(c===d&&p===v||a.push(a[0]),!0)}),s.rings=r;else{for(const a of r)a.length===1&&r.splice(r.indexOf(a),1);s.paths=r}this._updateGraphicGeometry(s),this.refresh(),this._emitVertexRemoveEvent(n,i,o)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:s,view:r,tooltipInfos:o}=this,n=s?.geometry;n?.type==="point"?i=o.movePoint:this._selectedVertex?i=o.selectedVertex:t===this.graphic?(i=o.translateGraphic,Jt(i,r,this._tooltipsContext,e)):t&&this.selectedVertices.length>1&&(i=o.translateVertices,Yt(i,r,n,this._tooltipsContext,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){this._updateHandlesOnExternalGeometryChange?.pause(),this.graphic.geometry=t,this._updateHandlesOnExternalGeometryChange?.resume()}_emitMoveStartEvent(t,e){const i=new te(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart?.(i)}_emitMoveEvent(t,e){const i=new ee(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove?.(i)}_emitMoveStopEvent(t,e){if(t==null||e==null){const s=this._activeOperationInfo;if(!s)return;t=s.totalDx,e=s.totalDy}const i=new ie(this.graphic,t,e);this.emit("move-stop",i),this.callbacks.onMoveStop?.(i)}_emitReshapeStartEvent(t){const e=new Wt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),this.callbacks.onReshapeStart?.(e)}_emitReshapeEvent(t){const e=new Xt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),this.callbacks.onReshape?.(e)}_emitReshapeStopEvent(t){const e=new Qt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),this.callbacks.onReshapeStop?.(e)}_emitSelectEvent(t){const e=new se(t);this.emit("select",e),this.callbacks.onVertexSelect?.(e)}_emitDeselectEvent(t){const e=new oe(t);this.emit("deselect",e),this.callbacks.onVertexDeselect?.(e)}_emitVertexAddEvent(t,e,i){const s=new re(t,this.graphic,e,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd?.(s)}_emitVertexRemoveEvent(t,e,i){const s=new ne(t,this.graphic,e,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove?.(s)}_logGeometryTypeError(){K.getLogger(this).error(new nt("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function B(t){const e=b(t.clone());if(t.type==="polygon")for(const i of e){const s=i[i.length-1];i[0][0]===s[0]&&i[0][1]===s[1]&&i.length>2&&i.pop()}return e}function N({attributes:t}){return[t?.pathIndex||0,t?.pointIndex||0]}function Z(t){return t instanceof k?[t]:[...t]}function pe(t){const e=t.sourceLayer??t.layer;return bt(e)?{graphic:t,layer:e}:null}function he(t){return t.toArray().map(e=>({pathIndex:e.attributes.pathIndex,vertexIndex:e.attributes.pointIndex}))}function ce(t,e,i){const s=i.state.inverseTransform;return{dxMap:s[0]*t+s[2]*e,dyMap:s[1]*t+s[3]*e}}h([l()],m.prototype,"_activeOperationInfo",void 0),h([l()],m.prototype,"_connectedReshapeManager",void 0),h([l()],m.prototype,"_coordinateHelper",null),h([l()],m.prototype,"_editGeometryOperations",void 0),h([l()],m.prototype,"tooltip",void 0),h([l()],m.prototype,"tooltipInfos",void 0),h([l()],m.prototype,"activeTooltipInfo",void 0),h([l({constructOnly:!0})],m.prototype,"automaticAreaMeasurementUtils",void 0),h([l({constructOnly:!0})],m.prototype,"automaticLengthMeasurementUtils",void 0),h([l()],m.prototype,"_selectedVertex",null),h([l()],m.prototype,"_tooltipsContext",null),h([l()],m.prototype,"callbacks",void 0),h([l()],m.prototype,"connectedReshapeProviders",void 0),h([l()],m.prototype,"enableMidpoints",void 0),h([l()],m.prototype,"enableMovement",void 0),h([l()],m.prototype,"enableVertices",void 0),h([l()],m.prototype,"graphic",void 0),h([l()],m.prototype,"highlightName",void 0),h([l()],m.prototype,"highlightsEnabled",void 0),h([l()],m.prototype,"layer",void 0),h([l({readOnly:!0})],m.prototype,"midpointGraphics",void 0),h([l()],m.prototype,"midpointSymbol",void 0),h([l({readOnly:!0})],m.prototype,"selectedVertices",void 0),h([l()],m.prototype,"snappingManager",void 0),h([l({readOnly:!0})],m.prototype,"state",null),h([l()],m.prototype,"symbols",void 0),h([l({type:W})],m.prototype,"sketchOptions",void 0),h([l({readOnly:!0})],m.prototype,"type",void 0),h([l({readOnly:!0})],m.prototype,"vertexGraphics",void 0),h([l()],m.prototype,"view",void 0),m=h([A("esri.views.draw.support.Reshape")],m);const ts=m;export{ts as default};
