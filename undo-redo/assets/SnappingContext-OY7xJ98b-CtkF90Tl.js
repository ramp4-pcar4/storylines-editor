import{K as at,ci as mt,B as yt,Z as xt,cf as z,li as vt,aD as T,gD as Vt,l as E,du as c,gL as X,k3 as Et,at as Tt,d2 as Pt,J as wt,ay as At}from"./main-BJ29zGwr.js";import{A as Dt,f as ht,d as Mt,O as Ct,i as q,j as St,P as Zt,z as Rt,T as F}from"./vec2-BnynUbeJ-CKtGJQAy.js";import{o as y,r as R,c as zt}from"./vec2f64-CkowXrDb-3zFQ3LNH.js";import{A as x,X as ct,g as lt,_ as C,T as H,W,S as P,l as w,L as K,y as I,O as J,P as A}from"./vec32-Cj8pVsU0-DyyiIkTg.js";import{A as Gt,p as Ut,O as bt}from"./vec42-D8CJyqHG-DnfLTeQH.js";import{o as Xt,r as L,a as It}from"./vec4f64-DD-nkcCV-CSNWKRqG.js";import{o as Lt}from"./ViewingMode-CdRKcXnc-Dab70bGf.js";import{y as j,z as Ot,O as D,w as O,e as $t,i as Ht,$,n as Yt}from"./plane-Cf3Koz3c-C52Pkvg3.js";import{d as Nt,b as Q}from"./vectorStacks-5ZZtmT9E-DwzEb9Do.js";import{m as kt,c as tt}from"./SketchViewModel-B0qFHK0t-C4S-Hz4J.js";var l;(function(s){s[s.Z=0]="Z",s[s.M=1]="M"})(l||(l={}));class Bt{constructor(t){this.spatialReference=t}createVector(){return this._tag(y())}pointToVector(t){return this._tag(R(t.x,t.y))}arrayToVector(t){return this._tag(R(t[0],t[1]))}vectorToArray(t){return[t[0],t[1]]}pointToArray(t){return[t.x,t.y]}vectorToPoint(t,e=new E){if(t)return e.x=t[0],e.y=t[1],e.z=void 0,e.m=void 0,e.spatialReference=this.spatialReference,e}arrayToPoint(t,e=new E){return e.x=t[0],e.y=t[1],e.z=void 0,e.m=void 0,e.spatialReference=this.spatialReference,e}vectorToDehydratedPoint(t,e){if(t)return e??={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"},e.x=t[0],e.y=t[1],e.z=void 0,e.m=void 0,e.hasZ=!1,e.hasM=!1,e.spatialReference=this.spatialReference,e}lerp(t,e,i,r){return Dt(r,t,e,i)}addDelta(t,e,i){t[0]+=e,t[1]+=i}distance(t,e){return ht(t,e)}getZ(t,e=void 0){return e}hasZ(){return!1}getM(t,e=void 0){return e}hasM(){return!1}clone(t){return this._tag(zt(t))}copy(t,e){return Mt(e,t)}fromXYZ(t){return this._tag(R(t[0],t[1]))}toXYZ(t,e=c()){return x(e,t[0],t[1],0)}pointToXYZ(t,e=c()){return x(e,t.x,t.y,0)}equals(t,e){return Ct(t,e)}_tag(t){return t}}class et{constructor(t,e){this._valueType=t,this.spatialReference=e}createVector(){return this._tag(c())}pointToVector(t){return this._tag(X(t.x,t.y,this._valueType===l.Z?t.z:t.m))}arrayToVector(t){return this._tag(X(t[0],t[1],t[2]||0))}vectorToArray(t){return[t[0],t[1],t[2]]}pointToArray(t){return this._valueType===l.Z?[t.x,t.y,t.z]:[t.x,t.y,t.m]}vectorToPoint(t,e=new E){if(t)return e.x=t[0],e.y=t[1],e.z=this._valueType===l.Z?t[2]:void 0,e.m=this._valueType===l.M?t[2]:void 0,e.spatialReference=this.spatialReference,e}arrayToPoint(t,e=new E){return e.x=t[0],e.y=t[1],e.z=this._valueType===l.Z?t[2]:void 0,e.m=this._valueType===l.M?t[2]:void 0,e.spatialReference=this.spatialReference,e}vectorToDehydratedPoint(t,e){if(!t)return;e??={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"};const i=this._valueType===l.Z,r=this._valueType===l.M;return e.x=t[0],e.y=t[1],e.z=i?t[2]:void 0,e.m=r?t[2]:void 0,e.hasZ=i,e.hasM=r,e.spatialReference=this.spatialReference,e}lerp(t,e,i,r){return ct(r,t,e,i)}addDelta(t,e,i,r){t[0]+=e,t[1]+=i,this._valueType===l.Z&&(t[2]+=r)}distance(t,e){return this._valueType===l.Z?lt(t,e):ht(t,e)}getZ(t,e=void 0){return this._valueType===l.Z?t[2]:e}hasZ(){return this._valueType===l.Z}getM(t,e=void 0){return this._valueType===l.M?t[2]:e}hasM(){return this._valueType===l.M}clone(t){return this._tag(Et(t))}copy(t,e){return C(e,t)}fromXYZ(t,e=0,i=0){return this._tag(X(t[0],t[1],this._valueType===l.Z?t.length>2?t[2]:e:i))}toXYZ(t,e=c()){return x(e,t[0],t[1],this._valueType===l.Z?t[2]:0)}pointToXYZ(t,e=c()){return x(e,t.x,t.y,this._valueType===l.Z?t.z??0:0)}equals(t,e){return H(t,e)}_tag(t){return t}}let qt=class{constructor(s){this.spatialReference=s}createVector(){return this._tag(Xt())}pointToVector(s){return this._tag(L(s.x,s.y,s.z,s.m))}arrayToVector(s){return this._tag(L(s[0],s[1],s[2]||0,s[3]||0))}vectorToArray(s){return[s[0],s[1],s[2],s[3]]}pointToArray(s){return[s.x,s.y,s.z,s.m]}vectorToPoint(s,t=new E){return t.x=s[0],t.y=s[1],t.z=s[2],t.m=s[3],t.spatialReference=this.spatialReference,t}arrayToPoint(s,t=new E){return t.x=s[0],t.y=s[1],t.z=s[2],t.m=s[3],t.spatialReference=this.spatialReference,t}vectorToDehydratedPoint(s,t){if(s)return t??={x:void 0,y:void 0,z:void 0,m:void 0,hasZ:void 0,hasM:void 0,spatialReference:void 0,type:"point"},t.x=s[0],t.y=s[1],t.z=s[2],t.m=s[3],t.hasZ=!0,t.hasM=!0,t.spatialReference=this.spatialReference,t}lerp(s,t,e,i){return Gt(i,s,t,e)}addDelta(s,t,e,i){s[0]+=t,s[1]+=e,s[2]+=i}distance(s,t){return lt(s,t)}getZ(s){return s[2]}hasZ(){return!0}getM(s){return s[3]}hasM(){return!0}clone(s){return this._tag(It(s))}copy(s,t){return Ut(t,s)}fromXYZ(s,t=0,e=0){return this._tag(L(s[0],s[1],s.length>2?s[2]:t,e))}toXYZ(s,t=c()){return x(t,s[0],s[1],s[2])}pointToXYZ(s,t=c()){return x(t,s.x,s.y,s.z??0)}equals(s,t){return bt(s,t)}_tag(s){return s}};function Ft(s,t,e){return s&&t?new qt(e):t?new et(l.M,e):s?new et(l.Z,e):new Bt(e)}function Wt(s,t){if(!t.supported)return;let e=1/0,i=-1/0;const r=t.upperBoundX-t.lowerBoundX;s.forEach(o=>{let a=o.pos[0];for(;a<t.lowerBoundX;)a+=r;for(;a>t.upperBoundX;)a-=r;e=Math.min(e,a),i=Math.max(i,a),o.pos[0]=a});const n=i-e;r-n<n&&s.forEach(o=>{o.pos[0]<0&&(o.pos[0]+=r)})}function Kt(s,t){const e=Tt(s);return t===Lt.Global&&e?{supported:!0,lowerBoundX:e.valid[0],upperBoundX:e.valid[1]}:{supported:!1,lowerBoundX:null,upperBoundX:null}}class Z{constructor(t){this.component=t,this.leftEdge=null,this.rightEdge=null,this.type="vertex",this.index=null}get pos(){return this._pos}set pos(t){this._pos=t,this.component.unnormalizeVertexPositions()}}class m{constructor(t,e,i){this.component=t,this.leftVertex=e,this.rightVertex=i,this.type="edge",e.rightEdge=this,i.leftEdge=this}}class N{constructor(t,e){this._spatialReference=t,this._viewingMode=e,this.vertices=[],this.edges=[],this.index=null}unnormalizeVertexPositions(){this.vertices.length<=1||Wt(this.vertices,Kt(this._spatialReference,this._viewingMode))}updateVertexIndex(t,e){if(this.vertices.length===0)return;const i=this.vertices[0];let r=null,n=t,o=e;do r=n,r.index=o++,n=r.rightEdge?r.rightEdge.rightVertex:null;while(n!=null&&n!==i);r.leftEdge&&r!==this.vertices[this.vertices.length-1]&&this.swapVertices(this.vertices.indexOf(r),this.vertices.length-1)}getFirstVertex(){return this.vertices.at(0)}getLastVertex(){return this.vertices.at(-1)}isClosed(){return this.vertices.length>2&&this.vertices[0].leftEdge!==null}swapVertices(t,e){const i=this.vertices[t];this.vertices[t]=this.vertices[e],this.vertices[e]=i}iterateVertices(t){if(this.vertices.length===0)return;const e=this.vertices[0];let i=e;do t(i,i.index),i=i.rightEdge!=null?i.rightEdge.rightVertex:null;while(i!==e&&i!=null)}}class G extends at{constructor(t,e){super(),this.type=t,this.coordinateHelper=e,this._geometry=null,this._dirty=!0,this.components=[]}get geometry(){if(this._dirty){switch(this.type){case"point":this._geometry=this._toPoint();break;case"polyline":this._geometry=this._toPolyline();break;case"polygon":this._geometry=this._toPolygon();break;case"mesh":break;default:mt(this.type)}this._dirty=!1}return this._geometry}get spatialReference(){return this.coordinateHelper.spatialReference}get allVertices(){return Array.from(this.iterateVertices())}*iterateVertices(){for(const t of this.components)for(const e of t.vertices)yield e}notifyChanges(t){this._dirty=!0,this.emit("change",t)}_toPoint(){return this.components.length===0||this.components[0].vertices.length===0?null:this.coordinateHelper.vectorToPoint(this.components[0].vertices[0].pos)}_toPolyline(){const t=[],e=this.coordinateHelper.vectorToArray;for(const i of this.components){if(i.vertices.length<1)continue;const r=[];let n=i.vertices.find(a=>a.leftEdge==null);const o=n;do r.push(e(n.pos)),n=n.rightEdge?n.rightEdge.rightVertex:null;while(n&&n!==o);t.push(r)}return new yt({paths:t,spatialReference:this.spatialReference,hasZ:this.coordinateHelper.hasZ(),hasM:this.coordinateHelper.hasM()})}_toPolygon(){const t=[],e=this.coordinateHelper.vectorToArray;for(const i of this.components){if(i.vertices.length<1)continue;const r=[],n=i.vertices[0];let o=n;const a=o;do r.push(e(o.pos)),o=o.rightEdge!=null?o.rightEdge.rightVertex:null;while(o&&o!==a);i.isClosed()&&r.push(e(n.pos)),t.push(r)}return new xt({rings:t,spatialReference:this.spatialReference,hasZ:this.coordinateHelper.hasZ(),hasM:this.coordinateHelper.hasM()})}static fromGeometry(t,e){const i=t.spatialReference,r=Ft(t.hasZ,t.hasM,i),n=new G(t.type,r);switch(t.type){case"polygon":Jt(n,t,e);break;case"polyline":jt(n,t,e);break;case"point":it(n,t,e);break;case"mesh":it(n,t.origin,e),n._geometry=t,n._dirty=!1}return n}}function Jt(s,t,e){const i=t.spatialReference,r=s.coordinateHelper,n=t.rings;for(let o=0;o<n.length;++o){const a=n[o],h=new N(i,e);h.index=o;const v=a.length>2&&z(a[0],a[a.length-1]),V=v?a.length-1:a.length;for(let d=0;d<V;++d){const g=r.arrayToVector(a[d]),f=new Z(h);h.vertices.push(f),f.pos=g,f.index=d}const p=h.vertices.length-1;for(let d=0;d<p;++d){const g=h.vertices[d],f=h.vertices[d+1],b=new m(h,g,f);h.edges.push(b)}if(v){const d=new m(h,h.vertices[h.vertices.length-1],h.vertices[0]);h.edges.push(d)}s.components.push(h)}}function jt(s,t,e){const i=t.spatialReference,r=s.coordinateHelper,n=t.paths;for(let o=0;o<n.length;++o){const a=n[o],h=new N(i,e);h.index=o;const v=a.length;for(let p=0;p<v;++p){const d=r.arrayToVector(a[p]),g=new Z(h);h.vertices.push(g),g.pos=d,g.index=p}const V=h.vertices.length-1;for(let p=0;p<V;++p){const d=h.vertices[p],g=h.vertices[p+1],f=new m(h,d,g);h.edges.push(f)}s.components.push(h)}}function it(s,t,e){const i=t.spatialReference,r=s.coordinateHelper,n=new N(i,e);n.index=0;const o=new Z(n);o.index=0,o.pos=r.pointToVector(t),n.vertices.push(o),s.components.push(n)}function M(s){return s.type==="mesh"}var u;(function(s){s[s.NEW_STEP=0]="NEW_STEP",s[s.ACCUMULATE_STEPS=1]="ACCUMULATE_STEPS"})(u||(u={}));let Qt=class{constructor(s,t,e){this._editGeometry=s,this._component=t,this._pos=e,this._addedVertex=null,this._originalEdge=null,this._left=null,this._right=null}apply(){let s="redo";this._addedVertex==null&&(s="apply",this._addedVertex=new Z(this._component));const t=this._component.getLastVertex();if(t==null)this._component.vertices.push(this._addedVertex),this._addedVertex.pos=this._pos,this._addedVertex.index=0;else{let e=null;t.rightEdge&&(this._originalEdge=t.rightEdge,e=this._originalEdge.rightVertex,this._component.edges.splice(this._component.edges.indexOf(this._originalEdge),1)),this._component.vertices.push(this._addedVertex),this._addedVertex.pos=this._pos,this._left==null&&(this._left=new m(this._component,t,this._addedVertex)),this._component.edges.push(this._left),t.rightEdge=this._left,this._originalEdge!=null&&e!=null&&(this._right==null&&(this._right=new m(this._component,this._addedVertex,e)),this._component.edges.push(this._right),e.leftEdge=this._right),this._component.updateVertexIndex(this._addedVertex,t.index+1)}this._editGeometry.notifyChanges({operation:s,addedVertices:[this._addedVertex]})}undo(){this._addedVertex!=null&&(this._component.vertices.splice(this._component.vertices.indexOf(this._addedVertex),1),this._left!=null&&(this._component.edges.splice(this._component.edges.indexOf(this._left),1),this._left.leftVertex.rightEdge=null),this._right!=null&&(this._component.edges.splice(this._component.edges.indexOf(this._right),1),this._right.rightVertex.leftEdge=null),this._originalEdge!=null&&(this._component.edges.push(this._originalEdge),this._originalEdge.leftVertex.rightEdge=this._originalEdge,this._originalEdge.rightVertex.leftEdge=this._originalEdge),this._left!=null?this._component.updateVertexIndex(this._left.leftVertex,this._left.leftVertex.index):this._component.updateVertexIndex(this._addedVertex,0),this._editGeometry.notifyChanges({operation:"undo",removedVertices:[this._addedVertex]}))}accumulate(){return!1}},te=class dt{constructor(t,e,i){this._editGeometry=t,this._vertices=e,this.operation=i,this._undone=!1}_notifyChanges(t){this._editGeometry.components.forEach(e=>e.unnormalizeVertexPositions()),this._editGeometry.notifyChanges({operation:t,updatedVertices:this._vertices})}apply(){this._vertices.forEach(t=>this.operation.apply(t)),this._notifyChanges(this._undone?"redo":"apply")}undo(){this._vertices.forEach(t=>this.operation.undo(t)),this._undone=!0,this._notifyChanges("undo")}canAccumulate(t){if(this._undone||t._vertices.length!==this._vertices.length)return!1;for(let e=0;e<t._vertices.length;++e)if(t._vertices[e]!==this._vertices[e])return!1;return this.operation.canAccumulate(t.operation)}accumulate(t){return!!(t instanceof dt&&this.canAccumulate(t))&&(this._vertices.forEach(e=>this.operation.accumulate(e,t.operation)),this.operation.accumulateParams(t.operation),this._notifyChanges("apply"),!0)}};var _;(function(s){s[s.CUMULATIVE=0]="CUMULATIVE",s[s.REPLACE=1]="REPLACE"})(_||(_={}));let ee=class{constructor(s,t,e=0){this._editGeometry=s,this._vertices=t,this._minNumberOfVertices=e,this.removedVertices=null}apply(){let s="redo";if(this.removedVertices==null){const t=this.removedVertices=[];this._vertices.forEach(e=>{const i=this._removeVertex(e);i!=null&&t.push(i)}),s="apply"}else this.removedVertices.forEach(t=>{this._removeVertex(t.removedVertex)});this._editGeometry.notifyChanges({operation:s,removedVertices:this._vertices})}undo(){this.removedVertices?.forEach(s=>{this._undoRemoveVertex(s)}),this._editGeometry.notifyChanges({operation:"undo",addedVertices:this._vertices})}accumulate(){return!1}_removeVertex(s){const t=s.component;if(t.vertices.length<=this._minNumberOfVertices)return null;const e={removedVertex:s,createdEdge:null},i=s.leftEdge,r=s.rightEdge;return t.vertices.splice(t.vertices.indexOf(s),1),i&&(t.edges.splice(t.edges.indexOf(i),1),i.leftVertex.rightEdge=null),r&&(t.edges.splice(t.edges.indexOf(r),1),r.rightVertex.leftEdge=null),s.index===0&&r&&this._vertices.length>0&&t.swapVertices(t.vertices.indexOf(r.rightVertex),0),i&&r&&(e.createdEdge=new m(t,i.leftVertex,r.rightVertex),t.edges.push(e.createdEdge)),r&&t.updateVertexIndex(r.rightVertex,r.rightVertex.index-1),e}_undoRemoveVertex(s){const t=s.removedVertex,e=s.removedVertex.component,i=t.leftEdge,r=t.rightEdge;s.createdEdge&&e.edges.splice(e.edges.indexOf(s.createdEdge),1),e.vertices.push(t),i&&(e.edges.push(i),i.leftVertex.rightEdge=i),r&&(e.edges.push(r),r.rightVertex.leftEdge=r),e.updateVertexIndex(t,t.index)}},ie=class{constructor(s,t,e){this._editGeometry=s,this._edge=t,this._t=e,this.createdVertex=null,this._left=null,this._right=null}apply(){let s="redo";const t=this._edge,e=t.component,i=t.leftVertex,r=t.rightVertex;e.edges.splice(e.edges.indexOf(t),1),this.createdVertex==null&&(s="apply",this.createdVertex=new Z(t.component)),e.vertices.push(this.createdVertex),this.createdVertex.pos=this._editGeometry.coordinateHelper.lerp(t.leftVertex.pos,t.rightVertex.pos,this._t,this._editGeometry.coordinateHelper.createVector()),this._left==null&&(this._left=new m(e,i,this.createdVertex)),this._left.leftVertex.leftEdge?e.edges.push(this._left):e.edges.unshift(this._left),i.rightEdge=this._left,this._right==null&&(this._right=new m(e,this.createdVertex,r)),e.edges.push(this._right),r.leftEdge=this._right,e.updateVertexIndex(this.createdVertex,i.index+1),this._editGeometry.notifyChanges({operation:s,addedVertices:[this.createdVertex]})}undo(){if(this.createdVertex==null||this._left==null||this._right==null)return null;const s=this._edge,t=s.component,e=this.createdVertex.leftEdge,i=this.createdVertex.rightEdge,r=e?.leftVertex,n=i?.rightVertex;t.vertices.splice(t.vertices.indexOf(this.createdVertex),1),t.edges.splice(t.edges.indexOf(this._left),1),t.edges.splice(t.edges.indexOf(this._right),1),this._edge.leftVertex.leftEdge?t.edges.push(this._edge):t.edges.unshift(this._edge),r&&(r.rightEdge=s),n&&(n.leftEdge=s),r&&t.updateVertexIndex(r,r.index),this._editGeometry.notifyChanges({operation:"undo",removedVertices:[this.createdVertex]})}accumulate(){return!1}},se=class pt{constructor(t,e,i){this._editGeometry=t,this._vertex=e,this._pos=i}apply(){const t=this._originalPosition==null;t&&(this._originalPosition=this._vertex.pos),this._apply(t?"apply":"redo")}undo(){this._vertex.pos=this._originalPosition,this._editGeometry.notifyChanges({operation:"undo",updatedVertices:[this._vertex]})}accumulate(t){return t instanceof pt&&t._vertex===this._vertex&&(this._pos=t._pos,this._apply("apply"),!0)}_apply(t){this._vertex.pos=this._pos,this._editGeometry.components.forEach(e=>e.unnormalizeVertexPositions()),this._editGeometry.notifyChanges({operation:t,updatedVertices:[this._vertex]})}};class re{constructor(t,e){this._editGeometry=t,this._component=e,this._createdEdge=null}apply(){let t="redo";if(this._createdEdge==null){t="apply";const e=this._component.getFirstVertex(),i=this._component.getLastVertex();if(this._component.isClosed()||this._component.vertices.length<3||e==null||i==null)return;this._createdEdge=new m(this._component,i,e)}this._createdEdge.leftVertex.rightEdge=this._createdEdge,this._createdEdge.rightVertex.leftEdge=this._createdEdge,this._component.edges.push(this._createdEdge),this._editGeometry.notifyChanges({operation:t})}undo(){this._createdEdge!=null&&(Pt(this._component.edges,this._createdEdge),this._createdEdge.leftVertex.rightEdge=null,this._createdEdge.rightVertex.leftEdge=null,this._editGeometry.notifyChanges({operation:"undo"}))}accumulate(){return!1}}let st=class ut{constructor(t,e,i,r){this._editGeometry=t,this.dx=e,this.dy=i,this.dz=r,this._firstTime=!0}apply(){const t=this._firstTime?"apply":"redo";this._firstTime=!1,this._apply(t,this.dx,this.dy,this.dz)}undo(){this._apply("undo",-this.dx,-this.dy,-this.dz)}accumulate(t){const e=this._editGeometry.geometry;return t instanceof ut&&t._editGeometry.geometry===e&&(this._apply("apply",t.dx,t.dy,t.dz),this.dx+=t.dx,this.dy+=t.dy,this.dz+=t.dz,!0)}_apply(t,e,i,r){const n=this._editGeometry.geometry;n.offset(e,i,r);const o=this._editGeometry.components[0].getFirstVertex();if(!o)return;const a=this._editGeometry.coordinateHelper;o.pos=a.pointToVector(n.origin),this._editGeometry.notifyChanges({operation:t,updatedVertices:[o]})}},ne=class _t{constructor(t,e,i,r){this._helper=t,this.dx=e,this.dy=i,this.dz=r}_move(t,e,i,r){this._helper.addDelta(t.pos,e,i,r)}apply(t){this._move(t,this.dx,this.dy,this.dz)}undo(t){this._move(t,-this.dx,-this.dy,-this.dz)}canAccumulate(t){return t instanceof _t}accumulate(t,e){this._move(t,e.dx,e.dy,e.dz)}accumulateParams(t){this.dx+=t.dx,this.dy+=t.dy,this.dz+=t.dz}};class U{get plane(){return this._plane}get requiresSplitEdgeLeft(){return!this._left.isOriginalDirection}get requiresSplitEdgeRight(){return!this._right.isOriginalDirection}get edgeDirection(){return this._edgeDirection}constructor(t,e,i,r=0,n=S.IMMEDIATE){this._helper=t,this._planeType=e,this._edge=i,this.distance=r,this._plane=j(),this._offsetPlane=j(),this._minDistance=-1/0,this._maxDistance=1/0,this._selectedArrow=1,n===S.IMMEDIATE&&this._initialize()}_initialize(){this._initializeNeighbors(),this._initializePlane(),this._initializeDistanceConstraints()}_initializeNeighbors(){const t=this._toXYZ(this._edge.leftVertex.pos),e=this._toXYZ(this._edge.leftVertex.leftEdge?.leftVertex?.pos),i=this._toXYZ(this._edge.rightVertex.pos),r=this._toXYZ(this._edge.rightVertex.rightEdge?.rightVertex?.pos);this._edgeDirection=W(c(),t,i),e?(this._left=this._computeNeighbor(t,e,this._edgeDirection),this._right=this._computeNeighbor(i,r,this._edgeDirection,this._left)):(this._right=this._computeNeighbor(i,r,this._edgeDirection),this._left=this._computeNeighbor(t,e,this._edgeDirection,this._right))}_toXYZ(t){return t!=null?this._helper.toXYZ(t):null}_pointToXYZ(t){return this._toXYZ(this._helper.pointToVector(t))}_computeNeighbor(t,e,i,r){const n=c();if(e){W(n,t,e);const o=!this._passesBisectingAngleThreshold(n,i);return{start:t,end:e,direction:o?this._bisectVectorsPerpendicular(i,n):n,isOriginalDirection:!o}}return this._helper.hasZ()?r&&(P(n,i,r.direction),P(n,n,i),w(n,n),Math.sign(n[1])!==Math.sign(i[0])&&K(n,n,-1)):x(n,-i[1],i[0],0),{start:t,end:e,direction:n,isOriginalDirection:!0}}_passesBisectingAngleThreshold(t,e){const i=Math.abs(Nt(e,t));return i>=rt&&i<=Math.PI-rt}_bisectVectorsPerpendicular(t,e){const i=I(t,e)<0?t:J(c(),t),r=Math.abs(I(i,e));if(!(r<nt||r>1-nt))return this._bisectDirection(i,e);const n=P(c(),i,[0,0,1]);return w(n,n)}_bisectDirection(t,e){const i=A(c(),t,e);return w(i,i)}_initializePlane(){const t=this._computeNormalDirection(this._left),e=this._computeNormalDirection(this._right);I(t,e)<0&&J(e,e),Ot(this._left.start,this._bisectDirection(t,e),this._plane)}_computeNormalDirection(t){const e=P(c(),t.direction,this._edgeDirection);w(e,e);const i=P(c(),this._edgeDirection,e);return this._planeType===Y.XY&&(i[2]=0),w(i,i)}_initializeDistanceConstraints(){this._left.end==null||this.requiresSplitEdgeLeft||this._updateDistanceConstraint(D(this._plane,this._left.end)),this._right.end==null||this.requiresSplitEdgeRight||this._updateDistanceConstraint(D(this._plane,this._right.end)),this._updateIntersectDistanceConstraint(this._plane)}_updateDistanceConstraint(t){t<=0&&(this._minDistance=Math.max(this._minDistance,t)),t>=0&&(this._maxDistance=Math.min(this._maxDistance,t))}_updateIntersectDistanceConstraint(t){const e=$(t),i=this._edgeDirection,r=A(c(),this._left.start,this._left.direction),n=A(c(),this._right.start,this._right.direction),o=this._pointInBasis2D(y(),e,i,this._left.start),a=this._pointInBasis2D(y(),e,i,r),h=this._pointInBasis2D(y(),e,i,this._right.start),v=this._pointInBasis2D(y(),e,i,n),[V]=kt({start:a,end:o,type:tt.LINE},{start:v,end:h,type:tt.LINE});if(!V)return;const p=q(y(),o,a);St(p,p);const d=q(y(),V,a),g=Zt(p,d),f=A(c(),r,K(c(),this._left.direction,-g)),b=D(t,f);this._updateDistanceConstraint(b)}_pointInBasis2D(t,e,i,r){return t[0]=Q(e,r),t[1]=Q(i,r),t}_offset(t,e){Number.isFinite(this._minDistance)&&(e=Math.max(this._minDistance,e)),Number.isFinite(this._maxDistance)&&(e=Math.min(this._maxDistance,e)),O(this._offsetPlane,this._plane),this._offsetPlane[3]-=e;const i=(n,o,a)=>o!=null&&Yt(this._offsetPlane,n,A(c(),n,o),a),r=c();(t===this._edge.leftVertex?i(this._left.start,this._left.direction,r):i(this._right.start,this._right.direction,r))&&this._helper.copy(this._helper.fromXYZ(r,void 0,this._helper.getM(t.pos)),t.pos)}selectArrowFromStartPoint(t){this._selectedArrow=$t(this.plane,this._pointToXYZ(t))?1:-1}get selectedArrow(){return this._selectedArrow}signedDistanceToPoint(t){return D(this.plane,this._pointToXYZ(t))}clampedStartAndEnd(t){const e=this._helper.toXYZ(this._helper.pointToVector(t)),i=Ht(this._plane,e,c()),r=D(this._plane,e),n=wt(r,this._minDistance,this._maxDistance);return ct(e,i,e,n/r),{start:i,end:e}}apply(t){this._offset(t,this.distance)}undo(t){this._offset(t,0)}canAccumulate(t){return t instanceof U&&this._edge.leftVertex.index===t._edge.leftVertex.index&&this._edge.rightVertex.index===t._edge.rightVertex.index&&this._edge.component===t._edge.component&&this._maybeEqualsVec3(this._left.direction,t._left.direction)&&this._maybeEqualsVec3(this._right.direction,t._right.direction)&&H($(this._plane),$(t._plane))}accumulate(t,e){const i=this._plane[3]-e._plane[3]+e.distance;this._offset(t,i)}accumulateParams(t){const e=t.distance-t._plane[3];this.distance=e+this._plane[3]}clone(){const t=new U(this._helper,this._planeType,this._edge,this.distance,S.DEFERRED);return O(t._plane,this._plane),O(t._offsetPlane,this._offsetPlane),t._maxDistance=this._maxDistance,t._minDistance=this._minDistance,t._left=this._cloneNeighbor(this._left),t._right=this._cloneNeighbor(this._right),t._edgeDirection=C(c(),this._edgeDirection),t}_maybeEqualsVec3(t,e){return t==null&&e==null||t!=null&&e!=null&&H(t,e)}_cloneNeighbor({start:t,end:e,direction:i,isOriginalDirection:r}){return{start:C(c(),t),end:e!=null?C(c(),e):null,direction:C(c(),i),isOriginalDirection:r}}}const rt=At(15),nt=.001;var Y,S;(function(s){s[s.XYZ=0]="XYZ",s[s.XY=1]="XY"})(Y||(Y={})),function(s){s[s.IMMEDIATE=0]="IMMEDIATE",s[s.DEFERRED=1]="DEFERRED"}(S||(S={}));let oe=class gt{constructor(t,e,i=_.CUMULATIVE){this.origin=t,this.angle=e,this._accumulationType=i}_rotate(t,e){Rt(t.pos,t.pos,this.origin,e)}apply(t){this._rotate(t,this.angle)}undo(t){this._rotate(t,-this.angle)}canAccumulate(t){return t instanceof gt&&z(this.origin,t.origin)}accumulate(t,e){const i=e._accumulationType===_.REPLACE;this._rotate(t,i?e.angle-this.angle:e.angle)}accumulateParams(t){const e=t._accumulationType===_.REPLACE;this.angle=e?t.angle:this.angle+t.angle}};class k{constructor(t,e,i,r,n=_.CUMULATIVE){this.origin=t,this.axis1=e,this.factor1=i,this.factor2=r,this._accumulationType=n,this.axis2=R(e[1],-e[0])}_scale(t,e,i){F(t.pos,t.pos,this.origin,this.axis1,e),F(t.pos,t.pos,this.origin,this.axis2,i)}apply(t){this._scale(t,this.factor1,this.factor2)}undo(t){this._scale(t,1/this.factor1,1/this.factor2)}canAccumulate(t){return t instanceof k&&z(this.origin,t.origin)&&z(this.axis1,t.axis1)}accumulate(t,e){e._accumulationType===_.REPLACE?this._scale(t,e.factor1/this.factor1,e.factor2/this.factor2):this._scale(t,e.factor1,e.factor2)}accumulateParams(t){const e=t._accumulationType===_.REPLACE;this.factor1=e?t.factor1:this.factor1*t.factor1,this.factor2=e?t.factor2:this.factor2*t.factor2}}class B{constructor(t,e){this._editGeometry=t,this._newPositions=e}apply(){const t=this._originalPositions==null?"apply":"redo";if(!this._originalPositions){const e=this._editGeometry.coordinateHelper;this._originalPositions=this._editGeometry.allVertices.map(i=>e.clone(i.pos))}this._apply(t,this._newPositions)}undo(){this._originalPositions&&this._apply("undo",this._originalPositions)}accumulate(t){return t instanceof B&&(this._newPositions=t._newPositions,this._apply("apply",this._newPositions),!0)}_apply(t,e){const i=this._editGeometry.coordinateHelper,r=this._editGeometry.allVertices;for(let n=0;n<r.length;n++)i.copy(e[n],r[n].pos);this._editGeometry.components.forEach(n=>n.unnormalizeVertexPositions()),this._editGeometry.notifyChanges({operation:t,updatedVertices:r})}}var ot;const ae=Symbol();class he{static{ot=ae}constructor(t){this._operations=[],this._closed=!1,this[ot]=!0,t&&(this._operations=t,this._closed=!0)}close(){this._closed=!0}apply(){for(const t of this._operations)t.apply()}undo(){for(let t=this._operations.length-1;t>=0;t--)this._operations[t].undo()}accumulate(t){if(this._closed)return!1;const e=this._operations.length?this._operations[this._operations.length-1]:null;return e&&e.accumulate(t)||(this._operations.push(t),t.apply()),!0}}class ft extends at{constructor(t,e){super(),this.data=t,this.viewingMode=e,this._undoStack=[],this._redoStack=[],this._listener=this.data.on("change",i=>{i.addedVertices&&this.emit("vertex-add",{type:"vertex-add",vertices:i.addedVertices,operation:i.operation}),i.removedVertices&&this.emit("vertex-remove",{type:"vertex-remove",vertices:i.removedVertices,operation:i.operation}),i.updatedVertices&&this.emit("vertex-update",{type:"vertex-update",vertices:i.updatedVertices,operation:i.operation})})}destroy(){this._listener.remove()}splitEdge(t,e){return this._apply(new ie(this.data,t,e))}updateVertices(t,e,i=u.ACCUMULATE_STEPS){return this._apply(new te(this.data,t,e),i)}move(t,e,i,r=u.ACCUMULATE_STEPS){return M(this.data)?this._apply(new st(this.data,t,e,i),r):this.moveVertices(this.data.allVertices,t,e,i,r)}moveVertices(t,e,i,r,n=u.ACCUMULATE_STEPS){return M(this.data)?this._apply(new st(this.data,e,i,r),n):this.updateVertices(t,new ne(this.data.coordinateHelper,e,i,r),n)}scale(t,e,i,r,n=u.ACCUMULATE_STEPS,o=_.CUMULATIVE){return this.scaleVertices(this.data.allVertices,t,e,i,r,n,o)}scaleVertices(t,e,i,r,n,o=u.ACCUMULATE_STEPS,a=_.CUMULATIVE){return this.updateVertices(t,new k(e,i,r,n,a),o)}rotate(t,e,i=u.ACCUMULATE_STEPS,r=_.CUMULATIVE){return this.rotateVertices(this.data.allVertices,t,e,i,r)}rotateVertices(t,e,i,r=u.ACCUMULATE_STEPS,n=_.CUMULATIVE){return this.updateVertices(t,new oe(e,i,n),r)}removeVertices(t){return this._apply(new ee(this.data,t,this._minNumVerticesPerType))}appendVertex(t){return this.data.components.length===0?null:this._apply(new Qt(this.data,this.data.components[0],t))}setVertexPosition(t,e){return this._apply(new se(this.data,t,e))}offsetEdge(t,e,i,r=u.ACCUMULATE_STEPS){return this.updateVertices([e.leftVertex,e.rightVertex],new U(this.data.coordinateHelper,t,e,i),r)}trySetGeometry(t,e=u.ACCUMULATE_STEPS){const{data:i}=this,{coordinateHelper:r}=i;if(i.type!==t.type||!i.spatialReference.equals(t.spatialReference)||r.hasZ()!==t.hasZ||r.hasM()!==t.hasM||!vt(i.geometry,t)||M(i))return;const n=Array.from(G.fromGeometry(t,this.viewingMode).iterateVertices(),o=>o.pos);return this.setVertexPositions(n,e)}setVertexPositions(t,e=u.ACCUMULATE_STEPS){return this._apply(new B(this.data,t),e)}createResetState(){if(M(this.data))return this._createResetStateMesh();const t=this.data.geometry.clone();return T(()=>this.trySetGeometry(t))}closeComponent(t){return this.data.components.includes(t)?this._apply(new re(this.data,t)):null}canRemoveVertex(t){return t.vertices.length>this._minNumVerticesPerType}createUndoGroup(){const t=new he;return this._apply(t),T(()=>t.close())}undo(){if(this._undoStack.length>0){const t=this._undoStack.pop();return t.undo(),this._redoStack.push(t),t}return null}redo(){if(this._redoStack.length>0){const t=this._redoStack.pop();return t.apply(),this._undoStack.push(t),t}return null}get canUndo(){return this._undoStack.length>0}get canRedo(){return this._redoStack.length>0}get lastOperation(){return this._undoStack.length>0?this._undoStack[this._undoStack.length-1]:null}get _minNumVerticesPerType(){switch(this.data.type){case"point":return 1;case"polyline":return 2;case"polygon":return 3;default:return 0}}_apply(t,e=u.ACCUMULATE_STEPS){return e!==u.NEW_STEP&&this.lastOperation!=null&&this.lastOperation.accumulate(t)||(t.apply(),this._undoStack.push(t),this._redoStack=[]),t}_createResetStateMesh(){if(!M(this.data))return T();const t=this.data.geometry,{vertexSpace:e}=t;if(e.origin){const r=Vt(e.origin);return T(()=>{t.vertexSpace.origin=r})}const i=t.vertexAttributes.clonePositional();return T(()=>{t.vertexAttributes=i,t.vertexAttributesChanged()})}static fromGeometry(t,e){return new ft(G.fromGeometry(t,e),e)}}class xe{constructor(t){this.vertexHandle=null,this.excludeFeature=null,this.visualizer=null,this.selfSnappingZ=null,this.drawConstraints=null,this.editGeometryOperations=t.editGeometryOperations,this.elevationInfo=t.elevationInfo,this.pointer=t.pointer,this.vertexHandle=t.vertexHandle,this.excludeFeature=t.excludeFeature,this.feature=t.feature,this.visualizer=t.visualizer,this.selfSnappingZ=t.selfSnappingZ,this.drawConstraints=t.drawConstraints}get coordinateHelper(){return this.editGeometryOperations.data.coordinateHelper}get spatialReference(){return this.coordinateHelper.spatialReference}}export{Y as I,k as L,G as Z,_,Ft as a,N as b,xe as c,te as d,ne as e,oe as f,ft as q,u,U as z};
