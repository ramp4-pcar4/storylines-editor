import{y as i}from"./utils-DuaeuwP5-CFAN3ZiQ.js";import{S as p}from"./queryTopFeatures-BdkfRugo-B9LBt7YL.js";import a from"./TopFeaturesQuery-C3E7qv-F-B-3V62SL.js";import"./main-u4AGHhUs.js";import"./normalizeUtils-b-vZURob-BTkUI3Eq.js";import"./utils-Jw-4AGsF-BqLOZozq.js";import"./query-nJmB7Ppn-mo3APlME.js";import"./pbfQueryUtils-1j64fqcx-BHkMMxur.js";import"./pbf-Ijhb7ANA-DjSBG-IB.js";import"./memoryEstimations-iHVpvWPf-BNHrGdPk.js";import"./OptimizedGeometry-1qDYm3YK-BRv_932C.js";import"./OptimizedFeatureSet-D6mgsKNr-CDXlBpty.js";import"./queryZScale-DBCLQqDI-C9IWElGH.js";import"./projection-m8vi7Cxv-cWEnrV0m.js";import"./TimeExtent-gZaEUVeW-nxptxNg2.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
