import{ci as p,R as c,a8 as y,v as u,I as w,t as g}from"./main-Vo3WCJ9U.js";import{F as I,S as f}from"./imageUtils-O-zHRU7h-DzW8ASS9.js";import{D as S}from"./LayerView2D-CCfp06E--BDPybQBG.js";import{k as T,X as V,q as v,T as d}from"./Tile-DvzRai0K-Ck6mQI8S.js";import{v as q}from"./LayerView-D3XoMhlx-ClCFSg4S.js";import{n as x}from"./RefreshableLayerView-CB9NNXxL-DUBxJebw.js";import{i as R}from"./Scheduler-Br-2v2ys-dzM_HW7l.js";import"./MapView-BcnxJC0k-C7AL9QOo.js";import"./globalCss-CFN4F315-BWM6gCki.js";import"./Queue-B8H6jIv7-EuMU562A.js";import"./signal-DxzURL18-BPb7paZA.js";import"./Version-BTMwSXf1-Df-U5uW6.js";import"./CollectionFlattener-9hYRBLDX-DCNGq7-9.js";import"./workers-0oosFQiO-DYbMutx2.js";import"./intl-DLmy-Li5-BWP2QtiB.js";import"./projection-m8vi7Cxv-BjYCqQUN.js";import"./TileInfo-owTCOSRx-DeZzIcgC.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-C5LxVioS-Dgcsp8fA.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-DBzjq66S-DijGcCY-.js";import"./Map-DbZVFU-I-D-F37tJR.js";import"./Basemap-DxWxjcEH-Drnx1tlL.js";import"./loadAll-BIhJ1RSe-CJPRSS_6.js";import"./PortalItem-CJetnHeq-BD6FyzKm.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-BxZCzjtS.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Layer-B8q-l4yV-P9hBM-e5.js";import"./TimeExtent-gZaEUVeW-DB27Idk3.js";import"./GraphicsCollection-rAFZo1AJ-BNxNJr62.js";import"./HeightModelInfo-BkDck4B0-LGH9tiFo.js";import"./timeZoneUtils-z3WjfjXQ-D1ewHWEc.js";import"./ReactiveMap-BaMcQuG3-Bk2fZMFf.js";import"./Query-CxQYWcUQ-CBcP_HH-.js";import"./Field-Cj6Pz3TI-Bab8CGXV.js";import"./fieldType-VTpxE-EM-BxG55zg7.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./HighlightDefaults-Cg50f_1y-CwdqmxAm.js";import"./a11yUtils-C2ydunC--DJbJ0zNO.js";import"./heightModelInfoUtils-CI93rfC7-CaKFRHMg.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-b-vZURob-DMSRQuGh.js";import"./utils-DuaeuwP5-C7YOAm7J.js";import"./utils-Jw-4AGsF-BswqvE-6.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./vec32-BuqRmYBM-4b3Uk-_5.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-BqLsaO-Z.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./imageUtils-DEFspgr5-CULcS-Ik.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-BCcgrGdQ.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./BitmapTechnique-BX6dC711-e_uLN2Qy.js";import"./Container-BdpN3llD-DpMb5YGU.js";import"./EffectView-Bw7SZPlx-yG-6kL6O.js";import"./parser-hXQyB-Qx-Dh95MFoD.js";import"./GraphShaderModule-C7Apfssb-DQfMUI6t.js";import"./FramebufferObject-DQw0QX3p-8Ra3EAOx.js";import"./VertexArrayObject-DTkLCIKs-BRFiQ8WJ.js";import"./memoryEstimations-iHVpvWPf-CHOvLrpg.js";import"./ProgramTemplate-CBS0ERm4-BuHh1KRM.js";import"./ShaderBuilder-BkQM64Qp-difQ5Uyf.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./TechniqueType-GommNIdJ-ByYTgVOB.js";import"./WGLContainer-CF3AeUnM-D2nGenv0.js";import"./dataViewUtils-xig9T3UA-yOJQvN4F.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BoundingBox-D9JxeQeA-SaxmeIkg.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./config-DB0LnTDt-CYa9nhWp.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./featureConversionUtils-DRaHTjrY-Dqf-lBFw.js";import"./OptimizedFeatureSet-D6mgsKNr-CDzvXy1X.js";import"./OptimizedGeometry-1qDYm3YK-DIu-ordH.js";import"./TileContainer-Dc8VVA_r-C44vyVJJ.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./layerViewUtils-Bk5QNiAa-pXe7cfra.js";const M=[0,0];let r=class extends x(I(S(q))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}get tileMatrixSet(){const{activeLayer:t}=this.layer,{tileMatrixSet:e}=t;if(e&&p(e.tileInfo?.spatialReference,this.view.spatialReference))return e;const i=this._getTileMatrixSetBySpatialReference(t);return i&&i.id!==t.tileMatrixSetId?(t.tileMatrixSetId=i.id,i):null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume()}attach(){const t=this.tileMatrixSet?.tileInfo;t&&(this._tileInfoView=new T(t),this._fetchQueue=new V({tileInfoView:this._tileInfoView,concurrency:16,process:(e,i)=>this.fetchTile(e,i),scheduler:this.scheduler,priority:R.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new v({cachePolicy:"keep",resampling:!0,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.addAttachHandles(this._updatingHandles.add(()=>[this.layer?.activeLayer?.styleId,this.tileMatrixSet],()=>this.doRefresh())),super.attach())}detach(){super.detach(),this._tileStrategy?.destroy(),this._fetchQueue?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.activeLayer.tileMatrixSets?.some(e=>p(e.tileInfo?.spatialReference,t))??!1}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(M,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,{signal:s,resamplingLevel:l=0}=e;if(!i)return this._fetchImage(t,s);const o=new d(0,0,0,0);let h;try{await i.fetchAvailabilityUpsample(t.level,t.row,t.col,o,{signal:s}),h=await this._fetchImage(o,s)}catch(a){if(c(a))throw a;if(l<3){const m=this._tileInfoView.getTileParentId(t.id);if(m){const n=new d(m),_=await this.fetchTile(n,{...e,resamplingLevel:l+1});return f(this._tileInfoView,_,n,t)}}throw a}return f(this._tileInfoView,h,o,t)}canResume(){return super.canResume()&&this.tileMatrixSet!==null}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){c(e)||y.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}_getTileMatrixSetBySpatialReference(t){return t.tileMatrixSets?.find(e=>p(e.tileInfo?.spatialReference,this.view.spatialReference))}};u([w({readOnly:!0})],r.prototype,"tileMatrixSet",null),r=u([g("esri.views.2d.layers.WMTSLayerView2D")],r);const le=r;export{le as default};
