import{y as m}from"./utils-DuaeuwP5-BCzmKREe.js";import{b as f,$ as p}from"./main-D1BR4VHl.js";import{f as j}from"./query-nJmB7Ppn-C9k78cPe.js";import{O as R}from"./FeatureSet-Dxf4LeOj-CY2S5Sw0.js";import{d as l}from"./RelationshipQuery-BgG1nLP1-BJXuKIW-.js";import"./normalizeUtils-b-vZURob-UnRcg5aU.js";import"./utils-Jw-4AGsF-ClA_tRF5.js";import"./pbfQueryUtils-1j64fqcx-CrjqcNaz.js";import"./pbf-Ijhb7ANA-CMjE7ZLm.js";import"./memoryEstimations-iHVpvWPf-Cg8EwMXu.js";import"./OptimizedGeometry-1qDYm3YK-DnxJG0XN.js";import"./OptimizedFeatureSet-D6mgsKNr-Dd-7J7SP.js";import"./queryZScale-DBCLQqDI-DociOeXW.js";import"./projection-m8vi7Cxv-C2-cnuOe.js";import"./Field-Cj6Pz3TI-oBfpxTDM.js";import"./fieldType-VTpxE-EM-DRJF67vY.js";import"./Query-CxQYWcUQ-BdPv8O66.js";import"./TimeExtent-gZaEUVeW-DvlPJWgm.js";function b(r,e){const t=r.toJSON();return t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t.outFields&&!e?.returnCountOnly?t.outFields.includes("*")?t.outFields="*":t.outFields=t.outFields.join(","):delete t.outFields,t.outSR&&(t.outSR=p(t.outSR)),t.dynamicDataSource&&(t.layer=JSON.stringify({source:t.dynamicDataSource}),delete t.dynamicDataSource),t}async function F(r,e,t){const n=await y(r,e,t),o=n.data,s=o.geometryType,a=o.spatialReference,i={};for(const c of o.relatedRecordGroups){const d={fields:void 0,objectIdFieldName:void 0,geometryType:s,spatialReference:a,hasZ:!!o.hasZ,hasM:!!o.hasM,features:c.relatedRecords};if(c.objectId!=null)i[c.objectId]=d;else for(const u of Object.keys(c))u!=="relatedRecords"&&(i[c[u]]=d)}return{...n,data:i}}async function h(r,e,t){const n=await y(r,e,t,{returnCountOnly:!0}),o=n.data,s={};for(const a of o.relatedRecordGroups)a.objectId!=null&&(s[a.objectId]=a.count);return{...n,data:s}}async function y(r,e,t={},n){const o=j({...r.query,f:"json",...n,...b(e,n)});return f(r.path+"/queryRelatedRecords",{...t,query:{...t.query,...o}})}async function T(r,e,t){e=l.from(e);const n=m(r);return F(n,e,t).then(o=>{const s=o.data,a={};return Object.keys(s).forEach(i=>a[i]=R.fromJSON(s[i])),a})}async function Z(r,e,t){e=l.from(e);const n=m(r);return h(n,e,{...t}).then(o=>o.data)}export{T as executeRelationshipQuery,Z as executeRelationshipQueryForCount};
