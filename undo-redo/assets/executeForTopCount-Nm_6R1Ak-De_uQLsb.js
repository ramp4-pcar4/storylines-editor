import{y as i}from"./utils-DuaeuwP5-BCWjE-E3.js";import{S as p}from"./queryTopFeatures-BdkfRugo-BPZzfN6A.js";import a from"./TopFeaturesQuery-C3E7qv-F-CHAHcPG8.js";import"./main-BFm8MnAc.js";import"./normalizeUtils-b-vZURob-yxuN7cmE.js";import"./utils-Jw-4AGsF-B_b7GAER.js";import"./query-nJmB7Ppn-CmNzvQet.js";import"./pbfQueryUtils-1j64fqcx-BLHTA4OL.js";import"./pbf-Ijhb7ANA-DFPDMEsO.js";import"./memoryEstimations-iHVpvWPf-DfEbSRNS.js";import"./OptimizedGeometry-1qDYm3YK-CuOlrRpr.js";import"./OptimizedFeatureSet-D6mgsKNr-x2Opxc-4.js";import"./queryZScale-DBCLQqDI-DvsqDP3X.js";import"./projection-m8vi7Cxv-1Oz3V2zZ.js";import"./TimeExtent-gZaEUVeW-BkHLfBx7.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
