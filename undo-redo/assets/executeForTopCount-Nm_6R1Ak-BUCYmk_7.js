import{y as i}from"./utils-DuaeuwP5-C7YOAm7J.js";import{S as p}from"./queryTopFeatures-BdkfRugo-CXtjVbEj.js";import a from"./TopFeaturesQuery-C3E7qv-F-BRuMzuNq.js";import"./main-Vo3WCJ9U.js";import"./normalizeUtils-b-vZURob-DMSRQuGh.js";import"./utils-Jw-4AGsF-BswqvE-6.js";import"./query-nJmB7Ppn-Bqlaau2c.js";import"./pbfQueryUtils-1j64fqcx-BiIn2aLb.js";import"./pbf-Ijhb7ANA-Cf30llCs.js";import"./memoryEstimations-iHVpvWPf-CHOvLrpg.js";import"./OptimizedGeometry-1qDYm3YK-DIu-ordH.js";import"./OptimizedFeatureSet-D6mgsKNr-CDzvXy1X.js";import"./queryZScale-DBCLQqDI-B-kEBzDW.js";import"./projection-m8vi7Cxv-BjYCqQUN.js";import"./TimeExtent-gZaEUVeW-DB27Idk3.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
