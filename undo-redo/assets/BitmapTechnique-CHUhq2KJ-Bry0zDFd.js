import{v as n,kJ as f,H as A,c6 as y,b$ as P}from"./main-BJ29zGwr.js";import{R as E,D as g,G as I,I as T,E as H}from"./mat3-DOnW3DjW-C3hbW9XY.js";import{e as $}from"./MapView-DVZSZHRJ-8480yDYE.js";import{r as p}from"./vec2f32-hTAvipMV-C0AQcwEv.js";import{u as D}from"./Container-Dr2EdOEZ-Ci64vck8.js";import{G as x,H as G,F as L,U,L as V,P as _}from"./enums-wEDHPbCF-Cf76M5_x.js";import{Y as W,_ as F}from"./Texture-D5XWO2GQ-DPzuFHEB.js";import{G as q}from"./definitions-MCCItX4r-o3EUznKY.js";import{F as C,K as l,V as N,o as w,J as K,U as B,O,Y as z,g as J,p as j,D as Q,R as Y,P as b,S as X,a5 as Z,a0 as tt,l as et}from"./GraphShaderModule-Baq-N_YO-CV51KTLp.js";import{i as it}from"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import{C as st}from"./bitmapUtils-CAdCGIbP-CpS_gWFf.js";class rt{constructor(t,i,s){this.pixelBlock=t,this.extent=i,this.originalPixelBlock=s}get width(){return this.pixelBlock!=null?this.pixelBlock.width:0}get height(){return this.pixelBlock!=null?this.pixelBlock.height:0}render(t){const i=this.pixelBlock;if(i==null)return;const s=this.filter({extent:this.extent,pixelBlock:this.originalPixelBlock??i});if(s.pixelBlock==null)return;s.pixelBlock.maskIsAlpha&&(s.pixelBlock.premultiplyAlpha=!0);const a=s.pixelBlock.getAsRGBA(),o=t.createImageData(s.pixelBlock.width,s.pixelBlock.height);o.data.set(a),t.putImageData(o,0,0)}getRenderedRasterPixels(){const t=this.filter({extent:this.extent,pixelBlock:this.pixelBlock});return t.pixelBlock==null?null:(t.pixelBlock.maskIsAlpha&&(t.pixelBlock.premultiplyAlpha=!0),{width:t.pixelBlock.width,height:t.pixelBlock.height,renderedRasterPixels:new Uint8Array(t.pixelBlock.getAsRGBA().buffer)})}}function ot(e){return e&&"render"in e}function at(e){const t=document.createElement("canvas");return t.width=e.width,t.height=e.height,e.render(t.getContext("2d")),t}function nt(e){return ot(e)?e instanceof rt?e.getRenderedRasterPixels()?.renderedRasterPixels:at(e):e}let bt=class extends D{constructor(e=null,t=!1){super(),this.blendFunction="standard",this._sourceWidth=0,this._sourceHeight=0,this._textureInvalidated=!1,this.stencilRef=0,this.coordScale=[1,1],this._height=void 0,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._texture=null,this._width=void 0,this.x=0,this.y=0,this.immutable=t,this.source=e,this.requestRender=this.requestRender.bind(this)}destroy(){this._texture&&(this._texture.dispose(),this._texture=null),this._uploadStatus!=null&&(this._uploadStatus.controller.abort(),this._uploadStatus=null)}get isSourceScaled(){return this.width!==this._sourceWidth||this.height!==this._sourceHeight}get height(){return this._height!==void 0?this._height:this._sourceHeight}set height(e){this._height=e}get source(){return this._source}set source(e){e==null&&this._source==null||(this._source=e,this.invalidateTexture(),this.requestRender())}get texture(){return this._texture}get width(){return this._width!==void 0?this._width:this._sourceWidth}set width(e){this._width=e}beforeRender(e){super.beforeRender(e),this.updateTexture(e)}async setSourceAsync(e,t){this._uploadStatus!=null&&this._uploadStatus.controller.abort();const i=new AbortController,s=A();return y(t,()=>i.abort()),y(i,a=>s.reject(a)),this._uploadStatus={controller:i,resolver:s},this.source=e,s.promise}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this._source instanceof HTMLImageElement?(this._sourceHeight=this._source.naturalHeight,this._sourceWidth=this._source.naturalWidth):this._source&&(this._sourceHeight=this._source.height,this._sourceWidth=this._source.width))}transitionStep(e,t){e>=64&&(this.fadeTransitionEnabled=!1),super.transitionStep(e,t)}setTransform(e){const t=E(this.transforms.displayViewScreenMat3),[i,s]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,o=a*this.width,r=a*this.height,h=Math.PI*this.rotation/180;g(t,t,p(i,s)),g(t,t,p(o/2,r/2)),I(t,t,-h),g(t,t,p(-o/2,-r/2)),T(t,t,p(o,r)),H(this.transforms.displayViewScreenMat3,e.displayViewMat3,t)}setSamplingProfile(e){this._texture&&(e.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(e.samplingMode))}bind(e,t){this._texture&&e.bindTexture(this._texture,t)}async updateTexture({context:e,painter:t}){if(!this._textureInvalidated)return;if(this._textureInvalidated=!1,this._texture||(this._texture=this._createTexture(e)),!this.source)return void this._texture.setData(null);this._texture.resize(this._sourceWidth,this._sourceHeight);const i=nt(this.source);try{if(this._uploadStatus!=null){const{controller:s,resolver:a}=this._uploadStatus,o={signal:s.signal},{width:r,height:h}=this,d=this._texture;await t.textureUploadManager.enqueueTextureUpdate({data:i,texture:d,width:r,height:h},o),a.resolve(),this._uploadStatus=null}else this._texture.setData(i);this.ready()}catch(s){P(s)}}onDetach(){this.destroy()}_createTransforms(){return{displayViewScreenMat3:$()}}_createTexture(e){const t=this.immutable,i=new W;return i.internalFormat=t?G.RGBA8:L.RGBA,i.wrapMode=U.CLAMP_TO_EDGE,i.isImmutable=t,i.width=this._sourceWidth,i.height=this._sourceHeight,new F(e,i)}};class R extends K{}n([C(0,B)],R.prototype,"position",void 0);class ht extends Z{}class u extends O{}n([l(z)],u.prototype,"texture",void 0),n([l(J)],u.prototype,"dvsMat3",void 0),n([l(B)],u.prototype,"coordScale",void 0),n([l(j)],u.prototype,"opacity",void 0);class c extends Q{constructor(){super(...arguments),this.type="BitmapShader"}vertex(t){const i=this.config.dvsMat3.multiply(new Y(t.position.multiply(this.config.coordScale),1));return{glPosition:new b(i,1),texcoord:t.position}}fragment(t){const i=new tt;let s;return s=this.bicubic?st(this.config.texture,t.texcoord,this.config.coordScale):X(this.config.texture,t.texcoord),i.fragColor=new b(s.rgb.multiply(this.config.opacity),s.a.multiply(this.config.opacity)),i}}n([l(u)],c.prototype,"config",void 0),n([N],c.prototype,"bicubic",void 0),n([f(0,w(R))],c.prototype,"vertex",null),n([f(0,w(ht))],c.prototype,"fragment",null);const m={nearest:{samplingMode:x.NEAREST,mips:!1},bilinear:{samplingMode:x.LINEAR,mips:!1},bicubic:{samplingMode:x.LINEAR,mips:!1},trilinear:{samplingMode:x.LINEAR_MIPMAP_LINEAR,mips:!0}},lt=(e,t,i)=>{if(i.samplingMode==="dynamic"){const{state:s}=e,a=t.resolution/t.pixelRatio/s.resolution,o=Math.round(e.pixelRatio)!==e.pixelRatio,r=a>1.05||a<.95;return s.rotation||r||o||t.isSourceScaled||t.rotation?m.bilinear:m.nearest}return m[i.samplingMode]};class Bt extends et{constructor(){super(...arguments),this.name="BrushBitmap",this.type=it.Bitmap,this.shaders={bitmap:new c}}render(t,i){const{context:s,renderingOptions:a,painter:o}=t;for(const r of i.bitmaps){const h=r.texture;if(!r.source||!r.isReady||h==null)continue;const d=lt(t,r,a);t.timeline.begin(this.name),o.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:r.stencilRef,compare:V.EQUAL,op:{fail:_.KEEP,zFail:_.KEEP,zPass:_.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:r.blendFunction==="additive"?"additive":"composite"}}),r.setSamplingProfile(d);const{coordScale:S,computedOpacity:v,transforms:M}=r,k={texture:{texture:h,unit:q},dvsMat3:M.displayViewScreenMat3,coordScale:S,opacity:v};o.submitDrawMesh(s,{shader:this.shaders.bitmap,uniforms:{config:k},defines:{bicubic:d===m.bicubic},optionalAttributes:null,useComputeBuffer:!1},o.quadMesh),t.timeline.end(this.name)}}}export{ot as B,at as M,Bt as c,bt as h,rt as v};
