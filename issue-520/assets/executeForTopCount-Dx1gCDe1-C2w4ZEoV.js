import{y as i}from"./utils-9sQxfkoa-DqDwKuIb.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-BcQxvjln.js";import a from"./TopFeaturesQuery-Ckj_IYM7-D3j8dirm.js";import"./main-CIGhCQNk.js";import"./normalizeUtils-Bxmy9MNI-BMmFIlGj.js";import"./normalizeUtilsCommon-CRJlkfEA-Dy6va2e8.js";import"./utils-Bq23Xwmj-Cx-uWxDx.js";import"./query-DFW9-NG_-D0CgpXvD.js";import"./pbfQueryUtils-F4ZE8-K8-CCml2zJW.js";import"./pbf-D-y3_eZO-o97HRRGW.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CCACmNNB.js";import"./projection-BA9M1R7d-BTIBFyN9.js";import"./projectBuffer-CvCBvJ6W-DfyJzecm.js";import"./TimeExtent-Cn0Jofqr-DPyXbbrT.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
