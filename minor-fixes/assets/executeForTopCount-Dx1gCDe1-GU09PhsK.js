import{y as i}from"./utils-9sQxfkoa-DqRqyfJy.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-C8pCQVzs.js";import a from"./TopFeaturesQuery-Ckj_IYM7-C3QGvYwc.js";import"./main-DMuxCSYx.js";import"./normalizeUtils-Bxmy9MNI-DLgLCHqu.js";import"./normalizeUtilsCommon-CRJlkfEA-GEt0HGbn.js";import"./utils-Bq23Xwmj-BzeYDONd.js";import"./query-DFW9-NG_-9FwU1b-2.js";import"./pbfQueryUtils-F4ZE8-K8-B4hLWFcA.js";import"./pbf-D-y3_eZO-D0Vcoew1.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-C0V60B_b.js";import"./projection-BA9M1R7d-CNuQsNc3.js";import"./projectBuffer-CvCBvJ6W-BoBdrE9k.js";import"./TimeExtent-Cn0Jofqr-BJ9i7CzZ.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
