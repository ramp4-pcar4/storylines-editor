import{y as i}from"./utils-9sQxfkoa-xMYS_kLS.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-fYuh1hCN.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DmrZ7wGA.js";import"./main-DbCHWLKx.js";import"./normalizeUtils-Bxmy9MNI-BMbh7M0t.js";import"./normalizeUtilsCommon-CRJlkfEA-CG5qvMh7.js";import"./utils-Bq23Xwmj-CyFg8pnb.js";import"./query-DFW9-NG_-DF9pXLvv.js";import"./pbfQueryUtils-F4ZE8-K8-C4s4796t.js";import"./pbf-D-y3_eZO-3qtPedj0.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BMmrjdIh.js";import"./projection-BA9M1R7d-BqGyRp_B.js";import"./projectBuffer-CvCBvJ6W-BjxXQhMH.js";import"./TimeExtent-Cn0Jofqr-CLS35M2l.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
