import{G as _,T as v,f as S,b as m,e as T,c as h,W as b,X as w,a0 as O,j as U,v as s,I as a,J as R,U as W,a1 as L,t as j}from"./main-BzdTZvLH.js";import{y as P}from"./loadAll-BIhJ1RSe-C9QoNDAQ.js";import{o as B,l as A,i as C,X as J}from"./PortalLayer-rRU66wtN-BYLAndn6.js";import{U as M}from"./Layer-B8q-l4yV-BASbMQcM.js";import{c as $}from"./FeatureType-MZ846Ius-Pw8g1l1k.js";import{V as I}from"./ArcGISCachedService-D2QCJMtv-BPUZyLDu.js";import{J as N,B as k,C as D}from"./SublayersOwner-CvsAZfE5-BBD32zLl.js";import{a as G}from"./ArcGISService-CdvDPeWS-D22iFCg5.js";import{d as V,f as q}from"./ScaleRangeLayer-DIxukUBC-MZ6uBoVz.js";import{L as x}from"./popupUtils-BiEhUPlu-ir5v7Tew.js";import{T as E}from"./RefreshableLayer-yYqabqcs-CmLx6lku.js";import{u as y}from"./imageBitmapUtils-D8LZDu4M-BL8qkbrV.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./ElevationInfo-DkWlof50-CtGYOjrt.js";import"./lengthUtils-wU9RRIqK-C0l4BtFP.js";import"./TimeExtent-gZaEUVeW-DT9y6Uv4.js";import"./PortalItem-CJetnHeq-C_sUKbIC.js";import"./portalItemUtils-DsrxEt4W-WUCj93sf.js";import"./projection-m8vi7Cxv-Bn_HqFKW.js";import"./labelingInfo-D9WqyhOx-Cx_Pu4FV.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./Field-Cj6Pz3TI-C7j_TxIT.js";import"./fieldType-VTpxE-EM-DKkjJ1_v.js";import"./Query-CxQYWcUQ-DSMqXv8s.js";import"./SimpleRenderer-ADQlYl8U-RdT6HKnn.js";import"./commonProperties-BLIn8DYU-ChPI3eqZ.js";import"./colorRamps-KMmVdCPJ-_OvULufr.js";import"./ColorStop-DoHCvOqO-B7h0qiLQ.js";import"./visualVariableUtils-BO-_wo28-BHR2GknQ.js";import"./UniqueValueRenderer-BmoLL_Ee-DX4VPtvY.js";import"./diffUtils-BSe9IE26-GQneeUO7.js";import"./RendererLegendOptions-f5mIImtQ-C-1NVAKH.js";import"./styleUtils-DxAOZq5S-BSG_CSRf.js";import"./RelationshipQuery-BgG1nLP1-BT_pbfI7.js";import"./NormalizationBinParametersMixin-ZkplD1Sk-kUKDDtZJ.js";import"./labelUtils-Dd5sr1UJ-CUjfm-7y.js";import"./TileInfo-owTCOSRx-2t_PQDXI.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./ByteSizeUnit-DL8UhsB0-B2-AmVRx.js";import"./LRUCache-BLmkvs7b-DxEcoxhS.js";import"./MemCache-BCippCv6-X7QhX4Ta.js";import"./memoryEstimations-iHVpvWPf-lYOj2wBb.js";import"./Version-BTMwSXf1-D9QhpqCl.js";import"./CollectionFlattener-9hYRBLDX-C4DkDDAp.js";import"./QueryTask-DjXUtGiO-C_gCsRXH.js";import"./utils-DuaeuwP5-CfySoCbE.js";import"./executeForIds-MucOSmLz-p1VOpGHj.js";import"./query-nJmB7Ppn-D9WzU-Hq.js";import"./normalizeUtils-b-vZURob-DO2hxzmv.js";import"./utils-Jw-4AGsF-C6zd8gY-.js";import"./pbfQueryUtils-1j64fqcx-4JgdmWAs.js";import"./pbf-Ijhb7ANA-DApJTRh6.js";import"./OptimizedGeometry-1qDYm3YK-Ci6VjTN3.js";import"./OptimizedFeatureSet-D6mgsKNr-ExTiLnJd.js";import"./queryZScale-DBCLQqDI-Cw3K8qh5.js";import"./executeQueryPBF-Dc29GEvp-S2RddRFg.js";import"./featureConversionUtils-DRaHTjrY-qERmct9i.js";import"./FeatureSet-Dxf4LeOj-TTV80c_r.js";import"./executeQueryJSON-BK4r1MU--DJTfp7GM.js";import"./FieldsIndex-Y7EBAYp0-BRNVtDkk.js";import"./timeZoneUtils-z3WjfjXQ-Du9GMjqV.js";import"./typeUtils-I5iG5ZKA-sWTi7tVc.js";import"./ClassBreaksRenderer-D97YzbWp-CXAl2f0g.js";import"./utils-BYqzY6_X-CEDPzxJ5.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./heatmapUtils--OU2Fakh-B8rhxyeM.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./sublayerUtils-CVtBGavp-Dho4j8Rp.js";import"./jsonUtils-DzmXEA9_-CQhzNrzp.js";import"./parser-hXQyB-Qx-ierHVsLq.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-_Z9hcwZO.js";var d;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=d=class extends V(q(N(I(k(B(A(G(C(E($(x(M)))))))))))){constructor(...e){super(...e),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(_).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo?.spatialReference)&&v.fromJSON(e)}writeSublayers(e,r,t,o){if(!this.loaded||!e)return;const n=e.slice().reverse().flatten(({sublayers:p})=>p&&p.toArray().reverse()).toArray(),l=[],c={writeSublayerStructure:!1,...o};n.forEach(p=>{const u=p.write({},c);l.push(u)}),l.some(p=>Object.keys(p).length>1)&&(r.layers=l)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map(r=>S(r).path):null}fetchTile(e,r,t,o={}){const{signal:n}=o,l=this.getTileUrl(e,r,t),c={responseType:"image",signal:n,query:{...this.refreshParameters}};return m(l,c).then(p=>p.data)}async fetchImageBitmapTile(e,r,t,o={}){const{signal:n}=o;if(this.fetchTile!==d.prototype.fetchTile){const u=await this.fetchTile(e,r,t,o);return y(u,e,r,t,n)}const l=this.getTileUrl(e,r,t),c={responseType:"blob",signal:n,query:{...this.refreshParameters}},{data:p}=await m(l,c);return y(p,e,r,t,n)}getTileUrl(e,r,t){const o=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,n=T({...this.parsedUrl?.query,blankTile:!o&&null,...this.customParameters,token:this.apiKey}),l=this.tileServers;return`${l&&l.length?l[r%l.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${n?"?"+n:""}`}loadAll(){return P(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new h("tile-layer:undefined-url","layer's url is not defined");const o=b(this.parsedUrl.path);if(o!=null&&o.serverType==="ImageServer")throw new h("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");m(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)}).then(r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!w(t))return this._fetchServerVersion(t,e).then(o=>{this.read({currentVersion:o})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!O(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return m(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(o=>{if(o.data&&o.data.currentVersion)return o.data.currentVersion;throw new h("tile-layer:version-not-available")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(e==null)return null;let r;e=e.toLowerCase();for(let t=0,o=f.length;t<o;t++)if(r=f[t],r.toLowerCase().includes(e))return U("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(e==null)return[];const r=e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};s([a({readOnly:!0})],i.prototype,"attributionDataUrl",null),s([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),s([a({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),s([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),s([a({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([a({type:Boolean})],i.prototype,"resampling",void 0),s([a()],i.prototype,"sourceJSON",void 0),s([a({type:v})],i.prototype,"spatialReference",void 0),s([R("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([a({readOnly:!0})],i.prototype,"sublayers",void 0),s([W("sublayers",{layers:{type:[D]}})],i.prototype,"writeSublayers",null),s([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),s([a()],i.prototype,"tileServers",null),s([L("tileServers")],i.prototype,"castTileServers",null),s([a({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),s([a(J)],i.prototype,"url",void 0),i=d=s([j("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const ur=i;export{ur as default};
