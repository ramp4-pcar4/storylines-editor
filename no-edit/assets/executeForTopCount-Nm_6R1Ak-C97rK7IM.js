import{y as i}from"./utils-DuaeuwP5-HwStMl9G.js";import{S as p}from"./queryTopFeatures-BdkfRugo-C2-3s1XK.js";import a from"./TopFeaturesQuery-C3E7qv-F-XbZ_jJYs.js";import"./main-BHNQ-jck.js";import"./normalizeUtils-b-vZURob-7YjRKnt4.js";import"./utils-Jw-4AGsF-D7rDSzLO.js";import"./query-nJmB7Ppn-IzJw5qBp.js";import"./pbfQueryUtils-1j64fqcx-DbmMDo88.js";import"./pbf-Ijhb7ANA--uRCM42B.js";import"./memoryEstimations-iHVpvWPf-cjKTPFHn.js";import"./OptimizedGeometry-1qDYm3YK-8jqQMiqy.js";import"./OptimizedFeatureSet-D6mgsKNr-CH9LZ0pI.js";import"./queryZScale-DBCLQqDI-xvheUAHB.js";import"./projection-m8vi7Cxv-CrLoPBNy.js";import"./TimeExtent-gZaEUVeW-DK4xyRb2.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
