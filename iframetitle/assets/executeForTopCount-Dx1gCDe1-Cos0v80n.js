import{y as i}from"./utils-9sQxfkoa-hQpnOcSU.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-B5PNnIaB.js";import a from"./TopFeaturesQuery-Ckj_IYM7-CzgsR_Y1.js";import"./main-Da5X-dEa.js";import"./normalizeUtils-Bxmy9MNI-D0Y416za.js";import"./normalizeUtilsCommon-CRJlkfEA-o7esVOQ4.js";import"./utils-Bq23Xwmj-D3Fn9hbu.js";import"./query-DFW9-NG_-BvvLS9cU.js";import"./pbfQueryUtils-F4ZE8-K8-DWEdWY1l.js";import"./pbf-D-y3_eZO-CYEOFmRR.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BweyDgSE.js";import"./projection-BA9M1R7d-CR435L8I.js";import"./projectBuffer-CvCBvJ6W-Cx3n_bya.js";import"./TimeExtent-Cn0Jofqr-CnysE9tY.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
