const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./FeatureLayer-D09djTpa-D4FjCTZQ.js","./main-D6pWG5Jl.js","./main-CUHYO_F4.css","./MultiOriginJSONSupport-BqiFJbbt-xzM9QnFg.js","./layerContainerType-ChWdCT09-G5sdAsSy.js","./FeatureLayerBase-B8QtBTYG-B5C68bO3.js","./Field-BIQ-quF4-CKkdXo_g.js","./fieldType-PhcL4ff8-8Tv0gVO4.js","./HeightModelInfo-C4voFc4k-C63gdikT.js","./OperationalLayer-CbXUnTH0-CHE38Pwr.js","./ElevationInfo-DE5to86a-kg11FEZa.js","./lengthUtils-C61nRlXw-BFItfjy_.js","./TimeExtent-Cf2Pienb-DT3rGVSq.js","./timeZoneUtils-d5p0Jda1-DAv4RRgI.js","./labelingInfo-DuLk-IW_-ONMlTr5h.js","./asyncUtils-BPUlNCrX-CZia4ey4.js","./uuid-Dj9mdEVg-BaKSCiyT.js","./Query-n1aoaaFC-DpWqgFx5.js","./SimpleRenderer-C1YRhRzu-QM3DVjh_.js","./commonProperties-CJLeiNuA-LJiGeDei.js","./colorRamps-trM-CPFS-CiN2g04A.js","./ColorStop-CL7v3R-A-Dr6eBkMW.js","./visualVariableUtils-BTS148WR-0hCO13Kh.js","./UniqueValueRenderer-CLXHFtg9-C0-PlgQl.js","./diffUtils-BxG8DCnW-85hjmlwJ.js","./RendererLegendOptions-Bil_IDab-CmUTD8Su.js","./styleUtils-DBPDLVBX-DSS_-MHf.js","./RelationshipQuery-CaEbQySU-NW73cYnM.js","./NormalizationBinParametersMixin-70JA0FRq-DiMmA9xa.js","./labelUtils-Oapo6DRu-D7ac1AJc.js","./LayerFloorInfo-CkeH-P4_-Cb4ntFY2.js","./Relationship-B6fQjk3--Bf6TK1vu.js","./serviceCapabilitiesUtils-BerH-9mt-BKyILTSO.js","./infoFor3D-BeWnZejW-DJyBSoCy.js","./portalItemUtils-BfWDJg-S-BFgIEKXO.js","./projectionUtils-B-CplN3q-B90hvAjM.js","./Layer-DvVVmz9x-BEoIOD8q.js","./workers-CeRXsnNJ-ChXobHxl.js","./Queue-DV3gpSdl-CSYft48_.js","./intl-BAA1onnp-COqHgoiM.js","./editsZScale-BWHgeDdL-hGi8tXHo.js","./queryZScale-CwrUzBjP-DhCtIyIj.js","./FeatureSet-BVGGhhH9-BzEhlDF2.js","./APIKeyMixin-BNzYY3QS-CK8fsp4n.js","./ArcGISService-B6M5rzsr-C-vVS3Kx.js","./BlendLayer-DjW_5k0v-v21DCJ-7.js","./jsonUtils-BwLwuQj7-EYjL4rTf.js","./parser-CWccHtwJ-LkfACPjc.js","./mat4f32-BdRMyjXW-CWt6U0BP.js","./mat4-OOmHNWi7-CA8fHT2D.js","./common-CYWrYyJl-E8-sukrT.js","./CustomParametersMixin-CSMgHDaw-DpMUsXWz.js","./DisplayFilteredLayer-DTxK0R7U-BS3UvMhg.js","./scaleUtils-Br-smv3A-BtcgvWWA.js","./displayFilterUtils-DvWUbJDp-D6GhirmE.js","./EditBusLayer-CAIKbP5V-BMY-qCyC.js","./FeatureEffectLayer-BVJTjFhg-CxWjKbrU.js","./FeatureEffect-D3G_gJ5F-BZEzjBsd.js","./FeatureFilter-DXpQKGs4-Ij4vtUxK.js","./FeatureReductionLayer-vR-evpIv-DAMFB9yq.js","./FeatureReductionSelection-DzXAxMK9-CZ-QiKGm.js","./jsonUtils-CzRaZnmS-Dp1KOjxg.js","./typeUtils-CB2EGBWO-C-XNY3pV.js","./ClassBreaksRenderer-Bq2XGpfI-DpR5Qh84.js","./LRUCache-DPWdPNTF-Du_Z0yHt.js","./MemCache-qDGoejB7-9IozotvY.js","./DictionaryScriptEvaluator-DW5hOK9A-B08tbB9R.js","./Version-CnwD6MZa-CX00AMAi.js","./FieldsIndex-Bt0Y8aWr-cOuRo6Pg.js","./UnknownTimeZone-DxjyzFvs-SNo0VRBB.js","./ArcadeExpression-XjY3x7KV-BlsFhVGl.js","./TimeOnly-CGkId3bj-Bzgajliq.js","./enum-g1DWyQyu-D4Kr4ZCp.js","./utils-BfXZnjCE-BBA8OVnN.js","./defaultCIMValues-BcSaJjm--58G-soMN.js","./enums-a_LDTPYU-CBIcy3mM.js","./heatmapUtils-DRTN9U3a-C_cMnAOB.js","./vec42-D8CJyqHG-DnfLTeQH.js","./vec4f64-DD-nkcCV-CSNWKRqG.js","./MD5-CXHDUqXT-CMrYdOi6.js","./OrderedLayer-BD-wnvgD-CB9bP-05.js","./OrderByInfo-SNGyPlhJ-B47UYhQK.js","./PortalLayer-B34ZUA2x-DD-4OVRv.js","./PortalItem-BP-IQXnZ-CSKaJo_Z.js","./RefreshableLayer-Qpvyi8qY-dE0BRf2Y.js","./ScaleRangeLayer-x42fwED3-CUO17Vva.js","./TemporalLayer-lQRje9wB-C3Bb6zv2.js","./TimeInfo-COHxjenm-CJTZeAdS.js","./TrackableLayer-D0OccxDX-wGwIT-PH.js","./FeatureTemplate-CW5LOQ_p-DF7jOGhX.js","./FeatureType-DdIqcZ2U-DgJ2yXep.js","./fieldProperties-Cgp0UdcB-BI-ma2u2.js","./TitleCreator-DZ9r9lVc-B0Wq1IsL.js","./versionUtils-BwTR8Ufq-CbVSMhEJ.js","./styleUtils-BnJpZ0Gl-BYdhm8Pa.js","./popupUtils-B99PyAFi-BL1SurRB.js","./interfaces-Cwm0pihk-Ptzy6gTd.js"])))=>i.map(i=>d[i]);
import{au as se,al as ae,h,N as V,bF as oe,an as le,bG as ne,bH as pe,a6 as E,bm as ye,a0 as $,Q as ue,bI as A,_ as de,bB as y,q as _,bJ as ce,bK as M,v as a,S as l,w as b,o as ee,bh as R,F as v,bw as he,aF as J,ar as te,I as fe,n as Q,u as H,bL as K,bC as W,D as be,bA as N,a1 as G,ag as z,bM as Y}from"./main-D6pWG5Jl.js";import{m as me}from"./Version-CnwD6MZa-CX00AMAi.js";import{V as ge,y as Se,r as Ie}from"./OperationalLayer-CbXUnTH0-CHE38Pwr.js";import{S as X}from"./portalItemUtils-BfWDJg-S-BFgIEKXO.js";import{e as we}from"./CollectionFlattener-DyEG1Q6J-BpIAY2Iy.js";import{w as ve}from"./MultiOriginJSONSupport-BqiFJbbt-xzM9QnFg.js";import{o as Ee}from"./QueryTask-DxRoWbf6-BbwzEjdi.js";import{d as Le}from"./OrderedLayer-BD-wnvgD-CB9bP-05.js";import{_ as xe,a as Oe,u as Fe}from"./labelingInfo-DuLk-IW_-ONMlTr5h.js";import{o as Te}from"./FeatureType-DdIqcZ2U-DgJ2yXep.js";import{m as _e}from"./Field-BIQ-quF4-CKkdXo_g.js";import{o as Pe}from"./FieldsIndex-Bt0Y8aWr-cOuRo6Pg.js";import{e as De}from"./LayerFloorInfo-CkeH-P4_-Cb4ntFY2.js";import{e as Ae}from"./OrderByInfo-SNGyPlhJ-B47UYhQK.js";import{e as qe}from"./Relationship-B6fQjk3--Bf6TK1vu.js";import{F as Ce}from"./serviceCapabilitiesUtils-BerH-9mt-BKyILTSO.js";import{c as B,R as Re,a as Z}from"./Query-n1aoaaFC-DpWqgFx5.js";import{_ as je,P as Ve}from"./typeUtils-CB2EGBWO-C-XNY3pV.js";import{m as Me}from"./utils-BO8hgPs3-BHuOwAV2.js";import{p as Ne}from"./RelationshipQuery-CaEbQySU-NW73cYnM.js";import{y as Be}from"./popupUtils-B99PyAFi-BL1SurRB.js";import{d as ke}from"./sublayerUtils-DUalPlkE-BpFaPg08.js";const ct=e=>{let t=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=void 0,this._allLayersAndTablesMap=null}readCapabilities(r,i){const s=i.capabilities&&i.capabilities.split(",").map(ie=>ie.toLowerCase().trim());if(!s)return{operations:{supportsExportMap:!1,supportsExportTiles:!1,supportsIdentify:!1,supportsQuery:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const n=this.type,p=n!=="tile"&&!!i.supportsDynamicLayers,u=s.includes("query"),c=s.includes("map"),m=!!i.exportTilesAllowed,w=s.includes("tilemap"),g=s.includes("data"),I=n!=="tile"&&(!i.tileInfo||p),x=n!=="tile"&&(!i.tileInfo||p),O=n!=="tile",d=n!=="tile"&&p&&i.currentVersion>=11.1,f=i.cimVersion?me.parse(i.cimVersion):null,F=f?.greaterEqual(1,4)??!1,T=f?.greaterEqual(2,0)??!1;return{operations:{supportsExportMap:c,supportsExportTiles:m,supportsIdentify:u,supportsQuery:g,supportsTileMap:w},exportMap:c?{supportsArcadeExpressionForLabeling:F,supportsCIMSymbols:T,supportsDynamicLayers:p,supportsSublayerOrderBy:d,supportsSublayerDefinitionExpression:x,supportsSublayerVisibility:I,supportsSublayersChanges:O}:null,exportTiles:m?{maxExportTilesCount:+i.maxExportTilesCount}:null}}readVersion(r,i){let s=i.currentVersion;return s||(s=i.hasOwnProperty("capabilities")||i.hasOwnProperty("tables")?10:i.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),s}async fetchRelatedService(r){const i=this.portalItem;if(!i||!X(i))return null;this._relatedFeatureServicePromise||(this._relatedFeatureServicePromise=i.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},r).then(n=>n.find(p=>p.type==="Feature Service")??null,()=>null));const s=await this._relatedFeatureServicePromise;return H(r),s?{itemId:s.id,url:s.url}:null}async fetchSublayerInfo(r,i){const{source:s}=r;if(this?.portalItem&&this.type==="tile"&&s?.type==="map-layer"&&X(this.portalItem)&&r.originIdOf("url")<y.SERVICE){const u=await this.fetchRelatedService(i);u&&(r.url=K(u.url,s.mapLayerId.toString()),r.layerItemId=u.itemId)}const{url:n}=r;let p;if(s.type==="data-layer")p=(await V(n,{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey},...i})).data;else if(n&&r.originIdOf("url")>y.SERVICE)try{const u=await this._fetchAllLayersAndTablesFromService(n),c=W(n)?.sublayer??s.mapLayerId;p=u.get(c)}catch{}else{let u=r.id;s?.type==="map-layer"&&(u=s.mapLayerId);try{p=(await this.fetchAllLayersAndTables(i)).get(u)}catch{}}return p}async fetchAllLayersAndTables(r){return this._fetchAllLayersAndTablesFromService(this.parsedUrl?.path,r)}async _fetchAllLayersAndTablesFromService(r,i){await this.load(i),this._allLayersAndTablesMap||=new Map;const s=W(r),n=be(this._allLayersAndTablesMap,s?.url.path,()=>V(K(s?.url.path,"/layers"),{responseType:"json",query:{f:"json",...this.customParameters,token:this.apiKey}}).then(u=>{const c=new Map,{layers:m,tables:w}=u.data,g=[...m??[],...w??[]];for(const I of g)c.set(I.id,I);return{result:c}},u=>({error:u}))),p=await n;if(H(i),"result"in p)return p.result;throw p.error}};return a([l({readOnly:!0})],t.prototype,"capabilities",void 0),a([b("service","capabilities",["capabilities","cimVersion","currentVersion","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],t.prototype,"readCapabilities",null),a([l({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),a([l({type:ee})],t.prototype,"fullExtent",void 0),a([l(Se)],t.prototype,"id",void 0),a([l({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],t.prototype,"legendEnabled",void 0),a([l(Ie)],t.prototype,"popupEnabled",void 0),a([l({type:te})],t.prototype,"spatialReference",void 0),a([l({readOnly:!0})],t.prototype,"version",void 0),a([b("service","version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],t.prototype,"readVersion",null),t=a([Q("esri.layers.mixins.ArcGISMapService")],t),t};var q;function j(e){return e?.type==="esriSMS"}function U(e,t,r){const i=r.minimumWritableOrigin||r.origin;return!!i&&e.originIdOf(t)>=N(i)}function L(e,t,r){const i=U(this,t,r);return{ignoreOrigin:!0,allowNull:i,enabled:!!r&&r.layer?.type==="map-image"&&(r.writeSublayerStructure||i)}}function k(e,t,r){return{enabled:!!r&&r.layer?.type==="tile"&&(U(this,t,r)||this._isOverridden(t))}}function S(e,t,r){return{ignoreOrigin:!0,enabled:r&&r.writeSublayerStructure||!1}}function C(e,t,r){return{ignoreOrigin:!0,enabled:!!r?.writeSublayerStructure&&this.originIdOf(t)>y.SERVICE}}function P(e,t,r){return{ignoreOrigin:!0,enabled:!!r&&(r.writeSublayerStructure||U(this,t,r))}}let $e=0;const Qe=new Set(["layer","parent","loaded","loadStatus","loadError","loadWarnings"]);let o=class extends ve(se.IdentifiableMixin(ae)){static{q=this}constructor(e){super(e),this.attributeTableTemplate=null,this.capabilities=void 0,this.maxScaleRange={minScale:0,maxScale:0},this.fields=null,this.fullExtent=null,this.geometryType=null,this.globalIdField=null,this.isTable=!1,this.legendEnabled=!0,this.objectIdField=null,this.parent=null,this.popupEnabled=!0,this.popupTemplate=null,this.relationships=null,this.sourceJSON=null,this.spatialReference=null,this.title=null,this.typeIdField=null,this.type="sublayer",this.types=null,this._lastParsedUrl=null}async load(e){return this.addResolvingPromise((async()=>{const{layer:t,url:r}=this;if(!t&&!r)throw new h("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});const i=t?await t.fetchSublayerInfo(this,e):(await V(r,{responseType:"json",query:{f:"json"},...e})).data;i&&(this.sourceJSON=i,this.read({layerDefinition:i},{origin:"service",layer:t,url:Me(r)}))})()),this}readCapabilities(e,t){t=t.layerDefinition||t;const{attachment:r,operations:{supportsQuery:i,supportsQueryAttachments:s},query:{supportsFormatPBF:n,supportsOrderBy:p,supportsPagination:u},data:{supportsAttachment:c},queryRelated:m}=Ce(t,this.url);return{attachment:{supportsOrderByFields:r?.supportsOrderByFields??!1,supportsResize:r?.supportsResize??!1},exportMap:{supportsModification:!!t.canModifyLayer},operations:{supportsQuery:i,supportsQueryAttachments:s},data:{supportsAttachment:c},query:{supportsFormatPBF:n,supportsOrderBy:p,supportsPagination:u},queryRelated:m}}get defaultPopupTemplate(){return this.createPopupTemplate()}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get effectiveScaleRange(){const{minScale:e,maxScale:t}=this;return{minScale:e,maxScale:t}}readMaxScaleRange(e,t){return{minScale:(t=t.layerDefinition||t).minScale??0,maxScale:t.maxScale??0}}get fieldsIndex(){return new Pe(this.fields||[])}set floorInfo(e){this._setAndNotifyLayer("floorInfo",e)}readGlobalIdFieldFromService(e,t){if((t=t.layerDefinition||t).globalIdField)return t.globalIdField;if(t.fields){for(const r of t.fields)if(r.type==="esriFieldTypeGlobalID")return r.name}}get id(){return this._get("id")??$e++}set id(e){this._get("id")!==e&&(this.layer?.capabilities?.exportMap?.supportsDynamicLayers!==!1?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}readIsTable(e,t){return t.type==="Table"}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,t,r,i){e&&e.length&&(t.layerDefinition={drawingInfo:{labelingInfo:e.map(s=>s.write({},i))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers?.forEach(t=>t.layer=e)}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,t){return t.minScale||t.layerDefinition?.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,t){return t.maxScale||t.layerDefinition?.maxScale||0}readObjectIdFieldFromService(e,t){return(t=t.layerDefinition||t).objectIdField?t.objectIdField:t.fields?.find(r=>r.type==="esriFieldTypeOID")?.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,t){const{layerDefinition:r}=t;return 1-.01*(r?.transparency??r?.drawingInfo?.transparency??0)}writeOpacity(e,t,r,i){t.layerDefinition={drawingInfo:{transparency:100-100*e}}}set orderBy(e){this._setAndNotifyLayer("orderBy",e)}writeParent(e,t){this.parent&&this.parent!==this.layer?t.parentLayerId=oe(this.parent.id):t.parentLayerId=-1}get queryTask(){if(!this.layer)return null;const{capabilities:e,fieldsIndex:t,layer:r,url:i}=this,{spatialReference:s}=r,n="gdbVersion"in r?r.gdbVersion:void 0,p=le("featurelayer-pbf")&&e?.query.supportsFormatPBF;return new Ee({fieldsIndex:t,gdbVersion:n,pbfSupported:p,queryAttachmentsSupported:e?.operations?.supportsQueryAttachments??!1,sourceSpatialReference:s,url:i})}set renderer(e){if(ne(e,this.fieldsIndex),e){for(const t of e.symbols)if(pe(t)){E.getLogger(this).warn("Sublayer renderer should use 2D symbols");break}}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new B({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return ye($.ofType(q),e)}writeSublayers(e,t,r){this.sublayers?.length&&(t[r]=this.sublayers.map(i=>i.id).toArray().reverse())}readTitle(e,t){return t.layerDefinition?.name??t.name}readTypeIdField(e,t){let r=(t=t.layerDefinition||t).typeIdField;if(r&&t.fields){r=r.toLowerCase();const i=t.fields.find(s=>s.name.toLowerCase()===r);i&&(r=i.name)}return r}get url(){const e=this.layer?.parsedUrl??this._lastParsedUrl,t=this.source;if(!e)return null;if(this._lastParsedUrl=e,t?.type==="map-layer")return`${e.path}/${t.mapLayerId}`;const r={layer:JSON.stringify({source:this.source})};return`${e.path}/dynamicLayer?${ue(r)}`}set url(e){this._overrideIfSome("url",e)}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,t,r,i){t[r]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=A(this),t=new q;return A(t).store=e.clone(Qe),this.commitProperty("url"),t._lastParsedUrl=this._lastParsedUrl,t}createPopupTemplate(e){return Be(this,e)}createQuery(){return new Re({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){if(this.hasOwnProperty("sublayers"))return null;const e=(await de(async()=>{const{default:s}=await import("./FeatureLayer-D09djTpa-D4FjCTZQ.js");return{default:s}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96]),import.meta.url)).default,{layer:t,url:r}=this;let i;if(r&&this.originIdOf("url")>y.SERVICE)i=new e({url:r});else{if(!t?.parsedUrl)throw new h("createFeatureLayer:missing-information","Cannot create a FeatureLayer without a url or a parent layer");{const s=t.parsedUrl;i=new e({url:s.path}),s&&this.source&&(this.source.type==="map-layer"?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source)}}return t?.refreshInterval!=null&&(i.refreshInterval=t.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.floorInfo&&(i.floorInfo=_(this.floorInfo)),this.originIdOf("labelingInfo")>y.SERVICE&&(i.labelingInfo=_(this.labelingInfo)),this.originIdOf("labelsVisible")>y.DEFAULTS&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>y.DEFAULTS&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>y.DEFAULTS&&(i.visible=this.visible),this.originIdOf("minScale")>y.DEFAULTS&&(i.minScale=this.minScale),this.originIdOf("maxScale")>y.DEFAULTS&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>y.DEFAULTS&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>y.DEFAULTS&&(i.popupTemplate=_(this.popupTemplate)),this.originIdOf("renderer")>y.SERVICE&&(i.renderer=_(this.renderer)),this.source?.type==="data-layer"&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>y.DEFAULTS&&(i.title=this.title),t?.type==="map-image"&&t.originIdOf("customParameters")>y.DEFAULTS&&(i.customParameters=t.customParameters),t?.type==="tile"&&t.originIdOf("customParameters")>y.DEFAULTS&&(i.customParameters=t.customParameters),i}getField(e){return this.fieldsIndex.get(e)}getFeatureType(e){return xe(this.types,this.typeIdField,e)}getFieldDomain(e,t){const r=t?.feature,i=this.getFeatureType(r);if(i){const s=i.domains&&i.domains[e];if(s&&s.type!=="inherited")return s}return this._getLayerDomain(e)}async queryAttachments(e,t){await this.load(),e=Ne.from(e);const r=this.capabilities;if(!r?.data?.supportsAttachment)throw new h("queryAttachments:not-supported","this layer doesn't support attachments");const{attachmentTypes:i,objectIds:s,globalIds:n,num:p,size:u,start:c,where:m}=e;if(!r?.operations?.supportsQueryAttachments&&(i?.length>0||n?.length>0||u?.length>0||p||c||m))throw new h("queryAttachments:option-not-supported","when 'capabilities.operations.supportsQueryAttachments' is false, only objectIds is supported",e);if(!(s?.length||n?.length||m))throw new h("queryAttachments:invalid-query","'objectIds', 'globalIds', or 'where' are required to perform attachment query",e);return!r?.attachment?.supportsOrderByFields&&e.orderByFields?.length&&((e=e.clone()).orderByFields=null),this.queryTask.executeAttachmentQuery(e,t)}async queryFeatureCount(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatureCount:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatureCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForCount(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryFeatures(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryFeatures:not-supported","this layer has no url.");const r=await this.queryTask.execute(e,{...t,query:{...this.layer?.customParameters,token:this.layer?.apiKey}});if(r?.features)for(const i of r.features)i.sourceLayer=this;return r}async queryObjectIds(e=this.createQuery(),t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryObjectIds:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryObjectIds:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeForIds(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeatures(e,t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryRelatedFeatures:not-supported","this layer doesn't support queries.");if(!this.url)throw new h("queryRelatedFeatures:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQuery(e,{...t,query:{...this.layer?.customParameters,token:r}})}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.capabilities.operations.supportsQuery)throw new h("queryRelatedFeaturesCount:not-supported","this layer doesn't support queries.");if(!this.capabilities.queryRelated.supportsCount)throw new h("queryRelatedFeaturesCount:not-supported","this layer doesn't support query related counts.");if(!this.url)throw new h("queryRelatedFeaturesCount:not-supported","this layer has no url.");const r=this.layer?.apiKey;return await this.queryTask.executeRelationshipQueryForCount(e,{...t,query:{...this.layer?.customParameters,token:r}})}toExportImageJSON(e){const t={id:this.id,source:this.source?.toJSON()||{mapLayerId:this.id,type:"mapLayer"}},r=ce(e,this.definitionExpression);r!=null&&(t.definitionExpression=r);const i=["renderer","labelingInfo","opacity","labelsVisible"].reduce((s,n)=>(s[n]=this.originIdOf(n),s),{});if(Object.keys(i).some(s=>i[s]>y.SERVICE)){const s=t.drawingInfo={};if(i.renderer>y.SERVICE&&(s.renderer=this.renderer?this.renderer.toJSON():null),i.labelsVisible>y.SERVICE&&(s.showLabels=this.labelsVisible),this.labelsVisible&&i.labelingInfo>y.SERVICE)if(this.labelingInfo){!this.loaded&&this.labelingInfo?.some(p=>!p.labelPlacement)&&E.getLogger(this).warnOnce(`A Sublayer (title: ${this.title}, id: ${this.id}) has an undefined 'labelPlacement' and so labels cannot be displayed. Either define a valid 'labelPlacement' or call Sublayer.load() to use a default value based on geometry type.`,{sublayer:this});let n=this.labelingInfo;this.geometryType!=null&&(n=Oe(this.labelingInfo,M.toJSON(this.geometryType))),s.showLabels=!0,s.labelingInfo=n.filter(p=>p.labelPlacement).map(p=>p.toJSON({origin:"service",layer:this.layer}))}else s.showLabels=!1;i.opacity>y.SERVICE&&(s.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(s.renderer)}return(this.layer?.capabilities?.exportMap?.supportsSublayerOrderBy??!1)&&this.originIdOf("orderBy")>y.SERVICE&&(t.orderBy=this.orderBy?.map(s=>s.toJSON())??null),t}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,t=>{t.color||t.style!=="esriSMSX"&&t.style!=="esriSMSCross"||(t.outline?.color?t.color=t.outline.color:t.color=[0,0,0,0])})}_forEachSimpleMarkerSymbols(e,t){if(e){const r=("uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:null)??[];for(const i of r)j(i.symbol)&&t(i.symbol);"symbol"in e&&j(e.symbol)&&t(e.symbol),"defaultSymbol"in e&&j(e.defaultSymbol)&&t(e.defaultSymbol)}}_setAndNotifyLayer(e,t){const r=this.layer,i=this._get(e);let s,n;switch(e){case"definitionExpression":case"floorInfo":s="supportsSublayerDefinitionExpression";break;case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",n="supportsModification";break;case"orderBy":s="supportsSublayerOrderBy",n="supportsModification"}const p=A(this).getDefaultOrigin();if(p!=="service"){if(s&&this.layer?.capabilities?.exportMap?.[s]===!1)return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(n&&this.capabilities?.exportMap[n]===!1)return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${n}'`)}e!=="source"||this.loadStatus==="not-loaded"?(this._set(e,t),p!=="service"&&i!==t&&r&&r.emit&&r.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,t){t&&(t.forEach(r=>{r.parent=null,r.layer=null}),this.removeAllHandles()),e&&(e.forEach(r=>{r.parent=this,r.layer=this.layer}),this.addHandles([e.on("after-add",({item:r})=>{r.parent=this,r.layer=this.layer}),e.on("after-remove",({item:r})=>{r.parent=null,r.layer=null}),e.on("before-changes",r=>{(this.layer?.capabilities?.exportMap?.supportsSublayersChanges??1)||(E.getLogger(this).error(new h("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),r.preventDefault())})]))}_logLockedError(e,t){const{layer:r,declaredClass:i}=this;E.getLogger(i).error(new h("sublayer:locked",`Property '${String(e)}' can't be changed on Sublayer from the layer '${r?.id}'`,{reason:t,sublayer:this,layer:r}))}_getLayerDomain(e){return this.fieldsIndex.get(e)?.domain??null}static{this.test={isMapImageLayerOverridePolicy:e=>e===C||e===S||e===L,isTileImageLayerOverridePolicy:e=>e===k}}};a([l({type:ge,json:{name:"attributeTableInfo",write:{overridePolicy:L},origins:{"web-scene":{write:!1}}}})],o.prototype,"attributeTableTemplate",void 0),a([l({readOnly:!0})],o.prototype,"capabilities",void 0),a([b("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],o.prototype,"readCapabilities",null),a([l()],o.prototype,"defaultPopupTemplate",null),a([l({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{allowNull:!0,overridePolicy:L}}})],o.prototype,"definitionExpression",null),a([l({readOnly:!0})],o.prototype,"effectiveScaleRange",null),a([b("service","maxScaleRange",["minScale","maxScale"])],o.prototype,"readMaxScaleRange",null),a([l({type:[_e],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],o.prototype,"fields",void 0),a([l({readOnly:!0})],o.prototype,"fieldsIndex",null),a([l({type:De,value:null,json:{name:"layerDefinition.floorInfo",read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo",overridePolicy:L},origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"floorInfo",null),a([l({type:ee,json:{read:{source:"layerDefinition.extent"}}})],o.prototype,"fullExtent",void 0),a([l({type:M.apiValues,json:{origins:{service:{name:"layerDefinition.geometryType",read:{reader:M.read}}}}})],o.prototype,"geometryType",void 0),a([l({type:String})],o.prototype,"globalIdField",void 0),a([b("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],o.prototype,"readGlobalIdFieldFromService",null),a([l({type:R,json:{write:{ignoreOrigin:!0}}})],o.prototype,"id",null),a([l({readOnly:!0})],o.prototype,"isTable",void 0),a([b("service","isTable",["type"])],o.prototype,"readIsTable",null),a([l({value:null,type:[Fe],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:C}}})],o.prototype,"labelingInfo",null),a([v("labelingInfo")],o.prototype,"writeLabelingInfo",null),a([l({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:S}}})],o.prototype,"labelsVisible",null),a([l({value:null})],o.prototype,"layer",null),a([l({type:String,json:{write:{overridePolicy:k}}})],o.prototype,"layerItemId",void 0),a([l({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:P}}})],o.prototype,"legendEnabled",void 0),a([l({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],o.prototype,"listMode",null),a([l({type:Number,value:0,json:{write:{overridePolicy:S}}})],o.prototype,"minScale",null),a([b("minScale",["minScale","layerDefinition.minScale"])],o.prototype,"readMinScale",null),a([l({type:Number,value:0,json:{write:{overridePolicy:S}}})],o.prototype,"maxScale",null),a([b("maxScale",["maxScale","layerDefinition.maxScale"])],o.prototype,"readMaxScale",null),a([l()],o.prototype,"objectIdField",void 0),a([b("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],o.prototype,"readObjectIdFieldFromService",null),a([l({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:S}}})],o.prototype,"opacity",null),a([b("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],o.prototype,"readOpacity",null),a([v("opacity")],o.prototype,"writeOpacity",null),a([l({value:null,type:[Ae],json:{name:"layerDefinition.orderBy",read:{reader:Le},write:{overridePolicy:L},origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"orderBy",null),a([l({json:{type:R,write:{target:"parentLayerId",writerEnsuresNonNull:!0,overridePolicy:S}}})],o.prototype,"parent",void 0),a([v("parent")],o.prototype,"writeParent",null),a([l({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,t)=>!t.disablePopup},write:{target:"disablePopup",overridePolicy:P,writer(e,t,r){t[r]=!e}}}})],o.prototype,"popupEnabled",void 0),a([l({type:he,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:P}}})],o.prototype,"popupTemplate",void 0),a([l({readOnly:!0})],o.prototype,"queryTask",null),a([l({type:[qe],readOnly:!0,json:{origins:{service:{read:{source:"layerDefinition.relationships"}}}}})],o.prototype,"relationships",void 0),a([l({types:je,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:C},origins:{"web-scene":{types:Ve,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:C}}}}})],o.prototype,"renderer",null),a([l({types:{key:"type",base:null,typeMap:{"data-layer":Z,"map-layer":B}},cast(e){if(e){if("mapLayerId"in e)return J(B,e);if("dataSource"in e)return J(Z,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:S}}})],o.prototype,"source",null),a([l()],o.prototype,"sourceJSON",void 0),a([l({type:te,json:{origins:{service:{read:{source:"layerDefinition.extent.spatialReference"}}}}})],o.prototype,"spatialReference",void 0),a([l({value:null,json:{type:[R],write:{target:"subLayerIds",allowNull:!0,overridePolicy:S}}})],o.prototype,"sublayers",null),a([fe("sublayers")],o.prototype,"castSublayers",null),a([v("sublayers")],o.prototype,"writeSublayers",null),a([l({type:String,json:{name:"name",write:{overridePolicy:P}}})],o.prototype,"title",void 0),a([b("service","title",["name","layerDefinition.name"])],o.prototype,"readTitle",null),a([l({type:String})],o.prototype,"typeIdField",void 0),a([l({json:{read:!1},readOnly:!0,value:"sublayer"})],o.prototype,"type",void 0),a([b("typeIdField",["layerDefinition.typeIdField"])],o.prototype,"readTypeIdField",null),a([l({type:[Te],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],o.prototype,"types",void 0),a([l({type:String,json:{name:"layerUrl",write:{overridePolicy:k}}})],o.prototype,"url",null),a([l({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:S}}})],o.prototype,"visible",null),a([v("visible")],o.prototype,"writeVisible",null),o=q=a([Q("esri.layers.support.Sublayer")],o);function Ue(e,t){const r=[],i={};return e&&e.forEach(s=>{const n=new o;if(n.read(s,t),i[n.id]=n,s.parentLayerId!=null&&s.parentLayerId!==-1){const p=i[s.parentLayerId];p.sublayers||(p.sublayers=[]),p.sublayers.unshift(n)}else r.unshift(n)}),r}const D=$.ofType(o);function re(e,t){e&&e.forEach(r=>{t(r),r.sublayers&&r.sublayers.length&&re(r.sublayers,t)})}const ht=e=>{let t=class extends e{constructor(...r){super(...r),this.allSublayers=new we({getCollections:()=>[this.sublayers],getChildrenFunction:i=>i.sublayers}),this.sublayersSourceJSON={[y.SERVICE]:{},[y.PORTAL_ITEM]:{},[y.WEB_SCENE]:{},[y.WEB_MAP]:{},[y.LINK_CHART]:{}},this.subtables=null,this.addHandles([G(()=>this.sublayers,(i,s)=>this._handleSublayersChange(i,s),z),G(()=>this.subtables,(i,s)=>this._handleSublayersChange(i,s),z)])}destroy(){this.allSublayers.destroy()}readSublayers(r,i){if(!i||!r)return;const{sublayersSourceJSON:s}=this,n=N(i.origin);if(n<y.SERVICE||(s[n]={context:i,visibleLayers:r.visibleLayers||s[n].visibleLayers,layers:r.layers||s[n].layers},n>y.SERVICE))return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:p,origin:u}=this.createSublayersForOrigin("web-document"),c=A(this);c.setDefaultOrigin(u),this._set("sublayers",new D(p)),c.setDefaultOrigin("user")}findSublayerById(r){return this.allSublayers.find(i=>i.id===r)}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(r){let i;const s=N(r==="web-document"?"web-map":r);let n=y.SERVICE,p=this.sublayersSourceJSON[y.SERVICE].layers,u=this.sublayersSourceJSON[y.SERVICE].context,c=null;const m=[y.PORTAL_ITEM,y.WEB_SCENE,y.WEB_MAP].filter(d=>d<=s);for(const d of m){const f=this.sublayersSourceJSON[d];ke(f.layers)&&(n=d,p=f.layers,u=f.context,f.visibleLayers&&(c={visibleLayers:f.visibleLayers,context:f.context}))}const w=[y.PORTAL_ITEM,y.WEB_SCENE,y.WEB_MAP].filter(d=>d>n&&d<=s);let g=null;for(const d of w){const{layers:f,visibleLayers:F,context:T}=this.sublayersSourceJSON[d];f&&(g={layers:f,context:T},i??=d),F&&(c={visibleLayers:F,context:T})}const I=Ue(p,u),x=new Map,O=new Set;if(g)for(const d of g.layers)x.set(d.id,d);if(c?.visibleLayers)for(const d of c.visibleLayers)O.add(d);return re(I,d=>{g&&d.read(x.get(d.id),g.context),c&&d.read({defaultVisibility:O.has(d.id)},c.context)}),{origin:Y(n),originWithPartialOverrides:i?Y(i):null,sublayers:new D({items:I})}}read(r,i){super.read(r,i),this.readSublayers(r,i)}_handleSublayersChange(r,i){i&&(i.forEach(s=>{s.parent=null,s.layer=null}),this.removeHandles("sublayers-owner")),r&&(r.forEach(s=>{s.parent=this,s.layer=this}),this.addHandles([r.on("after-add",({item:s})=>{s.parent=this,s.layer=this}),r.on("after-remove",({item:s})=>{s.parent=null,s.layer=null})],"sublayers-owner"),this.type==="tile"&&this.addHandles(r.on("before-changes",s=>{E.getLogger("esri.layers.TileLayer").error(new h("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),s.preventDefault()}),"sublayers-owner"))}};return a([l({readOnly:!0})],t.prototype,"allSublayers",void 0),a([l({readOnly:!0,type:$.ofType(o)})],t.prototype,"serviceSublayers",void 0),a([l({value:null,type:D,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],t.prototype,"sublayers",void 0),a([l({readOnly:!0})],t.prototype,"sublayersSourceJSON",void 0),a([l({type:D,json:{read:{source:"tables"}}})],t.prototype,"subtables",void 0),t=a([Q("esri.layers.mixins.SublayersOwner")],t),t};export{ht as $,ct as k,o};
