import{m as i}from"./utils-BO8hgPs3-BHuOwAV2.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-NdFHhqea.js";import a from"./TopFeaturesQuery-BmMRhRdq-DeFLNAUi.js";import"./main-D6pWG5Jl.js";import"./normalizeUtils-u00NGW3M-5rTBA0MS.js";import"./normalizeUtilsCommon-ClagynAA-CBZnNxv_.js";import"./utils-DpLVEUvg-CKUoUeZu.js";import"./query-COAsogFA-DJ8Ilw-U.js";import"./pbfQueryUtils-aBcHX3TJ-BggsjAg1.js";import"./pbf-hoLeQyp2-M1b-lVIK.js";import"./memoryEstimations-DeWfxwaV-BHdpPUeJ.js";import"./OptimizedGeometry-pzfNw1AT-dVaxTVqH.js";import"./OptimizedFeature-mIz_HhJg-DbcUZOkJ.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-DhCtIyIj.js";import"./projectionUtils-B-CplN3q-B90hvAjM.js";import"./TimeExtent-Cf2Pienb-DT3rGVSq.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
