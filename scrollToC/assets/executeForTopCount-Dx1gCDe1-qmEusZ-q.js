import{y as i}from"./utils-9sQxfkoa-BhgumcXR.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-BKpG2IaY.js";import a from"./TopFeaturesQuery-Ckj_IYM7-B7lMlHh1.js";import"./main-CfNT4PCn.js";import"./normalizeUtils-Bxmy9MNI-DyUqHBi7.js";import"./normalizeUtilsCommon-CRJlkfEA-CYctkuMD.js";import"./utils-Bq23Xwmj-BYXgPlB-.js";import"./query-DFW9-NG_-eaRNRJ1l.js";import"./pbfQueryUtils-F4ZE8-K8-n9WaM74M.js";import"./pbf-D-y3_eZO-DPHD9xdH.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CU7yHbyK.js";import"./projection-BA9M1R7d-D-Nck4Rf.js";import"./projectBuffer-CvCBvJ6W-CVcHilsD.js";import"./TimeExtent-Cn0Jofqr-C-tn4Qfv.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
