import{$ as m,o as s,P as p}from"./main-CfNT4PCn.js";import{o as n}from"./MeshVertexAttributes-CbNpPur2-BdppZ2Li.js";import{b as c}from"./vertexSpaceConversion-CiKaVq_u-CL8sgu1X.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4-DX7gBViE-BK6zg7NC.js";import"./mat4f64-Dn1WEGBx-C99QVUMW.js";import"./vec32-D9GsKZ1t-CxqESlMC.js";import"./spatialReferenceEllipsoidUtils-DUrKTvup-Da8gApi2.js";import"./computeTranslationToOriginAndRotation-wF0y9WQG-CnQobv4A.js";import"./projectBuffer-CvCBvJ6W-CVcHilsD.js";import"./projectPointToVector-B2UUY9SE-B0Yzdvky.js";import"./projection-BA9M1R7d-D-Nck4Rf.js";import"./meshVertexSpaceUtils-B4l_Zo0M-DvjOvswN.js";import"./MeshLocalVertexSpace-BqgocsoS-7HOUJvpT.js";import"./vec3-BazNroeq-CBweKr5W.js";import"./BufferView-PQoE3GL7-DkqRfiAr.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4-DWDdg1fj-BFoIbWMD.js";async function U(o,r,t){await Promise.resolve(),m(t);const i=c(o,r,{useEllipsoid:t?.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=o.cloneAndModifyVertexAttributes(new n({...i,uv:p(o.vertexAttributes.uv),color:p(o.vertexAttributes.color)}),r);return e.transform=null,e}export{U as convertMeshVertexSpace};
