import{y as i}from"./utils-9sQxfkoa-Cu9SoasQ.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-C6wmKeqw.js";import a from"./TopFeaturesQuery-Ckj_IYM7-C3mck6p1.js";import"./main-gpNb-fIA.js";import"./normalizeUtils-Bxmy9MNI-D1zSUhD0.js";import"./normalizeUtilsCommon-CRJlkfEA-snka2v1e.js";import"./utils-Bq23Xwmj-CRlLqrXR.js";import"./query-DFW9-NG_-DLkvF1EB.js";import"./pbfQueryUtils-F4ZE8-K8-Q4HzPZQB.js";import"./pbf-D-y3_eZO-Cz9Y6WV8.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-DQJ9tOC8.js";import"./projection-BA9M1R7d-DjGiO5U0.js";import"./projectBuffer-CvCBvJ6W-BppqXe5n.js";import"./TimeExtent-Cn0Jofqr-DB46E7PV.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
