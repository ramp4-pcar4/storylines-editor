import{y as i}from"./utils-9sQxfkoa-CISAZ1p4.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Ql1XW3Uw.js";import a from"./TopFeaturesQuery-Ckj_IYM7-SNSZi1EH.js";import"./main-FBG-yT2P.js";import"./normalizeUtils-Bxmy9MNI-C5oNCXVX.js";import"./normalizeUtilsCommon-CRJlkfEA-0VXxW-kc.js";import"./utils-Bq23Xwmj-ixMR1MnI.js";import"./query-DFW9-NG_-Hmxw9ZV1.js";import"./pbfQueryUtils-F4ZE8-K8-Dg5-Rb6L.js";import"./pbf-D-y3_eZO-DdmE7eVi.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-DhPyx-yn.js";import"./projection-BA9M1R7d-C7slw64r.js";import"./projectBuffer-CvCBvJ6W-krWXgPxy.js";import"./TimeExtent-Cn0Jofqr-D_nghn1m.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
