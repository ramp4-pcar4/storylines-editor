import{y as i}from"./utils-9sQxfkoa-AOaUcfJ4.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-CHfBv4P6.js";import a from"./TopFeaturesQuery-Ckj_IYM7-C_HQnNo1.js";import"./main-Cyc9xDxN.js";import"./normalizeUtils-Bxmy9MNI-Cx2l5eOt.js";import"./normalizeUtilsCommon-CRJlkfEA-DW_GNVX_.js";import"./utils-Bq23Xwmj-PhqaW_74.js";import"./query-DFW9-NG_-BNnlz5_n.js";import"./pbfQueryUtils-F4ZE8-K8-CEG2mns2.js";import"./pbf-D-y3_eZO-Bk1rC2Xy.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BFQAIZTT.js";import"./projection-BA9M1R7d-CLx0vcln.js";import"./projectBuffer-CvCBvJ6W-CABq4f0u.js";import"./TimeExtent-Cn0Jofqr-Dw48-EnR.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
