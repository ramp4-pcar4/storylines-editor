import{y as i}from"./utils-DuaeuwP5-BlUQmkFj.js";import{S as p}from"./queryTopFeatures-BdkfRugo-DHBjN-AD.js";import a from"./TopFeaturesQuery-C3E7qv-F-C_XmRYat.js";import"./main-BgEZLFu4.js";import"./normalizeUtils-b-vZURob-CdEyfIw0.js";import"./utils-Jw-4AGsF-UHQ9TaR7.js";import"./query-nJmB7Ppn-BwtMpmHW.js";import"./pbfQueryUtils-1j64fqcx-BecFF4ra.js";import"./pbf-Ijhb7ANA-Bk_WOhpC.js";import"./memoryEstimations-iHVpvWPf-C58wQaVz.js";import"./OptimizedGeometry-1qDYm3YK-S7xt3SXp.js";import"./OptimizedFeatureSet-D6mgsKNr-DXcp03L6.js";import"./queryZScale-DBCLQqDI-DzHj7vye.js";import"./projection-m8vi7Cxv-TSy2jyyE.js";import"./TimeExtent-gZaEUVeW-BkEYXor4.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
