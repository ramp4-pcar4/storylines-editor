import{y as i}from"./utils-DuaeuwP5-p9qdmtdc.js";import{S as p}from"./queryTopFeatures-BdkfRugo-DOezS8xd.js";import a from"./TopFeaturesQuery-C3E7qv-F-dAgKouDX.js";import"./main-D1xgvW6Q.js";import"./normalizeUtils-b-vZURob-Cg_YEMOQ.js";import"./utils-Jw-4AGsF-BlQ_sTHw.js";import"./query-nJmB7Ppn-Bil5U0yU.js";import"./pbfQueryUtils-1j64fqcx-BDch-ndR.js";import"./pbf-Ijhb7ANA-3x8qsTv4.js";import"./memoryEstimations-iHVpvWPf-BJDHOVFg.js";import"./OptimizedGeometry-1qDYm3YK-DTotxtye.js";import"./OptimizedFeatureSet-D6mgsKNr-CvuqsZ09.js";import"./queryZScale-DBCLQqDI-DZV24ziX.js";import"./projection-m8vi7Cxv-CzbD4hrn.js";import"./TimeExtent-gZaEUVeW-Bl_9JkJU.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
