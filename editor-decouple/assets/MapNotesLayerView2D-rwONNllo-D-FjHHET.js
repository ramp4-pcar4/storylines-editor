import{ao as u,aa as f,d6 as w,as as n,ai as p,c6 as h,d1 as y,v as _,t as V}from"./main-HuroqwkQ.js";import{D as v}from"./LayerView2D-CCfp06E--DSgBGUCP.js";import{d as c}from"./GraphicContainer-CEP0E1kz-CBuvU5_V.js";import{F as g}from"./GraphicsView2D-yiocyXG3-D2HK5RoC.js";import{v as C}from"./LayerView-D3XoMhlx-BT4tEYPE.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./Container-BdpN3llD-CDVaEFcQ.js";import"./MapView-BcnxJC0k-CgdPsHdR.js";import"./globalCss-CFN4F315-Dvz2D63x.js";import"./Queue-B8H6jIv7-w6rpPnnj.js";import"./signal-DxzURL18-CT40x7JZ.js";import"./Version-BTMwSXf1-D6_b4dyL.js";import"./CollectionFlattener-9hYRBLDX-DBDZJi0T.js";import"./workers-0oosFQiO-BY3GdgPn.js";import"./intl-DLmy-Li5-DBBWt1Et.js";import"./projection-m8vi7Cxv-C9R7WBMI.js";import"./TileInfo-owTCOSRx-XKlDZGk6.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-C5LxVioS-aMSu1BSF.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-DBzjq66S-B_hn4a34.js";import"./Map-DbZVFU-I-Dbqrk1ro.js";import"./Basemap-DxWxjcEH-AUdkL4mA.js";import"./loadAll-BIhJ1RSe-Dnq73s73.js";import"./PortalItem-CJetnHeq-C7AkMMAQ.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-B8uSBqhe.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Layer-B8q-l4yV-BUMxwVmx.js";import"./TimeExtent-gZaEUVeW-BJ0DFHoa.js";import"./GraphicsCollection-rAFZo1AJ-DzmV4wXk.js";import"./HeightModelInfo-BkDck4B0-BDEIISgY.js";import"./timeZoneUtils-z3WjfjXQ-DD58PYIp.js";import"./ReactiveMap-BaMcQuG3-BhnoUWjv.js";import"./Query-CxQYWcUQ-BMM5HrXD.js";import"./Field-Cj6Pz3TI-BbOAjSGn.js";import"./fieldType-VTpxE-EM-xMzWsAsf.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./HighlightDefaults-Cg50f_1y-Dqx9n8hZ.js";import"./a11yUtils-C2ydunC--CxvIyww1.js";import"./heightModelInfoUtils-CI93rfC7-BUGZJX7w.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-b-vZURob-B5BDMnjN.js";import"./utils-DuaeuwP5-Bv63ITLH.js";import"./utils-Jw-4AGsF-CAUuC49h.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./Scheduler-Br-2v2ys-7_TcJUlK.js";import"./vec32-BuqRmYBM-eC99osq7.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./Tile-DvzRai0K-DJNi0t5w.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-zlBUNkxO.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./imageUtils-DEFspgr5-LGlKzAoR.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-BWvrwprI.js";import"./EffectView-Bw7SZPlx-CyEbqFap.js";import"./parser-hXQyB-Qx-DzvvKieb.js";import"./layerViewUtils-Bk5QNiAa-0TMgh7RV.js";import"./AGraphicContainer-BSUvBxvy-B5XDbsHv.js";import"./TechniqueInstance-oJ4weLzg-Be8Qr-x8.js";import"./UpdateTracking2D-CaPtqow6-zIXXGbfE.js";import"./dataViewUtils-xig9T3UA-BGn4MREm.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BoundingBox-D9JxeQeA-SaxmeIkg.js";import"./FramebufferObject-DQw0QX3p-hjvtefc1.js";import"./VertexArrayObject-DTkLCIKs-Dp7I497P.js";import"./memoryEstimations-iHVpvWPf-CCOKLQBP.js";import"./TileContainer-Dc8VVA_r-EKJ24ggL.js";import"./WGLContainer-CF3AeUnM-BmkKQn9S.js";import"./ProgramTemplate-CBS0ERm4-Cq4-sG6d.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./config-DB0LnTDt-CYa9nhWp.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./featureConversionUtils-DRaHTjrY-CQzstTCb.js";import"./OptimizedFeatureSet-D6mgsKNr-B0D_-V-m.js";import"./OptimizedGeometry-1qDYm3YK-DbT4O654.js";import"./FeatureCommandQueue-CqM9cs0l-B433r2gU.js";import"./CIMSymbolHelper-Bcp4nGf3-Cj1xVSo0.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./fontUtils-Ce-zEYaT-DTYFnONk.js";import"./Rect-KI3be8Nv-D5QS70fE.js";import"./utils-BYqzY6_X-DuFJJ31E.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./rasterizingUtils-B8CPqgVl-DecAjsvV.js";import"./floatRGBA-YJlz5IlR-CnQVxg_d.js";import"./TechniqueType-GommNIdJ-ByYTgVOB.js";import"./GraphShaderModule-C7Apfssb-Cmq8jHBV.js";import"./ShaderBuilder-BkQM64Qp-1RDr2iM9.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./lengthUtils-wU9RRIqK-B8QPeq65.js";import"./QueueProcessor-BtXHzeIT-HE09nm1x.js";import"./FieldsIndex-Y7EBAYp0-BgE44zd3.js";import"./OverrideHelper-GkMo7t6B-e9PgfMzO.js";import"./colorUtils-DxUhbS7D-Ds9Duek_.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./callExpressionWithFeature-uWLbeAgq-Cp25_rWG.js";import"./quantizationUtils-Cndke4AR-YxJKM5Y-.js";import"./FeatureMetadata-X_4q5T4e-jmslMT7A.js";import"./diffUtils-BSe9IE26-CaJYIlzU.js";import"./queryUtils-OXllLZed-BfvgP8Hk.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-_0FhDj9z-Don1eKWV.js";import"./TimeOnly-C3SOkmg2-D74CJYH7.js";import"./labelUtils-Dd5sr1UJ-8WeOPu7x.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./normalizeUtilsSync-C40q69cc-Cgt-DNvd.js";import"./dehydratedFeatures-CekTKTy7-tev92SuI.js";const d="sublayers",m="layerView",H=new Set(["default"]);let l=class extends v(C){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,r){return Array.from(this.graphicsViews(),t=>{const e=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const o=this._graphicsViewsFeatureCollectionMap.get(t);for(const s of e)!s.popupTemplate&&o.popupTemplate&&(s.popupTemplate=o.popupTemplate),s.sourceLayer=s.layer=this.layer}return e}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i,r="default"){let t;typeof i=="number"?t=[i]:i instanceof u?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(o=>o&&o.uid):f.isCollection(i)&&(t=i.map(o=>o&&o.uid).toArray());const e=t?.filter(w);return e?.length?(this._addHighlight(e),n(()=>this._removeHighlight(e))):n()}update(i){for(const r of this.graphicsViews())r.processUpdate(i)}attach(){const i=this.view,r=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of t){const o=new c(this.view.featuresTilingScheme),s=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:r,container:o});this._graphicsViewsFeatureCollectionMap.set(s,e),this.container.addChild(s.container),this.addHandles([p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(y(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.removeHandles(d)}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(m);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],r=this.view,t=()=>this.requestUpdate();for(const e of this.layer.sublayers){const o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new g({view:r,graphics:e.graphics,requestUpdateCallback:t,container:o});this.addHandles([e.on("graphic-update",s.graphicUpdateHandler),p(()=>e.visible,a=>s.container.visible=a,h),p(()=>s.updating,()=>this.notifyChange("updating"),h)],m),this.container.addChild(s.container),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r);this._highlightIds.set(r,t+1)}else this._highlightIds.set(r,1);this._updateHighlight()}_removeHighlight(i){for(const r of i)if(this._highlightIds.has(r)){const t=this._highlightIds.get(r)-1;t===0?this._highlightIds.delete(r):this._highlightIds.set(r,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),r=this._getHighlightBits(H.values());for(const t of this.graphicsViews())t.setHighlight(i.map(e=>({objectId:e,highlightFlags:r})))}};l=_([V("esri.views.2d.layers.MapNotesLayerView2D")],l);const qt=l;export{qt as default};
