const y=9999999e31,E=2e-7,L={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function M(t){return L[t]??[-34028234663852886e22,34028234663852886e22]}const S={u1:1,u2:1,u4:1,u8:1,s8:1,u16:2,s16:2,u32:4,s32:4,f32:4,f64:8,unknown:4,c64:16,c128:32};function w(t){return S[t]}function I(t){return w(t.pixelType)*t.bandCount}function O(t,e){return t==null||e==null?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function U(t){return(t?.startsWith("s")||t?.startsWith("u"))??!1}function P(t,e,u,i){let[c,l]=M(u);const n=U(u);return n&&(c-=1e-5,l+=1e-5),n?u.startsWith("u")?V(t,e,i,[c,l]):v(t,e,i,[c,l]):C(t,e,i,[c,l])}function T(t,e){for(let u=0;u<e.length;u++)e[u]&&isNaN(t[u])&&(e[u]=0,t[u]=0)}function V(t,e,u,i){const[c,l]=i;for(let n=0;n<e.length;n++)if(e[n]){const s=t[n];s<c||s>l?e[n]=0:u[n]=s+.5|0}}function v(t,e,u,i){const[c,l]=i;for(let n=0;n<e.length;n++)if(e[n]){const s=t[n];s<c||s>l?e[n]=0:u[n]=s+(s>0?.5:-.5)|0}}function C(t,e,u,i){const[c,l]=i;for(let n=0;n<e.length;n++)if(e[n]){const s=t[n];s<c||s>l?e[n]=0:u[n]=s}}function W(t,e,u){if(t.depthCount&&t.depthCount>1)return;const{pixels:i,statistics:c,pixelType:l}=t,n=i[0].length,s=t.bandMasks??[],g=t.mask??new Uint8Array(n).fill(255),A=l==="f32"||l==="f64",N=M(l);let p=!1;for(let o=0;o<i.length;o++){const a=typeof e=="number"?e:e[o];if(a==null)continue;const d=c?.[o]?.minValue??N[0],m=c?.[o]?.maxValue??N[1];if(d>a+Number.EPSILON||m<a-Number.EPSILON)continue;const h=s[o]||g.slice(),f=i[o],k=u?.customFloatTolerance;if(A&&k!==0){let r=k;r||(r=Math.abs(a)>=y?E*Math.abs(a):l==="f32"?2**-23:Number.EPSILON);for(let b=0;b<f.length;b++)h[b]&&Math.abs(f[b]-a)<r&&(f[b]=0,h[b]=0,g[b]=0,p=!0)}else for(let r=0;r<f.length;r++)h[r]&&f[r]===a&&(f[r]=0,h[r]=0,g[r]=0,p=!0);s[o]=h}if(p){const o=t.bandMasks||t.pixels.length>1?s:null;u?.matchAllNoData?t.mask=o&&o.length>1?x(o):g:(t.bandMasks=o,t.mask=g)}function x(o){if(o.length<2)return o[0];const a=o[0].length,d=new Uint8Array(a).fill(0);for(let m=0;m<o.length;m++){const h=o[m];for(let f=0;f<a;f++)h[f]&&(d[f]=255)}return d}p&&"updateStatistics"in t&&t.updateStatistics()}export{U as A,P as C,T as I,M as N,I as V,W,O as v};
