import{v as s,S as i,ar as l,n as h,bm as S,X as y,by as n,bu as m,N as g}from"./main-BFNwcKi0.js";import{m as R,d as v}from"./utils-BO8hgPs3-zKn2S1KH.js";import{f as N}from"./utils-DpLVEUvg-DmwoFJGL.js";let e=class extends y{constructor(o){super(o),this.geometries=[],this.outSpatialReference=null,this.transformation=null,this.transformForward=null}toJSON(){const o=this.geometries.map(a=>a.toJSON()),t=this.geometries[0],r={};return r.outSR=n(this.outSpatialReference),r.inSR=n(t.spatialReference),r.geometries=JSON.stringify({geometryType:m(t),geometries:o}),this.transformation&&(r.transformation=this.transformation.wkid||JSON.stringify(this.transformation)),this.transformForward!=null&&(r.transformForward=this.transformForward),r}};s([i()],e.prototype,"geometries",void 0),s([i({type:l,json:{read:{source:"outSR"}}})],e.prototype,"outSpatialReference",void 0),s([i()],e.prototype,"transformation",void 0),s([i()],e.prototype,"transformForward",void 0),e=s([h("esri.rest.support.ProjectParameters")],e);const w=S(e);async function j(o,t,r){t=w(t);const a=R(o),p={...a.query,f:"json",...t.toJSON()},f=t.outSpatialReference,u=m(t.geometries[0]),c=v(p,r);return g(a.path+"/project",c).then(({data:{geometries:d}})=>N(d,u,f))}export{j as O,e as o};
