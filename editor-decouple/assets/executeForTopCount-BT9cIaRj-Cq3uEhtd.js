import{m as i}from"./utils-BO8hgPs3-BLHi3zJ4.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-DgeuBje7.js";import a from"./TopFeaturesQuery-BmMRhRdq-BVSUibkv.js";import"./main-Dt6SBPaS.js";import"./normalizeUtils-u00NGW3M--vdaHh0l.js";import"./normalizeUtilsCommon-ClagynAA-zIMHpKe9.js";import"./utils-DpLVEUvg-BFLlaW7m.js";import"./query-COAsogFA-hxwy5buW.js";import"./pbfQueryUtils-aBcHX3TJ-BNK2RpFK.js";import"./pbf-hoLeQyp2-djcKts1E.js";import"./memoryEstimations-DeWfxwaV-3kVC5aLk.js";import"./OptimizedGeometry-pzfNw1AT-S6laVWbD.js";import"./OptimizedFeature-mIz_HhJg-Dx3MzEo7.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-CACPCtOA.js";import"./projectionUtils-B-CplN3q-B9fSc15M.js";import"./TimeExtent-Cf2Pienb-WIkeUXgm.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
