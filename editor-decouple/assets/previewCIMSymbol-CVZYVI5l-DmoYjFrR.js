import{f7 as p,f8 as y}from"./main-BCE_pGkN.js";import{V as S}from"./CIMSymbolHelper-34UsTwam-xHkff_tY.js";import{CIMSymbolRasterizer as R}from"./CIMSymbolRasterizer-CHPajZH1-CUnaNo81.js";import{OverrideHelper as U}from"./OverrideHelper-DgyARgwI-DNAxgZi2.js";import{k as C}from"./utils-BfXZnjCE-BKLSgjJs.js";import{S as v,P as j}from"./symbolUtils-D5Wjfwrf-CF72KyLs.js";import"./BidiEngine-DusKzrO8-BlAgW8mu.js";import"./fontUtils-C37p4Hgq-56SbN_8I.js";import"./OptimizedGeometry-pzfNw1AT-DTb5usg-.js";import"./memoryEstimations-DeWfxwaV-v3QoeTAf.js";import"./GeometryUtils-B8e3Iwyx-BnpEZ46a.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./rasterizingUtils-1wASRzSP-DuG-OHOX.js";import"./floatRGBA-DRFmbkvz-DneksgQy.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./BoundingBox-DlCd_wcU-DBB4UfPl.js";import"./CIMResourceManager-DyRf92xI-MD7S1rmc.js";import"./imageUtils-D3tfFRL_-B4fIBxPc.js";import"./colorUtils-Eg6lOlXm-CEzs4buR.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./FieldsIndex-Bt0Y8aWr-VIkgY6uY.js";import"./UnknownTimeZone-DxjyzFvs-Cont_TZ1.js";import"./timeZoneUtils-d5p0Jda1-DhN9JIN2.js";import"./ArcadeExpression-XjY3x7KV-Dea5zfxA.js";import"./TimeOnly-CGkId3bj-CFIoJS-c.js";import"./enum-g1DWyQyu-DPN1PE1y.js";import"./callExpressionWithFeature-Bk8k1lJI-CnuFjO2s.js";import"./quantizationUtils-D907S7Bm-CfsceHlk.js";import"./utils-Cb2uXNfG-7_tYWMdI.js";import"./asyncUtils-BPUlNCrX-BgCCeLHU.js";import"./jsonUtils-BwLwuQj7-jqgC6GRG.js";import"./parser-CWccHtwJ-CrD4rBnA.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-BcILfA4-.js";import"./cimSymbolUtils-DCedSSCN-FFQNgSuS.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./jsxFactory-Cua8zWVZ-EkOqe0NT.js";import"./intl-BAA1onnp-B92Y0J2l.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./webStyleSymbolUtils-r0H5toyk-yOsgyZS1.js";import"./devEnvironmentUtils-CxrVv3RG-CX5aoxVE.js";import"./styleUtils-DBPDLVBX-B8PuAZru.js";const u=new R(null),g=p(v.size),x=p(v.maxSize),M=p(v.lineWidth),q=1;async function D(m,t,l){const r=t?.size;let i=r!=null&&typeof r=="object"&&"width"in r?r.width:r,o=r!=null&&typeof r=="object"&&"height"in r?r.height:r;if(!i||!o)if(l==="esriGeometryPolygon")i=o=t.maxSize?Math.min(t.maxSize,g):g;else{const n=await E(m,t,l);n&&(i=n.width,o=n.height),l==="esriGeometryPolyline"&&(i=t.maxSize?Math.min(t.maxSize,M):M),i=i!=null&&isFinite(i)?Math.min(i,x):g,o=o!=null&&isFinite(o)?Math.max(Math.min(o,x),q):g}return t.style==="legend"&&l==="esriGeometryPolyline"&&(i=M),{width:i,height:o}}async function E(m,t={},l){const r=t.cimOptions||t;l??=r.geometryType||C(m?.data?.symbol);const{feature:i,fieldMap:o,viewParams:n}=r,a=await U.resolveSymbolOverrides(m.data,i,null,o,l,null,n);if(!a)return null;(m=m.clone()).data={type:"CIMSymbolReference",symbol:a},m.data.primitiveOverrides=void 0;const e=[];return S.fetchResources(a,u.resourceManager,e),S.fetchFonts(a,u.resourceManager,e),e.length>0&&await Promise.all(e),S.getEnvelope(a,null,u.resourceManager)}async function Dt(m,t={}){const{node:l,opacity:r,symbolConfig:i}=t,o=i!=null&&typeof i=="object"&&"isSquareFill"in i&&i.isSquareFill,n=t.cimOptions||t,a=n.geometryType||C(m?.data?.symbol),e=await D(m,t,a),{feature:I,fieldMap:G}=n,O=t?.geometry||o||a!=="esriGeometryPolygon"?"preview":"legend";let P=e;const z=e;if(t?.geometry&&(a==="esriGeometryPolygon"||a==="esriGeometryPolyline")&&(y(e.width)<200||y(e.height)<200)){const b=e.width>e.height?p(200)*e.height/e.width:p(200);P={width:e.width>e.height?p(200):p(200)*e.width/e.height,height:b}}const d=await u.rasterizeCIMSymbolAsync(m,I,P,O,G,a,null,n.viewParams,n.allowScalingUp,t?.geometry?.toJSON());if(!d)return null;const{width:F,height:L}=d,h=document.createElement("canvas");h.width=F,h.height=L,h.getContext("2d").putImageData(d,0,0);const f=y(z.width),w=y(z.height),s=new Image(f,w);s.src=h.toDataURL(),s.ariaLabel=t.ariaLabel??null,s.alt=t.ariaLabel??"",r!=null&&(s.style.opacity=`${r}`);let c=s;if(t.effectView!=null){const b={shape:{type:"image",x:0,y:0,width:f,height:w,src:s.src},fill:null,stroke:null,offset:[0,0]};c=j([[b]],[f,w],t)}return l&&c&&l.appendChild(c),c}export{E as getCIMSymbolPreviewSize,Dt as previewCIMSymbol};
