import{y as i}from"./utils-DuaeuwP5-CHz0pDvs.js";import{S as p}from"./queryTopFeatures-BdkfRugo-BttGDfEa.js";import a from"./TopFeaturesQuery-C3E7qv-F-B6vWPDqS.js";import"./main-CWrSZP9-.js";import"./normalizeUtils-b-vZURob-BVDZA6HI.js";import"./utils-Jw-4AGsF-CXAfI_tm.js";import"./query-nJmB7Ppn-09UvqFOU.js";import"./pbfQueryUtils-1j64fqcx-tN1wrsI1.js";import"./pbf-Ijhb7ANA-BQlkfn0s.js";import"./memoryEstimations-iHVpvWPf-EPSppHL0.js";import"./OptimizedGeometry-1qDYm3YK-B4VnGAf1.js";import"./OptimizedFeatureSet-D6mgsKNr-DBkxZyyF.js";import"./queryZScale-DBCLQqDI-CccElvrW.js";import"./projection-m8vi7Cxv-Dla4sIi3.js";import"./TimeExtent-gZaEUVeW-eLog0fZA.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
