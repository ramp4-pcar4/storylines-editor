import{m as i}from"./utils-BO8hgPs3-_DUZDIc2.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-BFDmFbwD.js";import a from"./TopFeaturesQuery-BmMRhRdq-C4T_h-9d.js";import"./main-ChKuQKYp.js";import"./normalizeUtils-u00NGW3M-CliV7owI.js";import"./normalizeUtilsCommon-ClagynAA-CJNXdtUO.js";import"./utils-DpLVEUvg-BTk7ml0R.js";import"./query-COAsogFA-jkt8OHHk.js";import"./pbfQueryUtils-aBcHX3TJ-C792xQk1.js";import"./pbf-hoLeQyp2-DEApTRKf.js";import"./memoryEstimations-DeWfxwaV-DSj9O3Gi.js";import"./OptimizedGeometry-pzfNw1AT-B4rMOtrl.js";import"./OptimizedFeature-mIz_HhJg-CrhhDbiT.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-bcKoaaqe.js";import"./projectionUtils-B-CplN3q-gGFoZ8-A.js";import"./TimeExtent-Cf2Pienb-27KjBTk1.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
