import{m as i}from"./utils-BO8hgPs3-HMfhwBej.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-BoU6fHHY.js";import a from"./TopFeaturesQuery-BmMRhRdq-DmaRBQ6E.js";import"./main-BCE_pGkN.js";import"./normalizeUtils-u00NGW3M-BlIbi1sr.js";import"./normalizeUtilsCommon-ClagynAA-DnRJW_BB.js";import"./utils-DpLVEUvg-D3hJYvKA.js";import"./query-COAsogFA-VQ271Cyb.js";import"./pbfQueryUtils-aBcHX3TJ-DtU7c5K3.js";import"./pbf-hoLeQyp2-0RsT7_57.js";import"./memoryEstimations-DeWfxwaV-v3QoeTAf.js";import"./OptimizedGeometry-pzfNw1AT-DTb5usg-.js";import"./OptimizedFeature-mIz_HhJg-n9DXuYFv.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-DCLzJWjr.js";import"./projectionUtils-B-CplN3q-CaR34chB.js";import"./TimeExtent-Cf2Pienb-DL1fHd0m.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
