import{R as M,a8 as S,ai as R,aC as C,s as q,v as o,I as h,t as F,c as f,H as U}from"./main-F-MIlBHn.js";import{n as E}from"./BitmapContainer-DI2lgxqV-BXP1c0GI.js";import{D as V}from"./LayerView2D-CCfp06E--BxgTqYGt.js";import{Q as L}from"./ExportStrategy-Cjw5fEcf-CAkiA7tI.js";import{v as W}from"./LayerView-D3XoMhlx-DT2YE9tW.js";import{n as H}from"./RefreshableLayerView-CB9NNXxL-Bs7pYhqz.js";import{r as Q}from"./ExportWMSImageParameters-CU683TQT-Ck_ylIj2.js";import{c as A}from"./timeSupport-XeIgs7eV-S5tLki7r.js";import"./MapView-BcnxJC0k-cHE3BIdm.js";import"./globalCss-CFN4F315-b7wS7Mkx.js";import"./Queue-B8H6jIv7-DLecEguh.js";import"./signal-DxzURL18-C0THokcD.js";import"./Version-BTMwSXf1-NZnsKumM.js";import"./CollectionFlattener-9hYRBLDX-D37m3C-o.js";import"./workers-0oosFQiO-Ch7r6LlY.js";import"./intl-DLmy-Li5-Buux6YO-.js";import"./projection-m8vi7Cxv-CfAcsDUt.js";import"./TileInfo-owTCOSRx-Bs7MuwDf.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-C5LxVioS-BmSLGvE6.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-DBzjq66S-BP0p8TRx.js";import"./Map-DbZVFU-I-458y2VvD.js";import"./Basemap-DxWxjcEH-DvnkIp-2.js";import"./loadAll-BIhJ1RSe-B1s0cHy5.js";import"./PortalItem-CJetnHeq-jAtHmlkH.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-DIxCkfxF.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Layer-B8q-l4yV-BUOWKFbJ.js";import"./TimeExtent-gZaEUVeW-BZyx5WQQ.js";import"./GraphicsCollection-rAFZo1AJ-CfiD9LaO.js";import"./HeightModelInfo-BkDck4B0-CMXIV0N1.js";import"./timeZoneUtils-z3WjfjXQ-CJjO0qh6.js";import"./ReactiveMap-BaMcQuG3-Bt5Wi-SQ.js";import"./Query-CxQYWcUQ-BOkC3wk5.js";import"./Field-Cj6Pz3TI-Bff3Mo3e.js";import"./fieldType-VTpxE-EM-C3x3awIE.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./HighlightDefaults-Cg50f_1y-Clhwj1KJ.js";import"./a11yUtils-C2ydunC--DinfZiWC.js";import"./heightModelInfoUtils-CI93rfC7-D0nHpSlI.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-b-vZURob-DQ_MCS50.js";import"./utils-DuaeuwP5-QYM0YMG2.js";import"./utils-Jw-4AGsF-DqqMiSGp.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./Scheduler-Br-2v2ys-D3FjA6jO.js";import"./vec32-BuqRmYBM-Bb237BbZ.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./Tile-DvzRai0K-D1yJzGQK.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-CBIQmVpq-o3EUznKY.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-DXSFJsEu-Cpn6y4GK.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./imageUtils-DEFspgr5-DmxTSmpb.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-CsodKOeb.js";import"./WGLContainer-CF3AeUnM-BHkUBDoc.js";import"./dataViewUtils-xig9T3UA-B0eisuwg.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BoundingBox-D9JxeQeA-SaxmeIkg.js";import"./ProgramTemplate-CBS0ERm4-GReQT-Np.js";import"./VertexArrayObject-DTkLCIKs-DeYFIuAP.js";import"./memoryEstimations-iHVpvWPf-DTs9wwwE.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./Container-BdpN3llD-yswZQ_qC.js";import"./EffectView-Bw7SZPlx-DPXMZ9kt.js";import"./parser-hXQyB-Qx-BQ86Mekz.js";import"./config-DB0LnTDt-CYa9nhWp.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./featureConversionUtils-DRaHTjrY-MSt6VYAF.js";import"./OptimizedFeatureSet-D6mgsKNr-BcKsWOq6.js";import"./OptimizedGeometry-1qDYm3YK-BNtA4KnZ.js";import"./BitmapTechnique-BX6dC711-CEVdysG_.js";import"./GraphShaderModule-C7Apfssb-B6hrA4WV.js";import"./FramebufferObject-DQw0QX3p-B3fFa4c5.js";import"./ShaderBuilder-BkQM64Qp-zHEDdbno.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./TechniqueType-GommNIdJ-ByYTgVOB.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./layerViewUtils-Bk5QNiAa-B2AK1lwr.js";const N=e=>{let t=class extends e{initialize(){this.exportImageParameters=new Q({layer:this.layer})}destroy(){this.exportImageParameters=C(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}get timeExtent(){return A(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(i,p){const{layer:m}=this;if(!i)throw new f("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:m});const{popupEnabled:c}=m;if(!c)throw new f("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:c});const r=this.createFetchPopupFeaturesQuery(i);if(!r)return[];const{extent:a,width:s,height:n,x:d,y:l}=r;if(!(a&&s&&n))throw new f("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:a,width:s,height:n});const y=await m.fetchFeatureInfo(a,s,n,d,l);return U(p),y}};return o([h()],t.prototype,"exportImageParameters",void 0),o([h({readOnly:!0})],t.prototype,"exportImageVersion",null),o([h()],t.prototype,"layer",void 0),o([h({readOnly:!0})],t.prototype,"timeExtent",null),t=o([F("esri.views.layers.WMSLayerView")],t),t};let u=class extends N(H(V(W))){constructor(){super(...arguments),this.bitmapContainer=new E}supportsSpatialReference(e){return this.layer.serviceSupportsSpatialReference(e)}update(e){this.strategy.update(e).catch(t=>{M(t)||S.getLogger(this).error(t)})}attach(){const{layer:e}=this,{imageMaxHeight:t,imageMaxWidth:i}=e;this.bitmapContainer=new E,this.container.addChild(this.bitmapContainer),this.strategy=new L({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:t,imageMaxWidth:i,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(R(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=C(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(e){const{view:t,bitmapContainer:i}=this,{x:p,y:m}=e,{spatialReference:c}=t;let r,a=0,s=0;if(i.children.some(y=>{const{width:w,height:v,resolution:I,x:g,y:x}=y,P=g+I*w,b=x-I*v;return p>=g&&p<=P&&m<=x&&m>=b&&(r=new q({xmin:g,ymin:b,xmax:P,ymax:x,spatialReference:c}),a=w,s=v,!0)}),!r)return null;const n=r.width/a,d=Math.round((p-r.xmin)/n),l=Math.round((r.ymax-m)/n);return{extent:r,width:a,height:s,x:d,y:l}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(e,t,i,p){return this.layer.fetchImageBitmap(e,t,i,{timeExtent:this.timeExtent,...p})}};o([h()],u.prototype,"strategy",void 0),o([h()],u.prototype,"updating",void 0),u=o([F("esri.views.2d.layers.WMSLayerView2D")],u);const ve=u;export{ve as default};
