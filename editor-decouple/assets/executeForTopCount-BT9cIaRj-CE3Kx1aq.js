import{m as i}from"./utils-BO8hgPs3-D4I9CPPM.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-BOwGLvJe.js";import a from"./TopFeaturesQuery-BmMRhRdq-DLUSHcFz.js";import"./main-D6SnduPa.js";import"./normalizeUtils-u00NGW3M-UFBFaLt1.js";import"./normalizeUtilsCommon-ClagynAA-D_TKt9-w.js";import"./utils-DpLVEUvg-Dduqrt9z.js";import"./query-COAsogFA-CBvXUNhC.js";import"./pbfQueryUtils-aBcHX3TJ-BvtYjLbj.js";import"./pbf-hoLeQyp2-Eypn6Zmy.js";import"./memoryEstimations-DeWfxwaV-BgQ2QiFB.js";import"./OptimizedGeometry-pzfNw1AT-CaCWjaY9.js";import"./OptimizedFeature-mIz_HhJg-DHyYcHJo.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-hsx7gJ-H.js";import"./projectionUtils-B-CplN3q-CgOSIGki.js";import"./TimeExtent-Cf2Pienb-DGeXSU5z.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
