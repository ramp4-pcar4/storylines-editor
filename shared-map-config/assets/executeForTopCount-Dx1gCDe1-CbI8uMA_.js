import{y as i}from"./utils-9sQxfkoa-B11InYz6.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DhDVoEiU.js";import a from"./TopFeaturesQuery-Ckj_IYM7-3aTg39Ib.js";import"./main-EXRpGwkN.js";import"./normalizeUtils-Bxmy9MNI-EWXwcCTa.js";import"./normalizeUtilsCommon-CRJlkfEA-Dk-a65Bo.js";import"./utils-Bq23Xwmj-DujOgRr5.js";import"./query-DFW9-NG_-BOk0wxdQ.js";import"./pbfQueryUtils-F4ZE8-K8-C4kcokfu.js";import"./pbf-D-y3_eZO-eTuRxgcR.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-RTfwdLt7.js";import"./projection-BA9M1R7d-CVFBDkcC.js";import"./projectBuffer-CvCBvJ6W-Cmea1ae3.js";import"./TimeExtent-Cn0Jofqr-DyCdqCNV.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
