import{W as S,bO as f,bP as d,bM as I,f as g,n as w,o as b,aU as O,v as o,S as a,bQ as v,a0 as T,ac as P,bB as M,i as E}from"./main-BIwjQY_1.js";import{y as L}from"./loadAll-e978YItg-NfO1DojG.js";import{m as F}from"./MultiOriginJSONSupport-DKRh9P6w-BQqJ1Jxr.js";import{c as R}from"./scaleUtils-DxsfQwK1-RYhLLzPV.js";import{D as U}from"./Layer-ChoECxvZ-sDq_SxCG.js";import{n as _}from"./APIKeyMixin-BUMSx9ny-BA5HWrup.js";import{k as $,M as N,A as j}from"./SublayersOwner-DfTaMJ5V-CSl7OixE.js";import{a as J}from"./ArcGISService-BYA-y6X6-C_c5XEM3.js";import{u as k}from"./BlendLayer-D1WkSmwP-IEaE8rW_.js";import{i as q}from"./CustomParametersMixin-vdKsTHer-C8Emhayd.js";import{E as A}from"./OperationalLayer-B5IXiMa2-DZIm4Sxd.js";import{C as V}from"./PortalLayer-CElnYuSQ-B78awSlH.js";import{T as D}from"./RefreshableLayer-a8BQ58Xh-mOfMuWeL.js";import{S as W}from"./ScaleRangeLayer-Bz0DcnvM-B1r643vu.js";import{x as Z}from"./TemporalLayer-CpOrN_w9-CkF2pgIf.js";import{Z as z}from"./commonProperties-BtIqvFU_-C_meNxjS.js";import{r as B}from"./ExportImageParameters-DxyNGQ57-BBCnrlsg.js";import{i as C}from"./imageBitmapUtils-DA36kg39-BotIuhGt.js";import{f as x}from"./sublayerUtils-CyM0QC5B-DftacDfg.js";import{a as G}from"./versionUtils-LZYZz-38-0lnbIjtJ.js";import{k as H}from"./TimeExtent-Cn0Jofqr-BZ-sOe6z.js";import"./Version-CoKzbupV-Bbn_8-fg.js";import"./arcgisLayerUrl-HNYh8jvG-C6Oe-ulK.js";import"./portalItemUtils-B8bw6SAG-D4IQ-Gt5.js";import"./projection-BA9M1R7d-CMbPnumG.js";import"./projectBuffer-CvCBvJ6W-Dpj1EV7D.js";import"./CollectionFlattener-DkHuHn5E-BFuuDa83.js";import"./UniqueValueRenderer-fS5V0Ej1-BuLfy3Hf.js";import"./RendererLegendOptions-K3md58-X-9RT87zt8.js";import"./diffUtils-Cz3Fi8Xb-BhZ3uAyq.js";import"./colorRamps-q0bZVhs2-BDytOJJ7.js";import"./sizeVariableUtils-t52KcLLi-D0hbQF8b.js";import"./visualVariableUtils-D3kZJRyn-BkUsmHO2.js";import"./compilerUtils-CV1QYWI8-D3yCXTrt.js";import"./lengthUtils-DKpMe5qR-CNNd5SOY.js";import"./styleUtils-BtpNqZyT-BYFUuMsq.js";import"./jsonUtils-C64Zfu7c-DjjrjlqK.js";import"./LRUCache-C3erQTWv-DvvvaSSi.js";import"./FieldsIndex-HmzMbJQG-Dy-g4ZQD.js";import"./UnknownTimeZone-C--TOcPG-BCO2KMHE.js";import"./OverrideHelper-DWRbVlj1-Df8SAMc6.js";import"./colorUtils-Cthpxcks-D55-2W8V.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./utils-SPbpQbmm-CcM6Cmjd.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./quantizationUtils-bJy1cRwp-BnK_V9y6.js";import"./heatmapUtils-seiMkkkR-B17-_x6M.js";import"./QueryTask-CwHwH2rS-DfG62Ly1.js";import"./infoFor3D-DIuYZyyK-BtH19JJ7.js";import"./Query-BrwMGK8U-BR-hcEj9.js";import"./Field-C6hA1tZj-CgWO-oQk.js";import"./fieldType-CD2CL2hr-CFRCwJoS.js";import"./utils-9sQxfkoa-DfmbeQ9o.js";import"./executeForIds-Z1gkLduF-DQlvHiGb.js";import"./query-DFW9-NG_-m5wIvZ-b.js";import"./normalizeUtils-Bxmy9MNI-C789dWwZ.js";import"./normalizeUtilsCommon-CRJlkfEA-DrkRYE0T.js";import"./utils-Bq23Xwmj-C-LU-wyu.js";import"./pbfQueryUtils-F4ZE8-K8-CqtJosKR.js";import"./pbf-D-y3_eZO-BUUmmloa.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CJk4b6Yz.js";import"./executeQueryPBF-o8010HS9-CV_TlOIL.js";import"./featureConversionUtils-D6hFQ4Af-DUKXkL3q.js";import"./FeatureSet-BkVNthuN-B7vehKTC.js";import"./executeQueryJSON-CcHnccia-HSBD6YAA.js";import"./featureLayerUtils-DgfQQyK4-CLZwe54C.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./RelationshipQuery-DJsz3K0U-DgTBZFB5.js";import"./FeatureType-C9hJmS6_-BaINupjI.js";import"./FeatureTemplate-SPHPD45f-BSdA1oBG.js";import"./labelingInfo-DGVNul26-DU2Rhgo1.js";import"./labelUtils-BW14kBqX-Y4_hlPjg.js";import"./LayerFloorInfo-DRJ8wfwx-D__Dpos2.js";import"./Relationship-PyhUibYK-BdZH9w4t.js";import"./serviceCapabilitiesUtils-rPjN5QBe-CdInPwS3.js";import"./popupUtils-B0uZcXX0-Dqs8c3GU.js";import"./jsonUtils-wIllKWI4-DxPBCXqy.js";import"./parser-DyDJ-rlI-DYPKJS2H.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-DNcK20XD.js";import"./PortalItem-CctGdnxF-Bp96TEio.js";import"./TimeInfo-w_HB2CsF-D1IGacgN.js";import"./ElevationInfo-yv2-9tj6-D9hMejhu.js";import"./floorFilterUtils-4r-vVdzs-C43jLoAE.js";let e=class extends k(Z(W($(N(J(A(V(F(D(_(q(U)))))))))))){constructor(...r){super(...r),this._exportImageParameters=new B({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(r,t){return typeof r=="string"?{url:r,...t}:r}load(r){const t=r!=null?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},r).catch(S).then(()=>this._fetchService(t))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(r,t){const n=t.supportedImageFormatTypes;return n&&n.includes("PNG32")?"png32":"png24"}writeSublayers(r,t,n,s){if(!this.loaded||!r)return;const m=r.slice().reverse().flatten(({sublayers:i})=>i&&i.toArray().reverse()).toArray();let p=!1;const l=f(s.origin);if(this.capabilities?.operations.supportsExportMap&&this.capabilities?.exportMap?.supportsDynamicLayers){if(l===d.PORTAL_ITEM){const i=this.createSublayersForOrigin("service").sublayers;p=x(m,i,d.SERVICE)}else if(l>d.PORTAL_ITEM){const i=this.createSublayersForOrigin("portal-item");p=x(m,i.sublayers,f(i.origin))}}const h=[],c={writeSublayerStructure:p,...s};let u=p||this.hasVisibleLayersForOrigin(l);m.forEach(i=>{const y=i.write({},c);h.push(y),u=u||i.originOf("visible")==="user"}),h.some(i=>Object.keys(i).length>1)&&(t.layers=h),u&&(t.visibleLayers=m.filter(i=>i.visible).map(i=>i.id))}createExportImageParameters(r,t,n,s){const m=s?.pixelRatio||1;r&&this.version>=10&&(r=r.clone().shiftCentralMeridian()),this._exportImageParameters.floors=s?.floors??null,this._exportImageParameters.scale=R({extent:r,width:t})*m;const p=this._exportImageParameters.toJSON(),l=!s?.rotation||this.version<10.3?{}:{rotation:-s.rotation},h=r?.spatialReference,c=I(h);p.dpi*=m;const u={};if(s?.timeExtent){const{start:i,end:y}=s.timeExtent.toJSON();u.time=i&&y&&i===y?""+i:`${i??"null"},${y??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(u.time="null,null");return{bbox:r&&r.xmin+","+r.ymin+","+r.xmax+","+r.ymax,bboxSR:c,imageSR:c,size:t+","+n,...p,...l,...u}}async fetchImage(r,t,n,s){const{data:m}=await this._fetchImage("image",r,t,n,s);return m}async fetchImageBitmap(r,t,n,s){const{data:m,url:p}=await this._fetchImage("blob",r,t,n,s);return C(m,p,s?.signal)}async fetchRecomputedExtents(r={}){const t={...r,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:n}=await g(this.url,t),{extent:s,fullExtent:m,timeExtent:p}=n,l=s||m;return{fullExtent:l&&w.fromJSON(l),timeExtent:p&&H.fromJSON({start:p[0],end:p[1]})}}loadAll(){return L(this,r=>{r(this.allSublayers),r(this.subtables)})}serviceSupportsSpatialReference(r){return G(this,r)}async _fetchImage(r,t,n,s,m){const p={responseType:r,signal:m?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,n,s,m),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(p.query?.dynamicLayers!=null&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new b("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:p.query});try{const{data:h}=await g(l,p);return{data:h,url:l}}catch(h){throw O(h)?h:new b("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:h})}}async _fetchService(r){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:n}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:r});n&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(r){return!(r==null||!this.sublayersSourceJSON[r]?.visibleLayers)}};o([a(v("dateFieldsTimeReference"))],e.prototype,"dateFieldsTimeZone",void 0),o([a({type:Boolean})],e.prototype,"datesInUnknownTimezone",void 0),o([a()],e.prototype,"dpi",void 0),o([a()],e.prototype,"gdbVersion",void 0),o([a()],e.prototype,"imageFormat",void 0),o([T("imageFormat",["supportedImageFormatTypes"])],e.prototype,"readImageFormat",null),o([a({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],e.prototype,"imageMaxHeight",void 0),o([a({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],e.prototype,"imageMaxWidth",void 0),o([a()],e.prototype,"imageTransparency",void 0),o([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],e.prototype,"isReference",void 0),o([a({json:{read:!1,write:!1}})],e.prototype,"labelsVisible",void 0),o([a({type:["ArcGISMapServiceLayer"]})],e.prototype,"operationalLayerType",void 0),o([a({json:{read:!1,write:!1}})],e.prototype,"popupEnabled",void 0),o([a(v("preferredTimeReference"))],e.prototype,"preferredTimeZone",void 0),o([a()],e.prototype,"sourceJSON",void 0),o([a({json:{write:{ignoreOrigin:!0}}})],e.prototype,"sublayers",void 0),o([P("sublayers",{layers:{type:[j]},visibleLayers:{type:[M]}})],e.prototype,"writeSublayers",null),o([a({type:["show","hide","hide-children"]})],e.prototype,"listMode",void 0),o([a({json:{read:!1},readOnly:!0,value:"map-image"})],e.prototype,"type",void 0),o([a(z)],e.prototype,"url",void 0),e=o([E("esri.layers.MapImageLayer")],e);const Fe=e;export{Fe as default};
