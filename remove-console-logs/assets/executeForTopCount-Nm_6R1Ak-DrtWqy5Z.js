import{y as i}from"./utils-DuaeuwP5-CjEMHNJr.js";import{S as p}from"./queryTopFeatures-BdkfRugo-CS-KOl-_.js";import a from"./TopFeaturesQuery-C3E7qv-F-hQN5UrHC.js";import"./main-CpcGL2Dw.js";import"./normalizeUtils-b-vZURob-BQ8T82gw.js";import"./utils-Jw-4AGsF-D3snsboT.js";import"./query-nJmB7Ppn-_PSgS-Wl.js";import"./pbfQueryUtils-1j64fqcx-iXwaYKPe.js";import"./pbf-Ijhb7ANA-DArvaxu0.js";import"./memoryEstimations-iHVpvWPf-Bzz81aQb.js";import"./OptimizedGeometry-1qDYm3YK-Dbz3rNAT.js";import"./OptimizedFeatureSet-D6mgsKNr-BrXdJsc9.js";import"./queryZScale-DBCLQqDI-BZwBopLX.js";import"./projection-m8vi7Cxv-Aa9tgbms.js";import"./TimeExtent-gZaEUVeW-Bho7I0Ef.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
