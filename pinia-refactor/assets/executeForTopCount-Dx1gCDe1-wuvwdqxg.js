import{y as i}from"./utils-9sQxfkoa-D0b7ufjO.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-vczX5_dG.js";import a from"./TopFeaturesQuery-Ckj_IYM7-CPR8zG4S.js";import"./main-BMRLPbwn.js";import"./normalizeUtils-Bxmy9MNI-C9pLqAjW.js";import"./normalizeUtilsCommon-CRJlkfEA-Bg1LQB8d.js";import"./utils-Bq23Xwmj-Bz2dOkH7.js";import"./query-DFW9-NG_-CIYPd6jp.js";import"./pbfQueryUtils-F4ZE8-K8-C5XoJxcB.js";import"./pbf-D-y3_eZO-pTg49Pz3.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-CGIdO2Bj.js";import"./projection-BA9M1R7d-CL7oQfVf.js";import"./projectBuffer-CvCBvJ6W-De6N-rLH.js";import"./TimeExtent-Cn0Jofqr-YOfl2BZ3.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
