import{b9 as e,N}from"./main-BmakigK2.js";import"./mat4-OOmHNWi7-Csdy1rLd.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./vec32-Cj8pVsU0-DiaCE6ml.js";import"./projectionUtils-B-CplN3q-CMtSsEG5.js";import"./projectVectorToVector-DcyiGOWJ-SB7w8kEk.js";import"./sphere-zPMQWhGG-xSN1n5-v.js";import"./Query-n1aoaaFC-0nztKB1O.js";import{o as D,D as C}from"./I3SBinaryReader-QlZXHlLJ-BEHhD-04.js";import{f as R}from"./edgeUtils-Dic9zHbc-B13lJlue.js";import"./NormalAttribute.glsl-BnbqDItl-CgFrztZ9.js";import{i as _}from"./orientedBoundingBox-CSC169JG-CydbC9Uh.js";e();var f;async function x(o,m,p,I,S,T,c,l){const s=[];for(const r of m)if(r&&S.includes(r.name)){const t=`${o}/nodes/${p}/attributes/${r.key}/0`;s.push({url:t,storageInfo:r})}const a=await Promise.allSettled(s.map(r=>N(r.url,{responseType:"array-buffer",query:{...c,token:T},signal:l?.signal}).then(t=>D(r.storageInfo,t.data)))),i=[];for(const r of I){const t={};for(let n=0;n<a.length;n++){const E=a[n];if(E.status==="fulfilled"){const u=E.value;t[s[n].storageInfo.name]=C(u,r)}}i.push(t)}return i}(function(o){o[o.OUTSIDE=0]="OUTSIDE",o[o.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",o[o.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",o[o.INSIDE=3]="INSIDE"})(f||(f={})),R({color:[0,0,0,0],opacity:0}),e(),e(),new _,new Array(72);export{x as g};
