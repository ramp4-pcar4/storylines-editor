import{m as i}from"./utils-BO8hgPs3-asGX3cNV.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-D9s0pflB.js";import a from"./TopFeaturesQuery-BmMRhRdq-CCCnQFLA.js";import"./main-BmakigK2.js";import"./normalizeUtils-u00NGW3M-BB0tMA56.js";import"./normalizeUtilsCommon-ClagynAA-DTseV17U.js";import"./utils-DpLVEUvg-DWbB2Znv.js";import"./query-COAsogFA-Wn5eAIMc.js";import"./pbfQueryUtils-aBcHX3TJ-DbMDk4Oy.js";import"./pbf-hoLeQyp2-Ci7esdHu.js";import"./memoryEstimations-DeWfxwaV-BRViC7kf.js";import"./OptimizedGeometry-pzfNw1AT-BojZ5HZM.js";import"./OptimizedFeature-mIz_HhJg-DK2ED8HT.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-CDdQBVYj.js";import"./projectionUtils-B-CplN3q-CMtSsEG5.js";import"./TimeExtent-Cf2Pienb-BrJjtKSZ.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
