import{y as i}from"./utils-DuaeuwP5-DYKMxLBV.js";import{S as p}from"./queryTopFeatures-BdkfRugo-RWF6XRT4.js";import a from"./TopFeaturesQuery-C3E7qv-F-CFm5x5Jt.js";import"./main-CgR-Gzgz.js";import"./normalizeUtils-b-vZURob-GTPmhb95.js";import"./utils-Jw-4AGsF-CXDcRzKV.js";import"./query-nJmB7Ppn-BijbgWao.js";import"./pbfQueryUtils-1j64fqcx-CMiIWKYr.js";import"./pbf-Ijhb7ANA-C4HTgSLB.js";import"./memoryEstimations-iHVpvWPf-CW59eJPs.js";import"./OptimizedGeometry-1qDYm3YK-mm3dP1eY.js";import"./OptimizedFeatureSet-D6mgsKNr-jmizA9_w.js";import"./queryZScale-DBCLQqDI-s9BWTXTu.js";import"./projection-m8vi7Cxv-7tTzQLA0.js";import"./TimeExtent-gZaEUVeW-Doef5Vb7.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
