function i(M,l,d,m){const f=3*M,o=3*(d-M)-f,k=1-f-o,c=3*l,p=3*(m-l)-c,I=1-c-p;function x(n){return((k*n+o)*n+f)*n}function O(n){return((I*n+p)*n+c)*n}function g(n){return(3*k*n+2*o)*n+f}function j(n,s){let e,u,t,a,b,h;for(t=n,h=0;h<8;h++){if(a=x(t)-n,Math.abs(a)<s)return t;if(b=g(t),Math.abs(b)<1e-6)break;t-=a/b}if(e=0,u=1,t=n,t<e)return e;if(t>u)return u;for(;e<u;){if(a=x(t),Math.abs(a-n)<s)return t;n>a?e=t:u=t,t=.5*(u-e)+e}return t}return function(n,s=1e-6){return O(j(n,s))}}const r={};r.ease=i(.25,.1,.25,1),r.linear=i(0,0,1,1),r.easeIn=r["ease-in"]=i(.42,0,1,1),r.easeOut=r["ease-out"]=i(0,0,.58,1),r.easeInOut=r["ease-in-out"]=i(.42,0,.58,1);export{i,r};
