import{v as u,y as G,aN as A,aB as L,kr as E}from"./main-DK5A1thH.js";import{R as W,D as M,G as N,I as V,E as $}from"./mat3-DOnW3DjW-C3hbW9XY.js";import{e as C}from"./MapView-BcnxJC0k-Cy95F30Y.js";import{e as y}from"./vec2f32-CVhmN3Me-DxoqVD7C.js";import{u as U}from"./Container-BdpN3llD-B-wOs-W5.js";import{M as _,B as q,U as F,G as K,L as O,D as R}from"./enums-DBi1-Mm2-CUS1pvQe.js";import{H as Q,O as X}from"./Texture-DXSFJsEu-0d91IJKM.js";import{G as j}from"./definitions-CBIQmVpq-o3EUznKY.js";import{d as Z,l as p,y as J,E as Y,P as w,g as tt,h as et,F as it,a as h,e as st,K as rt,S as b,c as m,s as P,p as ot,u as I,X as k,a1 as at,a6 as nt}from"./GraphShaderModule-C7Apfssb-DLxUKbU0.js";import{i as lt}from"./TechniqueType-GommNIdJ-ByYTgVOB.js";class ut{constructor(t,i,s){this.pixelBlock=t,this.extent=i,this.originalPixelBlock=s}get width(){return this.pixelBlock!=null?this.pixelBlock.width:0}get height(){return this.pixelBlock!=null?this.pixelBlock.height:0}render(t){const i=this.pixelBlock;if(i==null)return;const s=this.filter({extent:this.extent,pixelBlock:this.originalPixelBlock??i});if(s.pixelBlock==null)return;s.pixelBlock.maskIsAlpha&&(s.pixelBlock.premultiplyAlpha=!0);const r=s.pixelBlock.getAsRGBA(),a=t.createImageData(s.pixelBlock.width,s.pixelBlock.height);a.data.set(r),t.putImageData(a,0,0)}getRenderedRasterPixels(){const t=this.filter({extent:this.extent,pixelBlock:this.pixelBlock});return t.pixelBlock==null?null:(t.pixelBlock.maskIsAlpha&&(t.pixelBlock.premultiplyAlpha=!0),{width:t.pixelBlock.width,height:t.pixelBlock.height,renderedRasterPixels:new Uint8Array(t.pixelBlock.getAsRGBA().buffer)})}}function ht(e){return e&&"render"in e}function ct(e){const t=document.createElement("canvas");return t.width=e.width,t.height=e.height,e.render(t.getContext("2d")),t}function dt(e){return ht(e)?e instanceof ut?e.getRenderedRasterPixels()?.renderedRasterPixels:ct(e):e}let kt=class extends U{constructor(e=null,t=!1){super(),this.blendFunction="standard",this._sourceWidth=0,this._sourceHeight=0,this._textureInvalidated=!1,this.stencilRef=0,this.coordScale=[1,1],this._height=void 0,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this._texture=null,this._width=void 0,this.x=0,this.y=0,this.immutable=t,this.source=e,this.requestRender=this.requestRender.bind(this)}destroy(){this._texture&&(this._texture.dispose(),this._texture=null),this._uploadStatus!=null&&(this._uploadStatus.controller.abort(),this._uploadStatus=null)}get isSourceScaled(){return this.width!==this._sourceWidth||this.height!==this._sourceHeight}get height(){return this._height!==void 0?this._height:this._sourceHeight}set height(e){this._height=e}get source(){return this._source}set source(e){e==null&&this._source==null||(this._source=e,this.invalidateTexture(),this.requestRender())}get texture(){return this._texture}get width(){return this._width!==void 0?this._width:this._sourceWidth}set width(e){this._width=e}beforeRender(e){super.beforeRender(e),this.updateTexture(e)}async setSourceAsync(e,t){this._uploadStatus!=null&&this._uploadStatus.controller.abort();const i=new AbortController,s=G();return A(t,()=>i.abort()),A(i,r=>s.reject(r)),this._uploadStatus={controller:i,resolver:s},this.source=e,s.promise}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this._source instanceof HTMLImageElement?(this._sourceHeight=this._source.naturalHeight,this._sourceWidth=this._source.naturalWidth):this._source&&(this._sourceHeight=this._source.height,this._sourceWidth=this._source.width))}transitionStep(e,t){e>=64&&(this.fadeTransitionEnabled=!1),super.transitionStep(e,t)}setTransform(e){const t=W(this.transforms.displayViewScreenMat3),[i,s]=e.toScreenNoRotation([0,0],[this.x,this.y]),r=this.resolution/this.pixelRatio/e.resolution,a=r*this.width,o=r*this.height,n=Math.PI*this.rotation/180;M(t,t,y(i,s)),M(t,t,y(a/2,o/2)),N(t,t,-n),M(t,t,y(-a/2,-o/2)),V(t,t,y(a,o)),$(this.transforms.displayViewScreenMat3,e.displayViewMat3,t)}setSamplingProfile(e){this._texture&&(e.mips&&!this._texture.descriptor.hasMipmap&&this._texture.generateMipmap(),this._texture.setSamplingMode(e.samplingMode))}bind(e,t){this._texture&&e.bindTexture(this._texture,t)}async updateTexture({context:e,painter:t}){if(!this._textureInvalidated)return;if(this._textureInvalidated=!1,this._texture||(this._texture=this._createTexture(e)),!this.source)return void this._texture.setData(null);this._texture.resize(this._sourceWidth,this._sourceHeight);const i=dt(this.source);try{if(this._uploadStatus!=null){const{controller:s,resolver:r}=this._uploadStatus,a={signal:s.signal},{width:o,height:n}=this,l=this._texture;await t.textureUploadManager.enqueueTextureUpdate({data:i,texture:l,width:o,height:n},a),r.resolve(),this._uploadStatus=null}else this._texture.setData(i);this.ready()}catch(s){L(s)}}onDetach(){this.destroy()}_createTransforms(){return{displayViewScreenMat3:C()}}_createTexture(e){const t=this.immutable,i=new Q;return i.internalFormat=t?q.RGBA8:F.RGBA,i.wrapMode=K.CLAMP_TO_EDGE,i.isImmutable=t,i.width=this._sourceWidth,i.height=this._sourceHeight,new X(e,i)}};function pt(e){const t=new h(.16666666666666666),i=e.multiply(e),s=i.multiply(e),r=t.multiply(s.multiply(-1).add(new h(3).multiply(i)).subtract(new h(3).multiply(e)).add(1)),a=t.multiply(s.multiply(3).subtract(i.multiply(6)).add(4)),o=t.multiply(s.multiply(-3).add(i.multiply(3)).add(e.multiply(3)).add(1)),n=t.multiply(s);return new b(r,a,o,n)}function T(e){const t=pt(e),i=t.x.add(t.y),s=t.z.add(t.w),r=new h(1).subtract(t.y.divide(i)).add(e),a=new h(1).add(t.w.divide(s)).subtract(e);return new b(r,a,i,s)}function mt(e,t,i){const s=new w(new h(1).divide(i.x),0),r=new w(0,new h(1).divide(i.y)),a=t.multiply(i).subtract(.5),o=T(I(a).x).xyz,n=T(I(a).y).xyz;let l=t.add(o.x.multiply(s)),d=t.subtract(o.y.multiply(s));const v=l.add(n.x.multiply(r)),B=d.add(n.x.multiply(r));l=l.subtract(n.y.multiply(r)),d=d.subtract(n.y.multiply(r));let c=m(e,d),S=m(e,l);const D=m(e,B),z=m(e,v);return c=k(c,D,n.z),S=k(S,z,n.z),c=k(c,S,o.z),c}class H extends Y{}u([Z(0,w)],H.prototype,"position",void 0);class xt extends nt{}class x extends tt{}u([p(et)],x.prototype,"texture",void 0),u([p(it)],x.prototype,"dvsMat3",void 0),u([p(w)],x.prototype,"coordScale",void 0),u([p(h)],x.prototype,"opacity",void 0);class g extends st{constructor(){super(...arguments),this.type="BitmapShader"}vertex(t){const i=this.config.dvsMat3.multiply(new rt(t.position.multiply(this.config.coordScale),1));return{glPosition:new b(i,1),texcoord:t.position}}fragment(t){const i=new at;let s;return s=this.bicubic?mt(this.config.texture,t.texcoord,this.config.coordScale):m(this.config.texture,t.texcoord),i.fragColor=new b(s.rgb.multiply(this.config.opacity),s.a.multiply(this.config.opacity)),i}}u([p(x)],g.prototype,"config",void 0),u([J],g.prototype,"bicubic",void 0),u([E(0,P(H))],g.prototype,"vertex",null),u([E(0,P(xt))],g.prototype,"fragment",null);const f={nearest:{samplingMode:_.NEAREST,mips:!1},bilinear:{samplingMode:_.LINEAR,mips:!1},bicubic:{samplingMode:_.LINEAR,mips:!1},trilinear:{samplingMode:_.LINEAR_MIPMAP_LINEAR,mips:!0}},gt=(e,t,i)=>{if(i.samplingMode==="dynamic"){const{state:s}=e,r=t.resolution/t.pixelRatio/s.resolution,a=Math.round(e.pixelRatio)!==e.pixelRatio,o=r>1.05||r<.95;return s.rotation||o||a||t.isSourceScaled||t.rotation?f.bilinear:f.nearest}return f[i.samplingMode]};class At extends ot{constructor(){super(...arguments),this.name="BrushBitmap",this.type=lt.Bitmap,this.shaders={bitmap:new g}}render(t,i){const{context:s,renderingOptions:r,painter:a}=t;for(const o of i.bitmaps){const n=o.texture;if(!o.source||!o.isReady||n==null)continue;const l=gt(t,o,r);t.timeline.begin(this.name),a.setPipelineState({depth:!1,stencil:{test:{mask:255,ref:o.stencilRef,compare:O.EQUAL,op:{fail:R.KEEP,zFail:R.KEEP,zPass:R.KEEP}},write:!1},color:{write:[!0,!0,!0,!0],blendMode:o.blendFunction==="additive"?"additive":"composite"}}),o.setSamplingProfile(l);const{coordScale:d,computedOpacity:v,transforms:B}=o,c={texture:{texture:n,unit:j},dvsMat3:B.displayViewScreenMat3,coordScale:d,opacity:v};a.submitDrawMesh(s,{shader:this.shaders.bitmap,uniforms:{config:c},defines:{bicubic:l===f.bicubic},optionalAttributes:null,useComputeBuffer:!1},a.quadMesh),t.timeline.end(this.name)}}}export{ct as H,ut as T,kt as p,At as y,ht as z};
