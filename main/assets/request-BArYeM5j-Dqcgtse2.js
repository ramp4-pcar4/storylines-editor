import{c as b}from"./main-DK5A1thH.js";function d(n,a){let t=a.responseType;t?t!=="array-buffer"&&t!=="blob"&&t!=="json"&&t!=="native"&&t!=="native-request-init"&&t!=="text"&&(t="text"):t="json",a.responseType=t;const c=a.signal;return delete a.signal,globalThis.invokeStaticMessage("request",{url:n,options:a},{signal:c}).then(async e=>{let i,r,l,u,s;if(e.data)if(e.data instanceof ArrayBuffer){if(!(t!=="json"&&t!=="text"&&t!=="blob"||(i=new Blob([e.data]),t!=="json"&&t!=="text"||(u=await i.text(),t!=="json")))){try{r=JSON.parse(u||null)}catch(o){const f={...o,url:n,requestOptions:a};throw new b("request:server",o.message,f)}if(r.error){const o={...r.error,url:n,requestOptions:a};throw new b("request:server",r.error.message,o)}}}else t==="native"&&(e.data.signal=c,l=await fetch(e.data.url,e.data),e.httpStatus=l.status);switch(t){case"blob":s=i;break;case"json":s=r;break;case"native":s=l;break;case"text":s=u;break;default:s=e.data}return{data:s,httpStatus:e.httpStatus,requestOptions:a,ssl:e.ssl,url:n}})}export{d as execute};
