import{v as l,S as h,n as g,bf as F,w as X,F as S,X as P,l as R,o as z}from"./main-C6fh4Kls.js";let y=class extends P{get affectsPixelSize(){return!1}forwardTransform(e){return e}inverseTransform(e){return e}};l([h()],y.prototype,"affectsPixelSize",null),l([h({json:{write:!0}})],y.prototype,"spatialReference",void 0),y=l([g("esri.layers.support.rasterTransforms.BaseRasterTransform")],y);var v;let d=v=class extends y{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(e){return(e=e.clone()).type==="point"?(e.x>180+this.tolerance&&(e.x-=360),e):(e.xmin>=180-this.tolerance?(e.xmax-=360,e.xmin-=360):e.xmax>180+this.tolerance&&(e.xmin=-180,e.xmax=180),e)}inverseTransform(e){return(e=e.clone()).type==="point"?(e.x<-this.tolerance&&(e.x+=360),e):(e.xmin<-this.tolerance&&(e.xmin+=360,e.xmax+=360),e)}clone(){return new v({tolerance:this.tolerance})}};l([F({GCSShiftXform:"gcs-shift"})],d.prototype,"type",void 0),l([h()],d.prototype,"tolerance",void 0),d=v=l([g("esri.layers.support.rasterTransforms.GCSShiftTransform")],d);var C;function w(e,o,s){const{x:t,y:r}=o;if(s<2)return{x:e[0]+t*e[2]+r*e[4],y:e[1]+t*e[3]+r*e[5]};if(s===2){const p=t*t,T=r*r,O=t*r;return{x:e[0]+t*e[2]+r*e[4]+p*e[6]+O*e[8]+T*e[10],y:e[1]+t*e[3]+r*e[5]+p*e[7]+O*e[9]+T*e[11]}}const n=t*t,a=r*r,u=t*r,i=n*t,m=n*r,x=t*a,f=r*a;return{x:e[0]+t*e[2]+r*e[4]+n*e[6]+u*e[8]+a*e[10]+i*e[12]+m*e[14]+x*e[16]+f*e[18],y:e[1]+t*e[3]+r*e[5]+n*e[7]+u*e[9]+a*e[11]+i*e[13]+m*e[15]+x*e[17]+f*e[19]}}function Y(e,o,s){const{xmin:t,ymin:r,xmax:n,ymax:a,spatialReference:u}=o;let i=[];if(s<2)i.push({x:t,y:a}),i.push({x:n,y:a}),i.push({x:t,y:r}),i.push({x:n,y:r});else{let f=10;for(let p=0;p<f;p++)i.push({x:t,y:r+(a-r)*p/(f-1)}),i.push({x:n,y:r+(a-r)*p/(f-1)});f=8;for(let p=1;p<=f;p++)i.push({x:t+(n-t)*p/f,y:r}),i.push({x:t+(n-t)*p/f,y:a})}i=i.map(f=>w(e,f,s));const m=i.map(f=>f.x),x=i.map(f=>f.y);return new z({xmin:Math.min.apply(null,m),xmax:Math.max.apply(null,m),ymin:Math.min.apply(null,x),ymax:Math.max.apply(null,x),spatialReference:u})}function I(e){const[o,s,t,r,n,a]=e,u=t*a-n*r,i=n*r-t*a;return[(n*s-o*a)/u,(t*s-o*r)/i,a/u,r/i,-n/u,-t/i]}let c=C=class extends y{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(e,o){const{coeffX:s,coeffY:t}=o;if(!s?.length||!t?.length||s.length!==t.length)return null;const r=[];for(let n=0;n<s.length;n++)r.push(s[n]),r.push(t[n]);return r}writeForwardCoefficients(e,o,s){const t=[],r=[];for(let n=0;n<e?.length;n++)n%2==0?t.push(e[n]):r.push(e[n]);o.coeffX=t,o.coeffY=r}get inverseCoefficients(){let e=this._get("inverseCoefficients");const o=this._get("forwardCoefficients");return!e&&o&&this.polynomialOrder<2&&(e=I(o)),e}set inverseCoefficients(e){this._set("inverseCoefficients",e)}readInverseCoefficients(e,o){const{inverseCoeffX:s,inverseCoeffY:t}=o;if(!s?.length||!t?.length||s.length!==t.length)return null;const r=[];for(let n=0;n<s.length;n++)r.push(s[n]),r.push(t[n]);return r}writeInverseCoefficients(e,o,s){const t=[],r=[];for(let n=0;n<e?.length;n++)n%2==0?t.push(e[n]):r.push(e[n]);o.inverseCoeffX=t,o.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(e){if(e.type==="point"){const o=w(this.forwardCoefficients,e,this.polynomialOrder);return new R({x:o.x,y:o.y,spatialReference:e.spatialReference})}return Y(this.forwardCoefficients,e,this.polynomialOrder)}inverseTransform(e){if(e.type==="point"){const o=w(this.inverseCoefficients,e,this.polynomialOrder);return new R({x:o.x,y:o.y,spatialReference:e.spatialReference})}return Y(this.inverseCoefficients,e,this.polynomialOrder)}clone(){return new C({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};l([h({json:{write:!0}})],c.prototype,"polynomialOrder",void 0),l([h()],c.prototype,"forwardCoefficients",void 0),l([X("forwardCoefficients",["coeffX","coeffY"])],c.prototype,"readForwardCoefficients",null),l([S("forwardCoefficients")],c.prototype,"writeForwardCoefficients",null),l([h({json:{write:!0}})],c.prototype,"inverseCoefficients",null),l([X("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],c.prototype,"readInverseCoefficients",null),l([S("inverseCoefficients")],c.prototype,"writeInverseCoefficients",null),l([h()],c.prototype,"affectsPixelSize",null),l([F({PolynomialXform:"polynomial"})],c.prototype,"type",void 0),c=C=l([g("esri.layers.support.rasterTransforms.PolynomialTransform")],c);export{c,d,y};
