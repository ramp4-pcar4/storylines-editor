import{y as i}from"./utils-9sQxfkoa-BnLFQCX3.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-BsVe-a_T.js";import a from"./TopFeaturesQuery-Ckj_IYM7-CJuzaA1y.js";import"./main-DfeUb8VA.js";import"./normalizeUtils-Bxmy9MNI-D1Xq-nPI.js";import"./normalizeUtilsCommon-CRJlkfEA-BR68NMQi.js";import"./utils-Bq23Xwmj-gzdmw5-v.js";import"./query-DFW9-NG_-DXD2-gvh.js";import"./pbfQueryUtils-F4ZE8-K8-B8FIfkjD.js";import"./pbf-D-y3_eZO-Db_elR7Q.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-v6VhYU2h.js";import"./projection-BA9M1R7d-jYN1KMFJ.js";import"./projectBuffer-CvCBvJ6W-DGLKRcYF.js";import"./TimeExtent-Cn0Jofqr-B9QcfiCb.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
