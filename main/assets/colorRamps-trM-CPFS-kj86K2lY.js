import{v as o,S as l,n as m,bf as h,ad as n,bh as y,X as c,q as s}from"./main-COUzu-Id.js";let p=class extends c{constructor(t){super(t),this.type=null}};o([l({readOnly:!0,json:{read:!1,write:!0}})],p.prototype,"type",void 0),p=o([m("esri.rest.support.ColorRamp")],p);var i;let r=i=class extends p{constructor(t){super(t),this.algorithm=null,this.fromColor=null,this.toColor=null,this.type="algorithmic"}clone(){return new i({fromColor:s(this.fromColor),toColor:s(this.toColor),algorithm:this.algorithm})}};o([h({esriCIELabAlgorithm:"cie-lab",esriHSVAlgorithm:"hsv",esriLabLChAlgorithm:"lab-lch"})],r.prototype,"algorithm",void 0),o([l({type:n,json:{type:[y],write:!0}})],r.prototype,"fromColor",void 0),o([l({type:n,json:{type:[y],write:!0}})],r.prototype,"toColor",void 0),o([l({type:["algorithmic"]})],r.prototype,"type",void 0),r=i=o([m("esri.rest.support.AlgorithmicColorRamp")],r);var a;let e=a=class extends p{constructor(t){super(t),this.colorRamps=null,this.type="multipart"}clone(){return new a({colorRamps:s(this.colorRamps)})}};o([l({type:[r],json:{write:!0}})],e.prototype,"colorRamps",void 0),o([l({type:["multipart"]})],e.prototype,"type",void 0),e=a=o([m("esri.rest.support.MultipartColorRamp")],e);const C={key:"type",base:p,typeMap:{algorithmic:r,multipart:e}};function d(t){return t?.type?t.type==="algorithmic"?r.fromJSON(t):t.type==="multipart"?e.fromJSON(t):null:null}export{d as C,C as c,e};
