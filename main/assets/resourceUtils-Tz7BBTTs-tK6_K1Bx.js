import{an as p}from"./main-CKPAMuMz.js";import{D as i}from"./basicInterfaces-Dsf65ICa-DkQ9Rsnx.js";class u{constructor(n){this.data=n,this.type="encoded-mesh-texture",this.encoding=i.KTX2_ENCODING}}function w(t){return t?.type==="encoded-mesh-texture"}async function h(t){const n=new Blob([t]),o=await n.text();return JSON.parse(o)}async function v(t,n){if(n===i.KTX2_ENCODING)return new u(t);const o=new Blob([t],{type:n});let r=URL.createObjectURL(o);switch(n){case"image/jpeg":r+="#.jpg";break;case"image/png":r+="#.png"}const e=new Image;if(p("esri-iPhone"))return new Promise((d,m)=>{const c=()=>{a(),d(e)},s=g=>{a(),m(g)},a=()=>{URL.revokeObjectURL(r),e.removeEventListener("load",c),e.removeEventListener("error",s)};e.addEventListener("load",c),e.addEventListener("error",s),e.src=r});try{e.src=r,await e.decode()}catch{console.warn("Failed decoding HTMLImageElement")}return URL.revokeObjectURL(r),e}export{u as d,w as g,h as l,v as w};
