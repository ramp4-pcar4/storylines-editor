import{y as i}from"./utils-9sQxfkoa-Bn_d9vXA.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-JGKZFCDQ.js";import a from"./TopFeaturesQuery-Ckj_IYM7-Dz3OAcyc.js";import"./main-C7yV2j71.js";import"./normalizeUtils-Bxmy9MNI-nfuKj9G4.js";import"./normalizeUtilsCommon-CRJlkfEA-gUMlOjU7.js";import"./utils-Bq23Xwmj-Bx2NKKg4.js";import"./query-DFW9-NG_-CfusC8cS.js";import"./pbfQueryUtils-F4ZE8-K8-OJsDwOym.js";import"./pbf-D-y3_eZO-SEvl9j6c.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-Byqa7f2t.js";import"./projection-BA9M1R7d-DXrPfsKU.js";import"./projectBuffer-CvCBvJ6W-D_Mlrmjj.js";import"./TimeExtent-Cn0Jofqr-5JsvQYX6.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
