import{$ as m,o as s,P as p}from"./main-1nVJzzoK.js";import{o as n}from"./MeshVertexAttributes-CbNpPur2-bjnNf0SC.js";import{b as c}from"./vertexSpaceConversion-CiKaVq_u-DsWIWDPm.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4-DX7gBViE-o9W8m9LG.js";import"./mat4f64-Dn1WEGBx-C99QVUMW.js";import"./vec32-D9GsKZ1t-BmUDCYPa.js";import"./spatialReferenceEllipsoidUtils-DUrKTvup-DSRe-a9B.js";import"./computeTranslationToOriginAndRotation-wF0y9WQG-hcECOMuw.js";import"./projectBuffer-CvCBvJ6W-BzZfP3H5.js";import"./projectPointToVector-B2UUY9SE-4B7SyiQx.js";import"./projection-BA9M1R7d-CTSo-pzX.js";import"./meshVertexSpaceUtils-B4l_Zo0M-rzo4j2tg.js";import"./MeshLocalVertexSpace-BqgocsoS-dIDLhbvS.js";import"./vec3-BazNroeq-xtxlCzzh.js";import"./BufferView-PQoE3GL7-CDdVc1ui.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4-DWDdg1fj-B5_1tbnI.js";async function U(o,r,t){await Promise.resolve(),m(t);const i=c(o,r,{useEllipsoid:t?.useEllipsoid});if(!i)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=o.cloneAndModifyVertexAttributes(new n({...i,uv:p(o.vertexAttributes.uv),color:p(o.vertexAttributes.color)}),r);return e.transform=null,e}export{U as convertMeshVertexSpace};
