import{v as l,S as v,ac as Ti,du as b,gN as wi,bc as Ie,a6 as yt,n as xi,lC as pe,gt as St,gL as pt,K as bi,af as Ei,iN as Oi,cT as xt,ak as Ri,bT as Di,u as Ai,J as Ke}from"./main-COUzu-Id.js";import{k as ge,B as Ge,z as et,G as Ci,e as Pi,x as Li,b as Mi,h as Ii}from"./mat4-OOmHNWi7-BEW9II7C.js";import{n as Z,u as Fi}from"./mat4f64-xsZDPPj0-Dq35B4BL.js";import{d as ti,E as ji}from"./vec2-BnynUbeJ-CKtGJQAy.js";import{r as zi}from"./vec2f64-CkowXrDb-3zFQ3LNH.js";import{r as ne,A as B,g as Ye,_ as q,R as be,k as bt,y as He,U as Et,F as Ni,L as _e,b as dt,S as Ot,l as Rt,W as Ui,X as Vi,Y as te,P as Je}from"./vec32-Cj8pVsU0-C2yjN_Hk.js";import{o as Dt,O as At,E as tt,p as Fe,b as Ct,D as je,y as Wi}from"./vec42-D8CJyqHG-DnfLTeQH.js";import{r as ut,o as Oe,m as Bi,I as $i}from"./vec4f64-DD-nkcCV-CSNWKRqG.js";import{P as ki,L as Gi,I as Hi,H as Ji,N as ze}from"./Octree-B7mLL9lS-CFqlCv9P.js";import{M as Xi,U as Pt,S as Yi}from"./sphere-zPMQWhGG-D6QJb9ZN.js";import{b as Zi}from"./vectorStacks-5ZZtmT9E-zqMmdifz.js";import{o as qi}from"./ViewingMode-CdRKcXnc-Dab70bGf.js";import{o as ft}from"./projectionUtils-B-CplN3q-CNaY28CM.js";import{M as Qi}from"./orientedBoundingBox-CSC169JG-DGyleKAV.js";import{p as T,aB as Ki,f as er,r as tr,O as re,J as ir,aU as rr,ab as sr,y as nr,t as Tt,a as wt,ak as or,al as ar,U as lr,x as Re,_ as mt,b0 as cr,b1 as hr,K as ii,s as ri,z as si,am as we,b2 as Lt,d as pr,i as dr,h as ur,M as fr,L as mr,w as vr,A as ee,Y as me,I as ni,aX as gr,b3 as _r,a1 as yr,a2 as Sr,m as Mt,aK as Tr,aL as wr,aM as xr,aN as Ne,a4 as br,aO as It,aP as Ft,aQ as Er,a_ as Or,b4 as jt,b5 as Rr,b6 as zt,b7 as Dr,b8 as Ar,b9 as Nt,ba as Cr}from"./OutputColorHighlightOID.glsl-BdXTjs7_-DZ58Xxe-.js";import{y as Ze,V as Pr,G as Ue,O as Q,$ as Ut}from"./plane-Cf3Koz3c-CrAK0X8U.js";import{u as Lr}from"./basicInterfaces-Dsf65ICa-DkQ9Rsnx.js";import{c as Mr,d as Ir,h as Fr}from"./BufferView-wDxx79o3-CtDW-vw_.js";import{T as p,t as jr}from"./VertexAttribute-hUz6pozM-Bx3V-z96.js";import{M as oi,S as zr,R as it,W as Nr}from"./lineSegment-BAWQVP9P-93-QrbwJ.js";import{e as Ur}from"./InterleavedLayout-C2YUDwKf-De7NEJS4.js";import{o as ai,i as Vr,h as Ee,e as Wr,c as Vt,t as Br}from"./ShaderOutput-CUn9tpiG-CW1Nc608.js";import{T as Wt}from"./enums-wEDHPbCF-Cf76M5_x.js";import{K as Ve,m as rt,C as Bt}from"./renderState-BM-MCKUz-CkGIEsl7.js";import{p as $r}from"./computeTranslationToOriginAndRotation-e-ft1lOz-BhPySg2W.js";import{S as kr,r as li}from"./dehydratedFeatureUtils-OR1UjA48-C4lAvtZD.js";import{b as Gr,j as Hr}from"./ElevationInfo-DE5to86a-BDiLC3CG.js";import{h as Jr}from"./hydratedFeatures-oobA80ei-BteLZzK9.js";import{e as h,u as Xr}from"./glsl-Z5uYj8ka-BRgh2Cgo.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./floatRGBA-DRFmbkvz-wdWjFqqP.js";import"./Texture-D5XWO2GQ-CVPYGUml.js";import{v as Yr}from"./ShaderBuilder-CU5v4tk1-oD8mQc8j.js";var $t,kt,Gt;(function(e){e[e.RasterImage=0]="RasterImage",e[e.Features=1]="Features"})($t||($t={})),function(e){e[e.MapLayer=0]="MapLayer",e[e.ViewLayer=1]="ViewLayer",e[e.Outline=2]="Outline",e[e.SnappingHint=3]="SnappingHint"}(kt||(kt={})),function(e){e[e.WithRasterImage=0]="WithRasterImage",e[e.WithoutRasterImage=1]="WithoutRasterImage"}(Gt||(Gt={}));var Xe;(function(e){e[e.ASYNC=0]="ASYNC",e[e.SYNC=1]="SYNC"})(Xe||(Xe={}));function Zr(e,t){return e==null&&(e=[]),e.push(t),e}function qr(e,t){if(e==null)return null;const i=e.filter(r=>r!==t);return i.length===0?null:i}function En(e,t,i,r,s){We[0]=e.get(t,0),We[1]=e.get(t,1),We[2]=e.get(t,2),Cr(We,ae,3),i.set(s,0,ae[0]),r.set(s,0,ae[1]),i.set(s,1,ae[2]),r.set(s,1,ae[3]),i.set(s,2,ae[4]),r.set(s,2,ae[5])}const We=b(),ae=new Float32Array(6);let Qr=class{constructor(e={}){this.id=St(),this._highlightIds=new Set,this._shaderTransformation=null,this._visible=!0,this.castShadow=e.castShadow??!0,this.usesVerticalDistanceToGround=e.usesVerticalDistanceToGround??!1,this.graphicUid=e.graphicUid,this.layerViewUid=e.layerViewUid,e.isElevationSource&&(this.lastValidElevationBB=new ci),this._geometries=e.geometries?Array.from(e.geometries):new Array}dispose(){this._geometries.length=0}get layer(){return this._layer}set layer(e){Mr(this._layer==null||e==null,"Object3D can only be added to a single Layer"),this._layer=e}addGeometry(e){e.visible=this._visible,this._geometries.push(e);for(const t of this._highlightIds)e.addHighlight(t);this._emit("geometryAdded",{object:this,geometry:e}),this._highlightIds.size&&this._emit("highlightChanged",this),this._invalidateBoundingVolume()}removeGeometry(e){const t=this._geometries.splice(e,1)[0];if(t){for(const i of this._highlightIds)t.removeHighlight(i);this._emit("geometryRemoved",{object:this,geometry:t}),this._highlightIds.size&&this._emit("highlightChanged",this),this._invalidateBoundingVolume()}}removeAllGeometries(){for(;this._geometries.length>0;)this.removeGeometry(0)}geometryVertexAttributeUpdated(e,t,i=!1){this._emit("attributesChanged",{object:this,geometry:e,attribute:t,sync:i}),jr(t)&&this._invalidateBoundingVolume()}get visible(){return this._visible}set visible(e){if(this._visible!==e){this._visible=e;for(const t of this._geometries)t.visible=this._visible;this._emit("visibilityChanged",this)}}maskOccludee(){const e=new cr;for(const t of this._geometries)t.occludees=Zr(t.occludees,e);return this._emit("occlusionChanged",this),e}removeOcclude(e){for(const t of this._geometries)t.occludees=qr(t.occludees,e);this._emit("occlusionChanged",this)}highlight(e){const t=new hr(e);for(const i of this._geometries)i.addHighlight(t);return this._emit("highlightChanged",this),this._highlightIds.add(t),t}removeHighlight(e){this._highlightIds.delete(e);for(const t of this._geometries)t.removeHighlight(e);this._emit("highlightChanged",this)}removeStateID(e){e.channel===Lr.Highlight?this.removeHighlight(e):this.removeOcclude(e)}getCombinedStaticTransformation(e,t){return Ge(t,this.transformation,e.transformation)}getCombinedShaderTransformation(e,t=Z()){return Ge(t,this.effectiveTransformation,e.transformation)}get boundingVolumeWorldSpace(){return this._bvWorldSpace||(this._bvWorldSpace=this._bvWorldSpace||new Ht,this._validateBoundingVolume(this._bvWorldSpace,De.WorldSpace)),this._bvWorldSpace}get boundingVolumeObjectSpace(){return this._bvObjectSpace||(this._bvObjectSpace=this._bvObjectSpace||new Ht,this._validateBoundingVolume(this._bvObjectSpace,De.ObjectSpace)),this._bvObjectSpace}_validateBoundingVolume(e,t){const i=t===De.ObjectSpace;for(const r of this._geometries){const s=r.boundingInfo;s&&Kr(s,e,i?r.transformation:this.getCombinedShaderTransformation(r))}Vi(Pt(e.bounds),e.min,e.max,.5);for(const r of this._geometries){const s=r.boundingInfo;if(s==null)continue;const n=i?r.transformation:this.getCombinedShaderTransformation(r),o=Pr(n);te(Jt,s.center,n);const a=Ye(Jt,Pt(e.bounds)),c=s.radius*o;e.bounds[3]=Math.max(e.bounds[3],a+c)}}_invalidateBoundingVolume(){const e=this._bvWorldSpace?.bounds;this._bvObjectSpace=this._bvWorldSpace=void 0,this.layer&&e&&this.layer.notifyObjectBBChanged(this,e)}_emit(e,t){this.layer?.events.emit(e,t)}get geometries(){return this._geometries}get transformation(){return this._transformation??Fi}set transformation(e){this._transformation=ge(this._transformation??Z(),e),this._invalidateBoundingVolume(),this._emit("transformationChanged",this)}get shaderTransformation(){return this._shaderTransformation}set shaderTransformation(e){this._shaderTransformation=e?ge(this._shaderTransformation??Z(),e):null,this._invalidateBoundingVolume(),this._emit("shaderTransformationChanged",this)}get effectiveTransformation(){return this.shaderTransformation??this.transformation}get test(){}};class ci{constructor(){this.min=pt(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),this.max=pt(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)}isEmpty(){return this.max[0]<this.min[0]&&this.max[1]<this.min[1]&&this.max[2]<this.min[2]}}let Ht=class extends ci{constructor(){super(...arguments),this.bounds=Yi()}};function Kr(e,t,i){const r=e.bbMin,s=e.bbMax;if(Ii(i)){const n=B(es,i[12],i[13],i[14]);Je(H,r,n),Je(Y,s,n);for(let o=0;o<3;++o)t.min[o]=Math.min(t.min[o],H[o]),t.max[o]=Math.max(t.max[o],Y[o])}else if(te(H,r,i),be(r,s))for(let n=0;n<3;++n)t.min[n]=Math.min(t.min[n],H[n]),t.max[n]=Math.max(t.max[n],H[n]);else{te(Y,s,i);for(let n=0;n<3;++n)t.min[n]=Math.min(t.min[n],H[n],Y[n]),t.max[n]=Math.max(t.max[n],H[n],Y[n]);for(let n=0;n<3;++n){q(H,r),q(Y,s),H[n]=s[n],Y[n]=r[n],te(H,H,i),te(Y,Y,i);for(let o=0;o<3;++o)t.min[o]=Math.min(t.min[o],H[o],Y[o]),t.max[o]=Math.max(t.max[o],H[o],Y[o])}}}const es=b(),H=b(),Y=b(),Jt=b();var De;(function(e){e[e.WorldSpace=0]="WorldSpace",e[e.ObjectSpace=1]="ObjectSpace"})(De||(De={}));const ts=["layerObjectAdded","layerObjectRemoved","layerObjectsAdded","layerObjectsRemoved","transformationChanged","shaderTransformationChanged","visibilityChanged","occlusionChanged","highlightChanged","geometryAdded","geometryRemoved","attributesChanged"];let is=class{constructor(e,t,i=""){this.stage=e,this.apiLayerViewUid=i,this.id=St(),this.events=new bi,this.visible=!0,this.sliceable=!1,this._objectsAdded=new Array,this._handles=new Ei,this._objects=new Map,this._pickable=!0,this.visible=t?.visible??!0,this._pickable=t?.pickable??!0,this.updatePolicy=t?.updatePolicy??Xe.ASYNC,e.addLayer(this);for(const r of ts)this._handles.add(this.events.on(r,s=>e.handleEvent(r,s)))}destroy(){this._handles.size&&(this._handles.destroy(),this.stage.removeLayer(this),this.invalidateSpatialQueryAccelerator())}get objects(){return this._objects}getObject(e){return Oi(this._objects.get(e))}set pickable(e){this._pickable=e}get pickable(){return this._pickable&&this.visible}add(e){this._objects.set(e.id,e),e.layer=this,this.events.emit("layerObjectAdded",e),this._octree!=null&&this._objectsAdded.push(e)}remove(e){this._objects.delete(e.id)&&(this.events.emit("layerObjectRemoved",e),e.layer=null,this._octree!=null&&(xt(this._objectsAdded,e)||this._octree.remove([e])))}addMany(e){for(const t of e)this._objects.set(t.id,t),t.layer=this;this.events.emit("layerObjectsAdded",e),this._octree!=null&&this._objectsAdded.push(...e)}removeMany(e){const t=new Array;for(const i of e)this._objects.delete(i.id)&&t.push(i);if(t.length!==0&&(this.events.emit("layerObjectsRemoved",t),t.forEach(i=>i.layer=null),this._octree!=null)){for(let i=0;i<t.length;)xt(this._objectsAdded,t[i])?(t[i]=t[t.length-1],t.length-=1):++i;this._octree.remove(t)}}sync(){this.updatePolicy!==Xe.SYNC&&this.stage.syncLayer(this.id)}notifyObjectBBChanged(e,t){this._octree==null||this._objectsAdded.includes(e)||this._octree.update(e,t)}getSpatialQueryAccelerator(){return this._octree==null&&this._objects.size>50?(this._octree=new Ji(e=>e.boundingVolumeWorldSpace.bounds),this._octree.add(this._objects.values())):this._octree!=null&&this._objectsAdded.length>0&&(this._octree.add(this._objectsAdded),this._objectsAdded.length=0),this._octree}invalidateSpatialQueryAccelerator(){this._octree=Ri(this._octree),this._objectsAdded.length=0}get test(){}},rs=class{constructor(e,t){this.vec3=e,this.id=t}};function Xt(e,t,i,r){return new rs(pt(e,t,i),r)}function ss(e,t,i){return 2*Math.atan(Math.sqrt(t*t+i*i)*Math.tan(.5*e)/t)}function ns(e,t,i){return 2*Math.atan(Math.sqrt(t*t+i*i)*Math.tan(.5*e)/i)}function os(e,t,i){return 2*Math.atan(t*Math.tan(.5*e)/Math.sqrt(t*t+i*i))}function as(e,t,i){return 2*Math.atan(i*Math.tan(.5*e)/Math.sqrt(t*t+i*i))}var Yt,S;(function(e){e[e.Default=0]="Default",e[e.Screenshot=1]="Screenshot",e[e.ObjectAndLayerID=2]="ObjectAndLayerID"})(Yt||(Yt={})),function(e){e[e.TOP=0]="TOP",e[e.RIGHT=1]="RIGHT",e[e.BOTTOM=2]="BOTTOM",e[e.LEFT=3]="LEFT"}(S||(S={}));var vt;let m=vt=class extends Ti{constructor(e){super(e),this._ray=Xi(),this._viewport=ut(0,0,1,1),this._padding=ut(0,0,0,0),this._fov=55/180*Math.PI,this._nearFar=zi(1,1e3),this._viewDirty=!0,this._viewMatrix=Z(),this._viewProjectionDirty=!0,this._viewProjectionMatrix=Z(),this._viewInverseTransposeMatrixDirty=!0,this._viewInverseTransposeMatrix=Z(),this._frustumDirty=!0,this._frustum=ki(),this._fullViewport=Oe(),this._pixelRatio=1,this.row=0,this.column=0,this._rows=1,this._columns=1,this._center=b(),this._up=b(),this.relativeElevation=0}get pixelRatio(){return this._pixelRatio}set pixelRatio(e){this._pixelRatio=e>0?e:1}get rows(){return this._rows}set rows(e){this._rows=Math.max(1,e)}get columns(){return this._columns}set columns(e){this._columns=Math.max(1,e)}get eye(){return this._ray.origin}set eye(e){this._compareAndSetView(e,this._ray.origin)}get center(){return this._center}set center(e){this._compareAndSetView(e,this._center,"_center")}get ray(){return ne(this._ray.direction,this.center,this.eye),this._ray}get up(){return this._up}set up(e){this._compareAndSetView(e,this._up,"_up")}get viewMatrix(){return this._ensureViewClean(),this._viewMatrix}set viewMatrix(e){ge(this._viewMatrix,e),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0,this._viewProjectionDirty=!0,this._frustumDirty=!0}get viewForward(){return this._ensureViewClean(),B(b(),-this._viewMatrix[2],-this._viewMatrix[6],-this._viewMatrix[10])}get viewUp(){return this._ensureViewClean(),B(b(),this._viewMatrix[1],this._viewMatrix[5],this._viewMatrix[9])}get viewRight(){return this._ensureViewClean(),B(b(),this._viewMatrix[0],this._viewMatrix[4],this._viewMatrix[8])}get nearFar(){return this._nearFar}get near(){return this._nearFar[0]}set near(e){this._nearFar[0]!==e&&(this._nearFar[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get far(){return this._nearFar[1]}set far(e){this._nearFar[1]!==e&&(this._nearFar[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_nearFar"))}get viewport(){return this._viewport}set viewport(e){this.x=e[0],this.y=e[1],this.width=e[2],this.height=e[3]}get screenViewport(){if(this.pixelRatio===1)return this._viewport;const e=Dt(Oe(),this._viewport,1/this.pixelRatio),t=this._get("screenViewport");return t&&At(e,t)?t:e}get screenPadding(){if(this.pixelRatio===1)return this._padding;const e=Dt(Oe(),this._padding,1/this.pixelRatio),t=this._get("screenPadding");return t&&At(e,t)?t:e}get x(){return this._viewport[0]}set x(e){e+=this._padding[S.LEFT],this._viewport[0]!==e&&(this._viewport[0]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get y(){return this._viewport[1]}set y(e){e+=this._padding[S.BOTTOM],this._viewport[1]!==e&&(this._viewport[1]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get width(){return this._viewport[2]}set width(e){this._viewport[2]!==e&&(this._viewport[2]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get height(){return this._viewport[3]}set height(e){this._viewport[3]!==e&&(this._viewport[3]=e,this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_viewport"))}get fullWidth(){return this._viewport[2]+this._padding[S.RIGHT]+this._padding[S.LEFT]}set fullWidth(e){this.width=e-(this._padding[S.RIGHT]+this._padding[S.LEFT])}get fullHeight(){return this._viewport[3]+this._padding[S.TOP]+this._padding[S.BOTTOM]}set fullHeight(e){this.height=e-(this._padding[S.TOP]+this._padding[S.BOTTOM])}get fullViewport(){return this._fullViewport[0]=this._viewport[0]-this._padding[S.LEFT],this._fullViewport[1]=this._viewport[1]-this._padding[S.BOTTOM],this._fullViewport[2]=this.fullWidth,this._fullViewport[3]=this.fullHeight,this._fullViewport}get _aspect(){return this.width/this.height}get padding(){return this._padding}set padding(e){tt(this._padding,e)||(this._viewport[0]+=e[S.LEFT]-this._padding[S.LEFT],this._viewport[1]+=e[S.BOTTOM]-this._padding[S.BOTTOM],this._viewport[2]-=e[S.RIGHT]+e[S.LEFT]-(this._padding[S.RIGHT]+this._padding[S.LEFT]),this._viewport[3]-=e[S.TOP]+e[S.BOTTOM]-(this._padding[S.TOP]+this._padding[S.BOTTOM]),Fe(this._padding,e),this._viewProjectionDirty=!0,this._frustumDirty=!0,this.notifyChange("_padding"),this.notifyChange("_viewport"))}get viewProjectionMatrix(){return this._viewProjectionDirty&&(Ge(this._viewProjectionMatrix,this.projectionMatrix,this.viewMatrix),this._viewProjectionDirty=!1),this._viewProjectionMatrix}get projectionMatrix(){return this._projectionMatrixInternal}get inverseProjectionMatrix(){return et(Z(),this.projectionMatrix)||this._get("inverseProjectionMatrix")||Z()}get fov(){return this._fov}set fov(e){this._fov=e,this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovX(){return os(this._fov,this.width,this.height)}set fovX(e){this._fov=ss(e,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get fovY(){return as(this._fov,this.width,this.height)}set fovY(e){this._fov=ns(e,this.width,this.height),this._viewProjectionDirty=!0,this._frustumDirty=!0}get distance(){return Ye(this.center,this.eye)}get frustum(){return this._recomputeFrustum(),this._frustum}get viewInverseTransposeMatrix(){return(this._viewInverseTransposeMatrixDirty||this._viewDirty)&&(et(this._viewInverseTransposeMatrix,this.viewMatrix),Ci(this._viewInverseTransposeMatrix,this._viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),this._viewInverseTransposeMatrix}depthNDCToWorld(e){const{near:t,far:i}=this;return 2*t*i/(i+t-e*(i-t))}get perRenderPixelRatio(){return Math.tan(this.fovX/2)/(this.width/2)}get perScreenPixelRatio(){return this.perRenderPixelRatio*this.pixelRatio}get aboveGround(){return this.relativeElevation!=null&&this.relativeElevation>=0}get _projectionMatrixInternal(){const e=this.width,t=this.height,i=this.near*Math.tan(this.fovY/2)*2,r=i*this._aspect,s=i/this.rows,n=r/this.columns,o=-r/2+this.column*n,a=o+n,c=-i/2+this.row*s,f=c+s,_=Pi(Z(),o*(1+2*this._padding[S.LEFT]/e),a*(1+2*this._padding[S.RIGHT]/e),c*(1+2*this._padding[S.BOTTOM]/t),f*(1+2*this._padding[S.TOP]/t),this.near,this.far),w=this._get("projectionMatrix");return w&&Li(w,_)?w:_}copyFrom(e){q(this._ray.origin,e.eye),this.center=e.center,this.up=e.up,Fe(this._viewport,e.viewport),this.notifyChange("_viewport"),Fe(this._padding,e.padding),this.notifyChange("_padding"),ti(this._nearFar,e.nearFar),this.notifyChange("_nearFar"),this._fov=e.fov,this.row=e.row,this.column=e.column,this.rows=e.rows,this.columns=e.columns,this.relativeElevation=e.relativeElevation;const t=e;return this._viewDirty=t._viewDirty,this._viewDirty||(ge(this._viewMatrix,e.viewMatrix),this.notifyChange("_viewMatrix")),this._viewProjectionDirty=!0,this._frustumDirty=t._frustumDirty,this._frustumDirty||(Gi(this._frustum,e.frustum),this._frustumDirty=!1),t._viewInverseTransposeMatrixDirty?this._viewInverseTransposeMatrixDirty=!0:(ge(this._viewInverseTransposeMatrix,e.viewInverseTransposeMatrix),this._viewInverseTransposeMatrixDirty=!1),Fe(this._fullViewport,e.fullViewport),this.pixelRatio=e.pixelRatio,this}copyViewFrom(e){this.eye=e.eye,this.center=e.center,this.up=e.up,this.fov=e.fov}clone(){return new vt().copyFrom(this)}equals(e){return be(this.eye,e.eye)&&be(this.center,e.center)&&be(this.up,e.up)&&tt(this._viewport,e.viewport)&&tt(this._padding,e.padding)&&ji(this.nearFar,e.nearFar)&&this._fov===e.fov&&this.pixelRatio===e.pixelRatio&&this.relativeElevation===e.relativeElevation&&this.row===e.row&&this.column===e.column&&this.rows===e.rows&&this.columns===e.columns}almostEquals(e){const t=Math.max(1,1/this.pixelRatio,1/e.pixelRatio);if(Math.abs(e.fov-this._fov)>=.001||Ct(e.screenPadding,this.screenPadding)>=t||Ct(this.screenViewport,e.screenViewport)>=t||this.row!==e.row||this.column!==e.column||this.rows!==e.rows||this.columns!==e.columns)return!1;bt(z,e.eye,e.center),bt(st,this.eye,this.center);const i=He(z,st),r=Et(z),s=Et(st),n=5e-4;return i*i>=(1-1e-10)*r*s&&Ni(e.eye,this.eye)<Math.max(r,s)*n*n}computeRenderPixelSizeAt(e){return this.computeRenderPixelSizeAtDist(this._viewDirectionDistance(e))}computeRenderPixelSizeAtDist(e){return e*this.perRenderPixelRatio}computeScreenPixelSizeAt(e){return this.computeScreenPixelSizeAtDist(this._viewDirectionDistance(e))}_viewDirectionDistance(e){return Math.abs(Zi(this.viewForward,ne(z,e,this.eye)))}computeScreenPixelSizeAtDist(e){return e*this.perScreenPixelRatio}computeDistanceFromRadius(e,t){return e/Math.tan(Math.min(this.fovX,this.fovY)/(2*(t||1)))}getScreenCenter(e=wi()){return e[0]=(this.padding[S.LEFT]+this.width/2)/this.pixelRatio,e[1]=(this.padding[S.TOP]+this.height/2)/this.pixelRatio,e}getRenderCenter(e,t=.5,i=.5){return e[0]=this.padding[S.LEFT]+this.width*t,e[1]=this.padding[S.BOTTOM]+this.height*i,e[2]=.5,e}setGLViewport(e){const t=this.viewport,i=this.padding;e.setViewport(t[0]-i[3],t[1]-i[2],t[2]+i[1]+i[3],t[3]+i[0]+i[2])}applyProjection(e,t){e!==g&&q(g,e),g[3]=1,je(g,g,this.projectionMatrix);const i=Math.abs(g[3]);_e(g,g,1/i);const r=this.fullViewport;t[0]=Ie(0,r[0]+r[2],.5+.5*g[0]),t[1]=Ie(0,r[1]+r[3],.5+.5*g[1]),t[2]=.5*(g[2]+1),t[3]=i}unapplyProjection(e,t){const i=this.fullViewport;g[0]=(e[0]/(i[0]+i[2])*2-1)*e[3],g[1]=(e[1]/(i[1]+i[3])*2-1)*e[3],g[2]=(2*e[2]-1)*e[3],g[3]=e[3],this.inverseProjectionMatrix!=null&&(je(g,g,this.inverseProjectionMatrix),t[0]=g[0],t[1]=g[1],t[2]=g[2])}projectToScreen(e,t){return this.projectToRenderScreen(e,nt),this.renderToScreen(nt,t),t}projectToRenderScreen(e,t){if(g[0]=e[0],g[1]=e[1],g[2]=e[2],g[3]=1,je(g,g,this.viewProjectionMatrix),g[3]===0)return null;const i=g;_e(i,i,1/Math.abs(g[3]));const r=this.fullViewport,s=Ie(0,r[0]+r[2],.5+.5*i[0]),n=Ie(0,r[1]+r[3],.5+.5*i[1]);return"x"in t?(t.x=s,t.y=n):(t[0]=s,t[1]=n,t.length>2&&(t[2]=.5*(i[2]+1))),t}unprojectFromScreen(e,t){return this.unprojectFromRenderScreen(this.screenToRender(e,nt),t)}unprojectFromRenderScreen(e,t){if(Ge(Be,this.projectionMatrix,this.viewMatrix),!et(Be,Be))return null;const i=this.fullViewport;return g[0]=2*(e[0]-i[0])/i[2]-1,g[1]=2*(e[1]-i[1])/i[3]-1,g[2]=2*e[2]-1,g[3]=1,je(g,g,Be),g[3]===0?null:(t[0]=g[0]/g[3],t[1]=g[1]/g[3],t[2]=g[2]/g[3],t)}constrainWindowSize(e,t,i,r){const s=e*this.pixelRatio,n=t*this.pixelRatio,o=Math.max(s-i/2,0),a=Math.max(this.fullHeight-n-r/2,0),c=-Math.min(s-i/2,0),f=-Math.min(this.fullHeight-n-r/2,0),_=i-c- -Math.min(this.fullWidth-s-i/2,0),w=r-f- -Math.min(n-r/2,0);return[Math.round(o),Math.round(a),Math.round(_),Math.round(w)]}computeUp(e){e===qi.Global?this._computeUpGlobal():this._computeUpLocal()}screenToRender(e,t){const i=e[0]*this.pixelRatio,r=this.fullHeight-e[1]*this.pixelRatio;return t[0]=i,t[1]=r,t}renderToScreen(e,t){const i=e[0]/this.pixelRatio,r=(this.fullHeight-e[1])/this.pixelRatio;t[0]=i,t[1]=r}_computeUpGlobal(){ne(z,this.center,this.eye);const e=dt(this.center);e<1?(B(this._up,0,0,1),this._markViewDirty(),this.notifyChange("_up")):Math.abs(He(z,this.center))>.9999*dt(z)*e||(Ot(this._up,z,this.center),Ot(this._up,this._up,z),Rt(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_computeUpLocal(){Ui(z,this.eye,this.center),Math.abs(z[2])<=.9999&&(_e(z,z,z[2]),B(this._up,-z[0],-z[1],1-z[2]),Rt(this._up,this._up),this.notifyChange("_up"),this._markViewDirty())}_compareAndSetView(e,t,i=""){typeof e[0]=="number"&&isFinite(e[0])&&typeof e[1]=="number"&&isFinite(e[1])&&typeof e[2]=="number"&&isFinite(e[2])?be(e,t)||(q(t,e),this._markViewDirty(),i.length&&this.notifyChange(i)):yt.getLogger("esri.views.3d.webgl-engine.lib.RenderCamera").warn("RenderCamera vector contains invalid number, ignoring value")}_markViewDirty(){this._viewDirty=!0,this._frustumDirty=!0,this._viewProjectionDirty=!0}_recomputeFrustum(){this._frustumDirty&&(Hi(this.viewMatrix,this.projectionMatrix,this._frustum),this._frustumDirty=!1)}_ensureViewClean(){this._viewDirty&&(Mi(this._viewMatrix,this.eye,this.center,this.up),this.notifyChange("_viewMatrix"),this._viewDirty=!1,this._viewInverseTransposeMatrixDirty=!0)}};l([v()],m.prototype,"_viewport",void 0),l([v()],m.prototype,"_padding",void 0),l([v()],m.prototype,"_fov",void 0),l([v()],m.prototype,"_nearFar",void 0),l([v()],m.prototype,"_viewDirty",void 0),l([v()],m.prototype,"_viewMatrix",void 0),l([v()],m.prototype,"_pixelRatio",void 0),l([v()],m.prototype,"pixelRatio",null),l([v()],m.prototype,"row",void 0),l([v()],m.prototype,"column",void 0),l([v()],m.prototype,"_rows",void 0),l([v()],m.prototype,"rows",null),l([v()],m.prototype,"_columns",void 0),l([v()],m.prototype,"columns",null),l([v()],m.prototype,"eye",null),l([v()],m.prototype,"center",null),l([v()],m.prototype,"_center",void 0),l([v()],m.prototype,"up",null),l([v()],m.prototype,"_up",void 0),l([v()],m.prototype,"viewMatrix",null),l([v({readOnly:!0})],m.prototype,"viewForward",null),l([v({readOnly:!0})],m.prototype,"viewUp",null),l([v({readOnly:!0})],m.prototype,"viewRight",null),l([v({readOnly:!0})],m.prototype,"nearFar",null),l([v()],m.prototype,"near",null),l([v()],m.prototype,"far",null),l([v()],m.prototype,"viewport",null),l([v({readOnly:!0})],m.prototype,"screenViewport",null),l([v({readOnly:!0})],m.prototype,"screenPadding",null),l([v()],m.prototype,"x",null),l([v()],m.prototype,"y",null),l([v()],m.prototype,"width",null),l([v()],m.prototype,"height",null),l([v()],m.prototype,"fullWidth",null),l([v()],m.prototype,"fullHeight",null),l([v({readOnly:!0})],m.prototype,"_aspect",null),l([v()],m.prototype,"padding",null),l([v({readOnly:!0})],m.prototype,"projectionMatrix",null),l([v({readOnly:!0})],m.prototype,"inverseProjectionMatrix",null),l([v()],m.prototype,"fov",null),l([v()],m.prototype,"fovX",null),l([v()],m.prototype,"fovY",null),l([v()],m.prototype,"viewInverseTransposeMatrix",null),l([v({readOnly:!0})],m.prototype,"_projectionMatrixInternal",null),l([v()],m.prototype,"relativeElevation",void 0),m=vt=l([xi("esri.views.3d.webgl.RenderCamera")],m);const On=m,g=Oe(),Be=Z(),z=b(),st=b(),nt=pe();var de,Ae;(function(e){e[e.Draped=0]="Draped",e[e.Screen=1]="Screen",e[e.World=2]="World",e[e.COUNT=3]="COUNT"})(de||(de={})),function(e){e[e.Center=0]="Center",e[e.Tip=1]="Tip",e[e.COUNT=2]="COUNT"}(Ae||(Ae={}));let J=class extends ii{constructor(){super(...arguments),this.space=de.Screen,this.anchor=Ae.Center,this.occluder=!1,this.writeDepth=!1,this.hideOnShortSegments=!1,this.hasCap=!1,this.hasTip=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.hasOccludees=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.textureCoordinateType=ri.None,this.emissionSource=si.None,this.discardInvisibleFragments=!0,this.occlusionPass=!1,this.hasVvInstancing=!0,this.hasSliceTranslatedView=!0,this.objectAndLayerIdColorInstanced=!1,this.overlayEnabled=!1,this.snowCover=!1}get draped(){return this.space===de.Draped}};l([T({count:de.COUNT})],J.prototype,"space",void 0),l([T({count:Ae.COUNT})],J.prototype,"anchor",void 0),l([T()],J.prototype,"occluder",void 0),l([T()],J.prototype,"writeDepth",void 0),l([T()],J.prototype,"hideOnShortSegments",void 0),l([T()],J.prototype,"hasCap",void 0),l([T()],J.prototype,"hasTip",void 0),l([T()],J.prototype,"vvSize",void 0),l([T()],J.prototype,"vvColor",void 0),l([T()],J.prototype,"vvOpacity",void 0),l([T()],J.prototype,"hasOccludees",void 0),l([T()],J.prototype,"terrainDepthTest",void 0),l([T()],J.prototype,"cullAboveTerrain",void 0);const Zt=8;function ls(e,t){const{vertex:i,attributes:r}=e;i.uniforms.add(new re("intrinsicWidth",s=>s.width)),t.vvSize?(r.add(p.SIZEFEATUREATTRIBUTE,"float"),i.uniforms.add(new we("vvSizeMinSize",s=>s.vvSize.minSize),new we("vvSizeMaxSize",s=>s.vvSize.maxSize),new we("vvSizeOffset",s=>s.vvSize.offset),new we("vvSizeFactor",s=>s.vvSize.factor),new we("vvSizeFallback",s=>s.vvSize.fallback)),i.code.add(h`float getSize() {
if (isnan(sizeFeatureAttribute)) {
return vvSizeFallback.x;
}
return intrinsicWidth * clamp(vvSizeOffset + sizeFeatureAttribute * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize).x;
}`)):(r.add(p.SIZE,"float"),i.code.add(h`float getSize(){
return intrinsicWidth * size;
}`)),t.vvOpacity?(r.add(p.OPACITYFEATUREATTRIBUTE,"float"),i.constants.add("vvOpacityNumber","int",8),i.uniforms.add(new Lt("vvOpacityValues",s=>s.vvOpacity.values,Zt),new Lt("vvOpacityOpacities",s=>s.vvOpacity.opacityValues,Zt),new re("vvOpacityFallback",s=>s.vvOpacity.fallback)),i.code.add(h`float interpolateOpacity(float value){
if (isnan(value)) {
return vvOpacityFallback;
}
if (value <= vvOpacityValues[0]) {
return vvOpacityOpacities[0];
}
for (int i = 1; i < vvOpacityNumber; ++i) {
if (vvOpacityValues[i] >= value) {
float f = (value - vvOpacityValues[i-1]) / (vvOpacityValues[i] - vvOpacityValues[i-1]);
return mix(vvOpacityOpacities[i-1], vvOpacityOpacities[i], f);
}
}
return vvOpacityOpacities[vvOpacityNumber - 1];
}
vec4 applyOpacity( vec4 color ){
return vec4(color.xyz, interpolateOpacity(opacityFeatureAttribute));
}`)):i.code.add(h`vec4 applyOpacity( vec4 color ){
return color;
}`),t.vvColor?(e.include(pr,t),r.add(p.COLORFEATUREATTRIBUTE,"float"),i.code.add(h`vec4 getColor(){
return applyOpacity(interpolateVVColor(colorFeatureAttribute));
}`)):(r.add(p.COLOR,"vec4"),i.code.add(h`vec4 getColor(){
return applyOpacity(color);
}`))}function hi(e){return e.pattern.map(t=>Math.round(t*e.pixelRatio))}function cs(e){if(e==null)return 1;const t=hi(e);return Math.floor(t.reduce((i,r)=>i+r))}function hs(e){return hi(e).reduce((t,i)=>Math.max(t,i))}function ps(e){return e==null?Bi:e.length===4?e:Wi(ds,e[0],e[1],e[2],1)}const ds=Oe();function us(e,t){if(!t.stippleEnabled)return void e.fragment.code.add(h`float getStippleAlpha() { return 1.0; }
void discardByStippleAlpha(float stippleAlpha, float threshold) {}
vec4 blendStipple(vec4 color, float stippleAlpha) { return color; }`);const i=!(t.draped&&t.stipplePreferContinuous),{vertex:r,fragment:s}=e;s.include(kr),t.draped||(dr(r,t),r.uniforms.add(new wt("worldToScreenPerDistanceRatio",({camera:n})=>1/n.perScreenPixelRatio)).code.add(h`float computeWorldToScreenRatio(vec3 segmentCenter) {
float segmentDistanceToCamera = length(segmentCenter - cameraPosition);
return worldToScreenPerDistanceRatio / segmentDistanceToCamera;
}`)),e.varyings.add("vStippleDistance","float"),e.varyings.add("vStippleDistanceLimits","vec2"),e.varyings.add("vStipplePatternStretch","float"),r.code.add(h`
    float discretizeWorldToScreenRatio(float worldToScreenRatio) {
      float step = ${h.float(ms)};

      float discreteWorldToScreenRatio = log(worldToScreenRatio);
      discreteWorldToScreenRatio = ceil(discreteWorldToScreenRatio / step) * step;
      discreteWorldToScreenRatio = exp(discreteWorldToScreenRatio);
      return discreteWorldToScreenRatio;
    }
  `),r.code.add(h`vec2 computeStippleDistanceLimits(float startPseudoScreen, float segmentLengthPseudoScreen, float segmentLengthScreen, float patternLength) {`),r.code.add(h`
    if (segmentLengthPseudoScreen >= ${i?"patternLength":"1e4"}) {
  `),Tt(r),r.code.add(h`float repetitions = segmentLengthScreen / (patternLength * pixelRatio);
float flooredRepetitions = max(1.0, floor(repetitions + 0.5));
float segmentLengthScreenRounded = flooredRepetitions * patternLength;
float stretch = repetitions / flooredRepetitions;
vStipplePatternStretch = max(0.75, stretch);
return vec2(0.0, segmentLengthScreenRounded);
}
return vec2(startPseudoScreen, startPseudoScreen + segmentLengthPseudoScreen);
}`),s.uniforms.add(new ur("stipplePatternTexture",n=>n.stippleTexture),new re("stipplePatternSDFNormalizer",n=>fs(n.stipplePattern)),new re("stipplePatternPixelSizeInv",n=>1/pi(n))),t.stippleOffColorEnabled&&s.uniforms.add(new mt("stippleOffColor",n=>ps(n.stippleOffColor))),s.code.add(h`float getStippleSDF(out bool isClamped) {
float stippleDistanceClamped = clamp(vStippleDistance, vStippleDistanceLimits.x, vStippleDistanceLimits.y);
vec2 aaCorrectedLimits = vStippleDistanceLimits + vec2(1.0, -1.0) / gl_FragCoord.w;
isClamped = vStippleDistance < aaCorrectedLimits.x || vStippleDistance > aaCorrectedLimits.y;
float u = stippleDistanceClamped * gl_FragCoord.w * stipplePatternPixelSizeInv * vLineSizeInv;
u = fract(u);
float encodedSDF = rgbaTofloat(texture(stipplePatternTexture, vec2(u, 0.5)));
float sdf = (encodedSDF * 2.0 - 1.0) * stipplePatternSDFNormalizer;
return (sdf - 0.5) * vStipplePatternStretch + 0.5;
}
float getStippleSDF() {
bool ignored;
return getStippleSDF(ignored);
}
float getStippleAlpha() {
bool isClamped;
float stippleSDF = getStippleSDF(isClamped);
float antiAliasedResult = clamp(stippleSDF * vLineWidth + 0.5, 0.0, 1.0);
return isClamped ? floor(antiAliasedResult + 0.5) : antiAliasedResult;
}`),s.code.add(h`
    void discardByStippleAlpha(float stippleAlpha, float threshold) {
     ${Xr(!t.stippleOffColorEnabled,"if (stippleAlpha < threshold) { discard; }")}
    }

    vec4 blendStipple(vec4 color, float stippleAlpha) {
      return ${t.stippleOffColorEnabled?"mix(color, stippleOffColor, stippleAlpha)":"vec4(color.rgb, color.a * stippleAlpha)"};
    }
  `)}function fs(e){return e?(Math.floor(.5*(hs(e)-1))+.5)/e.pixelRatio:1}function pi(e){const t=e.stipplePattern;return t?cs(e.stipplePattern)/t.pixelRatio:1}const ms=.4,di=64,vs=di/2,gs=vs/5,_s=di/gs,Rn=.25;function ys(e,t){const i=e.vertex;Tt(i),i.uniforms.get("markerScale")==null&&i.constants.add("markerScale","float",1),i.constants.add("markerSizePerLineWidth","float",_s).code.add(h`float getLineWidth() {
return max(getSize(), 1.0) * pixelRatio;
}
float getScreenMarkerSize() {
return markerSizePerLineWidth * markerScale * getLineWidth();
}`),t.space===de.World&&(i.constants.add("maxSegmentLengthFraction","float",.45),i.uniforms.add(new wt("perRenderPixelRatio",r=>r.camera.perRenderPixelRatio)),i.code.add(h`bool areWorldMarkersHidden(vec4 pos, vec4 other) {
vec3 midPoint = mix(pos.xyz, other.xyz, 0.5);
float distanceToCamera = length(midPoint);
float screenToWorldRatio = perRenderPixelRatio * distanceToCamera * 0.5;
float worldMarkerSize = getScreenMarkerSize() * screenToWorldRatio;
float segmentLen = length(pos.xyz - other.xyz);
return worldMarkerSize > maxSegmentLengthFraction * segmentLen;
}
float getWorldMarkerSize(vec4 pos) {
float distanceToCamera = length(pos.xyz);
float screenToWorldRatio = perRenderPixelRatio * distanceToCamera * 0.5;
return getScreenMarkerSize() * screenToWorldRatio;
}`))}var ue;(function(e){e[e.BUTT=0]="BUTT",e[e.SQUARE=1]="SQUARE",e[e.ROUND=2]="ROUND",e[e.COUNT=3]="COUNT"})(ue||(ue={}));let P=class extends ii{constructor(){super(...arguments),this.capType=ue.BUTT,this.hasPolygonOffset=!1,this.writeDepth=!1,this.draped=!1,this.stippleEnabled=!1,this.stippleOffColorEnabled=!1,this.stipplePreferContinuous=!0,this.roundJoins=!1,this.applyMarkerOffset=!1,this.vvSize=!1,this.vvColor=!1,this.vvOpacity=!1,this.falloffEnabled=!1,this.innerColorEnabled=!1,this.hasOccludees=!1,this.occluder=!1,this.terrainDepthTest=!1,this.cullAboveTerrain=!1,this.wireframe=!1,this.discardInvisibleFragments=!1,this.objectAndLayerIdColorInstanced=!1,this.textureCoordinateType=ri.None,this.emissionSource=si.None,this.occlusionPass=!1,this.hasVvInstancing=!0,this.hasSliceTranslatedView=!0,this.overlayEnabled=!1,this.snowCover=!1}};l([T({count:ue.COUNT})],P.prototype,"capType",void 0),l([T()],P.prototype,"hasPolygonOffset",void 0),l([T()],P.prototype,"writeDepth",void 0),l([T()],P.prototype,"draped",void 0),l([T()],P.prototype,"stippleEnabled",void 0),l([T()],P.prototype,"stippleOffColorEnabled",void 0),l([T()],P.prototype,"stipplePreferContinuous",void 0),l([T()],P.prototype,"roundJoins",void 0),l([T()],P.prototype,"applyMarkerOffset",void 0),l([T()],P.prototype,"vvSize",void 0),l([T()],P.prototype,"vvColor",void 0),l([T()],P.prototype,"vvOpacity",void 0),l([T()],P.prototype,"falloffEnabled",void 0),l([T()],P.prototype,"innerColorEnabled",void 0),l([T()],P.prototype,"hasOccludees",void 0),l([T()],P.prototype,"occluder",void 0),l([T()],P.prototype,"terrainDepthTest",void 0),l([T()],P.prototype,"cullAboveTerrain",void 0),l([T()],P.prototype,"wireframe",void 0),l([T()],P.prototype,"discardInvisibleFragments",void 0),l([T()],P.prototype,"objectAndLayerIdColorInstanced",void 0);const Ce=1;function ui(e){const t=new Yr,{attributes:i,varyings:r,vertex:s,fragment:n}=t,{applyMarkerOffset:o,draped:a,output:c,capType:f,stippleEnabled:_,falloffEnabled:w,roundJoins:u,wireframe:E,innerColorEnabled:x}=e;n.include(Ki),t.include(ls,e),t.include(us,e),t.include(er,e),t.include(tr,e);const A=o&&!a;A&&(s.uniforms.add(new re("markerScale",d=>d.markerScale)),t.include(ys,{space:de.World})),ir(s,e),s.uniforms.add(new rr("inverseProjectionMatrix",d=>d.camera.inverseProjectionMatrix),new sr("nearFar",d=>d.camera.nearFar),new re("miterLimit",d=>d.join!=="miter"?0:d.miterLimit),new nr("viewport",d=>d.camera.fullViewport)),s.constants.add("LARGE_HALF_FLOAT","float",65500),i.add(p.POSITION,"vec3"),i.add(p.PREVIOUSDELTA,"vec4"),i.add(p.NEXTDELTA,"vec4"),i.add(p.LINEPARAMETERS,"vec2"),i.add(p.U0,"float"),r.add("vColor","vec4"),r.add("vpos","vec3",{invariant:!0}),r.add("vLineDistance","float"),r.add("vLineWidth","float");const O=_;O&&r.add("vLineSizeInv","float");const D=f===ue.ROUND,G=_&&D,y=w||G;y&&r.add("vLineDistanceNorm","float"),D&&(r.add("vSegmentSDF","float"),r.add("vReverseSegmentSDF","float")),s.code.add(h`vec2 perpendicular(vec2 v) {
return vec2(v.y, -v.x);
}
float interp(float ncp, vec4 a, vec4 b) {
return (-ncp - a.z) / (b.z - a.z);
}
vec2 rotate(vec2 v, float a) {
float s = sin(a);
float c = cos(a);
mat2 m = mat2(c, -s, s, c);
return m * v;
}`),s.code.add(h`vec4 projectAndScale(vec4 pos) {
vec4 posNdc = proj * pos;
posNdc.xy *= viewport.zw / posNdc.w;
return posNdc;
}`),s.code.add(h`void clipAndTransform(inout vec4 pos, inout vec4 prev, inout vec4 next, in bool isStartVertex) {
float vnp = nearFar[0] * 0.99;
if(pos.z > -nearFar[0]) {
if (!isStartVertex) {
if(prev.z < -nearFar[0]) {
pos = mix(prev, pos, interp(vnp, prev, pos));
next = pos;
} else {
pos = vec4(0.0, 0.0, 0.0, 1.0);
}
} else {
if(next.z < -nearFar[0]) {
pos = mix(pos, next, interp(vnp, pos, next));
prev = pos;
} else {
pos = vec4(0.0, 0.0, 0.0, 1.0);
}
}
} else {
if (prev.z > -nearFar[0]) {
prev = mix(pos, prev, interp(vnp, pos, prev));
}
if (next.z > -nearFar[0]) {
next = mix(next, pos, interp(vnp, next, pos));
}
}
forwardViewPosDepth(pos.xyz);
pos = projectAndScale(pos);
next = projectAndScale(next);
prev = projectAndScale(prev);
}`),Tt(s),s.constants.add("aaWidth","float",_?0:1).main.add(h`
    // unpack values from vertex type
    bool isStartVertex = abs(abs(lineParameters.y)-3.0) == 1.0;
    vec3 prevPosition = position + previousDelta.xyz * previousDelta.w;
    vec3 nextPosition = position + nextDelta.xyz * nextDelta.w;

    float coverage = 1.0;

    // Check for special value of lineParameters.y which is used by the Renderer when graphics are removed before the
    // VBO is recompacted. If this is the case, then we just project outside of clip space.
    if (lineParameters.y == 0.0) {
      // Project out of clip space
      gl_Position = vec4(1e038, 1e038, 1e038, 1.0);
    }
    else {
      bool isJoin = abs(lineParameters.y) < 3.0;
      float lineSize = getSize();

      if (lineSize < 1.0) {
        coverage = lineSize; // convert sub-pixel coverage to alpha
        lineSize = 1.0;
      }
      lineSize += aaWidth;

      float lineWidth = lineSize * pixelRatio;
      vLineWidth = lineWidth;
      ${O?h`vLineSizeInv = 1.0 / lineSize;`:""}

      vec4 pos  = view * vec4(position, 1.0);
      vec4 prev = view * vec4(prevPosition, 1.0);
      vec4 next = view * vec4(nextPosition, 1.0);
  `),A&&s.main.add(h`vec4 other = isStartVertex ? next : prev;
bool markersHidden = areWorldMarkersHidden(pos, other);
if(!isJoin && !markersHidden) {
pos.xyz += normalize(other.xyz - pos.xyz) * getWorldMarkerSize(pos) * 0.5;
}`),s.main.add(h`clipAndTransform(pos, prev, next, isStartVertex);
vec2 left = (pos.xy - prev.xy);
vec2 right = (next.xy - pos.xy);
float leftLen = length(left);
float rightLen = length(right);`),(_||D)&&s.main.add(h`
      float isEndVertex = float(!isStartVertex);
      vec2 segmentOrigin = mix(pos.xy, prev.xy, isEndVertex);
      vec2 segment = mix(right, left, isEndVertex);
      ${D?h`vec2 segmentEnd = mix(next.xy, pos.xy, isEndVertex);`:""}
    `),s.main.add(h`left = (leftLen > 0.001) ? left/leftLen : vec2(0.0, 0.0);
right = (rightLen > 0.001) ? right/rightLen : vec2(0.0, 0.0);
vec2 capDisplacementDir = vec2(0, 0);
vec2 joinDisplacementDir = vec2(0, 0);
float displacementLen = lineWidth;
if (isJoin) {
bool isOutside = (left.x * right.y - left.y * right.x) * lineParameters.y > 0.0;
joinDisplacementDir = normalize(left + right);
joinDisplacementDir = perpendicular(joinDisplacementDir);
if (leftLen > 0.001 && rightLen > 0.001) {
float nDotSeg = dot(joinDisplacementDir, left);
displacementLen /= length(nDotSeg * left - joinDisplacementDir);
if (!isOutside) {
displacementLen = min(displacementLen, min(leftLen, rightLen)/abs(nDotSeg));
}
}
float subdivisionFactor = lineParameters.x;
if (isOutside && (displacementLen > miterLimit * lineWidth)) {`),u?s.main.add(h`
        vec2 startDir = leftLen < 0.001 ? right : left;
        startDir = perpendicular(startDir);

        vec2 endDir = rightLen < 0.001 ? left : right;
        endDir = perpendicular(endDir);

        float factor = ${_?h`min(1.0, subdivisionFactor * ${h.float((Ce+2)/(Ce+1))})`:h`subdivisionFactor`};

        float rotationAngle = acos(clamp(dot(startDir, endDir), -1.0, 1.0));
        joinDisplacementDir = rotate(startDir, -sign(lineParameters.y) * factor * rotationAngle);
      `):s.main.add(h`if (leftLen < 0.001) {
joinDisplacementDir = right;
}
else if (rightLen < 0.001) {
joinDisplacementDir = left;
}
else {
joinDisplacementDir = (isStartVertex || subdivisionFactor > 0.0) ? right : left;
}
joinDisplacementDir = perpendicular(joinDisplacementDir);`);const M=f!==ue.BUTT;return s.main.add(h`
        displacementLen = lineWidth;
      }
    } else {
      // CAP handling ---------------------------------------------------
      joinDisplacementDir = isStartVertex ? right : left;
      joinDisplacementDir = perpendicular(joinDisplacementDir);

      ${M?h`capDisplacementDir = isStartVertex ? -right : left;`:""}
    }
  `),s.main.add(h`
    // Displacement (in pixels) caused by join/or cap
    vec2 dpos = joinDisplacementDir * sign(lineParameters.y) * displacementLen + capDisplacementDir * displacementLen;
    float lineDistNorm = sign(lineParameters.y) * pos.w;

    vLineDistance =  lineWidth * lineDistNorm;
    ${y?h`vLineDistanceNorm = lineDistNorm;`:""}

    pos.xy += dpos;
  `),D&&s.main.add(h`vec2 segmentDir = normalize(segment);
vSegmentSDF = (isJoin && isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentOrigin, segmentDir) * pos.w) ;
vReverseSegmentSDF = (isJoin && !isStartVertex) ? LARGE_HALF_FLOAT : (dot(pos.xy - segmentEnd, -segmentDir) * pos.w);`),_&&(a?s.uniforms.add(new wt("worldToScreenRatio",d=>1/d.screenToPCSRatio)):s.main.add(h`vec3 segmentCenter = mix((nextPosition + position) * 0.5, (position + prevPosition) * 0.5, isEndVertex);
float worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),s.main.add(h`float segmentLengthScreenDouble = length(segment);
float segmentLengthScreen = segmentLengthScreenDouble * 0.5;
float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);
float segmentLengthRender = length(mix(nextPosition - position, position - prevPosition, isEndVertex));
vStipplePatternStretch = worldToScreenRatio / discreteWorldToScreenRatio;`),a?s.main.add(h`float segmentLengthPseudoScreen = segmentLengthScreen / pixelRatio * discreteWorldToScreenRatio / worldToScreenRatio;
float startPseudoScreen = u0 * discreteWorldToScreenRatio - mix(0.0, segmentLengthPseudoScreen, isEndVertex);`):s.main.add(h`float startPseudoScreen = mix(u0, u0 - segmentLengthRender, isEndVertex) * discreteWorldToScreenRatio;
float segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),s.uniforms.add(new re("stipplePatternPixelSize",d=>pi(d))),s.main.add(h`float patternLength = lineSize * stipplePatternPixelSize;
vStippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, segmentLengthScreen, patternLength);
vStippleDistance = mix(vStippleDistanceLimits.x, vStippleDistanceLimits.y, isEndVertex);
if (segmentLengthScreenDouble >= 0.001) {
vec2 stippleDisplacement = pos.xy - segmentOrigin;
float stippleDisplacementFactor = dot(segment, stippleDisplacement) / (segmentLengthScreenDouble * segmentLengthScreenDouble);
vStippleDistance += (stippleDisplacementFactor - isEndVertex) * (vStippleDistanceLimits.y - vStippleDistanceLimits.x);
}
vStippleDistanceLimits *= pos.w;
vStippleDistance *= pos.w;
vStippleDistanceLimits = isJoin ?
vStippleDistanceLimits :
isStartVertex ?
vec2(-1e34, vStippleDistanceLimits.y) :
vec2(vStippleDistanceLimits.x, 1e34);`)),s.main.add(h`
      // Convert back into NDC
      pos.xy = (pos.xy / viewport.zw) * pos.w;

      vColor = getColor();
      vColor.a *= coverage;

      ${E&&!a?"pos.z -= 0.001 * pos.w;":""}

      // transform final position to camera space for slicing
      vpos = (inverseProjectionMatrix * pos).xyz;
      gl_Position = pos;
      forwardObjectAndLayerIdColor();
    }`),t.fragment.include(or,e),t.include(ar,e),n.include(lr),n.main.add(h`discardBySlice(vpos);
discardByTerrainDepth();`),E?n.main.add(h`vec4 finalColor = vec4(1.0, 0.0, 1.0, 1.0);`):(D&&n.main.add(h`
        float sdf = min(vSegmentSDF, vReverseSegmentSDF);
        vec2 fragmentPosition = vec2(
          min(sdf, 0.0),
          vLineDistance
        ) * gl_FragCoord.w;

        float fragmentRadius = length(fragmentPosition);
        float fragmentCapSDF = (fragmentRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
        float capCoverage = clamp(0.5 - fragmentCapSDF, 0.0, 1.0);

        if (capCoverage < ${h.float(Re)}) {
          discard;
        }
      `),G?n.main.add(h`
      vec2 stipplePosition = vec2(
        min(getStippleSDF() * 2.0 - 1.0, 0.0),
        vLineDistanceNorm * gl_FragCoord.w
      );
      float stippleRadius = length(stipplePosition * vLineWidth);
      float stippleCapSDF = (stippleRadius - vLineWidth) * 0.5; // Divide by 2 to transform from double pixel scale
      float stippleCoverage = clamp(0.5 - stippleCapSDF, 0.0, 1.0);
      float stippleAlpha = step(${h.float(Re)}, stippleCoverage);
      `):n.main.add(h`float stippleAlpha = getStippleAlpha();`),c!==ai.ObjectAndLayerIdColor&&n.main.add(h`discardByStippleAlpha(stippleAlpha, ${h.float(Re)});`),n.uniforms.add(new mt("intrinsicColor",d=>d.color)),n.main.add(h`vec4 color = intrinsicColor * vColor;`),x&&(n.uniforms.add(new mt("innerColor",d=>d.innerColor??d.color),new re("innerWidth",(d,N)=>d.innerWidth*N.camera.pixelRatio)),n.main.add(h`float distToInner = abs(vLineDistance * gl_FragCoord.w) - innerWidth;
float innerAA = clamp(0.5 - distToInner, 0.0, 1.0);
float innerAlpha = innerColor.a + color.a * (1.0 - innerColor.a);
color = mix(color, vec4(innerColor.rgb, innerAlpha), innerAA);`)),n.main.add(h`vec4 finalColor = blendStipple(color, stippleAlpha);`),w&&(n.uniforms.add(new re("falloff",d=>d.falloff)),n.main.add(h`finalColor.a *= pow(max(0.0, 1.0 - abs(vLineDistanceNorm * gl_FragCoord.w)), falloff);`)),_||n.main.add(h`float featherStartDistance = max(vLineWidth - 2.0, 0.0);
float value = abs(vLineDistance) * gl_FragCoord.w;
float feather = (value - featherStartDistance) / (vLineWidth - featherStartDistance);
finalColor.a *= 1.0 - clamp(feather, 0.0, 1.0);`)),n.main.add(h`outputColorHighlightOID(finalColor, vpos, finalColor.rgb);`),t}const Ss=Object.freeze(Object.defineProperty({__proto__:null,build:ui,ribbonlineNumRoundJoinSubdivisions:Ce},Symbol.toStringTag,{value:"Module"}));class Ts extends yr{constructor(t,i){super(t,i,new Sr(Ss,()=>Promise.resolve().then(()=>ks)),fi),this.primitiveType=i.wireframe?Wt.LINES:Wt.TRIANGLE_STRIP}_makePipelineState(t,i){const{oitPass:r,output:s,hasOccludees:n,hasPolygonOffset:o}=t,a=r===Mt.NONE,c=r===Mt.FrontFace;return Ve({blending:Ee(s)?Tr(r):null,depthTest:{func:wr(r)},depthWrite:xr(t),drawBuffers:Ne(s,br(r,s)),colorWrite:rt,stencilWrite:n?It:null,stencilTest:n?i?Ft:Er:null,polygonOffset:a||c?o?qt:null:Or})}initializePipeline(t){if(t.occluder){const i=t.hasPolygonOffset?qt:null,{output:r,hasOccludees:s}=t;this._occluderPipelineTransparent=Ve({blending:Bt,polygonOffset:i,depthTest:jt,depthWrite:null,colorWrite:rt,stencilWrite:null,stencilTest:s?Rr:null,drawBuffers:Ne(r)}),this._occluderPipelineOpaque=Ve({blending:Bt,polygonOffset:i,depthTest:s?jt:zt,depthWrite:null,colorWrite:rt,stencilWrite:s?Dr:null,stencilTest:s?Ar:null,drawBuffers:Ne(r)}),this._occluderPipelineMaskWrite=Ve({blending:null,polygonOffset:i,depthTest:zt,depthWrite:null,colorWrite:null,stencilWrite:s?It:null,stencilTest:s?Ft:null,drawBuffers:Ne(r)})}return this._occludeePipeline=this._makePipelineState(t,!0),this._makePipelineState(t,!1)}getPipeline(t,i){if(t)return this._occludeePipeline;switch(i){case ee.TRANSPARENT_OCCLUDER_MATERIAL:return this._occluderPipelineTransparent??super.getPipeline();case ee.OCCLUDER_MATERIAL:return this._occluderPipelineOpaque??super.getPipeline();default:return this._occluderPipelineMaskWrite??super.getPipeline()}}}const qt={factor:0,units:-4},fi=new Map([[p.POSITION,0],[p.PREVIOUSDELTA,1],[p.NEXTDELTA,2],[p.U0,3],[p.LINEPARAMETERS,4],[p.COLOR,5],[p.COLORFEATUREATTRIBUTE,5],[p.SIZE,6],[p.SIZEFEATUREATTRIBUTE,6],[p.OPACITYFEATUREATTRIBUTE,7],[p.OLIDCOLOR,8]]);var k;(function(e){e[e.LEFT_JOIN_START=-2]="LEFT_JOIN_START",e[e.LEFT_JOIN_END=-1]="LEFT_JOIN_END",e[e.LEFT_CAP_START=-4]="LEFT_CAP_START",e[e.LEFT_CAP_END=-5]="LEFT_CAP_END",e[e.RIGHT_JOIN_START=2]="RIGHT_JOIN_START",e[e.RIGHT_JOIN_END=1]="RIGHT_JOIN_END",e[e.RIGHT_CAP_START=4]="RIGHT_CAP_START",e[e.RIGHT_CAP_END=5]="RIGHT_CAP_END"})(k||(k={}));class ws extends vr{constructor(t){super(t,bs),this._configuration=new P,this.vertexAttributeLocations=fi,this.produces=new Map([[ee.OPAQUE_MATERIAL,i=>Vr(i)||Ee(i)&&this.parameters.renderOccluded===me.OccludeAndTransparentStencil],[ee.OPAQUE_MATERIAL_WITHOUT_NORMALS,i=>Wr(i)],[ee.OCCLUDER_MATERIAL,i=>Vt(i)&&this.parameters.renderOccluded===me.OccludeAndTransparentStencil],[ee.TRANSPARENT_OCCLUDER_MATERIAL,i=>Vt(i)&&this.parameters.renderOccluded===me.OccludeAndTransparentStencil],[ee.TRANSPARENT_MATERIAL,i=>Ee(i)&&this.parameters.writeDepth&&this.parameters.renderOccluded!==me.OccludeAndTransparentStencil],[ee.TRANSPARENT_MATERIAL_WITHOUT_DEPTH,i=>Ee(i)&&!this.parameters.writeDepth&&this.parameters.renderOccluded!==me.OccludeAndTransparentStencil],[ee.DRAPED_MATERIAL,i=>Br(i)]])}getConfiguration(t,i){super.getConfiguration(t,i,this._configuration),this._configuration.oitPass=i.oitPass,this._configuration.draped=i.slot===ee.DRAPED_MATERIAL;const r=this.parameters.stipplePattern!=null&&t!==ai.Highlight;return this._configuration.stippleEnabled=r,this._configuration.stippleOffColorEnabled=r&&this.parameters.stippleOffColor!=null,this._configuration.stipplePreferContinuous=r&&this.parameters.stipplePreferContinuous,this._configuration.hasSlicePlane=this.parameters.hasSlicePlane,this._configuration.roundJoins=this.parameters.join==="round",this._configuration.capType=this.parameters.cap,this._configuration.applyMarkerOffset=this.parameters.markerParameters!=null&&Os(this.parameters.markerParameters),this._configuration.hasPolygonOffset=this.parameters.hasPolygonOffset,this._configuration.writeDepth=this.parameters.writeDepth,this._configuration.vvSize=!!this.parameters.vvSize,this._configuration.vvColor=!!this.parameters.vvColor,this._configuration.vvOpacity=!!this.parameters.vvOpacity,this._configuration.innerColorEnabled=this.parameters.innerWidth>0&&this.parameters.innerColor!=null,this._configuration.falloffEnabled=this.parameters.falloff>0,this._configuration.hasOccludees=i.hasOccludees,this._configuration.occluder=this.parameters.renderOccluded===me.OccludeAndTransparentStencil,this._configuration.terrainDepthTest=i.terrainDepthTest&&Ee(t),this._configuration.cullAboveTerrain=i.cullAboveTerrain,this._configuration.wireframe=this.parameters.wireframe,this._configuration}get visible(){return this.parameters.color[3]>=Re||this.parameters.stipplePattern!=null&&(this.parameters.stippleOffColor?.[3]??0)>Re}intersectDraped({attributes:t,screenToWorldRatio:i},r,s,n,o){if(!r.options.selectionMode)return;const a=t.get(p.SIZE);let c=this.parameters.width;if(this.parameters.vvSize){const O=t.get(p.SIZEFEATUREATTRIBUTE).data[0];Number.isNaN(O)?c*=this.parameters.vvSize.fallback[0]:c*=Ke(this.parameters.vvSize.offset[0]+O*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0])}else a&&(c*=a.data[0]);const f=s[0],_=s[1],w=(c/2+4)*i;let u=Number.MAX_VALUE,E=0;const x=t.get(p.POSITION).data,A=gt(this.parameters,t)?x.length-2:x.length-5;for(let O=0;O<A;O+=3){const D=x[O],G=x[O+1],y=(O+3)%x.length,M=f-D,d=_-G,N=x[y]-D,C=x[y+1]-G,fe=Ke((N*M+C*d)/(N*N+C*C),0,1),se=N*fe-M,ye=C*fe-d,U=se*se+ye*ye;U<u&&(u=U,E=O/3)}u<w*w&&n(o.distance,o.normal,E)}intersect(t,i,r,s,n,o){const{options:a,camera:c,rayBegin:f,rayEnd:_}=r;if(!a.selectionMode||!t.visible||!c)return;if(!Ir(i))return void yt.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial").error("intersection assumes a translation-only matrix");const w=t.attributes,u=w.get(p.POSITION).data;let E=this.parameters.width;if(this.parameters.vvSize){const y=w.get(p.SIZEFEATUREATTRIBUTE).data[0];Number.isNaN(y)||(E*=Ke(this.parameters.vvSize.offset[0]+y*this.parameters.vvSize.factor[0],this.parameters.vvSize.minSize[0],this.parameters.vvSize.maxSize[0]))}else w.has(p.SIZE)&&(E*=w.get(p.SIZE).data[0]);const x=Rs;ti(x,r.point);const A=E*c.pixelRatio/2+4*c.pixelRatio;B(xe[0],x[0]-A,x[1]+A,0),B(xe[1],x[0]+A,x[1]+A,0),B(xe[2],x[0]+A,x[1]-A,0),B(xe[3],x[0]-A,x[1]-A,0);for(let y=0;y<4;y++)if(!c.unprojectFromRenderScreen(xe[y],ie[y]))return;Ue(c.eye,ie[0],ie[1],at),Ue(c.eye,ie[1],ie[2],lt),Ue(c.eye,ie[2],ie[3],ct),Ue(c.eye,ie[3],ie[0],ht);let O=Number.MAX_VALUE,D=0;const G=gt(this.parameters,w)?u.length-2:u.length-5;for(let y=0;y<G;y+=3){V[0]=u[y]+i[12],V[1]=u[y+1]+i[13],V[2]=u[y+2]+i[14];const M=(y+3)%u.length;if(W[0]=u[M]+i[12],W[1]=u[M+1]+i[13],W[2]=u[M+2]+i[14],Q(at,V)<0&&Q(at,W)<0||Q(lt,V)<0&&Q(lt,W)<0||Q(ct,V)<0&&Q(ct,W)<0||Q(ht,V)<0&&Q(ht,W)<0)continue;if(c.projectToRenderScreen(V,ce),c.projectToRenderScreen(W,he),ce[2]<0&&he[2]>0){ne(K,V,W);const N=c.frustum,C=-Q(N[ze.NEAR],V)/He(K,Ut(N[ze.NEAR]));_e(K,K,C),Je(V,V,K),c.projectToRenderScreen(V,ce)}else if(ce[2]>0&&he[2]<0){ne(K,W,V);const N=c.frustum,C=-Q(N[ze.NEAR],W)/He(K,Ut(N[ze.NEAR]));_e(K,K,C),Je(W,W,K),c.projectToRenderScreen(W,he)}else if(ce[2]<0&&he[2]<0)continue;ce[2]=0,he[2]=0;const d=zr(it(ce,he,ei),x);d<O&&(O=d,q(Qt,V),q(Kt,W),D=y/3)}if(O<A*A){let y=Number.MAX_VALUE;if(Nr(it(Qt,Kt,ei),it(f,_,Ds),le)){ne(le,le,f);const M=dt(le);_e(le,le,1/M),y=M/Ye(f,_)}o(y,le,D)}}get _layout(){const t=Ur().vec3f(p.POSITION).vec4f16(p.PREVIOUSDELTA).vec4f16(p.NEXTDELTA).f32(p.U0).vec2f16(p.LINEPARAMETERS);return this.parameters.vvColor?t.f32(p.COLORFEATUREATTRIBUTE):t.vec4u8(p.COLOR,{glNormalized:!0}),this.parameters.vvSize?t.f32(p.SIZEFEATUREATTRIBUTE):t.f32(p.SIZE),this.parameters.vvOpacity&&t.f32(p.OPACITYFEATUREATTRIBUTE),ni()&&t.vec4u8(p.OLIDCOLOR),t}createBufferWriter(){return new Es(this._layout,this.parameters)}createGLMaterial(t){return new xs(t)}validateParameters(t){t.join!=="miter"&&(t.miterLimit=0),t.markerParameters!=null&&(t.markerScale=t.markerParameters.width/t.width)}}class xs extends gr{constructor(){super(...arguments),this._stipplePattern=null}dispose(){super.dispose(),this._stippleTextures.release(this._stipplePattern),this._stipplePattern=null}beginSlot(t){const i=this._material.parameters.stipplePattern;return this._stipplePattern!==i&&(this._material.setParameters({stippleTexture:this._stippleTextures.swap(i,this._stipplePattern)}),this._stipplePattern=i),this.getTechnique(Ts,t)}}class bs extends _r{constructor(){super(...arguments),this.width=0,this.color=$i,this.join="miter",this.cap=ue.BUTT,this.miterLimit=5,this.writeDepth=!0,this.hasPolygonOffset=!1,this.stippleTexture=null,this.stipplePreferContinuous=!0,this.markerParameters=null,this.markerScale=1,this.hasSlicePlane=!1,this.vvFastUpdate=!1,this.isClosed=!1,this.falloff=0,this.innerWidth=0,this.wireframe=!1}get transparent(){return this.color[3]<1||this.stipplePattern!=null&&(this.stippleOffColor?.[3]??0)<1}}class Es{constructor(t,i){this.vertexBufferLayout=t,this._parameters=i;const r=i.stipplePattern?1:0;switch(this._parameters.join){case"miter":case"bevel":this.numJoinSubdivisions=r;break;case"round":this.numJoinSubdivisions=Ce+r}}_isClosed(t){return gt(this._parameters,t)}allocate(t){return this.vertexBufferLayout.createBuffer(t)}elementCount(t){const i=t.get(p.POSITION).indices.length/2+1,r=this._isClosed(t);let s=r?2:4;return s+=((r?i:i-1)-(r?0:1))*(2*this.numJoinSubdivisions+4),s+=2,this._parameters.wireframe&&(s=2+4*(s-2)),s}write(t,i,r,s,n,o){const a=r.get(p.POSITION),c=a.indices,f=a.data.length/3,_=r.get(p.DISTANCETOSTART)?.data;c&&c.length!==2*(f-1)&&console.warn("RibbonLineMaterial does not support indices");const w=(this.vertexBufferLayout.fields.has(p.SIZEFEATUREATTRIBUTE)?r.get(p.SIZEFEATUREATTRIBUTE)?.data[0]:r.get(p.SIZE)?.data[0])??1;let u=[1,1,1,1],E=0;const x=this.vertexBufferLayout.fields.has(p.COLORFEATUREATTRIBUTE);x?E=r.get(p.COLORFEATUREATTRIBUTE).data[0]:r.has(p.COLOR)&&(u=r.get(p.COLOR).data);const A=this.vertexBufferLayout.fields.has(p.OPACITYFEATUREATTRIBUTE),O=A?r.get(p.OPACITYFEATUREATTRIBUTE).data[0]:0,D=new Float32Array(n.buffer),G=Fr(n.buffer),y=new Uint8Array(n.buffer),M=this.vertexBufferLayout.stride/4;let d=o*M;const N=d;let C=0;const fe=_?(I,X,oe)=>C=_[oe]:(I,X,oe)=>C+=Ye(I,X),se=D.BYTES_PER_ELEMENT/G.BYTES_PER_ELEMENT,ye=4/se,U=(I,X,oe,Te,Le,yi,Si)=>{D[d++]=X[0],D[d++]=X[1],D[d++]=X[2],Nt(I,X,G,d*se),d+=ye,Nt(oe,X,G,d*se),d+=ye,D[d++]=Si;let Qe=d*se;if(G[Qe++]=Te,G[Qe++]=Le,d=Math.ceil(Qe/se),x)D[d]=E;else{const $=Math.min(4*yi,u.length-4),Me=4*d;y[Me]=255*u[$],y[Me+1]=255*u[$+1],y[Me+2]=255*u[$+2],y[Me+3]=255*u[$+3]}if(d++,D[d++]=w,A&&(D[d++]=O),ni()){let $=4*d;s?(y[$++]=s[0],y[$++]=s[1],y[$++]=s[2],y[$++]=s[3]):(y[$++]=0,y[$++]=0,y[$++]=0,y[$++]=0),d=Math.ceil(.25*$)}};d+=M,B(R,a.data[0],a.data[1],a.data[2]),t&&te(R,R,t);const Pe=this._isClosed(r);if(Pe){const I=a.data.length-3;B(j,a.data[I],a.data[I+1],a.data[I+2]),t&&te(j,j,t)}else B(L,a.data[3],a.data[4],a.data[5]),t&&te(L,L,t),U(R,R,L,1,k.LEFT_CAP_START,0,0),U(R,R,L,1,k.RIGHT_CAP_START,0,0),q(j,R),q(R,L);const qe=Pe?0:1,Se=Pe?f:f-1;for(let I=qe;I<Se;I++){const X=(I+1)%f*3;B(L,a.data[X],a.data[X+1],a.data[X+2]),t&&te(L,L,t),fe(j,R,I),U(j,R,L,0,k.LEFT_JOIN_END,I,C),U(j,R,L,0,k.RIGHT_JOIN_END,I,C);const oe=this.numJoinSubdivisions;for(let Te=0;Te<oe;++Te){const Le=(Te+1)/(oe+1);U(j,R,L,Le,k.LEFT_JOIN_END,I,C),U(j,R,L,Le,k.RIGHT_JOIN_END,I,C)}U(j,R,L,1,k.LEFT_JOIN_START,I,C),U(j,R,L,1,k.RIGHT_JOIN_START,I,C),q(j,R),q(R,L)}return Pe?(B(L,a.data[3],a.data[4],a.data[5]),t&&te(L,L,t),C=fe(j,R,Se),U(j,R,L,0,k.LEFT_JOIN_END,qe,C),U(j,R,L,0,k.RIGHT_JOIN_END,qe,C)):(C=fe(j,R,Se),U(j,R,R,0,k.LEFT_CAP_END,Se,C),U(j,R,R,0,k.RIGHT_CAP_END,Se,C)),ot(D,N+M,D,N,M),d=ot(D,d-M,D,d,M),this._parameters.wireframe&&this._addWireframeVertices(n,N,d,M),null}_addWireframeVertices(t,i,r,s){const n=new Float32Array(t.buffer,r*Float32Array.BYTES_PER_ELEMENT),o=new Float32Array(t.buffer,i*Float32Array.BYTES_PER_ELEMENT,r-i);let a=0;const c=f=>a=ot(o,f,n,a,s);for(let f=0;f<o.length-1;f+=2*s)c(f),c(f+2*s),c(f+1*s),c(f+2*s),c(f+1*s),c(f+3*s)}}function ot(e,t,i,r,s){for(let n=0;n<s;n++)i[r++]=e[t++];return r}function gt(e,t){return e.isClosed?t.get(p.POSITION).indices.length>2:!1}function Os(e){return e.anchor===Ae.Tip&&e.hideOnShortSegments&&e.placement==="begin-end"&&e.worldSpace}const V=b(),W=b(),K=b(),le=b(),Rs=b(),ce=pe(),he=pe(),Qt=b(),Kt=b(),ei=oi(),Ds=oi(),j=b(),R=b(),L=b(),xe=[pe(),pe(),pe(),pe()],ie=[b(),b(),b(),b()],at=Ze(),lt=Ze(),ct=Ze(),ht=Ze();let Dn=class{constructor(e){this._originSR=e,this._rootOriginId="root/"+St(),this._origins=new Map,this._objects=new Map,this._gridSize=5e5}getOrigin(e){const t=this._origins.get(this._rootOriginId);if(t==null){const f=Xt(e[0]+Math.random()-.5,e[1]+Math.random()-.5,e[2]+Math.random()-.5,this._rootOriginId);return this._origins.set(this._rootOriginId,f),f}const i=this._gridSize,r=Math.round(e[0]/i),s=Math.round(e[1]/i),n=Math.round(e[2]/i),o=`${r}/${s}/${n}`;let a=this._origins.get(o);const c=.5*i;if(ne(F,e,t.vec3),F[0]=Math.abs(F[0]),F[1]=Math.abs(F[1]),F[2]=Math.abs(F[2]),F[0]<c&&F[1]<c&&F[2]<c){if(a){const f=Math.max(...F);if(ne(F,e,a.vec3),F[0]=Math.abs(F[0]),F[1]=Math.abs(F[1]),F[2]=Math.abs(F[2]),Math.max(...F)<f)return a}return t}return a||(a=Xt(r*i,s*i,n*i,o),this._origins.set(o,a)),a}_drawOriginBox(e,t=ut(1,1,0,1)){const i=window.view,r=i.stage,s=t.toString();if(!this._objects.has(s)){this._material=new ws({width:2,color:t});const u=new is(r,{pickable:!1}),E=new Qr({castShadow:!1});u.add(E),this._objects.set(s,E)}const n=this._objects.get(s),o=[0,1,5,4,0,2,1,7,6,2,0,1,3,7,5,4,6,2,0],a=o.length,c=new Array(3*a),f=new Array,_=.5*this._gridSize;for(let u=0;u<a;u++)c[3*u]=e[0]+(1&o[u]?_:-_),c[3*u+1]=e[1]+(2&o[u]?_:-_),c[3*u+2]=e[2]+(4&o[u]?_:-_),u>0&&f.push(u-1,u);ft(c,this._originSR,0,c,i.renderSpatialReference,0,a);const w=new fr(this._material,[[p.POSITION,new Qi(c,f,3,!0)]],null,mr.Line);n.addGeometry(w)}get test(){}};const F=b();class An{constructor(t,i=null,r=0){this.array=t,this.spatialReference=i,this.offset=r}}function mi(e){return"array"in e}function $e(e,t,i="ground"){if(li(t))return e.getElevation(t.x,t.y,t.z||0,t.spatialReference,i);if(mi(t)){let r=t.offset;return e.getElevation(t.array[r++],t.array[r++],t.array[r]||0,t.spatialReference??e.spatialReference,i)}return e.getElevation(t[0],t[1],t[2]||0,e.spatialReference,i)}function Cn(e,t,i,r,s,n,o,a,c,f,_){const w=js[_.mode];let u,E,x=0;if(ft(e,t,i,r,c.spatialReference,s,a))return w?.requiresAlignment(_)?(x=w.applyElevationAlignmentBuffer(r,s,n,o,a,c,f,_),u=n,E=o):(u=r,E=s),ft(u,c.spatialReference,E,n,f.spatialReference,o,a)?x:void 0}function vi(e,t,i,r,s){const n=(li(e)?e.z:mi(e)?e.array[e.offset+2]:e[2])||0;switch(i.mode){case"on-the-ground":{const o=$e(t,e,"ground")??0;return s.verticalDistanceToGround=0,s.sampledElevation=o,void(s.z=o)}case"relative-to-ground":{const o=$e(t,e,"ground")??0,a=i.geometryZWithOffset(n,r);return s.verticalDistanceToGround=a,s.sampledElevation=o,void(s.z=a+o)}case"relative-to-scene":{const o=$e(t,e,"scene")??0,a=i.geometryZWithOffset(n,r);return s.verticalDistanceToGround=a,s.sampledElevation=o,void(s.z=a+o)}case"absolute-height":{const o=i.geometryZWithOffset(n,r),a=$e(t,e,"ground")??0;return s.verticalDistanceToGround=o-a,s.sampledElevation=a,void(s.z=o)}default:return void(s.z=0)}}function Pn(e,t,i,r){return vi(e,t,i,r,ve),ve.z}function Ln(e,t,i){return t==="on-the-ground"&&i==="on-the-ground"?e.staysOnTheGround:t===i||t!=="on-the-ground"&&i!=="on-the-ground"?t==null||i==null?e.definedChanged:_t.UPDATE:e.onTheGroundChanged}function Mn(e){return e==="relative-to-ground"||e==="relative-to-scene"}function In(e){return e!=="absolute-height"}function Fn(e,t,i,r,s){vi(t,i,s,r,ve),As(e,ve.verticalDistanceToGround);const n=ve.sampledElevation,o=ge(zs,e.transformation);return ke[0]=t.x,ke[1]=t.y,ke[2]=ve.z,$r(t.spatialReference,ke,o,r.spatialReference)?e.transformation=o:console.warn("Could not locate symbol object properly, it might be misplaced"),n}function As(e,t){for(let i=0;i<e.geometries.length;++i){const r=e.geometries[i].getMutableAttribute(p.CENTEROFFSETANDDISTANCE);r&&r.data[3]!==t&&(r.data[3]=t,e.geometryVertexAttributeUpdated(e.geometries[i],p.CENTEROFFSETANDDISTANCE))}}function Cs(e,t,i,r,s,n){let o=0;const a=n.spatialReference;t*=3,r*=3;for(let c=0;c<s;++c){const f=e[t],_=e[t+1],w=e[t+2],u=n.getElevation(f,_,w,a,"ground")??0;o+=u,i[r]=f,i[r+1]=_,i[r+2]=u,t+=3,r+=3}return o/s}function Ps(e,t,i,r,s,n,o,a){let c=0;const f=a.calculateOffsetRenderUnits(o),_=a.featureExpressionInfoContext,w=n.spatialReference;t*=3,r*=3;for(let u=0;u<s;++u){const E=e[t],x=e[t+1],A=e[t+2],O=n.getElevation(E,x,A,w,"ground")??0;c+=O,i[r]=E,i[r+1]=x,i[r+2]=_==null?A+O+f:O+f,t+=3,r+=3}return c/s}function Ls(e,t,i,r,s,n,o,a){let c=0;const f=a.calculateOffsetRenderUnits(o),_=a.featureExpressionInfoContext,w=n.spatialReference;t*=3,r*=3;for(let u=0;u<s;++u){const E=e[t],x=e[t+1],A=e[t+2],O=n.getElevation(E,x,A,w,"scene")??0;c+=O,i[r]=E,i[r+1]=x,i[r+2]=_==null?A+O+f:O+f,t+=3,r+=3}return c/s}function Ms(e){const t=e.meterUnitOffset,i=e.featureExpressionInfoContext;return t!==0||i!=null}function Is(e,t,i,r,s,n,o,a){const c=a.calculateOffsetRenderUnits(o),f=a.featureExpressionInfoContext;t*=3,r*=3;for(let _=0;_<s;++_){const w=e[t],u=e[t+1],E=e[t+2];i[r]=w,i[r+1]=u,i[r+2]=f==null?E+c:c,t+=3,r+=3}return 0}class Fs{constructor(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}}var _t;(function(e){e[e.NONE=0]="NONE",e[e.UPDATE=1]="UPDATE",e[e.RECREATE=2]="RECREATE"})(_t||(_t={}));const js={"absolute-height":{applyElevationAlignmentBuffer:Is,requiresAlignment:Ms},"on-the-ground":{applyElevationAlignmentBuffer:Cs,requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:Ps,requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:Ls,requiresAlignment:()=>!0}},zs=Z(),ve=new Fs,ke=b(),Ns=()=>yt.getLogger("esri.views.3d.layers.graphics.featureExpressionInfoUtils");function Us(e){return{cachedResult:e.cachedResult,arcade:e.arcade?{func:e.arcade.func,context:e.arcade.modules.arcadeUtils.createExecContext(null,{sr:e.arcade.context.spatialReference}),modules:e.arcade.modules}:null}}async function jn(e,t,i,r){const s=e?.expression;if(typeof s!="string")return null;const n=$s(s);if(n!=null)return{cachedResult:n};const o=await Di();Ai(i);const a=o.arcadeUtils,c=a.createSyntaxTree(s);return a.dependsOnView(c)?(r?.error("Expressions containing '$view' are not supported on ElevationInfo"),{cachedResult:0}):{arcade:{func:a.createFunction(c),context:a.createExecContext(null,{sr:t}),modules:o}}}function Vs(e,t,i){return e.arcadeUtils.createFeature(t.attributes,t.geometry,i)}function Ws(e,t){if(e!=null&&!gi(e)){if(!t||!e.arcade)return void Ns().errorOncePerTick("Arcade support required but not provided");const i=t;i._geometry&&(i._geometry=Jr(i._geometry)),e.arcade.modules.arcadeUtils.updateExecContext(e.arcade.context,t)}}function Bs(e){if(e!=null){if(gi(e))return e.cachedResult;const t=e.arcade;let i=t?.modules.arcadeUtils.executeFunction(t.func,t.context);return typeof i!="number"&&(e.cachedResult=0,i=0),i}return 0}function zn(e,t=!1){let i=e?.featureExpressionInfo;const r=i?.expression;return t||r==="0"||(i=null),i??null}const Nn={cachedResult:0};function gi(e){return e.cachedResult!=null}function $s(e){return e==="0"?0:null}class _i{constructor(){this._meterUnitOffset=0,this._renderUnitOffset=0,this._unit="meters",this._metersPerElevationInfoUnit=1,this._featureExpressionInfoContext=null,this.centerPointInElevationSR=null,this.mode=null}get featureExpressionInfoContext(){return this._featureExpressionInfoContext}get meterUnitOffset(){return this._meterUnitOffset}get unit(){return this._unit}set unit(t){this._unit=t,this._metersPerElevationInfoUnit=Gr(t)}get requiresSampledElevationInfo(){return this.mode!=="absolute-height"}reset(){this.mode=null,this._meterUnitOffset=0,this._renderUnitOffset=0,this._featureExpressionInfoContext=null,this.unit="meters"}set offsetMeters(t){this._meterUnitOffset=t,this._renderUnitOffset=0}set offsetElevationInfoUnits(t){this._meterUnitOffset=t*this._metersPerElevationInfoUnit,this._renderUnitOffset=0}addOffsetRenderUnits(t){this._renderUnitOffset+=t}geometryZWithOffset(t,i){const r=this.calculateOffsetRenderUnits(i);return this.featureExpressionInfoContext!=null?r:t+r}calculateOffsetRenderUnits(t){let i=this._meterUnitOffset;const r=this.featureExpressionInfoContext;return r!=null&&(i+=Bs(r)*this._metersPerElevationInfoUnit),i/t.unitInMeters+this._renderUnitOffset}setFromElevationInfo(t){this.mode=t.mode,this.unit=Hr(t.unit)?t.unit:"meters",this.offsetElevationInfoUnits=t.offset??0}updateFeatureExpressionInfoContext(t,i,r){if(t==null)return void(this._featureExpressionInfoContext=null);const s=t?.arcade;s&&i!=null&&r!=null?(this._featureExpressionInfoContext=Us(t),Ws(this._featureExpressionInfoContext,Vs(s.modules,i,r))):this._featureExpressionInfoContext=t}static fromElevationInfo(t){const i=new _i;return t!=null&&i.setFromElevationInfo(t),i}}const ks=Object.freeze(Object.defineProperty({__proto__:null,build:ui,ribbonlineNumRoundJoinSubdivisions:Ce},Symbol.toStringTag,{value:"Module"}));export{_i as A,In as B,Xe as D,Fs as E,J as H,jn as K,$e as L,An as N,As as O,Ws as R,di as S,Pn as U,Ln as V,Mn as W,Ae as _,Xt as a,vi as b,Vs as c,de as d,ys as e,$t as f,On as g,vs as h,Rn as i,Dn as j,Fn as k,is as l,Gt as m,En as n,ue as o,ls as p,_t as q,Nn as r,Qr as s,zn as t,kt as v,ws as y,Cn as z};
