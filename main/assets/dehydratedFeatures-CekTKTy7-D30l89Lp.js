import{a5 as a,j7 as h,j8 as l,iw as p,gr as o}from"./main-D7vwjMDX.js";import{n as r,i as m,f as u}from"./memoryEstimations-iHVpvWPf-kbN83f8l.js";import"./Field-Cj6Pz3TI-CQAvI3hR.js";function b(){return a("curve-densification-coarse-segments")}function f(){return a("curve-densification-max-segments")}function d(){return a("curve-densification-min-segments")}function v(){return a("curve-densification-pixels-per-segment")}class k{constructor(s,i,e){this.uid=s,this.geometry=i,this.attributes=e,this.visible=!0,this.objectId=null,this.centroid=null}}function j(t){return t.geometry!=null}class z{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function Z(t){if(t==null)return 0;switch(t.type){case"point":return r+10+8+24;case"polyline":case"polygon":{let s=0;const i=2+(t.hasZ?1:0)+(t.hasM?1:0),e=t.type==="polyline"?t.paths:t.rings;if((t.type==="polyline"?t.curvePaths:t.curveRings)?.length){const n=3*f()*128;s=8*n*i+128*n+32*(e.length+1)}else s=u(e);return r+64+s+34}case"multipoint":{const s=u(t.points);return r+s+64+34+32}case"extent":return r+10+64+34;case"mesh":{const s=t.vertexAttributes;return r+m(s.position,s.normal,s.uv,s.tangent)}default:return r}}function I(t,s){switch(h(s),t.type==="mesh"&&(t=t.extent),t.type){case"point":s[0]=s[3]=t.x,s[1]=s[4]=t.y,t.hasZ&&(s[2]=s[5]=t.z);break;case"polyline":for(let i=0;i<t.paths.length;i++)l(s,t.paths[i],!!t.hasZ);break;case"polygon":for(let i=0;i<t.rings.length;i++)l(s,t.rings[i],!!t.hasZ);break;case"multipoint":l(s,t.points,!!t.hasZ);break;case"extent":s[0]=t.xmin,s[1]=t.ymin,s[3]=t.xmax,s[4]=t.ymax,t.zmin!=null&&(s[2]=t.zmin),t.zmax!=null&&(s[5]=t.zmax)}}function w(t,s){switch(p(s),t.type==="mesh"&&(t=t.extent),t.type){case"point":s[0]=s[2]=t.x,s[1]=s[3]=t.y;break;case"polyline":for(let i=0;i<t.paths.length;i++)o(s,t.paths[i]);break;case"polygon":for(let i=0;i<t.rings.length;i++)o(s,t.rings[i]);break;case"multipoint":o(s,t.points);break;case"extent":s[0]=t.xmin,s[1]=t.ymin,s[2]=t.xmax,s[3]=t.ymax}}function F(t,s){return t.objectId!=null?t.objectId:t.attributes&&s?t.attributes[s]:null}function N(t,s,i,e){if(s?.size&&i!=null&&t)for(const n in t){if(!s.has(n))continue;const c=t[n];typeof c=="string"&&c.length>i&&(e(n),t[n]="")}}export{F as I,w as Z,k as b,j as d,b as g,f as h,N as j,Z as k,z as v,v as x,d as y,I as z};
