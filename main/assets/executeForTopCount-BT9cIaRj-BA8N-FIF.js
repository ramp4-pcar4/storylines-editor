import{m as i}from"./utils-BO8hgPs3-DZvHNRO4.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-D8VpMxtp.js";import a from"./TopFeaturesQuery-BmMRhRdq-Dsxd9JKN.js";import"./main-COUzu-Id.js";import"./normalizeUtils-u00NGW3M-CFUTs9-B.js";import"./normalizeUtilsCommon-ClagynAA-BEw3mXQQ.js";import"./utils-DpLVEUvg-CeWeo-2m.js";import"./query-COAsogFA-Dg_Jy4Rw.js";import"./pbfQueryUtils-aBcHX3TJ-BDGFl817.js";import"./pbf-hoLeQyp2-CCpY4goz.js";import"./memoryEstimations-DeWfxwaV-CYfPq2ju.js";import"./OptimizedGeometry-pzfNw1AT-0mDckwxc.js";import"./OptimizedFeature-mIz_HhJg-DBRi7GeD.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-DwQb0WF3.js";import"./projectionUtils-B-CplN3q-CNaY28CM.js";import"./TimeExtent-Cf2Pienb-DP4GcYsd.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
