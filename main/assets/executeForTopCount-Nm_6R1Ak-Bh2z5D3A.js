import{y as i}from"./utils-DuaeuwP5-KwCh1Ihb.js";import{S as p}from"./queryTopFeatures-BdkfRugo-DUbtAogc.js";import a from"./TopFeaturesQuery-C3E7qv-F-BhSajScf.js";import"./main-DNUY0w00.js";import"./normalizeUtils-b-vZURob-DL1AfvUx.js";import"./utils-Jw-4AGsF-DQac-78j.js";import"./query-nJmB7Ppn-sabdc_PX.js";import"./pbfQueryUtils-1j64fqcx-CnvdzmxB.js";import"./pbf-Ijhb7ANA-dR3JwWA3.js";import"./memoryEstimations-iHVpvWPf-Ca9AuECg.js";import"./OptimizedGeometry-1qDYm3YK-BwRdCqRc.js";import"./OptimizedFeatureSet-D6mgsKNr-C-Jucvdt.js";import"./queryZScale-DBCLQqDI-DNum87De.js";import"./projection-m8vi7Cxv-DJZnEnvE.js";import"./TimeExtent-gZaEUVeW-DdgvPfvy.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
