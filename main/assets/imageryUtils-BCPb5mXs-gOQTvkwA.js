import{T as o,k as c}from"./utils-DawrlST4-DnU4v8s6.js";import{L as p,E as v,I as g,l as s}from"./portalItemUtils-DsrxEt4W-CwmflhO-.js";import"./main-D7vwjMDX.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./PortalItem-CJetnHeq-o-aav5WN.js";import"./jsonContext-D_JQG_uA-Dcz7PH-X.js";import"./projection-m8vi7Cxv-CyI2jDkU.js";const y="Image Service",u="imagery-layer-save",f="imagery-layer-save-as",d="imagery-tile-layer-save",T="imagery-tile-layer-save-as",l="WCS",I="wcs-layer-save",w="wcs-layer-save-as";function m(e){if(e.type==="imagery"||e.type==="wcs")return{isValid:!0};const{raster:r}=e,a=r?.datasetFormat==="Function"?r.primaryRasters?.rasters[0]:r;return{isValid:a?.datasetFormat==="RasterTileServer"&&(a.tileType==="Raster"||a.tileType==="Map"),errorMessage:"imagery tile layer should be created from a tiled image service."}}function n(e){const r=e.layerJSON;return Promise.resolve(r&&Object.keys(r).length?r:null)}async function x(e,r){const{parsedUrl:a,title:t,fullExtent:i}=e;r.url=a.path,r.title||=t;try{r.extent=await p(i)}catch{r.extent=void 0}v(r,s.METADATA),g(r,s.TILED_IMAGERY,e.type==="imagery-tile")}async function R(e,r){const a=e.type==="imagery"?u:e.type==="imagery-tile"?d:I,t=e.type==="wcs"?l:y;return o({layer:e,itemType:t,validateLayer:m,createItemData:n,errorNamePrefix:a},r)}async function S(e,r,a){const t=e.type==="imagery"?f:e.type==="imagery-tile"?T:w,i=e.type==="wcs"?l:y;return c({layer:e,itemType:i,validateLayer:m,createItemData:n,errorNamePrefix:t,newItem:r,setItemProperties:x},a)}export{R as save,S as saveAs};
