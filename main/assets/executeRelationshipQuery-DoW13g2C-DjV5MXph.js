import{m}from"./utils-BO8hgPs3-Bku1uRnt.js";import{N as f,by as y}from"./main-DXQSfJ4c.js";import{f as j}from"./query-COAsogFA-DhyYlZf9.js";import{c as R}from"./FeatureSet-BVGGhhH9-C7dse-vl.js";import{c as l}from"./RelationshipQuery-CaEbQySU-BuDy9kEq.js";import"./normalizeUtils-u00NGW3M-Bek0LA8Q.js";import"./normalizeUtilsCommon-ClagynAA-CRbDFkUY.js";import"./utils-DpLVEUvg-Cfh_alSX.js";import"./pbfQueryUtils-aBcHX3TJ-CD7t8EhS.js";import"./pbf-hoLeQyp2-B_lhUCSA.js";import"./memoryEstimations-DeWfxwaV-Cs31Yqkd.js";import"./OptimizedGeometry-pzfNw1AT-DlquUCEF.js";import"./OptimizedFeature-mIz_HhJg-Bpy10dAB.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-BmUxUnP-.js";import"./projectionUtils-B-CplN3q-R11C1T8y.js";import"./Field-BIQ-quF4-BZYdxVxX.js";import"./fieldType-PhcL4ff8-JvhUOwPo.js";import"./Query-n1aoaaFC-CPBxR7e3.js";import"./TimeExtent-Cf2Pienb-BIbHzrkf.js";function b(r,e){const t=r.toJSON();return t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t.outFields&&!e?.returnCountOnly?t.outFields.includes("*")?t.outFields="*":t.outFields=t.outFields.join(","):delete t.outFields,t.outSR&&(t.outSR=y(t.outSR)),t.dynamicDataSource&&(t.layer=JSON.stringify({source:t.dynamicDataSource}),delete t.dynamicDataSource),t}async function h(r,e,t){const n=await p(r,e,t),o=n.data,a=o.geometryType,s=o.spatialReference,i={};for(const c of o.relatedRecordGroups){const u={fields:void 0,geometryType:a,spatialReference:s,hasZ:!!o.hasZ,hasM:!!o.hasM,features:c.relatedRecords};if(c.objectId!=null)i[c.objectId]=u;else for(const d of Object.keys(c))d!=="relatedRecords"&&(i[c[d]]=u)}return{...n,data:i}}async function F(r,e,t){const n=await p(r,e,t,{returnCountOnly:!0}),o=n.data,a={};for(const s of o.relatedRecordGroups)s.objectId!=null&&(a[s.objectId]=s.count);return{...n,data:a}}async function p(r,e,t={},n){const o=j({...r.query,f:"json",...n,...b(e,n)});return f(r.path+"/queryRelatedRecords",{...t,query:{...t.query,...o}})}async function H(r,e,t){e=l.from(e);const n=m(r);return h(n,e,t).then(o=>{const a=o.data,s={};return Object.keys(a).forEach(i=>s[i]=R.fromJSON(a[i])),s})}async function z(r,e,t){e=l.from(e);const n=m(r);return F(n,e,{...t}).then(o=>o.data)}export{H as executeRelationshipQuery,z as executeRelationshipQueryForCount};
