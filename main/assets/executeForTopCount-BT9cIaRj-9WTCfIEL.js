import{m as i}from"./utils-BO8hgPs3-3Vp7LTLT.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-CMhl-82i.js";import a from"./TopFeaturesQuery-BmMRhRdq-mNzJhPRO.js";import"./main-vBMuZyvK.js";import"./normalizeUtils-u00NGW3M-Bworhcz6.js";import"./normalizeUtilsCommon-ClagynAA-DDGjg8Ur.js";import"./utils-DpLVEUvg-C7aLqtJf.js";import"./query-COAsogFA-tzb-N-h5.js";import"./pbfQueryUtils-aBcHX3TJ-CJoRqr0C.js";import"./pbf-hoLeQyp2-CwLZ06Zk.js";import"./memoryEstimations-DeWfxwaV-BavtGa0I.js";import"./OptimizedGeometry-pzfNw1AT-BEv8IsCn.js";import"./OptimizedFeature-mIz_HhJg-BNCh1HkO.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-9M3RSkhK.js";import"./projectionUtils-B-CplN3q-C1qXeznp.js";import"./TimeExtent-Cf2Pienb-5MjZba-P.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
