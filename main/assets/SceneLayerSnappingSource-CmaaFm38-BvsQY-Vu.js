import{v as o,ac as y,u as b,a8 as H,S as n,n as w,a4 as E,ao as x,lz as f,Y as I,cG as _,kG as O,du as k}from"./main-CqKuK3N8.js";import{i as V}from"./UpdatingHandles-Bd2FQ26N-B1rBikI0.js";import{c as L}from"./WorkerHandle-DMS_RzFc-CMZLWwxe.js";import{n as h}from"./workerHelper-BD48t56k-C_yViiQD.js";import{X as A}from"./edgeProcessing-r6PavHvX-DK1NweBS.js";import{D}from"./sphere-zPMQWhGG-eXz2VyWh.js";import{R as v,ac as R,S as M}from"./SketchViewModel-B0qFHK0t-B-UEP0Vl.js";import{a as B}from"./VertexSnappingCandidate-OoGbhLWl-7-JH4JCE.js";import"./workers-CeRXsnNJ-zqG6pOWL.js";import"./Queue-DV3gpSdl-DBWgWuDp.js";import"./intl-BAA1onnp-CYNc6ZvL.js";import"./InterleavedLayout-C2YUDwKf-D-GivBDJ.js";import"./BufferView-wDxx79o3-BDyKXPvX.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec32-Cj8pVsU0-KSQMwMKx.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./types-l27bT09Q-DE0QfIFp.js";import"./deduplicate-DRKoZSEv-55JkI65U.js";import"./Indices-BuIC5D20-ZmOpOtOf.js";import"./VertexAttribute-hUz6pozM-Bx3V-z96.js";import"./glUtil-0ZzWJjlL-BbuN-tVo.js";import"./enums-wEDHPbCF-Cf76M5_x.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./Normals-BNEsVQbp-D7_x11-2.js";import"./mat4-OOmHNWi7-BlDGI50G.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./vectorStacks-5ZZtmT9E-DQZylhIH.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./projectionUtils-B-CplN3q-DmHwqg9X.js";import"./GraphicsLayer-BiEC2-gS-p6Y57uJN.js";import"./GraphicsCollection-uWAVmks7-sKMTdk6H.js";import"./Layer-DvVVmz9x-DyvWaWht.js";import"./TimeExtent-Cf2Pienb-BG6Q4x9H.js";import"./BlendLayer-DjW_5k0v-SRs4pBvA.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-DzWny09Z.js";import"./parser-CWccHtwJ-SwteTPan.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./ScaleRangeLayer-x42fwED3-B1whd22y.js";import"./ElevationInfo-DE5to86a-BagjCosO.js";import"./lengthUtils-C61nRlXw-YLIYFvDM.js";import"./elevationInfoUtils-Ccn2Wfoe-DSaD8PW5.js";import"./editableLayers-DFUBlMJy-CSAGb5DV.js";import"./utils-Dd8gTonD-CuyefSu6.js";import"./Version-CnwD6MZa-DtqxOZ6y.js";import"./Cyclical-DgD7_U1C-XMysZAjL.js";import"./quantityUtils-B1Ov7DZK-Df88oDzF.js";import"./projectVectorToVector-DcyiGOWJ-DR5mqM4T.js";import"./projectPointToVector-BZJhoF_5-BkDL9Cm2.js";import"./geodesicUtils-DKS2UG72-DrqM42Ps.js";import"./asyncUtils-BPUlNCrX-Bv3_Hkie.js";import"./Query-n1aoaaFC-DncjZF2G.js";import"./Field-BIQ-quF4-DbpsWH9X.js";import"./fieldType-PhcL4ff8-BNCEuQrA.js";import"./plane-Cf3Koz3c-CYF7av9G.js";import"./geodeticLengthOperator-DHGBHzf3-B6qgLz9F.js";import"./geodeticCurveType-D_etKnbP-CirnHLSB.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./triangle-BM89wdHY-DTIea3rk.js";import"./lineSegment-BAWQVP9P-CBmDmO9s.js";import"./spatialReferenceEllipsoidUtils-BK0OQJn2-BpZ8G0Cv.js";import"./PointSnappingHint-OKXicQ1z-Bp1fbri1.js";class P extends L{constructor(t){super("EdgeProcessingWorker","extract",{extract:r=>[r.dataBuffer],extractComponentsEdgeLocations:r=>[r.dataBuffer],extractEdgeLocations:r=>[r.dataBuffer]},t)}async process(t,r,i){return i?A(t):j(await this.invoke(new g(t),r))}async extractEdgeLocations(t,r){const i=await this.invokeMethod("extractEdgeLocations",new g(t),r);return h(i)}async extractComponentsEdgeLocations(t,r){const i=await this.invokeMethod("extractComponentsEdgeLocations",new g(t),r);return h(i)}}function j(e){return{regular:{instancesData:h(e.regular.instancesData),lodInfo:{lengths:new Float32Array(e.regular.lodInfo.lengths)}},silhouette:{instancesData:h(e.silhouette.instancesData),lodInfo:{lengths:new Float32Array(e.silhouette.lodInfo.lengths)}},averageEdgeLength:e.averageEdgeLength}}class g{constructor(t){this.dataBuffer=t.data.buffer,this.writerSettings=t.writerSettings,this.skipDeduplicate=t.skipDeduplicate,this.indices=_(t.indices)?t.indices.buffer:t.indices,this.indicesType=_(t.indices)?O(t.indices)?"Uint32Array":"Uint16Array":"Array",this.indicesLength=t.indicesLength}}let d=class extends y{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new z(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const r=e.coordinateHelper,{point:i}=e,s=W;this.renderCoordsHelper.toRenderCoords(i,r.spatialReference,s);const l=e.distance,c=typeof l=="number"?l:l.distance,u=await this._workerHandle.invoke({bounds:D(s[0],s[1],s[2],c),returnEdge:e.returnEdge,returnVertex:e.vertexMode!=="none"},t);return u.candidates.sort((m,C)=>m.distance-C.distance),u.candidates.map(m=>this._convertCandidate(r,m))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new R({objectId:t.objectId,targetPoint:v(this._convertRenderCoordinate(e,t.target)),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),isDraped:!1});case"vertex":return new B({objectId:t.objectId,targetPoint:v(this._convertRenderCoordinate(e,t.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},t){const r=k();return this.renderCoordsHelper.fromRenderCoords(t,r,e),M(r)}async _fetchAllEdgeLocations(e,t){const r=[],i=[];for(const{id:s,uid:l}of e.components)this._ids.has(s)&&r.push((async()=>{const c=await this.fetchEdgeLocations(s,t.signal),u=c.locations.buffer;return i.push(u),{id:s,uid:l,objectIds:c.objectIds,locations:u,origin:c.origin,type:c.type}})());return{result:{components:(await Promise.all(r)).filter(({id:s})=>this._ids.has(s))},transferList:i}}};o([n({constructOnly:!0})],d.prototype,"renderCoordsHelper",void 0),o([n({constructOnly:!0})],d.prototype,"fetchEdgeLocations",void 0),o([n({constructOnly:!0})],d.prototype,"schedule",void 0),o([n({readOnly:!0})],d.prototype,"availability",void 0),d=o([w("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],d);let z=class extends L{constructor(e,t){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:t})}};const W=k();let a=class extends y{get updating(){return this._updatingHandles.updating}constructor(e){super(e),this.availability=1,this._updatingHandles=new V,this._abortController=new AbortController}destroy(){this._tracker=E(this._tracker),this._abortController=x(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:e}=this,t=e.resourceController;this._edgeWorker=new P(S(t)),this._workerHandle=new d({renderCoordsHelper:this.view.renderCoordsHelper,schedule:S(t),fetchEdgeLocations:async(r,i)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,i)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([f(this._workerHandle),f(this._edgeWorker)])}async fetchCandidates(e,t){return this._workerHandle.fetchCandidates(e,t)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const e=this._abortController?.signal,t=await this.getLayerView();t==null||I(e)||(this._tracker=t.trackSnappingSources({add:(r,i)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:r,bounds:i},e))},remove:r=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:r},e))}}))}};function S(e){return t=>e.immediate.schedule(t)}o([n({constructOnly:!0})],a.prototype,"getLayerView",void 0),o([n({constructOnly:!0})],a.prototype,"view",void 0),o([n({readOnly:!0})],a.prototype,"updating",null),o([n({readOnly:!0})],a.prototype,"availability",void 0),a=o([w("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],a);let p=class extends y{get updating(){return this._i3sSources.some(e=>e.updating)}constructor(e){super(e),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(e=>e.destroy()),this._i3sSources.length=0}initialize(){const{view:e}=this,t=this.layerSource.layer;this._i3sSources=t.type==="building-scene"?this._getBuildingSceneI3SSources(e,t):[this._getSceneLayerI3SSource(e,t)]}async fetchCandidates(e,t){const r=await Promise.all(this._i3sSources.map(i=>i.fetchCandidates(e,t)));return b(t),r.flat()}refresh(){this._i3sSources.forEach(e=>e.refresh())}_getBuildingSceneI3SSources(e,t){return t.allSublayers.toArray().map(r=>r.type==="building-component"?new a({getLayerView:async()=>(await e.whenLayerView(t)).whenSublayerView(r),view:e}):null).filter(H)}_getSceneLayerI3SSource(e,t){return new a({getLayerView:async()=>{const r=await e.whenLayerView(t);return r.type==="scene-layer-graphics-3d"?void 0:r},view:e})}};o([n({constructOnly:!0})],p.prototype,"layerSource",void 0),o([n({constructOnly:!0})],p.prototype,"view",void 0),o([n({readOnly:!0})],p.prototype,"updating",null),o([n({readOnly:!0})],p.prototype,"availability",void 0),p=o([w("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],p);export{p as SceneLayerSnappingSource};
