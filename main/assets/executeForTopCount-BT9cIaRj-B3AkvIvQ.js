import{m as i}from"./utils-BO8hgPs3-DcI6lO_1.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-D9_srLxP.js";import a from"./TopFeaturesQuery-BmMRhRdq-Bxx6jIAq.js";import"./main-C6fh4Kls.js";import"./normalizeUtils-u00NGW3M-CVUM4uCU.js";import"./normalizeUtilsCommon-ClagynAA-BEODhNJ-.js";import"./utils-DpLVEUvg-DfJa9JIi.js";import"./query-COAsogFA-CXjk-rgM.js";import"./pbfQueryUtils-aBcHX3TJ-AJq3VpjI.js";import"./pbf-hoLeQyp2-DW5H3Pl7.js";import"./memoryEstimations-DeWfxwaV-cqSwRHj6.js";import"./OptimizedGeometry-pzfNw1AT-DfMYw162.js";import"./OptimizedFeature-mIz_HhJg-CI1HhkDL.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-Bl_GXuux.js";import"./projectionUtils-B-CplN3q-B6-LeDqE.js";import"./TimeExtent-Cf2Pienb-0NIJwc4j.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
