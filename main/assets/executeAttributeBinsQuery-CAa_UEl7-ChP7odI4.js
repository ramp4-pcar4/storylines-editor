import{m as f}from"./utils-BO8hgPs3-DZvHNRO4.js";import{M as l,N as y,bL as c,by as p,bu as S,ap as R}from"./main-COUzu-Id.js";import{B as g}from"./normalizeUtils-u00NGW3M-CFUTs9-B.js";import{f as d}from"./query-COAsogFA-Dg_Jy4Rw.js";import{s as N}from"./AttributeBinsFeatureSet-f4NTpSO_-B1pc-muA.js";import J from"./AttributeBinsQuery-DHrHi_6j-7S_zHt6q.js";import"./normalizeUtilsCommon-ClagynAA-BEw3mXQQ.js";import"./utils-DpLVEUvg-CeWeo-2m.js";import"./pbfQueryUtils-aBcHX3TJ-BDGFl817.js";import"./pbf-hoLeQyp2-CCpY4goz.js";import"./memoryEstimations-DeWfxwaV-CYfPq2ju.js";import"./OptimizedGeometry-pzfNw1AT-0mDckwxc.js";import"./OptimizedFeature-mIz_HhJg-DBRi7GeD.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-DwQb0WF3.js";import"./projectionUtils-B-CplN3q-CNaY28CM.js";import"./FeatureSet-BVGGhhH9-BqQ7HZCv.js";import"./Field-BIQ-quF4-Bcb4eXIO.js";import"./fieldType-PhcL4ff8-D9Lmdtg9.js";import"./queryUtils-DZy8hWx3-ClqftYVa.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./FixedIntervalBinParameters-CsFyInBi-CSEJy4sD.js";import"./NormalizationBinParametersMixin-70JA0FRq-CxZIg0Kc.js";import"./Query-n1aoaaFC-Bv-rO1Tx.js";import"./TimeExtent-Cf2Pienb-DP4GcYsd.js";import"./timeZoneUtils-d5p0Jda1-zNE5Fy8z.js";function O(r){const e=r.geometry,i=r.toJSON(),t=i;let n,o,m;if(e!=null&&(o=e.spatialReference,m=p(o),t.geometryType=S(e),t.geometry=JSON.stringify(e),t.inSR=m),i.outSR?(t.outSR=p(i.outSR),n=r.outSpatialReference):e&&(t.outSR=t.inSR,n=o),t.bin&&=JSON.stringify(t.bin),t.quantizationParameters&&=JSON.stringify(t.quantizationParameters),t.outStatistics&&=JSON.stringify(t.outStatistics),t.outTimeReference&&=JSON.stringify(t.outTimeReference),i.timeExtent){const u=i.timeExtent,{start:a,end:s}=u;a==null&&s==null||(t.time=a===s?a:`${a??"null"},${s??"null"}`),delete i.timeExtent}return r.defaultSpatialReference&&R(o,n)&&(t.defaultSR=t.inSR,delete t.inSR,delete t.outSR),t}async function q(r,e,i){return e.timeExtent!=null&&e.timeExtent.isEmpty?{data:{features:[]}}:await x(r,e,i)}async function x(r,e,i={}){const t=typeof r=="string"?l(r):r,n=e.geometry?[e.geometry]:[],o=await g(n,null,{signal:i.signal}),m=o?.[0];m!=null&&((e=e.clone()).geometry=m);const u=d({...t.query,f:"json",...O(e)});return y(c(t.path,"queryBins"),{...i,query:{...u,...i.query}})}async function W(r,e,i){const{data:t}=await q(f(r),J.from(e),i);return N.fromJSON(t)}export{W as executeAttributeBinsQuery};
