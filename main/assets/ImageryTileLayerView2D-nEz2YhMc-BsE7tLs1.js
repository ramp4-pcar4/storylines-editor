import{v as h,S as p,i as M,ah as L,aU as R,a1 as I,av as ge,aL as _e,j as ye,bp as xe,n as be,O as we,w as ve,bh as ne,o as Te,bi as Pe,hT as F}from"./main-B-qqJ5ov.js";import{p as Z}from"./multidimensionalUtils-BwTugeu7-BglvRhIO.js";import{o as Se,l as Ue,c as Re}from"./RasterVFDisplayObject-CnriTVT9-DmXQe4Ai.js";import{X as Ie,A as Fe,Y as Ce}from"./LayerView-Bish-E63-B3t2STnz.js";import{t as oe,E as k,m as ze,e as z}from"./MapView-BGOJJ8ch-RBEkjehQ.js";import{Q as Me,E as le,R as Ve,C as E,D as Be,H as Ge}from"./mat3-CC4Foazl-BWjyqE2v.js";import{e as B}from"./vec2f32-CVhmN3Me-DxoqVD7C.js";import{T as Le}from"./Container-BcuL1ZEG-eFqRz1Fv.js";import{A as G,L as J,M as A,B as Oe,F as ke,G as De}from"./enums-DBi1-Mm2-CUS1pvQe.js";import{N as U,k as w,w as q,G as Ee,x as Ae,U as j,b as je,V as qe,M as We,L as Ne,F as $e}from"./rasterUtils-DqAu9qES-DHva76fh.js";import{s as Y}from"./vec2f64-CeODonrJ-CkkJCdRC.js";import{H as Qe,V as He}from"./Texture-BCt2hphT-DvUofMVc.js";import{t as C}from"./definitions-DJSdSb77-DkoRHaVx.js";import{k as Ze,F as K,K as ue}from"./WGLContainer-LxgEo4I_-z-5hqvPk.js";import{G as Je}from"./Program-DLVwTiPA-C0UmoMsx.js";import{h as ce}from"./TileContainer-D48pXXgL-D3BTBoIw.js";import{i as Ye}from"./UpdatingHandles-CUu3u1ms-HMNQlS0m.js";import{D as Ke,B as Xe}from"./dataUtils-BkPy4R3C-BeSuwXER.js";import{V as X}from"./TileInfo-CWIRDhZl-Bhhxrbtd.js";import{Z as ee,P as te,K as et,O as tt}from"./RawBlockCache-Cj_tmHDm-CLjYjKYV.js";import{k as rt,U as st,p as it,r as re}from"./rasterProjectionHelper-Calp0o_1-DzHEzUt2.js";import{a as se,Q as at,$ as nt}from"./Tile-D75RMC64-C3MLariM.js";import"./TileKey-C5IL-JBr-DkZT6W2U.js";import{i as ot}from"./Scheduler-B7UX7Wr5-BLeBwT6v.js";import{n as lt}from"./capabilities-agoTWNzb-CtsNgRyk.js";import{T as ut}from"./timeSupport-ohWmWReZ-DMzenDTW.js";import{m as ct}from"./popupUtils-nV1O8RUO-DBurfy_S.js";import{n as ht}from"./RefreshableLayerView-BdQpGYly--EvADpmp.js";import"./BufferObject-BM_7mcDb-D9oo6-zU.js";import"./VertexArrayObject-M4iRGGoi-dWrHi2CG.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./LabelMetric-BeluzH3o-iJy2d-T9.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./layerViewUtils-DURAPenP-CiWQP0sU.js";import"./Cyclical-C_9rKUUQ-Cho4ih7V.js";import"./CollectionFlattener-DkHuHn5E-Bg67MlaP.js";import"./workers-PiCjreoO-DJYvxXtl.js";import"./projection-BA9M1R7d-BrWcDNEF.js";import"./projectBuffer-CvCBvJ6W-D4VBeyna.js";import"./themeUtils-YjM7iIiX-B6kY6GUl.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./signal-CETehA7D-DKHdUMxd.js";import"./Map-1zd11DKO-T8pE1fte.js";import"./Basemap-BEqqSTw9-RRlL9tT1.js";import"./loadAll-e978YItg-fzRL7yQg.js";import"./PortalItem-CctGdnxF-CGvGDFAo.js";import"./writeUtils-D5qlLkwk--aMa2nHm.js";import"./compilerUtils-CV1QYWI8-DaNCNvT1.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-wsQhA476.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./TablesMixin-C8RojhYs-D26TS8Sr.js";import"./Layer-ChoECxvZ-Bet1V6UW.js";import"./TimeExtent-Cn0Jofqr-1iB3KTqK.js";import"./GraphicsCollection-CWTXNZOX-CNRwzKrA.js";import"./HeightModelInfo-C5vFqzyF-DO96zinI.js";import"./ReactiveMap-CFk6jPfN-Dn1cGCMX.js";import"./Query-BrwMGK8U-CyKS3Qe-.js";import"./Field-C6hA1tZj-7h8v-exC.js";import"./fieldType-CD2CL2hr-B0GoEBDi.js";import"./arcgisLayerUrl-HNYh8jvG-B2O143Ys.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./normalizeUtils-Bxmy9MNI-CeIR1clc.js";import"./normalizeUtilsCommon-CRJlkfEA-CfUHeklq.js";import"./utils-9sQxfkoa-CrB3apxj.js";import"./utils-Bq23Xwmj-ubNLJvr4.js";import"./unitBezier-CGtWxaCq-BRwEDigF.js";import"./vec32-D9GsKZ1t-Cpv9XLxo.js";import"./imageUtils-BA2D6Uf1-BmZoJuj0.js";import"./Version-CoKzbupV-MlNsQfpJ.js";import"./ColorBackground-gVZldRLm-DXkRr50W.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./QueueProcessor-DbfV9fLy-BkAb7mV-.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./parser-DyDJ-rlI-DLxk7ym2.js";import"./ProgramTemplate-DQOm6Omy-YRxsVikh.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./StyleDefinition-Ct4HIk9T-B82pTf0h.js";import"./config-nuMERBvb-MDUrh2eL.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./featureConversionUtils-D6hFQ4Af-7zE_Etyc.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";const dt={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class mt extends Le{constructor(e=null,r=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=r,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){this._rasterTexture!==e&&(this._rasterTexture?.dispose(),this._rasterTexture=e),e==null&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(F(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||dt}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?A.LINEAR:A.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=F(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){const r=e||this.projected;return[r?this.width:this.source?.width||this.width,r?this.height:this.source?.height||this.height]}getRasterCellSize(){const e=this.rawPixelData?.srcPixelSize,{projected:r,resolution:s}=this;return e&&!r?[e.x,e.y]:[s,s]}_createTransforms(){return{displayViewScreenMat3:z()}}setTransform(e){const r=Ve(this.transforms.displayViewScreenMat3),[s,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,n=a*this.width,o=a*this.height,l=Math.PI*this.rotation/180;E(r,r,B(s,i)),E(r,r,B(n/2,o/2)),Be(r,r,-l),E(r,r,B(-n/2,-o/2)),Ge(r,r,B(n,o)),le(this.transforms.displayViewScreenMat3,e.displayViewMat3,r)}getTextures({forProcessing:e=!1,useProcessedTexture:r=!1}={}){const s=r?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],a=[];return s?(this._transformGridTexture&&!this.projected&&(a.push(this._transformGridTexture),i.push("u_transformGrid")),r?(a.push(s),i.push("u_image"),this._colormapTexture&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a}):(a.push(s),i.push("u_image"),this._colormapTexture&&!e&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a})):{names:i,textures:a}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const r=this._isValidSource(this.source);r&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(r?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=We(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach(r=>r?.dispose()),e.length=0)}_createOrDestroyRasterTexture(e){const r=this.source?.extractBands(this.bandIds);if(!this._isValidSource(r))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!e.capabilities.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource;this._rasterTexture=Ne(e,r,i,a),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const r=this._rasterTextureBandIds;return!(r==null&&e==null||r&&e&&r.join("")===e.join(""))}_isValidSource(e){return e!=null&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:r}=this.symbolizerParameters,s=r==="lut"&&!this.symbolizerParameters.isClassBreaks||r==="hillshade"||r==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||s||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const r=this._colormap,s=this.symbolizerParameters.colormap;return s?r?s.length!==r.length||s.some((i,a)=>i!==r[a])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=j(e,s),void(this._colormap=s)):void 0:(this._colormapTexture=j(e,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){!this._transformGridTexture||e&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function pt(t){return t.source!=null}function W(t){const e=[];return t&&(e.push("applyProjection"),t.spacing[0]===1&&e.push("lookupProjection")),e}function he(t,e,r){const s=!r.capabilities.textureFloatLinear,i=[];return t==="cubic"?i.push("bicubic"):t==="bilinear"&&(e?(i.push("bilinear"),i.push("nnedge")):s&&i.push("bilinear")),i}const ft={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])};function gt(t,e,r){const s=r?[]:W(e.transformGrid);return{defines:s,program:t.painter.materialManager.getProgram(ft,s)}}function _t(t,e,r,s,i=!1){const{names:a,textures:n}=r.getTextures({useProcessedTexture:i});U(t.context,e,a,n),w(e,s,r.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",r.transforms.displayViewScreenMat3);const{colormap:o,colormapOffset:l}=r.symbolizerParameters,c=q(o,l);w(e,s,c)}const yt={createProgram:gt,bindTextureAndUniforms:_t},xt={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function bt(t,e,r){const{colormap:s}=e.symbolizerParameters,i=[...r?[]:W(e.transformGrid),...he(e.interpolation,!0,t.context)];return s!=null&&i.push("applyColormap"),{defines:i,program:t.painter.materialManager.getProgram(xt,i)}}function wt(t,e,r,s,i=!1){const{names:a,textures:n}=r.getTextures({useProcessedTexture:i});U(t.context,e,a,n),w(e,s,r.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",r.transforms.displayViewScreenMat3);const o=r.symbolizerParameters,{colormap:l,colormapOffset:c}=o;if(l!=null){const u=q(l,c);w(e,s,u)}const d=Ee(o);w(e,s,{...d,u_scaling:1})}const vt={createProgram:bt,bindTextureAndUniforms:wt},Tt={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Pt(t,e,r){const{colormap:s,bandCount:i}=e.symbolizerParameters,a=[...r?[]:W(e.transformGrid),...he(e.interpolation,i===1,t.context)];return e.isRendereredSource&&!r?a.push("noop"):s!=null&&a.push("applyColormap"),{defines:a,program:t.painter.materialManager.getProgram(Tt,a)}}function St(t,e,r,s,i=!1){const{names:a,textures:n}=r.getTextures({useProcessedTexture:i});U(t.context,e,a,n),w(e,s,r.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",r.transforms.displayViewScreenMat3);const o=r.symbolizerParameters,{colormap:l,colormapOffset:c}=o;if(l!=null){const u=q(l,c);w(e,s,u)}const d=Ae(o);w(e,s,d)}const Ut={createProgram:Pt,bindTextureAndUniforms:St},O=new Map;function Rt(t){return O.get(t)}O.set("lut",yt),O.set("hillshade",vt),O.set("stretch",Ut);const It=[1,1],Ft=[2,0,0,0,2,0,-1,-1,0];function x(t,e,r,s){const{context:i,rasterFunction:a,hasBranches:n}=t,{raster:o}=a.parameters,l=n?o?.id??-1:0,c=[r.functionTextures[l]??r.rasterTexture],d=["u_image"];if(s){const u=j(i,s);r.functionTextures[100]=u,c.push(u),d.push("u_colormap")}U(i,e,d,c)}function N(t,e,r){const{rasters:s}=t.rasterFunction.parameters;if(!s)return;if(s.length<2)return x(t,e,r);const i=s.filter(a=>a.name!=="Constant").map(a=>a.id!=null&&a.name!=="Identity"?r.functionTextures[a.id]:r.rasterTexture);if(U(t.context,e,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==s.length){if(s.length===2){const a=s.findIndex(l=>l.name==="Constant"),n=a===0?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:o}=s[a].parameters;e.setUniform1f("u_image1Const",o),e.setUniformMatrix3fv("u_imageSwap",n)}else if(s.length===3){const a=[];if(s.forEach((n,o)=>n.name==="Constant"&&a.push(o)),a.length===1){const{value:n}=s[a[0]].parameters;e.setUniform1f("u_image1Const",n);const o=a[0]===0?[0,1,0,0,0,1,1,0,0]:a[0]===1?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];e.setUniformMatrix3fv("u_imageSwap",o)}else if(a.length===2){const{value:n}=s[a[0]].parameters;e.setUniform1f("u_image1Const",n);const{value:o}=s[a[1]].parameters;e.setUniform1f("u_image2Const",o);const l=s.findIndex(d=>d.name!=="Constant"),c=l===0?[1,0,0,0,1,0,0,0,1]:l===1?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];e.setUniformMatrix3fv("u_imageSwap",c)}}}}function y(t){t.setUniform2fv("u_coordScale",It),t.setUniformMatrix3fv("u_dvsMat3",Ft)}const Ct={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])};function zt(t,e){return t.painter.materialManager.getProgram(Ct,[])}function Mt(t,e,r){x(t,e,r),y(e);const s=r.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const i=r.getRasterCellSize();e.setUniform2fv("u_cellSize",i)}const Vt={createProgram:zt,bindTextureAndUniforms:Mt},Bt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Gt(t,e){const{painter:r,rasterFunction:s}=t,{indexType:i,isOutputRounded:a}=s.parameters,n=[i];return a&&n.push("roundOutput"),r.materialManager.getProgram(Bt,n)}function Lt(t,e,r){x(t,e,r),y(e);const{bandIndexMat3:s,adjustments:i}=t.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s),e.setUniform1fv("u_adjustments",i)}const Ot={createProgram:Gt,bindTextureAndUniforms:Lt},kt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/colormap2rgb",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Dt(t){const{painter:e}=t;return e.materialManager.getProgram(kt,[])}function Et(t,e,r){const{indexedColormap:s,offset:i}=t.rasterFunction.parameters;x(t,e,r,s),y(e),e.setUniform1f("u_colormapOffset",i),e.setUniform1f("u_colormapMaxIndex",s.length/4-1)}const At={createProgram:Dt,bindTextureAndUniforms:Et},jt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function qt(t,e){const r=t.rasterFunction.parameters.rasters.filter(i=>i.name==="Constant"),s=[];return r.length&&(s.push("oneConstant"),r.length===2&&s.push("twoConstant")),t.painter.materialManager.getProgram(jt,s)}function Wt(t,e,r){N(t,e,r),y(e)}const Nt={createProgram:qt,bindTextureAndUniforms:Wt},$t={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/computechange",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Qt(t){const{painter:e,rasterFunction:r}=t,{method:s,rasters:i,isOutputRounded:a}=r.parameters,n=[s.includes("-")?s.slice(0,s.indexOf("-")):s];return i.filter(o=>o.name==="Constant").length&&n.push("oneConstant"),a&&n.push("roundOutput"),e.materialManager.getProgram($t,n)}function Ht(t,e,r){N(t,e,r),y(e);const{domainRange:s}=t.rasterFunction.parameters;e.setUniform2fv("u_domainRange",s)}const Zt={createProgram:Qt,bindTextureAndUniforms:Ht},Jt={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/contrast",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Yt(t,e){return t.painter.materialManager.getProgram(Jt,[])}function Kt(t,e,r){x(t,e,r),y(e);const{contrastOffset:s,brightnessOffset:i}=t.rasterFunction.parameters;e.setUniform1f("u_contrastOffset",s),e.setUniform1f("u_brightnessOffset",i)}const Xt={createProgram:Yt,bindTextureAndUniforms:Kt},er={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])};function tr(t,e){const{painter:r,rasterFunction:s}=t,{kernelRows:i,kernelCols:a}=s.parameters,n=[{name:"rows",value:i},{name:"cols",value:a}];return r.materialManager.getProgram(er,n)}function rr(t,e,r){x(t,e,r),y(e),e.setUniform2fv("u_srcImageSize",[r.width,r.height]);const{kernel:s,clampRange:i}=t.rasterFunction.parameters;e.setUniform1fv("u_kernel",s),e.setUniform2fv("u_clampRange",i)}const sr={createProgram:tr,bindTextureAndUniforms:rr},ir={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ar(t,e){const{painter:r,rasterFunction:s}=t,{curvatureType:i}=s.parameters,a=[i];return r.materialManager.getProgram(ir,a)}function nr(t,e,r){x(t,e,r),y(e);const s=r.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const{zFactor:i}=t.rasterFunction.parameters,a=r.getRasterCellSize();e.setUniform1f("u_zlFactor",200*i/a[0]/a[1])}const or={createProgram:ar,bindTextureAndUniforms:nr},lr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ur(t,e){return t.painter.materialManager.getProgram(lr,[])}function cr(t,e,r){x(t,e,r),y(e);const{bandIndexMat3:s}=t.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const hr={createProgram:ur,bindTextureAndUniforms:cr},dr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/focalstatistics",attributes:new Map([["a_position",0],["a_texcoord",1]])};function mr(t,e){const{painter:r,rasterFunction:s}=t,{kernelRows:i,kernelCols:a,fillNoDataOnly:n,statisticsType:o}=s.parameters,l=[{name:"rows",value:i},{name:"cols",value:a},o];return n&&l.push("fill"),r.materialManager.getProgram(dr,l)}function pr(t,e,r){x(t,e,r),y(e),e.setUniform2fv("u_srcImageSize",[r.width,r.height]);const{clampRange:s}=t.rasterFunction.parameters;e.setUniform2fv("u_clampRange",s)}const fr={createProgram:mr,bindTextureAndUniforms:pr},gr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/grayscale",attributes:new Map([["a_position",0],["a_texcoord",1]])};function _r(t,e){return t.painter.materialManager.getProgram(gr,[])}function yr(t,e,r){x(t,e,r),y(e);const{weights:s}=t.rasterFunction.parameters;e.setUniform3fv("u_weights",s)}const xr={createProgram:_r,bindTextureAndUniforms:yr},br={vsPath:"raster/rfx/vs",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function wr(t,e){const{indexedColormap:r}=t.rasterFunction.parameters,s=[];return r?.length&&s.push("applyColormap"),t.painter.materialManager.getProgram(br,s)}function vr(t,e,r){const s=t.rasterFunction.parameters,{indexedColormap:i}=s;x(t,e,r,i),y(e);const a=r.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",a);const n=r.getRasterCellSize();e.setUniform2fv("u_cellSize",n);const{pixelSizeFactor:o}=s;if(o===0)e.setUniform2fv("u_factor",[s.factor[0]/n[0],s.factor[1]/n[1]]);else{const{zFactor:l,pixelSizePower:c,gcsFactor:d}=s,u=n[0]*d,m=n[1]*d,f=(l+u**c*o)/(8*u),_=(l+m**c*o)/(8*m);e.setUniform2fv("u_factor",[f,_])}e.setUniform1i("u_hillshadeType",s.hillshadeType),e.setUniform1fv("u_sinZcosAs",s.sinZcosAs),e.setUniform1fv("u_sinZsinAs",s.sinZsinAs),e.setUniform1fv("u_cosZs",s.cosZs),e.setUniform1fv("u_weights",s.weights),e.setUniform1f("u_opacity",1),e.setUniform1i("u_flipY",0),e.setUniform1f("u_scaling",255),e.setUniform1f("u_minValue",s.minValue),e.setUniform1f("u_maxValue",s.maxValue),i&&(e.setUniform1f("u_colormapOffset",s.offset),e.setUniform1f("u_colormapMaxIndex",i.length/4-1))}const ie={createProgram:wr,bindTextureAndUniforms:vr},Tr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Pr(t){const{painter:e,rasterFunction:r}=t,{imageCount:s,operationName:i,rasters:a,isOutputRounded:n}=r.parameters,o=[i.toLowerCase()];s===2&&o.push("twoImages");const l=a.filter(c=>c.name==="Constant");return l.length&&(o.push("oneConstant"),l.length===2&&o.push("twoConstant")),n&&o.push("roundOutput"),e.materialManager.getProgram(Tr,o)}function Sr(t,e,r){N(t,e,r),y(e);const{domainRange:s}=t.rasterFunction.parameters;e.setUniform2fv("u_domainRange",s)}const ae={createProgram:Pr,bindTextureAndUniforms:Sr},Ur={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Rr(t,e){const{painter:r,rasterFunction:s}=t,i=s.parameters.bandCount>1?["multiBand"]:[];return r.materialManager.getProgram(Ur,i)}function Ir(t,e,r){x(t,e,r),y(e);const{includedRanges:s,noDataValues:i}=t.rasterFunction.parameters;e.setUniform1fv("u_includedRanges",s),e.setUniform1fv("u_noDataValues",i)}const Fr={createProgram:Rr,bindTextureAndUniforms:Ir},Cr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])};function zr(t,e){const{painter:r,rasterFunction:s}=t,i=s.parameters.scaled?["scaled"]:[];return r.materialManager.getProgram(Cr,i)}function Mr(t,e,r){x(t,e,r),y(e);const{bandIndexMat3:s}=t.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const Vr={createProgram:zr,bindTextureAndUniforms:Mr},Br={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Gr(t,e){return t.painter.materialManager.getProgram(Br,[])}function Lr(t,e,r){x(t,e,r),y(e);const{noDataRanges:s,rangeMaps:i,allowUnmatched:a,clampRange:n}=t.rasterFunction.parameters;e.setUniform1fv("u_noDataRanges",s),e.setUniform1fv("u_rangeMaps",i),e.setUniform1f("u_unmatchMask",a?1:0),e.setUniform2fv("u_clampRange",n)}const Or={createProgram:Gr,bindTextureAndUniforms:Lr},kr={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Dr(t,e){const{painter:r}=t,s=[],{interpolation:i,transformGrid:a}=e,n=t.rasterFunction?.parameters;return i==="cubic"?s.push("bicubic"):i==="bilinear"&&(s.push("bilinear"),n?.requireNNEdge&&s.push("nnedge")),a&&(s.push("applyProjection"),a.spacing[0]===1&&s.push("lookupProjection")),r.materialManager.getProgram(kr,s)}function Er(t,e,r){const{names:s,textures:i}=r.getTextures({forProcessing:!0});U(t.context,e,s,i),e.setUniform1f("u_scale",1),e.setUniform2fv("u_offset",[0,0]),e.setUniform2fv("u_coordScale",[1,1]),e.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),e.setUniform1i("u_flipY",0),e.setUniform1f("u_opacity",1);const{width:a,height:n,source:o,transformGrid:l}=r;e.setUniform2fv("u_srcImageSize",[o.width,o.height]),e.setUniform2fv("u_targetImageSize",[a,n]),e.setUniform2fv("u_transformSpacing",l?l.spacing:Y),e.setUniform2fv("u_transformGridSize",l?l.size:Y)}const Ar={createProgram:Dr,bindTextureAndUniforms:Er},jr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])};function qr(t,e){const{painter:r,rasterFunction:s}=t,{slopeType:i,isOutputRounded:a}=s.parameters,n=[];return i==="percent-rise"&&n.push("percentRise"),a&&n.push("roundOutput"),r.materialManager.getProgram(jr,n)}function Wr(t,e,r){x(t,e,r),y(e);const s=r.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const i=r.getRasterCellSize();e.setUniform2fv("u_cellSize",i);const{zFactor:a,slopeType:n,pixelSizePower:o,pixelSizeFactor:l}=t.rasterFunction.parameters;e.setUniform1f("u_zFactor",a),e.setUniform1f("u_pixelSizePower",n==="adjusted"?o:0),e.setUniform1f("u_pixelSizeFactor",n==="adjusted"?l:0)}const Nr={createProgram:qr,bindTextureAndUniforms:Wr},$r={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Qr(t,e){const{useGamma:r,bandCount:s,isOutputRounded:i}=t.rasterFunction.parameters,a=[];return r&&a.push("useGamma"),s>1&&a.push("multiBand"),i&&a.push("roundOutput"),t.painter.materialManager.getProgram($r,a)}function Hr(t,e,r){x(t,e,r),y(e);const{width:s,height:i}=r,a=t.rasterFunction.parameters;e.setUniform2fv("u_srcImageSize",[s,i]),e.setUniform1f("u_minOutput",a.outMin),e.setUniform1f("u_maxOutput",a.outMax),e.setUniform1fv("u_factor",a.factor),e.setUniform1fv("u_minCutOff",a.minCutOff),e.setUniform1fv("u_maxCutOff",a.maxCutOff),e.setUniform1fv("u_gamma",a.gamma),e.setUniform1fv("u_gammaCorrection",a.gammaCorrection)}const Zr={createProgram:Qr,bindTextureAndUniforms:Hr},g=new Map;function de(t,e){const r=new Qe;return r.width=t,r.height=e,r.internalFormat=Oe.RGBA32F,r.samplingMode=A.NEAREST,r.dataType=ke.FLOAT,r.isImmutable=!0,r.wrapMode=De.CLAMP_TO_EDGE,r}function Jr(t,e,r,s){const{context:i,requestRender:a,allowDelayedRender:n}=t,o=s.createProgram(t,r);return n&&a!=null&&!o.compiled?(a(),null):(i.bindFramebuffer(e),i.setViewport(0,0,e.width,e.height),i.useProgram(o),o)}function Yr(t){return g.get(t.toLowerCase())}function Kr(t,e,r,s){const i=t.rasterFunction.name.toLowerCase(),a=i==="reproject"?Ar:Yr(i);if(a==null)return;const n=Jr(t,r,s,a);if(!n)return;a.bindTextureAndUniforms(t,n,s);const{interpolation:o}=s;i==="reproject"&&(s.interpolation="nearest"),e.draw();const[l,c]=s.getRasterTextureSize(i==="reproject"),d=de(l,c),u=new He(t.context,d);if(r.copyToTexture(0,0,l,c,0,0,u),i==="reproject")s.rasterTexture=u,s.projected=!0,s.interpolation=o;else{const m=t.hasBranches?t.rasterFunction.id:0;s.functionTextures[m]=u}}g.set("arithmetic",ae),g.set("aspect",Vt),g.set("bandarithmetic",Ot),g.set("colormaptorgb",At),g.set("computechange",Zt),g.set("compositeband",Nt),g.set("convolution",sr),g.set("contrastbrightness",Xt),g.set("curvature",or),g.set("extractband",hr),g.set("statistics",fr),g.set("grayscale",xr),g.set("hillshade",ie),g.set("shadedrelief",ie),g.set("local",ae),g.set("mask",Fr),g.set("ndvi",Vr),g.set("remap",Or),g.set("slope",Nr),g.set("stretch",Zr);class Xr extends Ze{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){F(this._quad),F(this._fbo)}prepareState(e){const{context:r,renderPass:s}=e,i=s==="raster";r.setBlendingEnabled(!i),r.setBlendFunctionSeparate(G.ONE,G.ONE_MINUS_SRC_ALPHA,G.ONE,G.ONE_MINUS_SRC_ALPHA),r.setColorMask(!0,!0,!0,!0),r.setStencilWriteMask(0),r.setStencilTestEnabled(!i)}draw(e,r){if(!pt(r)||r.suspended)return;const{renderPass:s}=e;if(s!=="raster-bitmap")return s==="raster"?this._process(e,r):void this._drawBitmap(e,r,!0);this._drawBitmap(e,r)}_process(e,r){const{rasterFunction:s}=e,i=s.name==="Reproject";if(!(i?!(r.rasterTexture&&r.projected):!r.processed))return;const{timeline:a,context:n}=e;a.begin(this.name);const o=n.getBoundFramebufferObject(),l=n.getViewport();i||(r.processedTexture=F(r.processedTexture)),n.setStencilFunction(J.EQUAL,r.stencilRef,255),r.updateTexture(e),this._initQuad(n);const[c,d]=r.getRasterTextureSize(i),{isStandardRasterTileSize:u,fbo:m}=this._getRasterFBO(n,c,d);Kr(e,this._quad,m,r),u||m.dispose(),n.bindFramebuffer(o),n.setViewport(l.x,l.y,l.width,l.height),a.end(this.name)}_drawBitmap(e,r,s=!1){const{timeline:i,context:a}=e;if(i.begin(this.name),a.setStencilFunction(J.EQUAL,r.stencilRef,255),r.updateTexture(e),s&&!r.processedTexture){if(r.updateProcessedTexture(),!r.processedTexture)return void i.end(this.name);r.processed=!0}this._initBitmapCommonUniforms(r);const n=r.symbolizerParameters.type,o=Rt(n),{requestRender:l,allowDelayedRender:c}=e,{defines:d,program:u}=o.createProgram(e,r,r.projected&&s);if(c&&l!=null&&!u.compiled)return void l();a.useProgram(u);const m=this._getUniformInfos(n,a,u,d);this._quad||(this._quad=new K(a,[0,0,1,0,0,1,1,1])),o.bindTextureAndUniforms(e,u,r,m,s),this._quad.draw(),i.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const r=$e(1,[0,0]),{transformGrid:s,width:i,height:a}=e,n=je(s,[i,a],[e.source.width,e.source.height],1,!1);e.commonUniforms={...r,...n,u_coordScale:e.coordScale}}}_getRasterFBO(e,r,s){const i=r===C&&s===C;return i?(this._fbo||(this._fbo=this._createNewFBO(e,r,s)),{isStandardRasterTileSize:i,fbo:this._fbo}):{isStandardRasterTileSize:i,fbo:this._createNewFBO(e,r,s)}}_createNewFBO(e,r,s){const i=de(r,s);return new Je(e,i)}_initQuad(e){this._quad||(this._quad=new K(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,r,s,i){const a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const n=qe(r,s);return this._rendererUniformInfos.set(a,n),n}}class es extends ue{constructor(e,r,s,i,a,n,o=null){super(e,r,s,i,a,n),this.bitmap=null,this.bitmap=new mt(o,null,null),this.bitmap.coordScale=[a,n],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:z(),tileMat3:z()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let ts=class extends ce{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(t){const e=this._getTileBounds(t),[r,s]=this.tileInfoView.tileInfo.size,i=this.tileInfoView.getTileResolution(t.level);return new es(t,i,e[0],e[3],r,s)}prepareRenderPasses(t){const e=t.registerRenderPass({name:"imagery (tile)",brushes:[Xr],target:()=>this.children.map(r=>r.bitmap),drawPhase:k.MAP});return[...super.prepareRenderPasses(t),e]}doRender(t){if(!this.visible||t.drawPhase!==k.MAP)return;const{rasterFunctionChain:e}=this;if(!e)return t.renderPass="raster-bitmap",void super.doRender(t);if(!e.hasFocalFunction){const[r,s]=this.tileInfoView.tileInfo.size;t.renderPass="raster",t.rasterFunction={name:"Reproject",parameters:{targetImageSize:[r,s],requireNNEdge:e.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(t)}if(e?.functions.length){const{functions:r,hasBranches:s}=e;for(let i=0;i<r.length;i++){const a=r[i];a.name!=="Constant"&&a.name!=="Identity"&&(t.renderPass="raster",t.rasterFunction=a,t.hasBranches=s,super.doRender(t))}}t.rasterFunction=null,t.renderPass="bitmap",super.doRender(t)}_getTileBounds(t){const e=this.tileInfoView.getTileBounds(ne(),t);if(this.isCustomTilingScheme&&t.world){const{tileInfo:r}=this.tileInfoView,s=ze(r.spatialReference);if(s){const i=r.lodAt(t.level);if(!i)return e;const{resolution:a}=i,n=a*r.size[0];e[0]=s*t.world+r.origin.x+t.col*n,e[2]=e[0]+n}}return e}};const rs=[0,0];let b=class extends ye{constructor(){super(...arguments),this._updatingHandles=new Ye,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=xe(async(t={})=>{const e=this._rasterFunctionState;if(t.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const r=this._rasterFunctionState,{type:s}=this;return t.refetch||s!=="raster"&&t.reprocess||r==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(t.signal))})}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(t){this._set("useWebGLForProcessing",t)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(t){if(this._tileStrategy&&this.useProgressiveUpdate!==t){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(t);this._tileStrategy=new se({cachePolicy:"purge",acquireTile:r=>this.acquireTile(r),releaseTile:r=>this.releaseTile(r),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",t),this.layerView.requestUpdate()}}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume();const{extent:e,resolution:r,scale:s}=t.state,i=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const a=this._srcResolutions[i.level],n=e.toJSON?e:be.fromJSON(e);ee(this._blockCacheRegistryUrl,this._blockCacheRegistryId,n,r,a,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==i.level&&(this.previousLOD=i,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(t),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const t=lt();this._maxIndexedColormapSize=4*(t.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new at(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new nt({tileInfoView:this._tileInfoView,concurrency:e,process:(s,i)=>this._fetchTile(s,i),priority:ot.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const r=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new se({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:r,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,te(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(t){const e=this.container.createTile(t);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(t){this._fetchQueue.abort(t.key.id),this.container.removeChild(t),t.once("detach",()=>{t.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(t=null){const e=t==null||t.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;t=t||this._tileInfoView.tileInfo.size;const[r,s]=t,i=new Ke({width:r,height:s,pixels:[new Uint8Array(r*s)],mask:new Uint8Array(r*s),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:t,raster:e}=this.layer,r="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return t?.length&&r?.length&&e.rasterInfo.bandCount!==1?t.map(s=>r[Math.min(s,r.length-1)]):t||r}updateRasterFunctionParameters(){}_fetchTile(t,e){const r=this._getFetchOptions(t.level,e.signal);return this.fetchTile(t,r)}_getFetchOptions(t,e){const r=this.canUseWebGLForProcessing(),{layerView:s}=this,{tileInfo:i}=s,a=!i.isWrappable&&rt(s.view.spatialReference)!=null,n=r&&this.layer.raster.hasUniqueSourceStorageInfo;return{allowPartialFill:!0,datumTransformation:s.datumTransformation,interpolation:r?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:n,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[t],timeExtent:s.timeExtent,tileInfo:i,disableWrapAround:a}}_getCacheSize(t){return t?40:0}_initializeTileInfo(){const{layerView:t}=this,e=t.view.spatialReference;if(this._canUseLayerLODs()){const{origin:c,lods:d}=this.layer.tileInfo,u=d.map(({scale:f})=>f),m=X.create({spatialReference:e,size:C,scales:u,origin:c});return t.set("tileInfo",m),void(this._srcResolutions=d.map(({resolution:f})=>({x:f,y:f})))}const{scales:r,srcResolutions:s,isCustomTilingScheme:i}=st(this.layer.serviceRasterInfo,e,{tileSize:C,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:!1}),a=X.create({spatialReference:e,size:C,scales:r}),n=a.origin.x===0;we(t.fullExtent);const{xmin:o,ymax:l}=t.fullExtent;(n||i&&a.origin.x>o)&&(a.origin=new ve({x:o,y:l,spatialReference:e})),this._isCustomTilingScheme=i,t.set("tileInfo",a),this._srcResolutions=s??[]}_canUseLayerLODs(){const{layer:t,layerView:e}=this;if(t.raster.tileType!=="Map")return!1;const{lods:r}=t.tileInfo,s=e.view.constraints?.effectiveLODs;return s?.length===r.length&&s.every(({scale:i},a)=>Math.abs(i-r[a].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:t}=this.layer.serviceRasterInfo.storageInfo,e=t[t.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(t,e){if(!this._fetchQueue.has(t.key.id)){try{const r=await this._fetchQueue.push(t.key),s=this._getBandIds();let i=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){i=!1;try{await this._redrawImage(this._abortController?.signal)}catch(o){R(o)&&I.getLogger(this).error(o)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(rs,t.key),n=this._tileInfoView.getTileResolution(t.key);await this.updateTileSource(t,{source:r,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:i,bandIds:s,coords:a,resolution:n}),t.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(t)}catch(r){R(r)||I.getLogger(this).error(r)}this.layerView.requestUpdate()}}async _redrawImage(t){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(t):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async r=>this.updateTileSymbolizerParameters(r,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(t){const e=this._getFetchOptions(this.previousLOD.level,t),r=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!r?.pixelBlock)return;const{resolution:s}=this.previousLOD,i=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:r.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:s,y:s},bandIds:i});!this.canUseWebGLForProcessing()&&a&&a.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(a.factor=a.factor.map(n=>255*n),a.outMin=Math.round(255*a.outMin),a.outMax=Math.round(255*a.outMax)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:t}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:t,y:t},bandIds:e})}_updateBlockCacheRegistry(t=!1){const{layer:e,layerView:r}=this,{raster:s}=e,{multidimensionalDefinition:i}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:r.timeExtent}),a=s.rasterInfo.multidimensionalInfo?s.getSliceIndex(i):null,n=et(s.rasterId,a);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&te(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=tt(n,s.rasterInfo),t){const{view:o}=r,l=this._tileInfoView.getClosestInfoForScale(o.scale),c=this._srcResolutions[l.level];ee(n,this._blockCacheRegistryId,o.extent,o.resolution,c,s.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const t=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>t.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(t))}};h([p()],b.prototype,"_globalUpdateRequested",void 0),h([p()],b.prototype,"attached",void 0),h([p()],b.prototype,"container",void 0),h([p()],b.prototype,"layer",void 0),h([p()],b.prototype,"layerView",void 0),h([p()],b.prototype,"scheduler",void 0),h([p()],b.prototype,"type",void 0),h([p()],b.prototype,"useWebGLForProcessing",null),h([p()],b.prototype,"useProgressiveUpdate",null),h([p()],b.prototype,"timeExtent",void 0),h([p()],b.prototype,"updating",null),b=h([M("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],b);let P=class extends b{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new ts(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){const{symbolizer:t}=this.layer,e=t.lookup?.colormapLut?.indexedColormap,r=e&&e.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&t.canRenderInWebGL&&!r&&!(this.layer.interpolation==="majority"&&oe(this.layer))}fetchTile(t,e){return this.layer.fetchTile(t.level,t.row,t.col,e)}updateRasterFunctionParameters(){const{clips:t,view:e}=this.layerView;this._geometry!=null&&t.remove(this._geometry);const{raster:r,type:s}=this.layer;if(r.datasetFormat==="Function"){const f=r.getClippingGeometry(e.spatialReference);if(f){const _=new Fe({geometry:f});t.add(_),this._geometry=_}}const{container:i}=this;if(r.datasetFormat!=="Function"||s==="wcs")return i.rasterFunctionChain=null,i.children.forEach(f=>{const{bitmap:_}=f;_&&(_.suspended=!0,_.processed=!1,_.projected&&(_.invalidateTexture(),_.rasterTexture=null))}),void(this._rasterFunctionState="na");const a=this._rasterFunctionState,{rasterFunction:n,primaryRasters:o}=r,l=n.supportsGPU&&(!o||o.rasters.length<=1),c=l?n.flatWebGLFunctionChain:null,{renderer:d}=this.layer,u=!l||!c?.functions.length||d?.type==="raster-stretch"&&d.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();i.rasterFunctionChain=u?null:c;const m=n==null?"na":i.rasterFunctionChain?"gpu":"cpu";i.children.forEach(f=>{const{bitmap:_}=f;_&&(_.suspended=a!==m,_.processed=!1,_.processedTexture=null)}),this._rasterFunctionState=m}async updateTileSource(t,e){const r=this._getBandIds(),s=this._getLayerInterpolation(),i=this.canUseWebGLForProcessing(),{source:a,globalSymbolizerParams:n,suspended:o,coords:l,resolution:c}=e,d=this.layerView.hasTilingEffects?n:e.symbolizerParams,{bitmap:u}=t;if([u.x,u.y]=l,u.resolution=c,a?.pixelBlock!=null){const m={extent:a.extent,pixelBlock:a.pixelBlock,srcPixelSize:a.srcTilePixelSize};if(u.rawPixelData=m,i)u.source=a.pixelBlock,u.isRendereredSource=!1;else{const f=await this.layer.applyRenderer(m,n?.type==="stretch"?n:void 0);u.source=f,u.isRendereredSource=!0}u.symbolizerParameters=i?d:null,u.transformGrid=i?a.transformGrid:null}else{const m=this.createEmptyTilePixelBlock();u.source=m,u.symbolizerParameters=i?d:null,u.transformGrid=null}u.bandIds=i?r:null,u.width=this._tileInfoView.tileInfo.size[0],u.height=this._tileInfoView.tileInfo.size[1],u.interpolation=s,u.suspended=o,u.invalidateTexture()}async updateTileSymbolizerParameters(t,e){const{local:r,global:s}=e,i=this._getBandIds(),a=this._getLayerInterpolation(),n=this.canUseWebGLForProcessing(),{bitmap:o}=t,{rawPixelData:l}=o;n||l==null?(o.isRendereredSource&&l!=null&&(o.source=l.pixelBlock),o.isRendereredSource=!1):(o.source=await this.layer.applyRenderer(l,s?.type==="stretch"?s:void 0),o.isRendereredSource=!0),o.symbolizerParameters=n?this.layerView.hasTilingEffects?s:r:null,o.bandIds=n?i:null,o.interpolation=a,o.suspended=!1}_getLayerInterpolation(){const{interpolation:t,renderer:e}=this.layer;if(!e)return t;const r=e.type;return r==="raster-colormap"||r==="unique-value"?"nearest":e.type==="raster-stretch"&&e.colorRamp!=null?t==="bilinear"||t==="cubic"?"bilinear":"nearest":t}};h([p()],P.prototype,"container",void 0),h([p()],P.prototype,"layer",void 0),h([p()],P.prototype,"type",void 0),P=h([M("esri.views.2d.layers.imagery.ImageryTileView2D")],P);const ss=P;class is extends ue{constructor(e,r,s,i,a,n,o=null){super(e,r,s,i,a,n),this.tileData=new Re(o),this.tileData.coordScale=[a,n],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:z(),tileMat3:z()}}setTransform(e){super.setTransform(e);const r=this.resolution/(e.resolution*e.pixelRatio),s=this.transforms.tileMat3,[i,a]=this.tileData.offset,n=[this.x+i*this.resolution,this.y-a*this.resolution],[o,l]=e.toScreenNoRotation([0,0],n),{symbolTileSize:c}=this.tileData.symbolizerParameters,d=Math.round((this.width-this.tileData.offset[0])/c)*c,u=Math.round((this.height-this.tileData.offset[1])/c)*c,m=d/this.rangeX*r,f=u/this.rangeY*r;Me(s,m,0,0,0,f,0,o,l,1),le(this.transforms.displayViewScreenMat3,e.displayViewMat3,s),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class as extends ce{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const r=this.tileInfoView.getTileBounds(ne(),e),[s,i]=this.tileInfoView.tileInfo.size,a=this.tileInfoView.getTileResolution(e.level);return new is(e,a,r[0],r[3],s,i)}prepareRenderPasses(e){const r=e.registerRenderPass({name:"imagery (vf tile)",brushes:[Ue],target:()=>this.children.map(s=>s.tileData),drawPhase:k.MAP});return[...super.prepareRenderPasses(e),r]}doRender(e){this.visible&&e.drawPhase===k.MAP&&this.symbolTypes.forEach(r=>{e.renderPass=r,super.doRender(e)})}}let S=class extends b{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(t,e){e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const r=await this.layer.fetchTile(t.level,t.row,t.col,e);return this.layer.serviceRasterInfo?.dataType==="vector-magdir"&&r?.pixelBlock&&(r.pixelBlock=await this.layer.convertVectorFieldData(r.pixelBlock,e)),r}updateTileSource(t,e){const r=e.symbolizerParams,{tileData:s}=t;s.key=t.key,s.width=this._tileInfoView.tileInfo.size[0],s.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=r,{source:a}=e;if(s.offset=this._getTileSymbolOffset(s.key,i),a?.pixelBlock!=null){const n={extent:a.extent,pixelBlock:a.pixelBlock};s.rawPixelData=n,s.symbolizerParameters=r,s.source=this._sampleVectorFieldData(a.pixelBlock,r,s.offset)}else{const n=[Math.round((this._tileInfoView.tileInfo.size[0]-s.offset[0])/i),Math.round((this._tileInfoView.tileInfo.size[1]-s.offset[1])/i)],o=this.createEmptyTilePixelBlock(n);s.source=o,s.symbolizerParameters=r}return s.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(t,e){const r=e.local,{symbolTileSize:s}=r,{tileData:i}=t;i.offset=this._getTileSymbolOffset(i.key,s);const a=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=r;const n=i.rawPixelData?.pixelBlock;return n!=null&&a!==s&&(i.source=this._sampleVectorFieldData(n,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new as(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=L(()=>this.layer.renderer,t=>this._updateSymbolType(t))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(t,e){const r=t.col*this._tileInfoView.tileInfo.size[0]%e,s=t.row*this._tileInfoView.tileInfo.size[1]%e;return[r>e/2?e-r:-r,s>e/2?e-s:-s]}_sampleVectorFieldData(t,e,r){const{symbolTileSize:s}=e;return Xe(t,"vector-uv",s,r)}_updateSymbolType(t){t.type==="vector-field"&&(this.container.symbolTypes=t.style==="wind-barb"?["scalar","triangle"]:t.style==="simple-scalar"?["scalar"]:["triangle"])}};h([p()],S.prototype,"container",void 0),h([p()],S.prototype,"layer",void 0),h([p()],S.prototype,"type",void 0),S=h([M("esri.views.2d.layers.imagery.VectorFieldTileView2D")],S);const ns=S,os=t=>{let e=class extends t{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){return ut(this.layer,this.view?.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?it(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(r){try{return!this.layer.loaded||!!re(this.layer.serviceRasterInfo,r)}catch{return!1}}async fetchPopupFeaturesAtLocation(r,s){const{layer:i}=this;if(!r)throw new Te("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:a}=i,n=ct(i,s);if(!a||n==null)return[];const o=[],{value:l,magdirValue:c,processedValue:d}=await i.identify(r,{timeExtent:this.timeExtent,signal:s?.signal});let u="";if(l?.length){u=i.type==="imagery-tile"&&i.hasStandardTime()&&l[0]!=null?l.map(D=>i.getStandardTimeValue(D)).join(", "):l.join(", ");const m={ObjectId:0},f="Raster.ServicePixelValue";m[f]=i.type==="imagery-tile"&&i.raster.datasetFormat==="Function"?d?.join(", "):u,m[f+".Raw"]=u;const _=i.raster?.rasterInfo??i.serviceRasterInfo,$=_?.attributeTable;if($!=null){const{fields:D,features:pe}=$,H=D.find(({name:v})=>v.toLowerCase()==="value"),fe=m[f],V=H?pe.find(v=>String(v.attributes[H.name])===fe):null;if(V)for(const v in V.attributes)V.attributes.hasOwnProperty(v)&&(m[this._rasterFieldPrefix+v]=V.attributes[v])}const Q=_?.dataType;Q!=="vector-magdir"&&Q!=="vector-uv"||(m["Raster.Magnitude"]=c?.[0],m["Raster.Direction"]=c?.[1]);const me=new Pe({geometry:this.fullExtent?.clone(),attributes:m,layer:i,sourceLayer:i});o.push(me)}return o}_getFullExtent(){return re(this.layer.serviceRasterInfo,this.view.spatialReference)}};return h([p()],e.prototype,"fullExtent",null),h([p()],e.prototype,"layer",void 0),h([p({readOnly:!0})],e.prototype,"timeExtent",null),h([p()],e.prototype,"tileInfo",void 0),h([p({readOnly:!0})],e.prototype,"hasTilingEffects",null),h([p()],e.prototype,"datumTransformation",null),e=h([M("esri.views.layers.ImageryTileLayerView")],e),e};let T=class extends os(ht(Ie(Ce))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(t){this._useWebGLForProcessing=t,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=t)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(t){this._useProgressiveUpdate=t,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=t)}get displayParameters(){const{layer:t}=this,e=this._get("displayParameters");return t.renderer?{bandIds:t.bandIds,renderer:t.renderer,interpolation:t.interpolation,multidimensionalDefinition:t.multidimensionalDefinition,rasterFunction:t.type==="imagery-tile"?t.rasterFunction:null}:e}update(t){this.subview?.update(t),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([L(()=>this.displayParameters,(t,e)=>{const r=t.interpolation!==e?.interpolation&&(t.interpolation==="majority"||e?.interpolation==="majority")&&oe(this.layer),s=t.renderer!==e?.renderer&&this._getSubviewType(e?.renderer)!==this._getSubviewType(t.renderer);s&&this._updateSubview();const i=t.multidimensionalDefinition!==e?.multidimensionalDefinition,a=t.rasterFunction!==e?.rasterFunction,n=a&&!this._useWebGLForProcessing,o=i||r||s||n;this.subview.redrawOrRefetch({refetch:o,reprocess:a}).catch(l=>{R(l)||I.getLogger(this).error(l)}),this.notifyChange("updating")}),L(()=>this.layer.multidimensionalSubset??null,(t,e)=>{const{multidimensionalDefinition:r}=this.layer;r!=null&&Z(r,t)!==Z(r,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(s=>{R(s)||I.getLogger(this).error(s)}),this.notifyChange("updating"))},ge),L(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(t=>{R(t)||I.getLogger(this).error(t)})},_e)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:t}=this.layer;if(!t)return;const e=this._getSubviewType(t);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:r}=this;let s;if(s=e==="rasterVF"?new ns({layer:r,layerView:this,scheduler:this.scheduler}):e==="flow"?new Se({layer:r,layerView:this,scheduler:this.scheduler}):new ss({layer:r,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in s&&(s.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in s&&(s.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in s){const{subview:i}=this;s.previousLOD=i&&"previousLOD"in i?i.previousLOD:null}this._attachSubview(s),this.subview=s,this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}_getSubviewType(t){const e=t?.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};h([p()],T.prototype,"subview",void 0),h([p()],T.prototype,"useWebGLForProcessing",null),h([p()],T.prototype,"useProgressiveUpdate",null),h([p({readOnly:!0})],T.prototype,"displayParameters",null),T=h([M("esri.views.2d.layers.ImageryTileLayerView2D")],T);const ki=T;export{ki as default};
