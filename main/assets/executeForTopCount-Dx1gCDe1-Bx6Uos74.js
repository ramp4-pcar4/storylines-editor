import{y as i}from"./utils-9sQxfkoa-Bb8v35tO.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-BAyUqEgk.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DZ6X4Irj.js";import"./main-DeajL4rl.js";import"./normalizeUtils-Bxmy9MNI-DXZHz3_j.js";import"./normalizeUtilsCommon-CRJlkfEA-Ctq9x6zp.js";import"./utils-Bq23Xwmj-2NSCMga5.js";import"./query-DFW9-NG_-eiERjKe5.js";import"./pbfQueryUtils-F4ZE8-K8-C9dULKgv.js";import"./pbf-D-y3_eZO-CvB515-C.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BIJiq6kB.js";import"./projection-BA9M1R7d-C3yCU3LQ.js";import"./projectBuffer-CvCBvJ6W-Mu6EfnRO.js";import"./TimeExtent-Cn0Jofqr-eV7g1HCB.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
