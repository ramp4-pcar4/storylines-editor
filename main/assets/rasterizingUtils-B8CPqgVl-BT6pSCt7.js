import{l as I}from"./floatRGBA-YJlz5IlR-B5_mu0Vq.js";import{a8 as D,jt as A}from"./main-DK5A1thH.js";import{n as R}from"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import{J as b}from"./definitions-CBIQmVpq-o3EUznKY.js";const z=15.5,x=4,L=64,j=1024,v=()=>D.getLogger("esri.symbols.cim.rasterizingUtils"),P=32,U=t=>t==="vertical"||t==="horizontal"||t==="cross"||t==="esriSFSCross"||t==="esriSFSVertical"||t==="esriSFSHorizontal";function W(t,i,a){const n=i.style,e=A(Math.ceil(a)),o=U(n)?8*e:16*e,r=2*e;t.width=o,t.height=o;const s=t.getContext("2d");s.strokeStyle="#ffffff",s.lineWidth=e,s.beginPath(),n!=="vertical"&&n!=="cross"&&n!=="esriSFSCross"&&n!=="esriSFSVertical"||(s.moveTo(o/2,-r),s.lineTo(o/2,o+r)),n!=="horizontal"&&n!=="cross"&&n!=="esriSFSCross"&&n!=="esriSFSHorizontal"||(s.moveTo(-r,o/2),s.lineTo(o+r,o/2)),n!=="backward-diagonal"&&n!=="diagonal-cross"&&n!=="esriSFSDiagonalCross"&&n!=="esriSFSBackwardDiagonal"||(s.moveTo(-r,-r),s.lineTo(o+r,o+r),s.moveTo(o-r,-r),s.lineTo(o+r,r),s.moveTo(-r,o-r),s.lineTo(r,o+r)),n!=="forward-diagonal"&&n!=="diagonal-cross"&&n!=="esriSFSForwardDiagonal"&&n!=="esriSFSDiagonalCross"||(s.moveTo(o+r,-r),s.lineTo(-r,o+r),s.moveTo(r,-r),s.lineTo(-r,r),s.moveTo(o+r,o-r),s.lineTo(o-r,o+r)),s.stroke();const h=s.getImageData(0,0,t.width,t.height),l=new Uint8Array(h.data);let f;for(let c=0;c<l.length;c+=4)f=l[c+3]/255,l[c]=l[c]*f,l[c+1]=l[c+1]*f,l[c+2]=l[c+2]*f;return[l,t.width,t.height,e]}function K(t){t.length%2==1&&(t=[...t,...t]);const i=t.reduce((c,m)=>c+m,0),a=Math.round(i*x),n=1,e=new Float32Array(a*n);let o=0,r=0,s=.5,h=!0;for(const c of t){for(o=r,r+=c*x;s<=r;){const m=s-.5,u=Math.min(Math.abs(s-o),Math.abs(s-r));e[m]=h?-u:u,s++}h=!h}const l=e.length,f=new Uint8Array(4*l);for(let c=0;c<l;++c){const m=e[c]/x;I(m/L*.5+.5,f,4*c)}return[f,a,n]}function O(t,i){t==null&&(t=[]);const a=i==="Butt",n=i==="Square",e=!a&&!n;t.length%2==1&&(t=[...t,...t]);const o=z,r=2*o;let s=0;for(const g of t)s+=g;const h=Math.round(s*o),l=new Float32Array(h*r),f=.5*o;let c=0,m=0,u=.5,M=!0;for(const g of t){for(c=m,m+=g*o;u<=m;){let p=.5;for(;p<r;){const $=(p-.5)*h+u-.5,d=e?(p-o)*(p-o):Math.abs(p-o);l[$]=M?a?Math.max(Math.max(c+f-u,d),Math.max(u-m+f,d)):d:e?Math.min((u-c)*(u-c)+d,(u-m)*(u-m)+d):n?Math.min(Math.max(u-c,d),Math.max(m-u,d)):Math.min(Math.max(u-c+f,d),Math.max(m+f-u,d)),p++}u++}M=!M}const F=l.length,T=new Uint8Array(4*F);for(let g=0;g<F;++g){const p=(e?Math.sqrt(l[g]):l[g])/o;I(p,T,4*g)}return[T,h,r]}function Y(t,i){const{colorRamp:a,gradientType:n}=i,e=a.type==="CIMFixedColorRamp",o=i.interval||R.CIMGradientFill.interval;let r=w(a);return e&&(r=N(r,o)),n==="Discrete"||e?E(t,r,o):q(t,r)}let y;function Z(t,i){const{colorRamp:a,gradientType:n}=i,e=w(a),o=a.type==="CIMFixedColorRamp";if(n==="Continuous"&&!o)return C(t,e);const r=i.interval??R.CIMGradientFill.interval;if(o)return C(t,N(e,r));const s=[];y??=document.createElement("canvas"),S(y,e,r,1,0);const h=y.getContext("2d").getImageData(0,0,r,1).data;for(let l=0,f=0;l<r;l++,f=4*l){const c=[h[f+0],h[f+1],h[f+2],h[f+3]];s.push({offset:l/r,color:c}),s.push({offset:(l+1)/r,color:c})}return C(t,s)}function w(t){const i=[];switch(t.type){case"CIMPolarContinuousColorRamp":case"CIMLinearContinuousColorRamp":{t.type==="CIMPolarContinuousColorRamp"&&v().warnOnce("CIMPolarContinuousColorRamp is currently unsupported. Falling back to CIMLinearContinuousColorRamp.");const a=t;i.push({offset:0,color:[a.fromColor[0],a.fromColor[1],a.fromColor[2],a.fromColor[3]/255]}),i.push({offset:1,color:[a.toColor[0],a.toColor[1],a.toColor[2],a.toColor[3]/255]});break}case"CIMFixedColorRamp":{const a=t,n=1/(a.colors.length-1);let e=0;for(const o of a.colors)i.push({offset:e,color:[o[0],o[1],o[2],o[3]/255]}),e+=n;break}case"CIMMultipartColorRamp":{const a=t,n=a.weights.reduce((o,r)=>o+r,0);let e=0;for(let o=0;o<a.colorRamps.length;o++){const r=a.colorRamps[o],s=a.weights[o],h=w(r);for(const l of h)i.push({offset:(e+l.offset*s)/n,color:l.color});e+=s}break}default:v().error(`Color ramp "${t.type}" currently unsupported.`)}return i}function N(t,i){const a=[],n=(t.length-1)/(i-1);for(let e=0;e<i;e++){const o=t[Math.round(e*n)].color;a.push({offset:e/i,color:o}),a.push({offset:(e+1)/i,color:o})}return a}function q(t,i){return S(t,i,P,1,b),k(t)}function E(t,i,a){return S(t,i,a,1,b),k(t)}function C(t,i,a=0){for(const{offset:n,color:e}of i)t.addColorStop(Math.min(Math.max(n,a),1-a),`rgba(${e[0]}, ${e[1]}, ${e[2]}, ${e[3]})`)}function S(t,i,a,n,e){const o=a+2*e;t.width=o,t.height=n;const r=(e+1)/o,s=t.getContext("2d",{willReadFrequently:!0});if(i.length>0){const h=s.createLinearGradient(0,0,o,n);C(h,i,r),s.fillStyle=h}else s.fillStyle="rgba(128, 128, 128, 1)";s.fillRect(0,0,o,n)}function k(t){const{width:i,height:a}=t,n=t.getContext("2d").getImageData(0,0,i,a),e=new Uint8Array(n.data);for(let o=0;o<e.length;o+=4){const r=e[o+3]/255;e[o]*=r,e[o+1]*=r,e[o+2]*=r}return[e,i,a]}function G(t){const i=t[0]?.[0]?.[0]??0,a=t[0]?.[0]?.[1]??0,n={ymin:a,xmin:i,ymax:a,xmax:i,width:0,height:0};for(let e=0;e<t.length;e++){const o=t[e];for(let r=0;r<o.length;r++){const s=o[r][0],h=o[r][1];s<n.xmin&&(n.xmin=s),s>n.xmax&&(n.xmax=s),h<n.ymin&&(n.ymin=h),h>n.ymax&&(n.ymax=h)}}return n.width=Math.abs(n.xmax-n.xmin),n.height=Math.abs(n.ymax-n.ymin),n}function Q(t,i){const a=G(t),n=a.width===0?1:a.width,e=a.height===0?1:a.height,o=[];for(let r=0;r<t.length;r++){const s=t[r],h=[];for(let l=0;l<s.length;l++){let f=Math.round(s[l][0]-a.xmin),c=Math.round(s[l][1]-a.ymin);if(f=i.xmin+f*i.width/n,c=i.ymin+c*i.height/e,isNaN(f)||isNaN(c))throw new Error("Scaled shape has NaN values");h.push([f,c])}o.push(h)}return o}function X(t,i,a){const n=[];for(let e=0;e<t.length;e++){const o=t[e],r=[];for(let s=0;s<o.length;s++){const h=o[s][0]+i,l=o[s][1]+a;if(isNaN(h)||isNaN(l))throw new Error("Scaled shape has NaN values");r.push([h,l])}n.push(r)}return n}export{O as B,x as C,W as E,K as G,Y as H,L as I,Q as J,X as K,j as L,Z as V};
