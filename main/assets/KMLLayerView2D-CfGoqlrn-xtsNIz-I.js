import{v as c,S as u,o as U,n as F,l as T,N as B,a0 as z,a1 as G,ao as W,ak as C,ar as j,cj as K,A,Q as O,X as Y}from"./main-vBMuZyvK.js";import{K as H,O as E}from"./projectionUtils-B-CplN3q-C1qXeznp.js";import{L as M,j as Q,M as J}from"./kmlUtils-in2U-qbi-sCrsdxSn.js";import{m as X}from"./utils-BO8hgPs3-3Vp7LTLT.js";import{o as P}from"./GraphicsCollection-uWAVmks7-CNZp94i7.js";import{B as Z,M as tt,h as it}from"./BitmapTechnique-CHUhq2KJ-CH9x0N1t.js";import{n as et}from"./BitmapContainer-CRol5kLe-CIU60sgQ.js";import{G as rt}from"./LayerView2D-BaefGYf9-CjJjsPcT.js";import{d as R}from"./GraphicContainer-c1LxUVI--DiXuqvob.js";import{b as k}from"./GraphicsView2D-D4hKcKkn-C0xnfSSL.js";import{t as ot}from"./LayerView-DdANuT-Y-C8TrMP5o.js";import{execute as at}from"./projectOperator-BEghhU44-tGHEIUYe.js";import{I as st,D as nt,W as pt}from"./rasterProjectionHelper-DGqzGF1m-Cci2LLjm.js";import{w as lt,F as mt,R as ht}from"./RenderingContext-Ce9q3uBe-DGYHBdPG.js";import{U as q,F as ct,Y as dt}from"./enums-wEDHPbCF-Cf76M5_x.js";import{d as ut}from"./FramebufferObject-D3QloItC-DzBitGCJ.js";import{F as gt}from"./rasterUtils-CV4tTwvB-DHtqF8A0.js";import{Y as L,_ as _t}from"./Texture-D5XWO2GQ-B9ztnTmU.js";import"./jsonUtils-CzRaZnmS-DMiYTEQ-.js";import"./typeUtils-CB2EGBWO-BKCiA9yi.js";import"./ClassBreaksRenderer-Bq2XGpfI-CDLm825B.js";import"./commonProperties-CJLeiNuA-BeENDdSO.js";import"./colorRamps-trM-CPFS-OvnrHBlR.js";import"./ColorStop-CL7v3R-A-CQx6NB0D.js";import"./visualVariableUtils-BTS148WR-BEDg0Ojy.js";import"./lengthUtils-C61nRlXw-CS00HAbV.js";import"./RendererLegendOptions-Bil_IDab-xB8_25Is.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./DictionaryScriptEvaluator-DW5hOK9A-BIDjhM7z.js";import"./Version-CnwD6MZa-EXzq8ind.js";import"./FieldsIndex-Bt0Y8aWr-C6cfuuHq.js";import"./UnknownTimeZone-DxjyzFvs-Bt8Uzg1z.js";import"./timeZoneUtils-d5p0Jda1-C4yYPkDJ.js";import"./ArcadeExpression-XjY3x7KV-CFaTjlHg.js";import"./TimeOnly-CGkId3bj-B4nKSVSA.js";import"./enum-g1DWyQyu-DWu83cXd.js";import"./utils-BfXZnjCE-DHXuvUlZ.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./heatmapUtils-DRTN9U3a-D1e9OU5h.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./SimpleRenderer-C1YRhRzu-BFyp9s8Z.js";import"./UniqueValueRenderer-CLXHFtg9-BHZ3xxr3.js";import"./diffUtils-BxG8DCnW-BDkNMFjF.js";import"./styleUtils-DBPDLVBX-B7jZKSYv.js";import"./FeatureSet-BVGGhhH9-LeycuGns.js";import"./Field-BIQ-quF4-CkbjyeyX.js";import"./fieldType-PhcL4ff8-BIiNXbI2.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./MapView-DVZSZHRJ-B3TTceJn.js";import"./Cyclical-DgD7_U1C-nEw25xDw.js";import"./CollectionFlattener-DyEG1Q6J-CmhF0L_r.js";import"./workers-CeRXsnNJ-C8ztMgMF.js";import"./Queue-DV3gpSdl-CslkfRYt.js";import"./intl-BAA1onnp-ClIvoOM4.js";import"./TileInfo-U28GysF5-BJWkWpwG.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./jsxFactory-Cua8zWVZ-NSEvef5J.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./sanitizerUtils-B1yRmbO2-B7KG_jBT.js";import"./UpdatingHandles-Bd2FQ26N-UF3QF4ys.js";import"./asyncUtils-BPUlNCrX-CSo1jvBZ.js";import"./utils-Dd8gTonD-B3_Vizdr.js";import"./Map-7V1pm_Jo-DBgNmw4M.js";import"./Basemap-C_NhFN5u-DhpsygC_.js";import"./loadAll-DQWsVoX1-DY0Yr79K.js";import"./PortalItem-BP-IQXnZ-BBb-Is-Z.js";import"./writeUtils-DAOvycBP-BkE4IC4K.js";import"./persistable-DgPk2hdg-Dfh2L2GM.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./resourceExtension-DCCj0Izs-DyCnFhbF.js";import"./PolygonCollection-Btw6sA7T-JfK4RDSZ.js";import"./editableLayers-DFUBlMJy-BxQAxYxy.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-C-PfZJuw.js";import"./TablesMixin-BORwbVPt-BUlLsZ10.js";import"./Layer-DvVVmz9x-XzOV7s-8.js";import"./TimeExtent-Cf2Pienb-5MjZba-P.js";import"./HeightModelInfo-C4voFc4k-DVuuQg0o.js";import"./ReactiveMap-iPeM8evD-Dc6-282A.js";import"./Query-n1aoaaFC-DpS6uvXH.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./mat2df64-DDXwUeaJ-Tu7q-7Mk.js";import"./a11yUtils-CoCwThtH-DyxyIBZd.js";import"./projectionUtils-Dt6hj1Xh-QZDeYS4Q.js";import"./ViewingMode-CdRKcXnc-Dab70bGf.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-u00NGW3M-Bworhcz6.js";import"./normalizeUtilsCommon-ClagynAA-DDGjg8Ur.js";import"./utils-DpLVEUvg-C7aLqtJf.js";import"./mat2df32-fg3OHsAI-BF2V2zqo.js";import"./vec2f32-hTAvipMV-C0AQcwEv.js";import"./Scheduler-BV4C4cVP-BVFc3yBE.js";import"./debugFlags-8tOwPnHK-DpXTcIsu.js";import"./vec32-Cj8pVsU0-DGW7tGEH.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./enums-CQnCd4Rx-BH311h3Y.js";import"./TileKey-_zikB14n-Cv86vSIw.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./definitions-MCCItX4r-o3EUznKY.js";import"./imageUtils-D3tfFRL_-B5bSMQ5B.js";import"./capabilities-BaKzUyhi-y5w2NMiP.js";import"./modeUtils-deizL-Tg-C4WiXKJs.js";import"./ILyr3DWasmPerSceneView-ChV4bxX0-B4BXvxji.js";import"./ColorBackground-C0D6MT0d-CTBrOVYc.js";import"./getDataTypeBytes-DYbftOSj-BNZIboqJ.js";import"./Container-Dr2EdOEZ-CJrbqmYR.js";import"./EffectView-Bpu5U548-CpwfjtvR.js";import"./parser-CWccHtwJ-DdDAgsO1.js";import"./GraphShaderModule-Baq-N_YO-DC9rpEUt.js";import"./ProgramTemplate-C4wmhGXE-Bssa4yYo.js";import"./ShaderBuilder-CU5v4tk1-BOCk1911.js";import"./BindType-CKbZk6AG-Bqvzo9NX.js";import"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import"./bitmapUtils-CAdCGIbP-nMBsdXPe.js";import"./WGLContainer-qQmF3DRB-RpRclRn6.js";import"./Utils-Co3xiu1z-AD-P4RRn.js";import"./BoundingBox-DlCd_wcU-DBB4UfPl.js";import"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";import"./VertexArrayObject-CieliEx4-CiBJUnW3.js";import"./memoryEstimations-DeWfxwaV-BavtGa0I.js";import"./vec3f32-GX_cKsFD-UJPpzdNc.js";import"./StyleDefinition-BOKVAZI1-BlGlrLNa.js";import"./config-CmYJx2vm-DFBdNYhW.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./featureConversionUtils-Bjjlcfdo-BOccUCLd.js";import"./OptimizedFeature-mIz_HhJg-BNCh1HkO.js";import"./OptimizedGeometry-pzfNw1AT-BEv8IsCn.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./layerViewUtils-DLIaYA64-BGOOQnLb.js";import"./AGraphicContainer-DtNijdEa-DMdsMUQ-.js";import"./TechniqueInstance-CwLUZ8IR-CjN2vufi.js";import"./UpdateTracking2D-GEad80KZ-CmHRvJri.js";import"./TileContainer-CAC1uSjc-Clehof4g.js";import"./FeatureCommandQueue-C2MKcQFq-DoEXpOS5.js";import"./CIMSymbolHelper-34UsTwam-CHoFmTlJ.js";import"./BidiEngine-DusKzrO8-BlAgW8mu.js";import"./fontUtils-C37p4Hgq-DohgdDSc.js";import"./GeometryUtils-B8e3Iwyx-QTfIebsD.js";import"./rasterizingUtils-1wASRzSP-cE5bQB5C.js";import"./floatRGBA-DRFmbkvz-BKFele2R.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./utils-OrDMNKn4-4LAm5L29.js";import"./constants-oLcGh8d3-CJuD0gcX.js";import"./streamLayerUtils-Dae818Yl-CG3QJc_N.js";import"./QueueProcessor-BSpvDXZs-Dy3H5gJo.js";import"./OverrideHelper-DgyARgwI-DhDD01hB.js";import"./colorUtils-Eg6lOlXm-D-4dJ3Lo.js";import"./callExpressionWithFeature-Bk8k1lJI-DquiKzE4.js";import"./quantizationUtils-D907S7Bm-DfY6ER8-.js";import"./AttributeStore-Oa0mwyTc-CRY6RO6c.js";import"./labelUtils-Oapo6DRu-MGUqt0V9.js";import"./queryUtils-DZy8hWx3-plpv_dNy.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./timeSupport-C2LrHIeW-B_m29CBc.js";import"./normalizeUtilsSync-DslYq1HB-CJysMrqP.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./dehydratedFeatures-CE8L86IW-DPuazv-j.js";import"./SimpleGeometryCursor-DSF_YyIm-TAMgMsbK.js";import"./webglDeps-B1MbyxEI-iq9XOVcW.js";import"./NestedMap-DL9KstBd-DcOmdaty.js";import"./renderState-BM-MCKUz-CkGIEsl7.js";import"./basicInterfaces-Dsf65ICa-DkQ9Rsnx.js";import"./glsl-Z5uYj8ka-BRgh2Cgo.js";import"./testSVGPremultipliedAlpha-silsadBl-a3OP1hCV.js";let g=class extends Y{constructor(){super(...arguments),this.id=0,this.rotation=0,this.href="",this.extent=new U}};c([u({nonNullable:!0,json:{write:!0}})],g.prototype,"id",void 0),c([u({nonNullable:!0,json:{write:!0}})],g.prototype,"rotation",void 0),c([u({nonNullable:!0,json:{write:!0}})],g.prototype,"href",void 0),c([u({type:U,nonNullable:!0,json:{write:!0}})],g.prototype,"extent",void 0),g=c([F("esri.layers.support.KMLMapImage")],g);class h{static{this._instanceRefCount=0}constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(h._instance)return h._instanceRefCount++,h._instance;h._instanceRefCount=1,h._instance=this,this._ownsRctx=!0;const e=document.createElement("canvas").getContext("webgl2");e.getExtension("OES_texture_float"),this._rctx=new lt(e,{})}const r={applyProjection:!0,bilinear:!1,bicubic:!1},a=mt("raster/reproject","raster/reproject",new Map([["a_position",0]]),r);this._program=this._rctx.programCache.acquire(a.shaders.vertexShader,a.shaders.fragmentShader,a.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new ht(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,r,a=!1){const e=at(t.extent,r),o=new T({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:p,y:l}=st(o,r,t.extent);let n=(p+l)/2;const s=Math.round((e.xmax-e.xmin)/n),w=Math.round((e.ymax-e.ymin)/n);n=(e.width/s+e.height/w)/2;const D=new T({x:n,y:n,spatialReference:e.spatialReference}),x=nt({projectedExtent:e,srcBufferExtent:t.extent,pixelSize:D,hasWrapAround:!0,spacing:[16,16]}),f=gt(this._rctx,x),b=new L(s,w);b.wrapMode=q.CLAMP_TO_EDGE;const m=new ut(this._rctx,b);this._rctx.bindFramebuffer(m),this._rctx.setViewport(0,0,s,w),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(f,1),this._quad.bind();const{width:V=0,height:v=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",V,v),this._program.setUniform2fv("u_transformSpacing",x.spacing),this._program.setUniform2fv("u_transformGridSize",x.size),this._program.setUniform2f("u_targetImageSize",s,w),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),f.dispose(),a){const{width:d,height:I}=m,y=new ImageData(d??0,I??0);m.readPixels(0,0,d??0,I??0,ct.RGBA,dt.UNSIGNED_BYTE,y.data);const $=m.detachColorTexture();return m.dispose(),{texture:$,extent:e,imageData:y}}const S=m.detachColorTexture();return m.dispose(),{texture:S,extent:e}}reprojectBitmapData(t,r){const a=Z(t.bitmapData)?tt(t.bitmapData):t.bitmapData,e=new L;e.wrapMode=q.CLAMP_TO_EDGE,e.width=t.bitmapData.width,e.height=t.bitmapData.height;const o=new _t(this._rctx,e,a),p=this.reprojectTexture({texture:o,extent:t.extent},r,!0);p.texture.dispose();const l=document.createElement("canvas"),n=p.imageData;return l.width=n.width,l.height=n.height,l.getContext("2d").putImageData(n,0,0),{bitmapData:l,extent:p.extent}}async loadAndReprojectBitmapData(t,r,a){const[e]=await Promise.all([B(t,{responseType:"image"}).then(s=>s.data),pt()]),o=document.createElement("canvas");o.width=e.width,o.height=e.height;const p=o.getContext("2d");p.drawImage(e,0,0);const l=p.getImageData(0,0,o.width,o.height);if(r.spatialReference.equals(a))return{bitmapData:l,extent:r};const n=this.reprojectBitmapData({bitmapData:l,extent:r},a);return{bitmapData:n.bitmapData,extent:n.extent}}destroy(){this._ownsRctx?(h._instanceRefCount--,h._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),h._instance=null)):(this._quad.dispose(),this._program.dispose())}}class N{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let _=class extends rt(ot){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new et,this._kmlVisualData=new N,this._fetchController=null,this.allVisiblePoints=new P,this.allVisiblePolylines=new P,this.allVisiblePolygons=new P,this.allVisibleMapImages=new z}async hitTest(i,t){const r=this.layer;return[this._pointsView?.hitTest(i),this._polylinesView?.hitTest(i),this._polygonsView?.hitTest(i)].flat().filter(Boolean).map(a=>(a.layer=r,a.sourceLayer=r,{type:"graphic",graphic:a,layer:r,mapPoint:i}))}update(i){this._polygonsView&&this._polygonsView.processUpdate(i),this._polylinesView&&this._polylinesView.processUpdate(i),this._pointsView&&this._pointsView.processUpdate(i)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new k({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new k({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new k({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",i=>{i.added.forEach(t=>this._addMapImage(t)),i.removed.forEach(t=>this._removeMapImage(t))}),G(()=>this.layer.visibleSublayers,i=>{for(const t of this._kmlVisualData.allSublayers.values())t.visibility=0;for(const t of i){const r=this._kmlVisualData.allSublayers.get(t.id);r&&(r.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new h}detach(){this._fetchController=W(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=C(this._polygonsView),this._polylinesView=C(this._polylinesView),this._pointsView=C(this._pointsView),this._imageReprojector=C(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(i){(this.view.spatialReference?.isWGS84||this.view.spatialReference?.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(i.href,i.extent,this.view.spatialReference).then(t=>{const r=new it(t.bitmapData);r.x=t.extent.xmin,r.y=t.extent.ymax,r.resolution=t.extent.width/t.bitmapData.width,r.rotation=i.rotation,this._mapImageContainer.addChild(r),this._bitmapIndex.set(i,r)})}async _getViewDependentUrl(i,t){const{viewFormat:r,viewBoundScale:a,httpQuery:e}=i;if(r!=null){if(t==null)throw new Error("Loading this network link requires a view state.");let o;if(await H(),a!=null&&a!==1){const d=new U(t.extent);d.expand(a),o=d}else o=t.extent;o=E(o,j.WGS84);const p=E(o,j.WebMercator),l=o.xmin,n=o.xmax,s=o.ymin,w=o.ymax,D=t.size[0]*t.pixelRatio,x=t.size[1]*t.pixelRatio,f=Math.max(p.width,p.height),b={"[bboxWest]":l.toString(),"[bboxEast]":n.toString(),"[bboxSouth]":s.toString(),"[bboxNorth]":w.toString(),"[lookatLon]":o.center.x.toString(),"[lookatLat]":o.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":o.center.x.toString(),"[lookatTerrainLat]":o.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":o.center.x.toString(),"[cameraLat]":o.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":D.toString(),"[vertPixels]":x.toString(),"[terrainEnabled]":"0","[clientVersion]":K,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},m=d=>{for(const I in d){let y;for(y in b)d[I]=d[I].replace(y,b[y])}},V=A(r);m(V);let v={};e!=null&&(v=A(e),m(v));const S=X(i.href);return S.query={...S.query,...V,...v},`${S.path}?${O(V)}`}return i.href}async _fetchService(i){const t=new N;await this._loadVisualData(this.layer.url,t,i),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(i=>this._isSublayerVisible(i.sublayerId)).map(({item:i})=>i))}_isSublayerVisible(i){const t=this._kmlVisualData.allSublayers.get(i);return!!t?.visibility&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(i,t,r){return this._fetchParsedKML(i,r).then(async a=>{for(const e of a.sublayers){t.allSublayers.set(e.id,e);const o=e.points?await M(e.points):[],p=e.polylines?await M(e.polylines):[],l=e.polygons?await M(e.polygons):[],n=e.mapImages?.map(s=>g.fromJSON(s))??[];if(t.allPoints.push(...o.map(s=>({item:s,sublayerId:e.id}))),t.allPolylines.push(...p.map(s=>({item:s,sublayerId:e.id}))),t.allPolygons.push(...l.map(s=>({item:s,sublayerId:e.id}))),t.allMapImages.push(...n.map(s=>({item:s,sublayerId:e.id}))),e.networkLink){const s=await this._getViewDependentUrl(e.networkLink,this.view.state);await this._loadVisualData(s,t,r)}}})}_fetchParsedKML(i,t){return Q(i,this.layer.spatialReference,this.layer.refreshInterval,t).then(r=>J(r.data))}_removeMapImage(i){const t=this._bitmapIndex.get(i);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(i))}};c([u()],_.prototype,"_pointsView",void 0),c([u()],_.prototype,"_polylinesView",void 0),c([u()],_.prototype,"_polygonsView",void 0),c([u()],_.prototype,"updating",void 0),_=c([F("esri.views.2d.layers.KMLLayerView2D")],_);const Dr=_;export{Dr as default};
