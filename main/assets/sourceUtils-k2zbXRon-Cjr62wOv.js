const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./geometryEngineJSON-DUmg2EKv-CRcpG29O.js","./geometryEngineBase-BcMV6k0z-BPq48LKe.js","./_commonjsHelpers-BITg13Vk-KnjfkSck.js","./json-BI97KiBB-Ce5cWfI2.js"])))=>i.map(i=>d[i]);
import{jd as d,je as f,ct as g,ey as m,cs as y,jf as h,as as c,_ as I}from"./main-C6fh4Kls.js";import{h as E}from"./date-B2Zfy8vK-DIf-QFLz.js";class T{constructor(e){this.description=e,this.code=null}}class w{constructor(e){this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error=new T(e)}}function l(t){return new w(t)}class C{constructor(e){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=e}}function N(t){return new C(t)}const u=new Set;function b(t,e,s,p=!1){u.clear();for(const n in s){const r=t.get(n);if(!r)continue;const i=_(r,s[n]);if(u.add(r.name),r&&(p||r.editable)){const a=d(r,i);if(a)return l(f(a,r,i));e[r.name]=i}}for(const n of t.requiredFields??[])if(!u.has(n.name))return l(`missing required field "${n.name}"`);return null}function _(t,e){let s=e;return g(t)&&typeof e=="string"?s=parseFloat(e):m(t)&&e!=null&&typeof e!="string"?s=String(e):y(t)&&typeof e=="string"&&(s=E(e)),h(s)}let o;function q(t,e){if(!t||!c(e))return t;if("rings"in t||"paths"in t){if(o==null)throw new TypeError("geometry engine not loaded");return o.simplify(e,t)}return t}async function A(){return o==null&&(o=await I(()=>import("./geometryEngineJSON-DUmg2EKv-CRcpG29O.js"),__vite__mapDeps([0,1,2,3]),import.meta.url).then(t=>t.g)),o}async function v(t,e){!c(t)||e!=="esriGeometryPolygon"&&e!=="esriGeometryPolyline"||await A()}const P={supportsAutoIntervalBin:!0,supportsFixedIntervalBin:!0,supportsFixedBoundariesBin:!0,supportsDateBin:!0,supportsStackBy:!0,supportsSplitBy:!0,supportsNormalization:!0,supportedStatisticTypes:["COUNT","SUM","AVG","VAR","STDDEV","MIN","MAX","PERCENTILE_CONT","PERCENTILE_DISC","CentroidAggregate","EnvelopeAggregate","ConvexHullAggregate"],supportedNormalizationTypes:["field","log","naturalLog","percentOfTotal","squareRoot"]};export{q as A,b as C,l as a,v as b,P as q,N as w};
