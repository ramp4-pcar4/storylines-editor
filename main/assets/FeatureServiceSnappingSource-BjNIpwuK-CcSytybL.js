const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./WhereClause-nZnXFKnG-XDsLtc9T.js","./main-D7vwjMDX.js","./main-CUxMDcRh.css","./TimeOnly-C3SOkmg2-DHa7dw_N.js"])))=>i.map(i=>d[i]);
import{v as n,b9 as O,d2 as G,ac as Z,H as V,ds as y,ai as f,d1 as Q,lg as R,c6 as S,d9 as K,I as r,t as b,aj as W,fY as Y,ay as X,db as B,d6 as A,ad as ee,bn as te,E as ie,aG as L,_ as se,eC as ne,ao as U,cX as C,mm as oe,mn as re,mo as ae,mp as le,aa as de,mq as pe,lH as ue,cE as he,as as ce,Q as ye,dM as ge,dx as D}from"./main-D7vwjMDX.js";import{t as fe}from"./index-CVKk0WAC-ztfa-lGG.js";import{i as q}from"./UpdatingHandles-DBzjq66S-BJQBk2Bl.js";import{am as me,aH as we}from"./SketchViewModel-T2dNp9Tt-QF9qwxQk.js";import{e as E}from"./TileKey-B_6qmYK--BtZdR-Xy.js";import{A as _e}from"./vec32-BuqRmYBM-ClpcRCNx.js";import{h as ve,k as Se,n as be}from"./boundedPlane-B6TkXVHT-CcczWzL9.js";import{n as Ie}from"./layerViewUtils-Bk5QNiAa-ulOsFMKn.js";import{c as He,u as Oe}from"./queryEngineUtils-B-HalfhD-M2WhMDD6.js";import{c as ke}from"./WorkerHandle-BX4vtQu6-DrJJ_-51.js";import{s as Te}from"./projectVectorToVector-D0K_S4MR-QWHMdts3.js";import{V as Fe,d as Me}from"./TileInfo-owTCOSRx-C_osDN5e.js";import{C as Pe}from"./Scheduler-Br-2v2ys-9ISnkO6X.js";import"./draw-store-C1_quxsr-B78dyYVI.js";import"./GraphicsLayer-GkJJfSu5-BZxIbWSA.js";import"./GraphicsCollection-rAFZo1AJ-xDpoTuU3.js";import"./Layer-B8q-l4yV-BexM1eQl.js";import"./TimeExtent-gZaEUVeW-B8lK7hOc.js";import"./ScaleRangeLayer-DIxukUBC-C-91RrTO.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-DzmXEA9_-DgFzKCQh.js";import"./parser-hXQyB-Qx-DBEB2hCw.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-WrlKAspo.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./ElevationInfo-DkWlof50-CKiKbD2K.js";import"./lengthUtils-wU9RRIqK-Dn-cOZRL.js";import"./intl-DLmy-Li5-l7mSy0H0.js";import"./jsxFactory-C5LxVioS-x3eAnntn.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./globalCss-CFN4F315-DRhKtkbs.js";import"./Queue-B8H6jIv7-oUuyYSR9.js";import"./signal-DxzURL18-CpTU2B0U.js";import"./Version-BTMwSXf1-pRbtbwqb.js";import"./widget-BgluoE6k-Cmg2jAJ2.js";import"./diffUtils-BSe9IE26-SHg3xJhl.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./projection-m8vi7Cxv-CyI2jDkU.js";import"./meshVertexSpaceUtils-BwEbYR8F-3vQSP7Nh.js";import"./MeshLocalVertexSpace-DFCiKNRA-m_RitSj4.js";import"./hydratedFeatures-BDT5zTGB-D1Msl1E0.js";import"./plane-B_adY3_o-CH2S3dla.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4f64-BaJwL7tQ-k0uMm8LY.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./quantityUtils-RaoZoCNH-1kEzJw6x.js";import"./geodesicUtils-DV-lFWtb-ID_rpKXS.js";import"./geometryEngineBase-DueYg7ux-CCeespPx.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./hydrated-Bae3cp-4-BTtKkc0m.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./quat-D8L_R4I0-BhK2bIY8.js";import"./drapedUtils-7RfmdK5D-BQR7bVKQ.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./substitute-TfjvVaWd-BEVJTbkP.js";import"./Query-CxQYWcUQ-K9TJdLqp.js";import"./Field-Cj6Pz3TI-CQAvI3hR.js";import"./fieldType-VTpxE-EM-B2R_XePP.js";import"./sphere-Cj20syUS-D26RDXx7.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./projectPointToVector-CG1hALQu-DPSkW3cH.js";import"./lineSegment-BJNfNZM5-BgDHtF2v.js";import"./VertexSnappingCandidate-CNuBTCRO-BTRDg2Gr.js";import"./PointSnappingHint-ClwQ1VNw-D03Ymk1S.js";import"./workers-0oosFQiO-ChBQt8cS.js";const Ce=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let H=class extends O{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=Ce.map(e=>new ne({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=o=>{if(o.label!=null)return o.label;let l=o.lij.toString();return o.loadPriority!=null&&(l+=` (${o.loadPriority})`),o.measures&&(l+=`[${o.measures.lodLevel}]`),l},t=this.getTiles(),i=new Array,a=new Set((this._labels.size,this._labels.keys()));t.forEach((o,l)=>{const p=o.lij.toString();a.delete(p);const w=o.measures?.lodLevel??o.level,h=o.geometry;if(this.enablePolygons&&!this._polygons.has(p)){const d=new U({geometry:h,symbol:this._symbols[w%this._symbols.length]});this._polygons.set(p,d),i.push(d)}if(this.enableLabels){const d=e(o),_=l/(t.length-1),I=D(0,200,_),k=D(20,6,_)/.75,x=o.loadPriority!=null&&o.loadPriority>=t.length,z=new C([I,x?0:I,x?0:I]),N=this.view.type==="3d"?()=>new oe({verticalOffset:new re({screenLength:40/.75}),callout:new ae({color:new C("white"),border:new le({color:new C("black")})}),symbolLayers:new de([new pe({text:d,halo:{color:"white",size:1/.75},material:{color:z},size:k})])}):()=>new ue({text:d,haloColor:"white",haloSize:1/.75,color:z,size:k}),F=this._labels.get(p);if(F){const T=N();F.symbol!=null&&JSON.stringify(T)===JSON.stringify(F.symbol)||(F.symbol=T)}else{const T=new U({geometry:h.extent.center,symbol:N()});this._labels.set(p,T),i.push(T)}}});const s=new Array;a.forEach(o=>{const l=this._polygons.get(o);l!=null&&(s.push(l),this._polygons.delete(o));const p=this._labels.get(o);p!=null&&(s.push(p),this._labels.delete(o))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([r({constructOnly:!0})],H.prototype,"view",void 0),n([r({readOnly:!0})],H.prototype,"updating",void 0),n([r()],H.prototype,"enabled",null),H=n([b("esri.views.support.TileTreeDebugger")],H);function P(e,t){return Se(t.extent,$),be($,_e(Ee,e.x,e.y,0))}const $=ve(),Ee=he();let g=class extends O{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort((i,a)=>P(t,i)-P(t,a)),e}_scaleEnabled(){return Ie(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,a=[];for(const{row:s,colFrom:o,colTo:l}of e)for(let p=o;p<=l;p++){const w=t.normalizeCol(p),h=new E(null,i,s,w);this.tileInfo.updateTileInfo(h),a.push(h)}return a}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(f(()=>this.view?.state?.viewpoint,()=>this.notifyChange("tilesCoveringView"),W))}};n([r({readOnly:!0})],g.prototype,"tiles",null),n([r({readOnly:!0})],g.prototype,"_scaleEnabled",null),n([r({readOnly:!0})],g.prototype,"tilesCoveringView",null),n([r({readOnly:!0})],g.prototype,"tileInfo",null),n([r({readOnly:!0})],g.prototype,"tileSize",null),n([r({constructOnly:!0})],g.prototype,"view",void 0),n([r({constructOnly:!0})],g.prototype,"layer",void 0),n([r()],g.prototype,"pointOfInterest",void 0),g=n([b("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],g);let m=class extends O{get _sortedTilesCoveringView(){const e=(this.view.featureTiles?.tiles?.toArray()??[]).map(xe),t=this._effectivePointOfInterest;return t!=null&&e.sort((i,a)=>P(t,i)-P(t,a)),e}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){return this.pointOfInterest??this.view.pointsOfInterest?.focus.location}constructor(e){super(e),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([f(()=>this.view.featureTiles,e=>{this.removeHandles(j),e&&this.addHandles(e.addClient(),j)},S),f(()=>this._sortedTilesCoveringView,e=>this._set("tiles",e),{initial:!0,equals:(e,t)=>Y(e,t,(i,a)=>i.id===a.id)})])}};function xe({lij:[e,t,i],extent:a}){return new E(`${e}/${t}/${i}`,e,t,i,a)}n([r({readOnly:!0})],m.prototype,"tiles",void 0),n([r({readOnly:!0})],m.prototype,"_sortedTilesCoveringView",null),n([r({readOnly:!0})],m.prototype,"tileInfo",null),n([r({readOnly:!0})],m.prototype,"tileSize",null),n([r({constructOnly:!0})],m.prototype,"view",void 0),n([r()],m.prototype,"pointOfInterest",void 0),n([r()],m.prototype,"_effectivePointOfInterest",null),m=n([b("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],m);const j="feature-tiles";let M=class extends H{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(ce(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(s=>{e.set(s.data.id,s.featureCount)}),this._debugInfo.pendingTiles.forEach(s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)});const i=s=>{const o=t.get(s),l=e.get(s)??"?";return o?`${o}:${l}
${s}`:`store:${l}
${s}`},a=new Map;return this._debugInfo.storedTiles.forEach(s=>{a.set(s.data.id,s.data)}),this._debugInfo.pendingTiles.forEach(s=>{a.set(s.data.id,s.data)}),Array.from(a.values()).map(s=>({lij:[s.level,s.row,s.col],level:s.level,geometry:ye.fromExtent(ge(s.extent,this.view.spatialReference)),label:i(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([r({constructOnly:!0})],M.prototype,"handle",void 0),M=n([b("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],M);let c=class extends O{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new q,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:a}of t.pointsInFeatures)for(const{z:s}of a)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=X(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=B(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new Ne(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const i=ze(e.layer);if(i==null)return;const a={configuration:J(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=J(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:a,coordinateHelper:s}=e,o={...e,point:Te(i[0],i[1],i[2],s.spatialReference.toJSON()),filter:a?.toJSON()};return this._workerHandle.invoke(o,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:a},s){const o={historicMoment:e,addedFeatures:t?.map(({objectId:l})=>l).filter(A)??[],deletedFeatures:i?.map(({objectId:l,globalId:p})=>({objectId:l,globalId:p}))??[],updatedFeatures:a?.map(({objectId:l})=>l).filter(A)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",o,s)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},s))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function J(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function ze(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:ee.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}n([r({constructOnly:!0})],c.prototype,"schedule",void 0),n([r({constructOnly:!0})],c.prototype,"hasZ",void 0),n([r({constructOnly:!0})],c.prototype,"elevationAlignPointsInFeatures",void 0),n([r({constructOnly:!0})],c.prototype,"queryForSymbologySnapping",void 0),n([r({readOnly:!0})],c.prototype,"updating",null),n([r({readOnly:!0})],c.prototype,"availability",void 0),n([r()],c.prototype,"_workerHandleUpdating",void 0),c=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],c);class Ne extends ke{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let v=class extends O{get tiles(){return[new E("0/0/0",0,0,0,te(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new Fe({origin:new ie({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new Me({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([r({readOnly:!0})],v.prototype,"tiles",null),n([r({readOnly:!0})],v.prototype,"tileInfo",null),n([r({readOnly:!0})],v.prototype,"tileSize",null),n([r({constructOnly:!0})],v.prototype,"layer",void 0),n([r()],v.prototype,"pointOfInterest",void 0),v=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],v);let u=class extends O{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find(e=>e.layer===this._layer)}get _isSuspended(){return G(this._layer)&&!this.layerSource.sublayerSources.some(e=>e.enabled&&e.layer.visible)?!0:!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:a}=i,{fieldsIndex:s,timeInfo:o,floorInfo:l,subtypeField:p}=a,w=t&&"filter"in t?t.filter:null,h=w?.where&&w.where!=="1=1"?this._getOrLoadWhereFields(w.where,s):[];if(w?.timeExtent&&o){const{startField:d,endField:_}=o,I=s.get(d)?.name??d,k=s.get(_)?.name??_;I&&h.push(I),k&&h.push(k)}if(e?.map&&me(e.map)&&e.map.utilityNetworks?.find(d=>d.isUtilityLayer(a))){const d=a.fieldsIndex.get("assetGroup")?.name,_=a.fieldsIndex.get("assetType")?.name;d&&_&&(h.push(d),h.push(_))}if(a&&l?.floorField&&e?.floors?.length){const d=s.get(l.floorField)?.name??l.floorField;d&&h.push(d)}if(p){const d=s.get(p)?.name??p;d&&h.push(d)}return new Set(h)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,a=e!=null?e.type:"2d",s=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(s.where=Z(s.where,this._layerView.effectiveDisplayFilter?.where)),{filter:s,customParameters:t?{...i,token:t}:i,viewType:a}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new q,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=fe(Oe)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new v({layer:this._layer}),e=this._workerHandle=new c;else switch(t.type){case"2d":this._tilesOfInterest=new g({view:t,layer:this._layer}),e=this._workerHandle=new c;break;case"3d":{const{resourceController:i}=t,a=this._layer;this._tilesOfInterest=new m({view:t}),e=this._workerHandle=new c({schedule:s=>i.immediate.schedule(s),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(s,o)=>{const l=await t.whenLayerView(a);return V(o),l.elevationAlignPointsInFeatures(s,o)},queryForSymbologySnapping:async(s,o)=>{const l=await t.whenLayerView(a);return V(o),l.queryForSymbologySnapping(s,o)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:s})=>{const{elevationInfo:o}=a;we(s,o)&&y(e.notifyElevationSourceChange())}),f(()=>a.elevationInfo,()=>y(e.notifyElevationSourceChange()),S),f(()=>this._layerView?.layer?.renderer,()=>y(e.notifySymbologyChange()),S),f(()=>this._layerView?.symbologySnappingSupported??!1,s=>y(e.setSymbologySnappingSupported(s)),S),Q(()=>this._layerView?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([R(e)]),y(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>y(e.updateTiles(this._updateTilesParameters,null)),S),this.addHandles([f(()=>this.configuration,i=>y(e.configure(i,null)),W),f(()=>this._layer.historicMoment,i=>y(e.setHistoricMoment(i)),L),f(()=>this._outFields,i=>y(e.updateOutFields(i)),S),f(()=>this._isSuspended,i=>y(e.setSuspended(i)),L)]),t!=null&&this.addHandles(f(()=>Pe.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new M({view:t,handle:e}),this.addHandles(R(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},S)),this.addHandles([this.layerSource.layer.on("edits",i=>y(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:a}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(a);const s=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(o=>He(o,s))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const a=K(async()=>{const s=await se(()=>import("./WhereClause-nZnXFKnG-XDsLtc9T.js"),__vite__mapDeps([0,1,2,3]),import.meta.url).then(o=>o.W);return this._whereModule=s.default,this._whereModule});return this._loadWhereModuleTask=a,this._updatingHandles.addPromise(a.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};n([r({constructOnly:!0})],u.prototype,"spatialReference",void 0),n([r({constructOnly:!0})],u.prototype,"layerSource",void 0),n([r({constructOnly:!0})],u.prototype,"view",void 0),n([r()],u.prototype,"_tilesOfInterest",void 0),n([r({readOnly:!0})],u.prototype,"_updateTilesParameters",null),n([r()],u.prototype,"_layerView",null),n([r()],u.prototype,"_isSuspended",null),n([r({readOnly:!0})],u.prototype,"updating",null),n([r()],u.prototype,"_outFields",null),n([r({readOnly:!0})],u.prototype,"configuration",null),n([r({readOnly:!0})],u.prototype,"availability",null),n([r()],u.prototype,"_loadWhereModuleTask",void 0),n([r()],u.prototype,"_whereModule",void 0),u=n([b("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],u);export{u as FeatureServiceSnappingSource};
