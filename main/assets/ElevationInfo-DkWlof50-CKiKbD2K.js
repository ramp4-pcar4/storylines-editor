import{v as s,I as o,c0 as m,by as y,J as E,U as v,Y as d,cb as I,t as x,ca as w,cc as g}from"./main-D7vwjMDX.js";import{m as a}from"./lengthUtils-wU9RRIqK-Dn-cOZRL.js";var u;let n=u=class extends d{constructor(e){super(e)}async collectRequiredFields(e,t){return I(e,t,this.expression)}clone(){return new u({expression:this.expression,title:this.title})}equals(e){return this.expression===e.expression&&this.title===e.title}};s([o({type:String,json:{write:{isRequired:!0}}})],n.prototype,"expression",void 0),s([o({type:String,json:{write:!0}})],n.prototype,"title",void 0),n=u=s([x("esri.symbols.support.FeatureExpressionInfo")],n);const f=n;function S(e){return!!e&&a[e]!=null}function _(e){return 1/(a[e]||1)}function b(){const e=Object.keys(a);return w(e,"decimal-degrees"),e.sort(),e}const j=b();var p;const i=m()({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",relativeToScene:"relative-to-scene",absoluteHeight:"absolute-height"}),l=new y({foot:"feet",kilometer:"kilometers",meter:"meters",mile:"miles","us-foot":"us-feet",yard:"yards"});let r=p=class extends d{constructor(e){super(e),this.featureExpressionInfo=void 0,this.offset=null}readFeatureExpressionInfo(e,t){return e??(t.featureExpression&&t.featureExpression.value===0?{expression:"0"}:void 0)}writeFeatureExpressionInfo(e,t,h,c){t[h]=e.write({},c),e.expression==="0"&&(t.featureExpression={value:0})}get mode(){const{offset:e,featureExpressionInfo:t}=this;return this._isOverridden("mode")?this._get("mode"):e!=null||t?"relative-to-ground":"on-the-ground"}set mode(e){this._override("mode",e)}set unit(e){this._set("unit",e)}write(e,t){return this.offset||this.mode||this.featureExpressionInfo||this.unit?super.write(e,t):null}clone(){return new p({mode:this.mode,offset:this.offset,featureExpressionInfo:this.featureExpressionInfo?this.featureExpressionInfo.clone():void 0,unit:this.unit})}equals(e){return this.mode===e.mode&&this.offset===e.offset&&this.unit===e.unit&&g(this.featureExpressionInfo,e.featureExpressionInfo)}};s([o({type:f,json:{write:!0}})],r.prototype,"featureExpressionInfo",void 0),s([E("featureExpressionInfo",["featureExpressionInfo","featureExpression"])],r.prototype,"readFeatureExpressionInfo",null),s([v("featureExpressionInfo",{featureExpressionInfo:{type:f},"featureExpression.value":{type:[0]}})],r.prototype,"writeFeatureExpressionInfo",null),s([o({type:i.apiValues,nonNullable:!0,json:{type:i.jsonValues,read:i.read,write:{writer:i.write,isRequired:!0}}})],r.prototype,"mode",null),s([o({type:Number,json:{write:!0}})],r.prototype,"offset",void 0),s([o({type:j,json:{type:String,read:l.read,write:l.write}})],r.prototype,"unit",null),r=p=s([x("esri.symbols.support.ElevationInfo")],r);const k=r;export{k as S,_ as b,S as j};
