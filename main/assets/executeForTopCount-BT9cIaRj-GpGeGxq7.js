import{m as i}from"./utils-BO8hgPs3-BKd6I_4_.js";import{S as p}from"./queryTopFeatures-BYPS9Jan-C-nUVjLT.js";import a from"./TopFeaturesQuery-BmMRhRdq-CtnZg8jg.js";import"./main-CqKuK3N8.js";import"./normalizeUtils-u00NGW3M-BXfo9NgC.js";import"./normalizeUtilsCommon-ClagynAA-Bv2i_TwG.js";import"./utils-DpLVEUvg-BjBpkXJx.js";import"./query-COAsogFA-Bw6AENAZ.js";import"./pbfQueryUtils-aBcHX3TJ-CGmiGR9D.js";import"./pbf-hoLeQyp2-aOfRywoS.js";import"./memoryEstimations-DeWfxwaV-DuQS28rW.js";import"./OptimizedGeometry-pzfNw1AT-Duimi76f.js";import"./OptimizedFeature-mIz_HhJg-CSMcfVZP.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-B_S4xIbo.js";import"./projectionUtils-B-CplN3q-DmHwqg9X.js";import"./TimeExtent-Cf2Pienb-BG6Q4x9H.js";async function j(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{j as executeForTopCount};
