import{t as _,ar as v,M as S,N as c,Q as T,h as u,bC as b,bD as w,bE as O,g as R,v as o,S as a,w as $,F as W,I as M,n as U}from"./main-DXQSfJ4c.js";import{d as P}from"./loadAll-DQWsVoX1-B7dxFHHt.js";import{w as I}from"./MultiOriginJSONSupport-BqiFJbbt-eZDYWgul.js";import{e as L}from"./Layer-DvVVmz9x-CAstlfNf.js";import{n as N}from"./APIKeyMixin-BNzYY3QS-DqNMEB1i.js";import{O as j}from"./ArcGISCachedService-BD5D96BF-DXyBsdvH.js";import{$ as k,k as A,o as B}from"./SublayersOwner-KP6FVHkR-BWOW_0nE.js";import{a as C}from"./ArcGISService-B6M5rzsr-CRA9Qp0O.js";import{u as D}from"./BlendLayer-DjW_5k0v-BTQrrRiW.js";import{i as J}from"./CustomParametersMixin-CSMgHDaw-D2Ezf2pm.js";import{u as G,i as q}from"./OperationalLayer-CbXUnTH0-DI5VEVPw.js";import{x as V}from"./PortalLayer-B34ZUA2x-BHVnAzfL.js";import{T as E}from"./RefreshableLayer-Qpvyi8qY-C4f6cC-b.js";import{S as F}from"./ScaleRangeLayer-x42fwED3-CQuJnkDG.js";import{u as y}from"./imageBitmapUtils-wCApjb1B-muzDyvcw.js";import{r as K}from"./ElevationInfo-DE5to86a-lTCB3QD1.js";import"./asyncUtils-BPUlNCrX-Cozd06n_.js";import"./TimeExtent-Cf2Pienb-BIbHzrkf.js";import"./TileInfo-U28GysF5-DROXh45n.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./TileInfoTilemapCache-DYvkhkks-Io2vxVNS.js";import"./TilemapCache-CzNXCGP3-C5s-hPys.js";import"./ByteSizeUnit-DL8UhsB0-B2-AmVRx.js";import"./LRUCache-DPWdPNTF-Du_Z0yHt.js";import"./MemCache-qDGoejB7-9IozotvY.js";import"./memoryEstimations-DeWfxwaV-Cs31Yqkd.js";import"./Version-CnwD6MZa-DRx0rkac.js";import"./portalItemUtils-BfWDJg-S-BFhY_K1U.js";import"./projectionUtils-B-CplN3q-R11C1T8y.js";import"./CollectionFlattener-DyEG1Q6J-CvyeucKW.js";import"./QueryTask-DxRoWbf6-C7pT0kKu.js";import"./infoFor3D-BeWnZejW-DJyBSoCy.js";import"./Query-n1aoaaFC-CPBxR7e3.js";import"./Field-BIQ-quF4-BZYdxVxX.js";import"./fieldType-PhcL4ff8-JvhUOwPo.js";import"./utils-BO8hgPs3-Bku1uRnt.js";import"./executeForIds-CRDS8hwo-DuxbPZ7n.js";import"./query-COAsogFA-DhyYlZf9.js";import"./normalizeUtils-u00NGW3M-Bek0LA8Q.js";import"./normalizeUtilsCommon-ClagynAA-CRbDFkUY.js";import"./utils-DpLVEUvg-Cfh_alSX.js";import"./pbfQueryUtils-aBcHX3TJ-CD7t8EhS.js";import"./pbf-hoLeQyp2-B_lhUCSA.js";import"./OptimizedGeometry-pzfNw1AT-DlquUCEF.js";import"./OptimizedFeature-mIz_HhJg-Bpy10dAB.js";import"./OptimizedFeatureSet-Dz5hF8Qm-B1brSkRC.js";import"./queryZScale-CwrUzBjP-BmUxUnP-.js";import"./executeQueryPBF-BbqQX_MH-DntJ8VMR.js";import"./featureConversionUtils-Bjjlcfdo-BKEtN-u8.js";import"./FeatureSet-BVGGhhH9-C7dse-vl.js";import"./executeQueryJSON-D8fHgTZN-Cx91Ee4J.js";import"./OrderedLayer-BD-wnvgD-CsPjRVha.js";import"./OrderByInfo-SNGyPlhJ-Cf1B0d-4.js";import"./labelingInfo-DuLk-IW_-XJbmIjNO.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./SimpleRenderer-C1YRhRzu-B6FVlB5f.js";import"./commonProperties-CJLeiNuA-bBt0riJe.js";import"./colorRamps-trM-CPFS-CxgO7w7b.js";import"./ColorStop-CL7v3R-A-B19fv0-K.js";import"./visualVariableUtils-BTS148WR-_sDiy3XP.js";import"./lengthUtils-C61nRlXw-D5E5lMQn.js";import"./UniqueValueRenderer-CLXHFtg9-Bz5RedDe.js";import"./diffUtils-BxG8DCnW-Bf8hl_jg.js";import"./RendererLegendOptions-Bil_IDab-BeEFZOuE.js";import"./styleUtils-DBPDLVBX-B_kAStYq.js";import"./RelationshipQuery-CaEbQySU-BuDy9kEq.js";import"./NormalizationBinParametersMixin-70JA0FRq-DXXyGchQ.js";import"./labelUtils-Oapo6DRu-BSFNB6rm.js";import"./FeatureType-DdIqcZ2U-Ddv9V8Ts.js";import"./FeatureTemplate-CW5LOQ_p-C-UyPbvp.js";import"./FieldsIndex-Bt0Y8aWr-VP33RveZ.js";import"./UnknownTimeZone-DxjyzFvs-2TW0CNt_.js";import"./timeZoneUtils-d5p0Jda1-CQq0DfSV.js";import"./LayerFloorInfo-CkeH-P4_-BFpRuy5y.js";import"./Relationship-B6fQjk3--OD-5cM0K.js";import"./serviceCapabilitiesUtils-BerH-9mt-lv-CXSh_.js";import"./typeUtils-CB2EGBWO-Dtn3Z37y.js";import"./ClassBreaksRenderer-Bq2XGpfI-OvH_HwkY.js";import"./DictionaryScriptEvaluator-DW5hOK9A-Dq2As498.js";import"./ArcadeExpression-XjY3x7KV-DBNcv8YU.js";import"./TimeOnly-CGkId3bj-DmE-9t_j.js";import"./enum-g1DWyQyu-BUzEbfC4.js";import"./utils-BfXZnjCE-zTayHM-A.js";import"./defaultCIMValues-BcSaJjm--58G-soMN.js";import"./enums-a_LDTPYU-CBIcy3mM.js";import"./heatmapUtils-DRTN9U3a-D2uD36GU.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./popupUtils-B99PyAFi-DYStHBBH.js";import"./sublayerUtils-DUalPlkE-BEqsjDiy.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-DJ2ZDFML.js";import"./parser-CWccHtwJ-DV_hDWqe.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./mat4-OOmHNWi7-C6AfPGZc.js";import"./PortalItem-BP-IQXnZ-CrY_p8kZ.js";var d;const f=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let i=d=class extends D(F(k(j(A(G(V(C(I(E(N(J(L)))))))))))){constructor(...e){super(...e),this.listMode="show",this.elevationInfo=new K({mode:"on-the-ground"}),this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(_).then(()=>this._fetchService(r))),Promise.resolve(this)}get attributionDataUrl(){const e=this.parsedUrl?.path.toLowerCase();return e?this._getDefaultAttribution(this._getMapName(e)):null}readSpatialReference(e,r){return(e=e||r.tileInfo?.spatialReference)&&v.fromJSON(e)}writeSublayers(e,r,t,s){if(!this.loaded||!e)return;const l=e.slice().reverse().flatten(({sublayers:n})=>n&&n.toArray().reverse()).toArray(),p=[],m={writeSublayerStructure:!1,...s};l.forEach(n=>{const h=n.write({},m);p.push(h)}),p.some(n=>Object.keys(n).length>1)&&(r.layers=p)}get tileServers(){return this._getDefaultTileServers(this.parsedUrl?.path)}castTileServers(e){return Array.isArray(e)?e.map(r=>S(r).path):null}fetchTile(e,r,t,s={}){const{signal:l}=s,p=this.getTileUrl(e,r,t),m={responseType:"image",signal:l,query:{...this.refreshParameters}};return c(p,m).then(n=>n.data)}async fetchImageBitmapTile(e,r,t,s={}){const{signal:l}=s;if(this.fetchTile!==d.prototype.fetchTile){const h=await this.fetchTile(e,r,t,s);return y(h,e,r,t,l)}const p=this.getTileUrl(e,r,t),m={responseType:"blob",signal:l,query:{...this.refreshParameters}},{data:n}=await c(p,m);return y(n,e,r,t,l)}getTileUrl(e,r,t){const s=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,l=T({...this.parsedUrl?.query,blankTile:!s&&null,...this.customParameters,token:this.apiKey}),p=this.tileServers;return`${p&&p.length?p[r%p.length]:this.parsedUrl?.path}/tile/${e}/${r}/${t}${l?"?"+l:""}`}loadAll(){return P(this,e=>{e(this.allSublayers)})}_fetchService(e){return new Promise((r,t)=>{if(this.sourceJSON){if(this.sourceJSON.bandCount!=null&&this.sourceJSON.pixelSizeX!=null)throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void r({data:this.sourceJSON})}if(!this.parsedUrl)throw new u("tile-layer:undefined-url","layer's url is not defined");const s=b(this.parsedUrl.path);if(s!=null&&s.serverType==="ImageServer")throw new u("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");c(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:e}).then(r,t)}).then(r=>{let t=this.url;if(r.ssl&&(t=this.url=t.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl}),this.version===10.1&&!w(t))return this._fetchServerVersion(t,e).then(s=>{this.read({currentVersion:s})}).catch(()=>{})})}_fetchServerVersion(e,r){if(!O(e))return Promise.reject();const t=e.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return c(t,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:r}).then(s=>{if(s.data?.currentVersion)return s.data.currentVersion;throw new u("tile-layer:version-not-available","Server did not provide a version")})}_getMapName(e){const r=e.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^/]+(\/[^/]+)*)\/mapserver/i);return r?r[2]:void 0}_getDefaultAttribution(e){if(e==null)return null;let r;e=e.toLowerCase();for(let t=0,s=f.length;t<s;t++)if(r=f[t],r.toLowerCase().includes(e))return R("//static.arcgis.com/attribution/"+r);return null}_getDefaultTileServers(e){if(e==null)return[];const r=e.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i)!==-1,t=e.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i)!==-1;return r||t?[e,e.replace(r?/server\.arcgisonline/i:/services\.arcgisonline/i,r?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[g]}};o([a({readOnly:!0})],i.prototype,"attributionDataUrl",null),o([a({type:["show","hide","hide-children"]})],i.prototype,"listMode",void 0),o([a({json:{read:!0,write:!0}})],i.prototype,"blendMode",void 0),o([a()],i.prototype,"elevationInfo",void 0),o([a({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],i.prototype,"isReference",void 0),o([a({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],i.prototype,"operationalLayerType",void 0),o([a({type:Boolean})],i.prototype,"resampling",void 0),o([a()],i.prototype,"sourceJSON",void 0),o([a({type:v})],i.prototype,"spatialReference",void 0),o([$("spatialReference",["spatialReference","tileInfo"])],i.prototype,"readSpatialReference",null),o([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),o([a({readOnly:!0})],i.prototype,"sublayers",void 0),o([W("sublayers",{layers:{type:[B]}})],i.prototype,"writeSublayers",null),o([a({json:{read:!1,write:!1}})],i.prototype,"popupEnabled",void 0),o([a()],i.prototype,"tileServers",null),o([M("tileServers")],i.prototype,"castTileServers",null),o([a({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),o([a(q)],i.prototype,"url",void 0),i=d=o([U("esri.layers.TileLayer")],i);const g=Symbol("default-fetch-tile");i.prototype.fetchTile[g]=!0;const Ar=i;export{Ar as default};
