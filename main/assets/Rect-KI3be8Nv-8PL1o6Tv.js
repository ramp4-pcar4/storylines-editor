import{ju as S}from"./main-D7vwjMDX.js";const z=512;var w,p;(function(i){i[i.Unknown=0]="Unknown",i[i.Point=1]="Point",i[i.LineString=2]="LineString",i[i.Polygon=3]="Polygon"})(w||(w={}));let g=class R{constructor(t,s){this.x=t,this.y=s}clone(){return new R(this.x,this.y)}equals(t,s){return t===this.x&&s===this.y}isEqual(t){return t.x===this.x&&t.y===this.y}setCoords(t,s){return this.x=t,this.y=s,this}normalize(){const t=this.x,s=this.y,h=Math.sqrt(t*t+s*s);return this.x/=h,this.y/=h,this}rightPerpendicular(){const t=this.x;return this.x=this.y,this.y=-t,this}leftPerpendicular(){const t=this.x;return this.x=-this.y,this.y=t,this}move(t,s){return this.x+=t,this.y+=s,this}assign(t){return this.x=t.x,this.y=t.y,this}assignAdd(t,s){return this.x=t.x+s.x,this.y=t.y+s.y,this}assignSub(t,s){return this.x=t.x-s.x,this.y=t.y-s.y,this}rotate(t,s){const h=this.x,e=this.y;return this.x=h*t-e*s,this.y=h*s+e*t,this}scale(t){return this.x*=t,this.y*=t,this}length(){const t=this.x,s=this.y;return Math.sqrt(t*t+s*s)}sub(t){return this.x-=t.x,this.y-=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}static distance(t,s){const h=s.x-t.x,e=s.y-t.y;return Math.sqrt(h*h+e*e)}static add(t,s){return new R(t.x+s.x,t.y+s.y)}static sub(t,s){return new R(t.x-s.x,t.y-s.y)}};class v{constructor(t,s,h){this.ratio=t,this.x=s,this.y=h}}let C=class{constructor(i,t,s,h=8,e=8){this._lines=[],this._starts=[],this.validateTessellation=!0,this._pixelRatio=h,this._pixelMargin=e,this._tileSize=z*h,this._dz=i,this._yPos=t,this._xPos=s}setPixelMargin(i){i!==this._pixelMargin&&(this._pixelMargin=i,this.setExtent(this._extent))}setExtent(i){this._extent=i,this._finalRatio=this._tileSize/i*(1<<this._dz);let t=this._pixelRatio*this._pixelMargin;t/=this._finalRatio;const s=i>>this._dz;t>s&&(t=s),this._margin=t,this._xmin=s*this._xPos-t,this._ymin=s*this._yPos-t,this._xmax=this._xmin+s+2*t,this._ymax=this._ymin+s+2*t}reset(i){this._type=i,this._lines=[],this._starts=[],this._line=null,this._start=0}moveTo(i,t){this._pushLine(),this._prevIsIn=this._isIn(i,t),this._moveTo(i,t,this._prevIsIn),this._prevPt=new g(i,t),this._firstPt=new g(i,t),this._dist=0}lineTo(i,t){const s=this._isIn(i,t),h=new g(i,t),e=g.distance(this._prevPt,h);let l,n,x,_,r,f,m,u;if(s)this._prevIsIn?this._lineTo(i,t,!0):(l=this._prevPt,n=h,x=this._intersect(n,l),this._start=this._dist+e*(1-this._r),this._lineTo(x.x,x.y,!0),this._lineTo(n.x,n.y,!0));else if(this._prevIsIn)n=this._prevPt,l=h,x=this._intersect(n,l),this._lineTo(x.x,x.y,!0),this._lineTo(l.x,l.y,!1);else{const a=this._prevPt,o=h;if(a.x<=this._xmin&&o.x<=this._xmin||a.x>=this._xmax&&o.x>=this._xmax||a.y<=this._ymin&&o.y<=this._ymin||a.y>=this._ymax&&o.y>=this._ymax)this._lineTo(o.x,o.y,!1);else{const y=[];if((a.x<this._xmin&&o.x>this._xmin||a.x>this._xmin&&o.x<this._xmin)&&(_=(this._xmin-a.x)/(o.x-a.x),u=a.y+_*(o.y-a.y),u<=this._ymin?f=!1:u>=this._ymax?f=!0:y.push(new v(_,this._xmin,u))),(a.x<this._xmax&&o.x>this._xmax||a.x>this._xmax&&o.x<this._xmax)&&(_=(this._xmax-a.x)/(o.x-a.x),u=a.y+_*(o.y-a.y),u<=this._ymin?f=!1:u>=this._ymax?f=!0:y.push(new v(_,this._xmax,u))),(a.y<this._ymin&&o.y>this._ymin||a.y>this._ymin&&o.y<this._ymin)&&(_=(this._ymin-a.y)/(o.y-a.y),m=a.x+_*(o.x-a.x),m<=this._xmin?r=!1:m>=this._xmax?r=!0:y.push(new v(_,m,this._ymin))),(a.y<this._ymax&&o.y>this._ymax||a.y>this._ymax&&o.y<this._ymax)&&(_=(this._ymax-a.y)/(o.y-a.y),m=a.x+_*(o.x-a.x),m<=this._xmin?r=!1:m>=this._xmax?r=!0:y.push(new v(_,m,this._ymax))),y.length===0)r?f?this._lineTo(this._xmax,this._ymax,!0):this._lineTo(this._xmax,this._ymin,!0):f?this._lineTo(this._xmin,this._ymax,!0):this._lineTo(this._xmin,this._ymin,!0);else if(y.length>1&&y[0].ratio>y[1].ratio)this._start=this._dist+e*y[1].ratio,this._lineTo(y[1].x,y[1].y,!0),this._lineTo(y[0].x,y[0].y,!0);else{this._start=this._dist+e*y[0].ratio;for(let d=0;d<y.length;d++)this._lineTo(y[d].x,y[d].y,!0)}this._lineTo(o.x,o.y,!1)}}this._dist+=e,this._prevIsIn=s,this._prevPt=h}close(){if(this._line.length>2){const i=this._firstPt,t=this._prevPt;i.x===t.x&&i.y===t.y||this.lineTo(i.x,i.y);const s=this._line;let h=s.length;for(;h>=4&&(s[0].x===s[1].x&&s[0].x===s[h-2].x||s[0].y===s[1].y&&s[0].y===s[h-2].y);)s.pop(),s[0].x=s[h-2].x,s[0].y=s[h-2].y,--h}}result(i=!0){return this._pushLine(),this._lines.length===0?null:(this._type===w.Polygon&&i&&D.simplify(this._tileSize,this._margin*this._finalRatio,this._lines),this._lines)}resultWithStarts(){if(this._type!==w.LineString)throw new Error("Only valid for lines");this._pushLine();const i=this._lines,t=i.length;if(t===0)return null;const s=[];for(let h=0;h<t;h++)s.push({line:i[h],start:this._starts[h]||0});return s}_isIn(i,t){return i>=this._xmin&&i<=this._xmax&&t>=this._ymin&&t<=this._ymax}_intersect(i,t){let s,h,e;if(t.x>=this._xmin&&t.x<=this._xmax)h=t.y<=this._ymin?this._ymin:this._ymax,e=(h-i.y)/(t.y-i.y),s=i.x+e*(t.x-i.x);else if(t.y>=this._ymin&&t.y<=this._ymax)s=t.x<=this._xmin?this._xmin:this._xmax,e=(s-i.x)/(t.x-i.x),h=i.y+e*(t.y-i.y);else{h=t.y<=this._ymin?this._ymin:this._ymax,s=t.x<=this._xmin?this._xmin:this._xmax;const l=(s-i.x)/(t.x-i.x),n=(h-i.y)/(t.y-i.y);l<n?(e=l,h=i.y+l*(t.y-i.y)):(e=n,s=i.x+n*(t.x-i.x))}return this._r=e,new g(s,h)}_pushLine(){this._line&&(this._type===w.Point?this._line.length>0&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===w.LineString?this._line.length>1&&(this._lines.push(this._line),this._starts.push(this._start)):this._type===w.Polygon&&this._line.length>3&&(this._lines.push(this._line),this._starts.push(this._start))),this._line=[],this._start=0}_moveTo(i,t,s){this._type!==w.Polygon?s&&(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),t=Math.round((t-(this._ymin+this._margin))*this._finalRatio),this._line.push(new g(i,t))):(s||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),t<this._ymin&&(t=this._ymin),t>this._ymax&&(t=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),t=Math.round((t-(this._ymin+this._margin))*this._finalRatio),this._line.push(new g(i,t)),this._isH=!1,this._isV=!1)}_lineTo(i,t,s){let h,e;if(this._type!==w.Polygon)if(s){if(i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),t=Math.round((t-(this._ymin+this._margin))*this._finalRatio),this._line.length>0&&(h=this._line[this._line.length-1],h.equals(i,t)))return;this._line.push(new g(i,t))}else this._line&&this._line.length>0&&this._pushLine();else if(s||(i<this._xmin&&(i=this._xmin),i>this._xmax&&(i=this._xmax),t<this._ymin&&(t=this._ymin),t>this._ymax&&(t=this._ymax)),i=Math.round((i-(this._xmin+this._margin))*this._finalRatio),t=Math.round((t-(this._ymin+this._margin))*this._finalRatio),this._line&&this._line.length>0){h=this._line[this._line.length-1];const l=h.x===i,n=h.y===t;if(l&&n)return;this._isH&&l||this._isV&&n?(h.x=i,h.y=t,e=this._line[this._line.length-2],e.x===i&&e.y===t?(this._line.pop(),this._line.length<=1?(this._isH=!1,this._isV=!1):(e=this._line[this._line.length-2],this._isH=e.x===i,this._isV=e.y===t)):(this._isH=e.x===i,this._isV=e.y===t)):(this._line.push(new g(i,t)),this._isH=l,this._isV=n)}else this._line.push(new g(i,t))}};class A{setExtent(t){this._ratio=t===4096?1:4096/t}get validateTessellation(){return this._ratio<1}reset(t){this._lines=[],this._line=null}moveTo(t,s){this._line&&this._lines.push(this._line),this._line=[];const h=this._ratio;this._line.push(new g(t*h,s*h))}lineTo(t,s){const h=this._ratio;this._line.push(new g(t*h,s*h))}close(){const t=this._line;t&&!t[0].isEqual(t[t.length-1])&&t.push(t[0])}result(){return this._line&&this._lines.push(this._line),this._lines.length===0?null:this._lines}}(function(i){i[i.sideLeft=0]="sideLeft",i[i.sideRight=1]="sideRight",i[i.sideTop=2]="sideTop",i[i.sideBottom=3]="sideBottom"})(p||(p={}));let D=class M{static simplify(t,s,h){if(!h)return;const e=-s,l=t+s,n=-s,x=t+s,_=[],r=[],f=h.length;for(let u=0;u<f;++u){const a=h[u];if(!a||a.length<2)continue;let o,y=a[0];const d=a.length;for(let c=1;c<d;++c)o=a[c],y.x===o.x&&(y.x<=e&&(y.y>o.y?(_.push(u),_.push(c),_.push(p.sideLeft),_.push(-1)):(r.push(u),r.push(c),r.push(p.sideLeft),r.push(-1))),y.x>=l&&(y.y<o.y?(_.push(u),_.push(c),_.push(p.sideRight),_.push(-1)):(r.push(u),r.push(c),r.push(p.sideRight),r.push(-1)))),y.y===o.y&&(y.y<=n&&(y.x<o.x?(_.push(u),_.push(c),_.push(p.sideTop),_.push(-1)):(r.push(u),r.push(c),r.push(p.sideTop),r.push(-1))),y.y>=x&&(y.x>o.x?(_.push(u),_.push(c),_.push(p.sideBottom),_.push(-1)):(r.push(u),r.push(c),r.push(p.sideBottom),r.push(-1)))),y=o}if(_.length===0||r.length===0)return;M.fillParent(h,r,_),M.fillParent(h,_,r);const m=[];M.calcDeltas(m,r,_),M.calcDeltas(m,_,r),M.addDeltas(m,h)}static fillParent(t,s,h){const e=h.length,l=s.length;for(let n=0;n<l;n+=4){const x=s[n],_=s[n+1],r=s[n+2],f=t[x][_-1],m=t[x][_];let u=8092,a=-1;for(let o=0;o<e;o+=4){if(h[o+2]!==r)continue;const y=h[o],d=h[o+1],c=t[y][d-1],P=t[y][d];switch(r){case p.sideLeft:case p.sideRight:if(I(f.y,c.y,P.y)&&I(m.y,c.y,P.y)){const T=Math.abs(P.y-c.y);T<u&&(u=T,a=o)}break;case p.sideTop:case p.sideBottom:if(I(f.x,c.x,P.x)&&I(m.x,c.x,P.x)){const T=Math.abs(P.x-c.x);T<u&&(u=T,a=o)}}}s[n+3]=a}}static calcDeltas(t,s,h){const e=s.length;for(let l=0;l<e;l+=4){const n=[],x=M.calcDelta(l,s,h,n);t.push(s[l]),t.push(s[l+1]),t.push(s[l+2]),t.push(x)}}static calcDelta(t,s,h,e){const l=s[t+3];if(l===-1)return 0;const n=e.length;return n>1&&e[n-2]===l?0:(e.push(l),M.calcDelta(l,h,s,e)+1)}static addDeltas(t,s){const h=t.length;let e=0;for(let l=0;l<h;l+=4){const n=t[l+3];n>e&&(e=n)}for(let l=0;l<h;l+=4){const n=s[t[l]],x=t[l+1],_=e-t[l+3];switch(t[l+2]){case p.sideLeft:n[x-1].x-=_,n[x].x-=_,x===1&&(n[n.length-1].x-=_),x===n.length-1&&(n[0].x-=_);break;case p.sideRight:n[x-1].x+=_,n[x].x+=_,x===1&&(n[n.length-1].x+=_),x===n.length-1&&(n[0].x+=_);break;case p.sideTop:n[x-1].y-=_,n[x].y-=_,x===1&&(n[n.length-1].y-=_),x===n.length-1&&(n[0].y-=_);break;case p.sideBottom:n[x-1].y+=_,n[x].y+=_,x===1&&(n[n.length-1].y+=_),x===n.length-1&&(n[0].y+=_)}}}};const I=(i,t,s)=>i>=t&&i<=s||i>=s&&i<=t,O=Number.POSITIVE_INFINITY,L=Math.PI,U=2*L,E=128/L,q=256/360,Y=L/180,N=1/Math.LN2;function b(i,t){return(i%=t)>=0?i:i+t}function j(i){return b(i*E,256)}function F(i){return b(i*q,256)}function W(i){return Math.log(i)*N}function G(i,t,s){return i*(1-s)+t*s}const V=8,k=14,B=16;function J(i){return V+Math.max((i-k)*B,0)}function K(i,t,s){let h,e,l,n=0;for(const x of s){h=x.length;for(let _=1;_<h;++_)e=x[_-1],l=x[_],e.y>t!=l.y>t&&((l.x-e.x)*(t-e.y)-(l.y-e.y)*(i-e.x)>0?n++:n--)}return n!==0}function Q(i,t,s,h){let e,l,n,x;const _=h*h;for(const r of s){const f=r.length;if(!(f<2)){e=r[0].x,l=r[0].y;for(let m=1;m<f;++m){if(n=r[m].x,x=r[m].y,S(i,t,e,l,n,x)<_)return!0;e=n,l=x}}}return!1}function X(i,t,s,h,e,l,n){const x=Math.max(h,Math.min(t,l))-t,_=Math.max(e,Math.min(s,n))-s;return x*x+_*_<=i*i}function Z(i,t){if(t===0||Number.isNaN(t))return i;const s=[],h=new g(0,0),e=new g(0,0),l=new g(0,0);for(let n=0;n<i.length;n++){const x=i[n],_=[];for(let r=0;r<x.length;r++){const f=x[r-1],m=x[r],u=x[r+1];r===0?h.setCoords(0,0):h.assignSub(m,f).normalize().rightPerpendicular(),r===x.length-1?e.setCoords(0,0):e.assignSub(u,m).normalize().rightPerpendicular(),l.assignAdd(h,e).normalize();const a=l.x*e.x+l.y*e.y;a!==0&&l.scale(1/a),_.push(g.add(m,l.scale(t)))}s.push(_)}return s}function $(i,t,s,h){const e=new g(i[0],i[1]);if(e.scale(h),t==="viewport"){const l=-s*(Math.PI/180),n=Math.cos(l),x=Math.sin(l);e.rotate(n,x)}return e}let tt=class{constructor(i=0,t=0,s=0,h=0){this.x=i,this.y=t,this.width=s,this.height=h}get isEmpty(){return this.width<=0||this.height<=0}union(i){this.x=Math.min(this.x,i.x),this.y=Math.min(this.y,i.y),this.width=Math.max(this.width,i.width),this.height=Math.max(this.height,i.height)}};export{tt as $,Y as B,j as C,C as D,A as E,F,J as G,K as J,Q as K,W as O,X as Q,L as R,G as U,U as V,Z as X,$ as Z,b,w as d,g,O as q};
