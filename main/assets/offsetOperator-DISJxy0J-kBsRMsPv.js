import{ib as f,d6 as d}from"./main-D7vwjMDX.js";import{r as y,m as L}from"./operatorOffset-DinOS4aJ-C3uRYgsm.js";import{getSpatialReference as u,fromGeometry as b,toGeometry as p,fromGeometries as g}from"./jsonConverter-DldrjI06-BBZIJPNl.js";import"./SimpleGeometryCursor-DSF_YyIm-TAMgMsbK.js";import"./ProjectionTransformation-BocI5WO--BZseuXwW.js";const l={round:0,bevel:1,miter:2,square:3};function Z(e,t,m={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=m,o=u(e);r&&o&&(t=f(t,r,o));const n=b(e),i=n.getSpatialReference();return p(y(n.getGeometry(),i,t,l[c],a,s),i)}function q(e,t,m={}){const{miterLimit:a=10,flattenError:s=0,joins:c="round",unit:r}=m,o=u(e);r&&o&&(t=f(t,r,o));const[n,i]=g(e);return L(n,i,t,l[c],a,s).map(G=>p(G,i)).filter(d)}export{Z as execute,q as executeMany};
