import{c as y,an as L,W as S}from"./main-D7vwjMDX.js";import{o as T,L as v}from"./fetchService-Bp_4TwIU-Lh3ZeIyd.js";import{u as f,f as F,L as M,h,l as m,d as $,b as P,g as G,m as g}from"./loadUtils-qPQbuxA4-CNm-ZkM5.js";import{a as I}from"./jsonContext-D_JQG_uA-Dcz7PH-X.js";import{o as x}from"./portalItemUtils-DsrxEt4W-CwmflhO-.js";import{g as D}from"./styleUtils-DbPBpaXg-sXJw7KaF.js";import"./associatedFeatureServiceUtils-DCapzd9d-BGJe-Txx.js";import"./PortalItem-CJetnHeq-o-aav5WN.js";import"./projection-m8vi7Cxv-CyI2jDkU.js";async function _(t,a){const r=t.instance.portalItem;if(r?.id)return await r.load(a),O(t),t.validateItem&&t.validateItem(r),k(t,a)}function O(t){const a=t.instance.portalItem;if(!a?.type||!t.supportedTypes.includes(a.type))throw new y("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:a?.type,expectedType:t.supportedTypes.join(", ")})}async function k(t,a){const r=t.instance,e=r.portalItem;if(!e)return;const{url:o,title:n}=e,s=I(e,"portal-item");if(r.type==="group")return A(r,s,t);o&&r.type!=="media"&&r.read({url:o},s);const u=new g,l=await b(t,u,a);return l&&r.read(l,s),r.resourceReferences={portalItem:e,paths:s.readResourcePaths??[]},r.type!=="subtype-group"&&r.read({title:n},s),D(r,s)}async function A(t,a,r){const e=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:o,type:n}=e;if(n==="Group Layer"){if(!x(e,"Map"))throw new y("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return C(t,r)}return t.read({title:o},a),E(t,r)}async function C(t,a){const r=t.portalItem,e=await r.fetchData("json");if(!e)return;if(!a.populateGroupLayer)throw new y("portal:missing-populate-group-layer","Missing populate group layer");const o=I(r,"web-map");t.read(e,o),await a.populateGroupLayer(t,e,{context:o}),t.resourceReferences={portalItem:r,paths:o.readResourcePaths??[]}}async function E(t,a){let r;const{portalItem:e}=t;if(!e)return;const o=e.type,n=a.layerModuleTypeMap;if(!n)throw new y("portal:missing-layer-module-type-map","Layer module type map is required to construct sub layers");switch(o){case"Feature Service":case"Feature Collection":r=n.FeatureLayer;break;case"Stream Service":r=n.StreamLayer;break;case"Scene Service":r=n.SceneLayer;break;default:throw new y("portal:unsupported-item-type-as-group",`The item type '${o}' is not supported as a 'IGroupLayer'`)}const s=new g;let[u,l]=await Promise.all([r(),b(a,s)]),i=()=>u;if(o==="Feature Service"){const c=f(l)?.customParameters;l=e.url?await F(l,e.url,s):{},i=await B(l,n)||i;const p=await z(e.url,{customParameters:c,loadContext:s});return await d(t,i,i,l,n,p)}return o==="Scene Service"&&e.url&&(l=await M(e,l,s)),h(l)>0?await d(t,i,null,l,n):await R(t,i,n)}async function R(t,a,r){const{portalItem:e}=t;if(!e?.url)return;const o=await T(e.url);o&&d(t,a,null,{layers:o.layers?.map(m),tables:o.tables?.map(m)},r)}async function d(t,a,r,e,o,n){let s=e.layers||[];const u=e.tables||[];if(t.portalItem?.type==="Feature Collection"?(s.forEach((l,i)=>{l.id=i,l?.layerDefinition?.type==="Table"&&u.push(l)}),s=s.filter(l=>l?.layerDefinition?.type!=="Table")):(s.reverse(),u.reverse()),s.forEach(l=>{const i=n?.(l);if(i||!n){const c=w(t,a(l),e,l,i);t.add(c)}}),u.length){const l=r?null:await o.FeatureLayer();u.forEach(i=>{const c=n?.(i);if(c||!n){const p=w(t,r?r(i):l,e,i,c);t.tables.add(p)}})}}function w(t,a,r,e,o){const n=t.portalItem,s={portalItem:n.clone(),layerId:e.id};e.url!=null&&(s.url=e.url);const u=new a(s);if("sourceJSON"in u&&(u.sourceJSON=o),u.type!=="subtype-group"&&u.type!=="catalog"&&(u.sublayerTitleMode="service-name"),n.type==="Feature Collection"){const l={origin:"portal-item",portal:n.portal||L.getDefault()};u.read(e,l);const i=r.showLegend;i!=null&&u.read({showLegend:i},l)}return u}async function b(t,a,r){if(t.supportsData===!1)return;const e=t.instance,o=e.portalItem;if(!o)return;let n=null;try{n=await o.fetchData("json",r)}catch{}if(N(e)){let s=null;const u=await j(o,n,a);if((n?.layers||n?.tables)&&u>0){if(e.layerId==null){const l=$(e.type),i=l?.length?P(n,l)[0]:f(n);i&&(e.layerId=i.id)}s=J(n,e),s?.layerType==="OrientedImageryLayer"&&e.type==="oriented-imagery"&&e.supportedSourceTypes.add("Feature Layer"),s&&n.showLegend!=null&&(s.showLegend=n.showLegend)}return u>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),s}return n}async function j(t,a,r){if(a?.layers&&a?.tables)return h(a);const e=S(t.url);if(!e)return 1;const o=await r.fetchServiceMetadata(e.url.path,{customParameters:f(a)?.customParameters}).catch(()=>null);return(a?.layers?.length??o?.layers?.length??0)+(a?.tables?.length??o?.tables?.length??0)}function J(t,a){const{layerId:r}=a,e=t.layers?.find(o=>o.id===r)||t.tables?.find(o=>o.id===r);return e&&q(e,a)?e:null}function N(t){return t.type!=="stream"&&"layerId"in t}function q(t,a){const r="layerType"in t&&t.layerType,{type:e}=a;return!(e==="feature"&&r&&t.layerType!=="ArcGISFeatureLayer"||e==="catalog"&&!r||e==="oriented-imagery"&&!r||e==="subtype-group"&&!r)}async function z(t,a){const{layersJSON:r}=await v(t,a);if(!r)return null;const e=[...r.layers,...r.tables];return o=>e.find(n=>n.id===o.id)}async function B(t,a){const{layers:r,tables:e}=t,o=[...r??[],...e??[]];if(!o.length)return;const n=new Set,s=[];for(const{layerType:i}of o){const c=i??"ArcGISFeatureLayer";if(n.has(c))continue;n.add(c);const p=a[G(c)];s.push(p())}const u=await Promise.all(s),l=new Map;return Array.from(n).forEach((i,c)=>{l.set(i,u[c])}),({layerType:i})=>{const c=i??"ArcGISFeatureLayer";return l.get(c)}}export{_ as load};
