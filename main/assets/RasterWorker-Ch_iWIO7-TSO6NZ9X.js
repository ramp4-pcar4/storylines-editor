const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./index-CVKk0WAC-ztfa-lGG.js","./main-D7vwjMDX.js","./main-CUxMDcRh.css","./draw-store-C1_quxsr-B78dyYVI.js","./GraphicsLayer-GkJJfSu5-BZxIbWSA.js","./GraphicsCollection-rAFZo1AJ-xDpoTuU3.js","./Layer-B8q-l4yV-BexM1eQl.js","./TimeExtent-gZaEUVeW-B8lK7hOc.js","./ScaleRangeLayer-DIxukUBC-C-91RrTO.js","./layerContainerType-ChWdCT09-G5sdAsSy.js","./jsonUtils-DzmXEA9_-DgFzKCQh.js","./parser-hXQyB-Qx-DBEB2hCw.js","./mat4f32-CiZjBg9k-CUm34GoR.js","./mat4-BFStKTjU-WrlKAspo.js","./common-CYWrYyJl-E8-sukrT.js","./ElevationInfo-DkWlof50-CKiKbD2K.js","./lengthUtils-wU9RRIqK-Dn-cOZRL.js","./intl-DLmy-Li5-l7mSy0H0.js","./SketchViewModel-T2dNp9Tt-QF9qwxQk.js","./UpdatingHandles-DBzjq66S-BJQBk2Bl.js","./projection-m8vi7Cxv-CyI2jDkU.js","./globalCss-CFN4F315-DRhKtkbs.js","./Queue-B8H6jIv7-oUuyYSR9.js","./signal-DxzURL18-CpTU2B0U.js","./Version-BTMwSXf1-pRbtbwqb.js","./quantityUtils-RaoZoCNH-1kEzJw6x.js","./vec2-BnynUbeJ-CKtGJQAy.js","./vec2f64-CEUyUoff-BBc0aQ6D.js","./vec32-BuqRmYBM-ClpcRCNx.js","./projectVectorToVector-D0K_S4MR-QWHMdts3.js","./projectPointToVector-CG1hALQu-DPSkW3cH.js","./geodesicUtils-DV-lFWtb-ID_rpKXS.js","./Query-CxQYWcUQ-K9TJdLqp.js","./Field-Cj6Pz3TI-CQAvI3hR.js","./fieldType-VTpxE-EM-B2R_XePP.js","./vec42-D8CJyqHG-DnfLTeQH.js","./vec4f64-CjUMzAyX-DPYbdAom.js","./plane-B_adY3_o-CH2S3dla.js","./mat3f64-Dh9_zhFu-BIT-k8Dm.js","./mat4f64-BaJwL7tQ-k0uMm8LY.js","./quatf64-C16JxGFv-BKWK1F8U.js","./sphere-Cj20syUS-D26RDXx7.js","./mat3-DOnW3DjW-C3hbW9XY.js","./jsxFactory-C5LxVioS-x3eAnntn.js","./uuid-Dj9mdEVg-BaKSCiyT.js","./layerViewUtils-Bk5QNiAa-ulOsFMKn.js","./widget-BgluoE6k-Cmg2jAJ2.js","./diffUtils-BSe9IE26-SHg3xJhl.js","./ViewingMode-CyR_b1T8-_s7_Gbsk.js","./meshVertexSpaceUtils-BwEbYR8F-3vQSP7Nh.js","./MeshLocalVertexSpace-DFCiKNRA-m_RitSj4.js","./hydratedFeatures-BDT5zTGB-D1Msl1E0.js","./Scheduler-Br-2v2ys-9ISnkO6X.js","./geometryEngineBase-DueYg7ux-CCeespPx.js","./_commonjsHelpers-BITg13Vk-KnjfkSck.js","./hydrated-Bae3cp-4-BTtKkc0m.js","./mat2d-BQA-1WB--Pnyy0dhf.js","./quat-D8L_R4I0-BhK2bIY8.js","./drapedUtils-7RfmdK5D-BQR7bVKQ.js","./utils-C0LvbFCo-RMQaTNpt.js","./substitute-TfjvVaWd-BEVJTbkP.js"])))=>i.map(i=>d[i]);
import{v as l,I as h,a1 as Fs,by as Z,bz as H,J as Ct,U as $t,t as F,z as J,d0 as Hs,b5 as qs,c as Wt,E as ne,s as St,Y as We,jy as Lt,_ as Xs,bc as ts}from"./main-D7vwjMDX.js";import{s as Ks}from"./projection-m8vi7Cxv-CyI2jDkU.js";import{u as Ns,f as Rs,D as b,y as Ys,a as Zs,h as Qs,U as tn,b as en,e as sn,p as nn,T as rn,J as Ss,c as ue,K as on,H as Je,n as an,X as st,t as un,g as ln,i as cn,Z as pn,R as mn}from"./dataUtils-CkgWlGaX-iwxsDNjj.js";import{D as It,Z as hn,e as fn,f as Is,g as dn,_ as gn,o as yn,I as xn,t as wn,a as pe,h as Cs,x as vn,T as Zt,j as bn,r as re,k as ks,l as _s,m as An,A as Tn,$ as Pn,R as le,n as Fn,p as Nn,s as Rn,u as Bs}from"./RasterSymbolizer-YAjvxuoS-DThvWP51.js";import{h as es}from"./colorUtils-DxUhbS7D-CIyLRpfX.js";import{p as kt,A as $,U as ce,v as Sn,V as js}from"./pixelRangeUtils-BteWOAF5-CpV1k138.js";import{$ as In,I as Cn,D as kn,a as _n,V as Bn}from"./rasterProjectionHelper-BV-HUScL-CkLE87rj.js";import{v as Ms,g as jn}from"./colorRamps-KMmVdCPJ-Q_tnbhPZ.js";import{y as nt}from"./Field-Cj6Pz3TI-CQAvI3hR.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./fieldType-VTpxE-EM-B2R_XePP.js";function Mn(t,e){if(t.spatialReference.equals(e))return t;const n=ts(t.spatialReference),s=ts(e);if(n===s)return t;const r=n/s;return{x:t.x*r,y:t.y*r}}async function na(t,e,n){if(n.type==="extent")return zn(t,e,n);const{width:s,height:r}=t,i=new Uint8Array(s*r),{contains:a,intersects:o}=await Xs(async()=>{const{contains:u,intersects:c}=await import("./index-CVKk0WAC-ztfa-lGG.js");return{contains:u,intersects:c}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60]),import.meta.url).then(u=>u.V);return o(e,n)?n.type==="polyline"?Gn(t,e,n):a(n,e)?t:On(t,e,n):new b({pixelType:t.pixelType,width:s,height:r,mask:i,maskIsAlpha:!1,pixels:[...t.pixels]})}function On(t,e,n){if(!t)return t;const{width:s,height:r}=t,i=e.width/s,a=e.height/r,{xmin:o,ymax:u}=e;let c;if(n.type==="extent"){const d=(n.xmin-o)/i,v=(n.xmax-o)/i,w=(u-n.ymax)/a,A=(u-n.ymin)/a;c=[[[d,w],[d,A],[v,A],[v,w],[d,w]]]}else c=n.rings.map(d=>d.map(([v,w])=>[(v-o)/i,(u-w)/a]));const m=document.createElement("canvas");m.width=s,m.height=r;const p=m.getContext("2d");p.fillStyle="#f00",p.beginPath(),c.forEach(d=>{p.moveTo(d[0][0],d[0][1]);for(let v=0;v<d.length;v++)p.lineTo(d[v][0],d[v][1]);p.closePath()}),p.fill();const f=p.getImageData(0,0,s,r).data,g=t.mask,y=s*r,x=new Uint8Array(y);for(let d=0;d<y;d++)g&&!g[d]||(x[d]=f[4*d+3]>127?255:0);return new b({pixelType:t.pixelType,width:s,height:r,mask:x,maskIsAlpha:!1,pixels:[...t.pixels]})}function zn(t,e,n){const{width:s,height:r}=t,i=new Uint8Array(s*r),a=e.width/s,o=e.height/r;if(n.width/a<.5||n.height/o<.5)return new b({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]});const{xmin:u,xmax:c,ymin:m,ymax:p}=e,{xmin:f,xmax:g,ymin:y,ymax:x}=n,d=Math.max(u,f),v=Math.min(c,g),w=Math.max(m,y),A=Math.min(p,x),T=.5*a,N=.5*o;if(v-d<T||A-w<N||v<u+T||d>c-T||w>p-N||A<m+N)return new b({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]});const P=Math.max(0,(d-u)/a),R=Math.min(s,Math.max(0,(v-u)/a)),k=Math.max(0,(p-A)/o),I=Math.min(r,Math.max(0,(p-w)/o)),C=Math.round(P),B=Math.round(R)-1,G=Math.round(k),Q=Math.round(I)-1;if(C===B&&P%1>.5&&R%1<.5||G===Q&&k%1>.5&&I%1<.5)return new b({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]});if(C===0&&G===0&&B===s&&Q===r)return t;const Ze=t.mask;for(let ie=G;ie<=Q;ie++)for(let ae=C;ae<=B;ae++){const Qe=ie*s+ae;i[Qe]=Ze?Ze[Qe]:255}return new b({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]})}function Gn(t,e,n){const{width:s,height:r}=t,i=new Uint8Array(s*r),a=e.width/s,o=e.height/r,{xmin:u,ymax:c}=e,{paths:m}=n,p=t.mask;for(let f=0;f<m.length;f++){const g=m[f];for(let y=0;y<g.length-1;y++){const[x,d]=g[y],[v,w]=g[y+1];let A=Math.floor((c-d)/o),T=Math.floor((c-w)/o);if(T<A){const P=A;A=T,T=P}A=Math.max(0,A),T=Math.min(r-1,T);const N=(v-x)/(w-d);for(let P=A;P<=T;P++){const R=P===A?Math.max(d,w):(r+1-P)*o,k=P===T?Math.min(d,w):R-o;let I=Math.floor(w===d?(x-u)/a:(N*(R-d)+x-u)/a),C=Math.floor(w===d?(v-u)/a:(N*(k-d)+x-u)/a);if(C<I){const G=I;I=C,C=G}const B=P*s;I=Math.max(0,I),C=Math.min(s-1,C);for(let G=B+I;G<=B+C;G++)i[G]=p?p[G]:255}}}return new b({pixelType:t.pixelType,width:s,height:r,mask:i,pixels:[...t.pixels]})}function Dn(t,e){const{extent:n}=En(t,e,new ne({x:t.pixelSize.x,y:t.pixelSize.y,spatialReference:t.spatialReference})),{extent:s}=t.extent;if(n.xmax=Math.min(n.xmax,s.xmax),n.ymax=Math.min(n.ymax,s.ymax),n.xmin<n.xmax&&n.ymin<n.ymax){const{x:r,y:i}=t.pixelSize,a=Math.round(n.width/r),o=Math.round(n.height/i);t.extent=n,t.width=a,t.height=o}}function En(t,e,n,s=!0){const{spatialReference:r}=t,{x:i,y:a}=Mn(n,r);let o,u,c;const m=e.type==="extent"?e:e.extent;let{xmin:p,xmax:f,ymax:g,ymin:y}=m;const{xmin:x,ymax:d}=t.extent;return s?(p=x+(p>x?i*Math.round((p-x)/i):0),g=d-(g<d?a*Math.round((d-g)/a):0),f=x+(f>x?i*Math.round((f-x)/i):0),y=d-(y<d?a*Math.round((d-y)/a):0),o=new St({xmin:p,ymax:g,xmax:f,ymin:y,spatialReference:r}),u=Math.round(o.width/i),c=Math.round(o.height/a)):(u=Math.floor((f-p)/i+.8),c=Math.floor((g-y)/a+.8),p=x+(p>x?i*Math.floor((p-x)/i+.1):0),g=d-(g<d?a*Math.floor((d-g)/a+.1):0),f=p+u*i,y=g-c*a,o=new St({xmin:p,ymax:g,xmax:f,ymin:y,spatialReference:r})),{extent:o,width:u,height:c}}let Qt=class extends We{constructor(){super(...arguments),this.raster=void 0}};l([h({json:{write:!0}})],Qt.prototype,"raster",void 0),Qt=l([F("esri.layers.support.rasterFunctions.BaseFunctionArguments")],Qt);const D=Qt;var me;let _t=me=class extends D{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new me({raster:this.raster,raster2:this.raster2,operation:this.operation})}};l([h({json:{write:!0}})],_t.prototype,"operation",void 0),l([h({json:{write:!0}})],_t.prototype,"raster2",void 0),l([h({readOnly:!0})],_t.prototype,"rasters",null),_t=me=l([F("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],_t);const Un=_t,Vn=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let E=class extends We{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:n}=t;let s=n.rasters||n.raster&&[n.raster];for(;s?.length;){e.unshift(...s);const o=[];for(let u=0;u<s.length;u++){const{parameters:c}=s[u],m=c.rasters||c.raster&&[c.raster];m?.length&&o.push(...m)}s=o}for(let o=e.length-1;o>=0;o--)e[o].isNoopProcess&&e.splice(o,1);let r=!1;for(let o=0;o<e.length;o++){const u=e[o];u.id=e.length-o-1;const{rasters:c}=u.parameters;r=r||c!=null&&c.length>1}const i=e.some(({name:o})=>Vn.has(o.toLowerCase())),{rawSourceRasterInfos:a}=this;return{functions:e,hasBranches:r,hasFocalFunction:i,isSourceSingleBand:a?.[0]?.bandCount===1}}bind(t,e=!1,n=-1){this.id=n+1;const s=this._getRasterValues();let r=!0;for(let i=0;i<s.length;i++){const a=s[i];if(a!=null&&this._isRasterFunctionValue(a)){const o=a.bind(t,e,this.id+i);if(!o.success)return this._bindingResult=o,o;r=r&&o.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=r&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),n=e.length===0?t.pixelBlocks??t.primaryPixelBlocks:e.map(s=>this._readRasterValue(s,t));return this._processPixels({...t,pixelBlocks:n})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const r=t.map(a=>a.processInputBandIds()[0]);this.rawInputBandIds=r,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((a,o)=>a!==o);const i=t.filter(a=>a.functionName==="ExtractBand");return i.length&&i.forEach((a,o)=>{a.isInputBandIdsSwizzled=!0,a.swizzledBandSelection=[o,o,o]}),this.rawInputBandIds}const n=t[0];if(n){if(e=n.processInputBandIds(),n.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:r}=this.sourceRasterInfos[0];for(let i=0;i<r;i++)e.push(i)}const s=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=s.some((r,i)=>r!==i),this.rawInputBandIds=s,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:n}=this.functionArguments;return n&&Array.isArray(n)&&n.length?(t.rasters=n.map(s=>this._isRasterFunctionValue(s)?s.getWebGLProcessorDefinition():typeof s=="number"?{name:"Constant",parameters:{value:s},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:s},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(s=>s!=null)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];this.functionName==="Clip"&&t.push(this.functionArguments);const{raster:e,rasters:n}=this.functionArguments;if(n&&Array.isArray(n)&&n.length)n.forEach(s=>{if(this._isRasterFunctionValue(s)){const r=s.getClippingGeometries();t.push(...r)}});else if(this._isRasterFunctionValue(e)){const s=e.getClippingGeometries();t.push(...s)}return t}_getOutputPixelType(t){return this.outputPixelType==="unknown"?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.multidimensionalInfo?.variables.forEach(e=>{e.statistics=void 0,e.histograms=void 0})}_getRasterValues(){const{rasterArgumentNames:t}=this;return t[0]==="rasters"?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:n,rasterIds:s}=t;if(e.length===0)return n;const r=e.map(a=>a&&typeof a=="object"&&"bind"in a&&a.rasterInfo?a.rasterInfo:typeof a=="string"&&s.includes(a)?n[s.indexOf(a)]:typeof a!="number"?n[0]:void 0),i=r.find(a=>a)??n[0];return r.forEach((a,o)=>{a===void 0&&(r[o]=i)}),r}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],n=[]){for(let s=0;s<t.sourceRasters.length;s++){const r=t.sourceRasters[s];if(typeof r!="number")if("bind"in r)this._getPrimaryRasters(r,e,n);else{const i=r,a=this._getPrimaryRasterId(i);if(a==null)continue;n.includes(a)||(this.mainPrimaryRasterId===a?(e.unshift(i),n.unshift(a)):(e.push(i),n.push(a)))}}}_isRasterFunctionValue(t){return t!=null&&typeof t=="object"&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:n}=e;if(t==null||t==="$$"){const s=n[0];return s==null?null:s.clone()}if(typeof t=="string"){const s=e.primaryRasterIds.indexOf(t);return s===-1?null:n[s]}if(typeof t=="number"){const s=n[0];if(s==null)return null;const{width:r,height:i,pixelType:a}=s,o=new Float32Array(r*i);o.fill(t);const u=this.sourceRasterInfos[0].bandCount,c=new Array(u).fill(o);return new b({width:r,height:i,pixelType:a,pixels:c})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:n,statistics:s,histograms:r}=t,i=n.BandProperties;i&&i.length!==e&&(t.keyProperties={...n,BandProperties:void 0}),s&&s.length!==e&&(t.statistics=s.length>e?s.slice(0,e):null),r&&r.length!==e&&(t.histograms=r.length>e?r.slice(0,e):null),n.BAND_COUNT&&Number(n.BAND_COUNT)!==e&&(t.keyProperties={...n,BAND_COUNT:typeof n.BAND_COUNT=="string"?String(e):e})}};l([h({json:{write:!0}})],E.prototype,"functionName",void 0),l([h({json:{write:!0}})],E.prototype,"functionArguments",void 0),l([h()],E.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}}),Fs(t=>t?.toLowerCase())],E.prototype,"outputPixelType",void 0),l([h({json:{write:!0}})],E.prototype,"mainPrimaryRasterId",void 0),l([h()],E.prototype,"sourceRasters",void 0),l([h({type:[hn],json:{write:!0}})],E.prototype,"sourceRasterInfos",void 0),l([h({json:{write:!0}})],E.prototype,"rasterInfo",void 0),l([h({json:{write:!0}})],E.prototype,"readingBufferSize",void 0),l([h({json:{write:!0}})],E.prototype,"id",void 0),l([h()],E.prototype,"isNoopProcess",void 0),l([h()],E.prototype,"supportsGPU",null),l([h()],E.prototype,"rawInputBandIds",void 0),l([h()],E.prototype,"rawSourceRasterInfos",void 0),l([h()],E.prototype,"isInputBandIdsSwizzled",void 0),l([h()],E.prototype,"swizzledBandSelection",void 0),l([h()],E.prototype,"isBranch",void 0),l([h({readOnly:!0})],E.prototype,"flatWebGLFunctionChain",null),l([h()],E.prototype,"_bindingResult",void 0),E=l([F("esri.layers.support.rasterFunctions.BaseRasterFunction")],E);const z=E,_={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},Ln={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65},W={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},K={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},$n={majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75},Os={setNull:50,conditional:78},ss={...Ln,...W,...K,...$n,...Os},zs=new Map([[K.acos,{domain:[0,Math.PI],isInteger:!1}],[K.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[K.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[K.cos,{domain:[-1,1],isInteger:!1}],[K.sin,{domain:[-1,1],isInteger:!1}],[W.booleanAnd,{domain:[0,1],isInteger:!0}],[W.booleanNot,{domain:[0,1],isInteger:!0}],[W.booleanOr,{domain:[0,1],isInteger:!0}],[W.booleanXOr,{domain:[0,1],isInteger:!0}],[W.equalTo,{domain:[0,1],isInteger:!0}],[W.notEqual,{domain:[0,1],isInteger:!0}],[W.greaterThan,{domain:[0,1],isInteger:!0}],[W.greaterThanEqual,{domain:[0,1],isInteger:!0}],[W.lessThan,{domain:[0,1],isInteger:!0}],[W.lessThanEqual,{domain:[0,1],isInteger:!0}],[W.isNull,{domain:[0,1],isInteger:!0}]]);function ns(t){return zs.get(t)}const rs=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function Wn(t,e=!1){const n=t.map(o=>o.mask),s=n.filter(o=>o!=null),r=t[0].pixels[0].length;if(s.length===0||e&&s.length!==n.length)return new Uint8Array(r).fill(255);const i=s[0],a=new Uint8Array(i);if(s.length===1)return a;if(!e){for(let o=1;o<s.length;o++){const u=s[o];for(let c=0;c<a.length;c++)a[c]&&(a[c]=u[c]?255:0)}return a}for(let o=1;o<s.length;o++){const u=s[o];for(let c=0;c<a.length;c++)a[c]===0&&(a[c]=u[c]?255:0)}return a}function Jn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]+r[o]);return a}function Hn(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand("f32",r);return i.set(s),i}function qn(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=s[a]*s[a]);return i}function Xn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]-r[o]);return a}function Kn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]*r[o]);return a}function Yn(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=Math.sign(s[a])*Math.floor(Math.abs(s[a])));return i}function Gs(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]/r[o]);return a}function Zn(t,e,n){return Gs(t,e,"f32")}function Qn(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=Math.floor(s[o]/r[o]));return a}function tr(t,e,n,s){const r=t[0],i=r.length,a=b.createEmptyBand(n,i);if(s===K.atanh){for(let u=0;u<i;u++)if(e[u]){const c=r[u];Math.abs(c)>=1?e[u]=0:a[u]=Math.atanh(c)}return a}const o=s===K.asin?Math.asin:Math.acos;for(let u=0;u<i;u++)if(e[u]){const c=r[u];Math.abs(c)>1?e[u]=0:a[u]=o(c)}return a}function er(t,e,n,s){const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s(r[o]));return a}function sr(t,e,n,s){const[r,i]=t,a=r.length,o=b.createEmptyBand(n,a);for(let u=0;u<a;u++)e&&!e[u]||(o[u]=s(r[u],i[u]));return o}function nr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]&r[o]);return a}function rr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<<r[o]);return a}function or(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=~s[a]);return i}function ir(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]|r[o]);return a}function ar(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>>r[o]);return a}function ur(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]^r[o]);return a}function lr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]&&r[o]?1:0);return a}function cr(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=s[a]?0:1);return i}function pr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]||r[o]?1:0);return a}function mr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=(s[o]?1:0)^(r[o]?1:0));return a}function hr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]===r[o]?1:0);return a}function He(t,e,n,s){const[r]=t,i=r.length,a=b.createEmptyBand(n,i),o=s===Math.E;for(let u=0;u<i;u++)e&&!e[u]||(a[u]=o?Math.exp(r[u]):s**r[u]);return a}function fr(t,e,n){return He(t,e,n,10)}function dr(t,e,n){return He(t,e,n,2)}function gr(t,e,n){return He(t,e,n,Math.E)}function qe(t,e,n,s){const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(r[o]<=0?e[o]=0:a[o]=s(r[o]));return a}function yr(t,e,n){return qe(t,e,n,Math.log10)}function xr(t,e,n){return qe(t,e,n,Math.log2)}function wr(t,e,n){return qe(t,e,n,Math.log)}function vr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>r[o]?1:0);return a}function br(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]>=r[o]?1:0);return a}function Ar(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<r[o]?1:0);return a}function Tr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<=r[o]?1:0);return a}function Pr(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);if(!e)return i;for(let a=0;a<r;a++)i[a]=e[a]?0:1;return i}function Fr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]%r[o]);return a}function Nr(t,e,n){const[s]=t,r=s.length,i=b.createEmptyBand(n,r);for(let a=0;a<r;a++)e&&!e[a]||(i[a]=-s[a]);return i}function Rr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]===r[o]?0:1);return a}function Sr(t,e,n){const[s,r]=t,i=s.length,a=b.createEmptyBand(n,i),o=new Uint8Array(i);for(let u=0;u<i;u++)e!=null&&!e[u]||s[u]!==0||(a[u]=r[u],o[u]=255);return{band:a,mask:o}}function os(t,e,n){const[s,r,i]=t,a=s.length,o=b.createEmptyBand(n,a);for(let u=0;u<a;u++)e&&!e[u]||(o[u]=s[u]?r[u]:i[u]);return o}function is(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let u=r[o];for(let c=1;c<s;c++){const m=t[c][o];u<m&&(u=m)}a[o]=u}return a}function as(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let u=r[o];for(let c=1;c<s;c++){const m=t[c][o];u>m&&(u=m)}a[o]=u}return a}function us(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let u=r[o],c=u;for(let m=1;m<s;m++){const p=t[m][o];c<p?c=p:u>p&&(u=p)}a[o]=c-u}return a}function ls(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){let u=0;for(let c=0;c<s;c++)u+=t[c][o];a[o]=u/s}return a}function cs(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o])for(let u=0;u<s;u++){const c=t[u];a[o]+=c[o]}return a}function ps(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)if(!e||e[o]){const u=new Float32Array(s);let c=0;for(let p=0;p<s;p++){const f=t[p];c+=f[o],u[p]=f[o]}c/=s;let m=0;for(let p=0;p<s;p++)m+=(u[p]-c)**2;a[o]=Math.sqrt(m/s)}return a}function ms(t,e,n){const s=t.length;if(s<2)return t[0];const r=Math.floor(s/2),[i]=t,a=i.length,o=b.createEmptyBand(n,a),u=new Float32Array(s),c=s%2==1;for(let m=0;m<a;m++)if(!e||e[m]){for(let p=0;p<s;p++)u[p]=t[p][m];u.sort(),o[m]=c?u[r]:(u[r]+u[r-1])/2}return o}function Ds(t,e,n){const[s,r]=t;if(r==null)return s;const i=s.length,a=b.createEmptyBand(n,i);for(let o=0;o<i;o++)e&&!e[o]||(a[o]=s[o]<r[o]?s[o]:r[o]);return a}function hs(t,e,n){const s=t.length;if(s<=2)return Ds(t,e,n);const r=t[0].length,i=b.createEmptyBand(n,r),a=new Map;for(let o=0;o<r;o++)if(!e||e[o]){a.clear();for(let p=0;p<s;p++){const f=t[p][o];a.set(f,a.has(f)?a.get(f)+1:1)}let u=0,c=0;const m=[];for(const p of a.keys())u=a.get(p),u>c?(c=u,m.length=0,m.push(p)):u===c&&m.push(p);m.length>1&&m.sort((p,f)=>p-f),i[o]=m[0]}return i}function fs(t,e,n){const s=t.length;if(s<=2)return Ds(t,e,n);const r=t[0].length,i=b.createEmptyBand(n,r),a=new Map;for(let o=0;o<r;o++)if(!e||e[o]){a.clear();for(let p=0;p<s;p++){const f=t[p][o];a.set(f,a.has(f)?a.get(f)+1:1)}let u=0,c=t.length;const m=[];for(const p of a.keys())u=a.get(p),u<c?(c=u,m.length=0,m.push(p)):u===c&&m.push(p);m.length>1&&m.sort((p,f)=>p-f),i[o]=m[0]}return i}function ds(t,e,n){const s=t.length;if(s<2)return t[0];const[r]=t,i=r.length,a=b.createEmptyBand(n,i),o=new Set;for(let u=0;u<i;u++)if(!e||e[u]){let c;o.clear();for(let m=0;m<s;m++)c=t[m][u],o.add(c);a[u]=o.size}return a}const U=new Map,oe=new Map,S=new Map,O=new Map;function Ir(){U.size||(U.set(4,Math.sqrt),U.set(6,Math.acos),U.set(7,Math.asin),U.set(8,Math.atan),U.set(9,Math.atanh),U.set(10,Math.abs),U.set(21,Math.cos),U.set(22,Math.cosh),U.set(48,Math.floor),U.set(49,Math.ceil),U.set(51,Math.sin),U.set(52,Math.sinh),U.set(56,Math.tan),U.set(57,Math.tanh),U.set(59,Math.acosh),U.set(60,Math.asinh),U.set(65,Math.floor),oe.set(5,Math.pow),oe.set(61,Math.atan2),S.set(1,Jn),S.set(2,Xn),S.set(3,Kn),S.set(11,nr),S.set(12,rr),S.set(13,or),S.set(14,ir),S.set(15,ar),S.set(16,ur),S.set(17,lr),S.set(18,cr),S.set(19,pr),S.set(20,mr),S.set(23,Gs),S.set(24,hr),S.set(25,gr),S.set(26,fr),S.set(27,dr),S.set(28,vr),S.set(29,br),S.set(30,Yn),S.set(31,Pr),S.set(32,Hn),S.set(33,Ar),S.set(34,Tr),S.set(35,wr),S.set(36,yr),S.set(37,xr),S.set(44,Fr),S.set(45,Nr),S.set(46,Rr),S.set(53,qn),S.set(64,Zn),S.set(65,Qn),S.set(76,os),S.set(78,os),O.set(38,hs),O.set(39,is),O.set(40,ls),O.set(41,ms),O.set(42,as),O.set(43,fs),O.set(47,us),O.set(54,ps),O.set(55,cs),O.set(58,ds),O.set(66,hs),O.set(67,is),O.set(68,ls),O.set(69,ms),O.set(70,as),O.set(71,fs),O.set(72,us),O.set(73,ps),O.set(74,cs),O.set(75,ds))}function Es(t,e,n={}){Ir();let s=Wn(t,e>=66&&e<=75);const{outputPixelType:r="f32"}=n,i=!O.has(e)||n.processAsMultiband,a=i?t[0].pixels.length:1,o=[];for(let c=0;c<a;c++){const m=O.has(e)&&!i?t.flatMap(g=>g.pixels):t.map(g=>g.pixels[c]);let p,f=!0;if(e===Os.setNull){const g=Sr(m,s,r);p=g.band,s=g.mask,f=!1}else S.has(e)?p=S.get(e)(m,s,"f64"):U.has(e)?p=e===K.asin||e===K.acos||e===K.atanh?tr(m,s,"f64",e):er(m,s,"f64",U.get(e)):oe.has(e)?p=sr(m,s,"f64",oe.get(e)):O.has(e)?p=O.get(e)(m,s,"f64"):(p=m[0],f=!1);if(f&&e!==W.isNull&&!zs.has(e)){const g=b.createEmptyBand(r,p.length);s||(s=new Uint8Array(p.length).fill(255)),Sn(p,s),js(p,s,r,g),p=g}o.push(p)}const u=t[0];return new b({width:u.width,height:u.height,pixelType:r,mask:e===W.isNull?null:s,pixels:o})}function Cr(t,e,n){return Es(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:n})}let Bt=class extends z{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?.[0]==null||e?.[1]==null?null:Cr(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],n=this.outputPixelType??"f32";let[s,r]=kt(n);const i=$(n);return i&&(s-=1e-4,r+=1e-4),{imageCount:2,operationName:e,domainRange:[s,r],isOutputRounded:i}}};l([h({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),l([h({type:Un,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),l([h()],Bt.prototype,"rasterArgumentNames",void 0),Bt=l([F("esri.layers.support.rasterFunctions.ArithmeticFunction")],Bt);const kr=Bt;var he;let fe=he=class extends D{clone(){return new he({raster:this.raster})}};fe=he=l([F("esri.layers.support.rasterFunctions.AspectFunctionArguments")],fe);const _r=fe;let lt=class extends z{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],i=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1});return wn(e,{resolution:i})}};l([h({json:{write:!0,name:"rasterFunction"}})],lt.prototype,"functionName",void 0),l([h({type:_r,json:{write:!0,name:"rasterFunctionArguments"}})],lt.prototype,"functionArguments",void 0),l([h()],lt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],lt.prototype,"isGCS",void 0),lt=l([F("esri.layers.support.rasterFunctions.AspectFunction")],lt);const Br=lt,jr=new Set(["+","-","*","/","(",")"]);function Mr(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1));const n=t.split(""),s=[],r=[];let i="";for(let a=0;a<n.length;a++){const o=n[a];jr.has(o)?(i.length&&r.push(gs(i,e)),s.push(o),i=""):i=i.concat(o)}return i.length&&r.push(gs(i,e)),{ops:s,nums:r}}function gs(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function Or(t,e,n,s){if(typeof n=="number"&&typeof s=="number")return n+s;let r,i,a;typeof n=="number"?(a=s,r=a.length,i=new Float32Array(r),i.fill(n)):(r=n.length,i=n,s.constructor===Number?(a=new Float32Array(r),a.fill(s)):a=s);const o=new Float32Array(r);switch(e){case"+":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=i[u]+a[u]);break;case"-":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=i[u]-a[u]);break;case"*":for(let u=0;u<r;u++)(t==null||t[u])&&(o[u]=i[u]*a[u]);break;case"/":for(let u=0;u<r;u++)(t==null||t[u])&&a[u]&&(o[u]=i[u]/a[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return o}function zr(t,e){t.splice(e,1);let n=0,s=0;do{n=0,s=0;for(let r=0;r<t.length;r++)if(t[r]==="(")n=r;else if(t[r]===")"){s=r;break}s===n+1&&t.splice(n,2)}while(s===n+1);return t}function Gr(t){if(t.length===1)return{opIndex:0,numIndex:0};let e=0,n=0;for(let a=0;a<t.length;a++)if(t[a]==="(")e=a;else if(t[a]===")"){n=a;break}const s=n===0?t:t.slice(e+1,n);let r=-1;for(let a=0;a<s.length;a++)if(s[a]==="*"||s[a]==="/"){r=a;break}if(r>-1)n>0&&(r+=e+1);else{for(let a=0;a<s.length;a++)if(s[a]==="+"||s[a]==="-"){r=a;break}n>0&&(r+=e+1)}let i=0;for(let a=0;a<r;a++)t[a]==="("&&i++;return{opIndex:r,numIndex:r-i}}function Dr(t,e,n){let s,{ops:r,nums:i}=Mr(n,e);if(r.length===0){const a=i.length===1?i[0]:e[0];if(a instanceof Float32Array)return[a];const o=new Float32Array(e[0].length);return typeof a=="number"?o.fill(a):o.set(a),[o]}for(;r.length>0;){const{numIndex:a,opIndex:o}=Gr(r);if(s=Or(t,r[o],i[a],i[a+1]),r.length===1)break;r=zr(r,o),i.splice(a,2,s)}return[s]}const Er=new Z({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Ur(t,e){if(!mn(t))return t;const{equation:n,method:s}=e,r=e.bandIndexes.map(f=>f-1),{pixels:i,mask:a}=t;let o;switch(s){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":o=ys(a,i[r[0]],i[r[1]]);break;case"ndwi":o=ys(a,i[r[1]],i[r[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":o=Lr(a,i[r[0]],i[r[1]]);break;case"ci-g":case"ci-re":o=$r(a,i[r[0]],i[r[1]]);break;case"savi":o=Wr(a,i[r[0]],i[r[1]],r[2]+1);break;case"tsavi":o=Jr(a,i[r[0]],i[r[1]],r[2]+1,r[3]+1,r[4]+1);break;case"msavi":o=Hr(a,i[r[0]],i[r[1]]);break;case"gemi":o=qr(a,i[r[0]],i[r[1]]);break;case"pvi":o=Xr(a,i[r[0]],i[r[1]],r[2]+1,r[3]+1);break;case"gvitm":o=Kr(a,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]],i[r[5]]]);break;case"sultan":o=Yr(a,[i[r[0]],i[r[1]],i[r[2]],i[r[3]],i[r[4]]]);break;case"vari":o=Zr(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"mtvi2":o=Qr(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"rtvi-core":o=to(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"evi":o=eo(a,[i[r[0]],i[r[1]],i[r[2]]]);break;case"wndwi":o=so(a,[i[r[0]],i[r[1]],i[r[2]]],r[3]?r[3]+1:.5);break;case"bai":o=no(a,i[r[0]],i[r[1]]);break;case"custom":o=Dr(a,i,n);break;default:return t}const{outputPixelType:u="f32"}=e,c=u!=null&&$(u);let m;a?(m=new Uint8Array(t.width*t.height),m.set(a)):c&&(m=new Uint8Array(t.width*t.height).fill(255)),c&&(o=o.map(f=>{const g=b.createEmptyBand(u,f.length);return js(f,m,u,g),g}));const p=new b({width:t.width,height:t.height,pixelType:u,pixels:o,mask:m});return p.updateStatistics(),p}function Vr(t,e,n,s){const{mask:r,pixels:i,width:a,height:o}=t,u=i[n],c=i[e],m=c.length,p=s?new Uint8Array(m):new Float32Array(m),f=s?100:1,g=s?100.5:0;for(let x=0;x<m;x++)if(r==null||r[x]){const d=u[x],v=c[x],w=d+v;w&&(p[x]=(d-v)/w*f+g)}const y=new b({width:a,height:o,mask:r,pixelType:s?"u8":"f32",pixels:[p]});return y.updateStatistics(),y}function V(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function ys(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=e[i],o=n[i],u=a+o;u&&(r[i]=(a-o)/u)}return[r]}function Lr(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=e[i],o=n[i];o&&(r[i]=a/o)}return[r]}function $r(t,e,n){const s=e.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=e[i],o=n[i];o&&(r[i]=a/o-1)}return[r]}function Wr(t,e,n,s){const r=n.length,i=new Float32Array(r);for(let a=0;a<r;a++)if(t==null||t[a]){const o=n[a],u=e[a],c=u+o+s;c&&(i[a]=(u-o)/c*(1+s))}return[i]}function Jr(t,e,n,s,r,i){const a=n.length,o=new Float32Array(a),u=-r*s+i*(1+s*s);for(let c=0;c<a;c++)if(t==null||t[c]){const m=n[c],p=e[c],f=r*p+m+u;f&&(o[c]=s*(p-s*m-r)/f)}return[o]}function Hr(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=n[i],o=e[i],u=2*o+1;r[i]=.5*(u-Math.sqrt(u*u-8*(o-a)))}return[r]}function qr(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i]){const a=n[i],o=e[i];if(a!==1&&o+a+.5!==0){const u=(2*(o*o-a*a)+1.5*o+.5*a)/(o+a+.5);r[i]=u*(1-.25*u)-(a-.125)/(1-a)}}return[r]}function Xr(t,e,n,s,r){const i=n.length,a=new Float32Array(i),o=1/Math.sqrt(1+s*s);for(let u=0;u<i;u++)if(t==null||t[u]){const c=n[u],m=e[u];a[u]=(m-s*c-r)*o}return[a]}function Kr(t,e){const[n,s,r,i,a,o]=e,u=n.length,c=new Float32Array(u);for(let m=0;m<u;m++)(t==null||t[m])&&(c[m]=-.2848*n[m]-.2435*s[m]-.5436*r[m]+.7243*i[m]+.084*a[m]-.18*o[m]);return[c]}function Yr(t,e){const[n,s,r,i,a]=e,o=n.length,u=new Float32Array(o),c=new Float32Array(o),m=new Float32Array(o);for(let p=0;p<o;p++)(t==null||t[p])&&(u[p]=a[p]?i[p]/a[p]*100:0,c[p]=n[p]?i[p]/n[p]*100:0,m[p]=r[p]?s[p]/r[p]*(i[p]/r[p])*100:0);return[u,c,m]}function Zr(t,e){const[n,s,r]=e,i=n.length,a=new Float32Array(i);for(let o=0;o<i;o++)if(t==null||t[o])for(o=0;o<i;o++){const u=n[o],c=s[o],m=c+u-r[o];m&&(a[o]=(c-u)/m)}return[a]}function Qr(t,e){const[n,s,r]=e,i=n.length,a=new Float32Array(i);for(let o=0;o<i;o++)if(t==null||t[o])for(o=0;o<i;o++){const u=n[o],c=s[o],m=r[o],p=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(c))-.5);if(p){const f=1.5*(1.2*(u-m)-2.5*(c-m));a[o]=f/p}}return[a]}function to(t,e){const[n,s,r]=e,i=n.length,a=new Float32Array(i);for(let o=0;o<i;o++)if(t==null||t[o])for(o=0;o<i;o++){const u=n[o],c=s[o],m=r[o];a[o]=100*(u-c)-10*(u-m)}return[a]}function eo(t,e){const[n,s,r]=e,i=n.length,a=new Float32Array(i);for(let o=0;o<i;o++)if(t==null||t[o])for(o=0;o<i;o++){const u=n[o],c=s[o],m=u+6*c-7.5*r[o]+1;m&&(a[o]=2.5*(u-c)/m)}return[a]}function so(t,e,n=.5){const[s,r,i]=e,a=r.length,o=new Float32Array(a);for(let u=0;u<a;u++)if(t==null||t[u])for(u=0;u<a;u++){const c=s[u],m=r[u],p=i[u],f=c+n*m+(1-n)*p;f&&(o[u]=(c-n*m-(1-n)*p)/f)}return[o]}function no(t,e,n){const s=n.length,r=new Float32Array(s);for(let i=0;i<s;i++)if(t==null||t[i])for(i=0;i<s;i++){const a=(.1-e[i])**2+(.06-n[i])**2;a&&(r[i]=1/a)}return[r]}var de;let Jt=de=class extends D{constructor(){super(...arguments),this.method="custom"}clone(){return new de({method:this.method,bandIndexes:this.bandIndexes,raster:J(this.raster)})}};l([h({json:{type:String,write:!0}})],Jt.prototype,"bandIndexes",void 0),l([H(Er)],Jt.prototype,"method",void 0),Jt=de=l([F("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],Jt);const ro=Jt,oo=new Set(["vari","mtvi2","rtvi-core","evi"]);let jt=class extends z{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount=this.functionArguments.method==="sultan"?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{method:n,bandIndexes:s}=this.functionArguments,r=s.split(" ").map(i=>parseFloat(i));return Ur(e,{method:n,bandIndexes:r,equation:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1);t.length===2&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let n,s;const r=new Float32Array(3),{method:i}=this.functionArguments;switch(i){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":n=V([e[0],e[1],0]),s="ndxi";break;case"ndwi":n=V([e[1],e[0],0]),s="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":n=V([e[0],e[1],0]),s="sr";break;case"ci-g":case"ci-re":n=V([e[0],e[1],0]),s="ci";break;case"savi":n=V([e[0],e[1],0]),s="savi",r[0]=t[2]+1;break;case"tsavi":n=V([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1,r[2]=t[4]+1;break;case"msavi":n=V([e[0],e[1],0]),s="msavi";break;case"gemi":n=V([e[0],e[1],0]),s="gemi";break;case"pvi":n=V([e[0],e[1],0]),s="tsavi",r[0]=t[2]+1,r[1]=t[3]+1;break;case"vari":n=V([e[0],e[1],e[2]]),s="vari";break;case"mtvi2":n=V([e[0],e[1],e[2]]),s="mtvi";break;case"rtvi-core":n=V([e[0],e[1],e[2]]),s="rtvicore";break;case"evi":n=V([e[0],e[1],e[2]]),s="evi";break;case"wndwi":n=V([e[0],e[1],0]),s="wndwi",r[0]=t[3]?t[3]+1:.5;break;case"bai":n=V([e[1],e[0],0]),s="bai";break;default:n=V([0,1,2]),s="custom"}return{bandIndexMat3:n,indexType:s,adjustments:r,isOutputRounded:$(this.outputPixelType)}}_getInputBandIds(t){if(this.functionArguments.method==="custom")return t;const e=this.functionArguments.bandIndexes.split(" ").map(a=>parseFloat(a)-1),n=t.length,s=e.map(a=>a>=n?n-1:a),r=oo.has(this.functionArguments.method)?3:2,i=s.slice(0,r).map(a=>t[a]);return i.length===2&&i.push(0),i}};l([h({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),l([h({type:ro,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),l([h()],jt.prototype,"rasterArgumentNames",void 0),jt=l([F("esri.layers.support.rasterFunctions.BandArithmeticFunction")],jt);const io=jt;var ge;const xs=new Z({1:"outside",2:"inside"},{useNumericKeys:!0});let Ht=ge=class extends D{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new ge({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};l([h({types:Hs,json:{read:qs,write:!0}})],Ht.prototype,"clippingGeometry",void 0),l([h({json:{read:xs.read,write:xs.write}})],Ht.prototype,"clippingType",void 0),Ht=ge=l([F("esri.layers.support.rasterFunctions.ClipFunctionArguments")],Ht);const ao=Ht;let ct=class extends z{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{functionArguments:e}=this,{clippingGeometry:n,clippingType:s}=e;if(!n)return{success:!1,supportsGPU:!1,error:"missing clipping geometry"};if(s==="outside")try{const{spatialReference:r}=t,i=n.type==="extent"?_n(n,r):Bn(n,r).extent;i&&Dn(t,i)}catch{}return{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};l([h({json:{write:!0,name:"rasterFunction"}})],ct.prototype,"functionName",void 0),l([h({type:ao,json:{write:!0,name:"rasterFunctionArguments"}})],ct.prototype,"functionArguments",void 0),l([h()],ct.prototype,"rasterArgumentNames",void 0),l([h()],ct.prototype,"isNoopProcess",void 0),ct=l([F("esri.layers.support.rasterFunctions.ClipFunction")],ct);const uo=ct;var ye;let Y=ye=class extends D{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return fn.includes(e)?e:null}readColorRamp(t){return Ms(t)}readColorRampName(t,e){if(!t)return null;const n=It.jsonValues.find(s=>s.toLowerCase()===t.toLowerCase());return n?It.fromJSON(n):null}clone(){return new ye({colormap:J(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};l([h({type:[[Number]],json:{write:!0}})],Y.prototype,"colormap",void 0),l([h({type:String,json:{write:!0}})],Y.prototype,"colormapName",void 0),l([Fs("colormapName")],Y.prototype,"castColormapName",null),l([h({types:jn,json:{write:!0}})],Y.prototype,"colorRamp",void 0),l([Ct("colorRamp")],Y.prototype,"readColorRamp",null),l([h({type:It.apiValues,json:{type:It.jsonValues,write:It.write}})],Y.prototype,"colorRampName",void 0),l([Ct("colorRampName")],Y.prototype,"readColorRampName",null),Y=ye=l([F("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],Y);const lo=Y,co=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],po=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Xe(t,e){const n=[],s=[];for(let i=0;i<t.length-1;i++)n.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[i].slice(1),toColor:t[i+1].slice(1)}),s.push(t[i+1][0]-t[i][0]);const r=t[t.length-1][0];return Bs({type:"multipart",colorRamps:n},{numColors:r,weights:e=e??s})}function mo(){return Xe([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}function ho(){const t=Xe([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}function fo(){return Bs({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}function go(){const t=[];for(let e=0;e<256;e++){const n=[];for(let s=0;s<3;s++)n.push(Math.round(255*Math.random()));t.push(n)}return t}function yo(){return Xe([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}function xo(t){let e;switch(t){case"elevation":e=mo();break;case"gray":e=fo();break;case"hillshade":e=yo();break;case"ndvi":e=co;break;case"ndvi2":e=ho();break;case"ndvi3":e=po;break;case"random":e=go()}return e?(e=e.map((n,s)=>[s,...n]),e):null}let tt=class extends z{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:n,colorRamp:s,colorRampName:r}=this.functionArguments;if(!e?.length)if(s)this.colorRamp=s,e=pe(s,{interpolateAlpha:!0});else if(r){const o=Is(r);o&&(e=pe(o),this.colorRamp=Ms(o))}else n&&(e=xo(n));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const i=this._getOutputPixelType(t.pixelType);this.outputPixelType=i.startsWith("f")?"s32":i;const a=t.clone();return a.pixelType=this.outputPixelType,a.colormap=e,a.bandCount=1,this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||$(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};l([h({json:{write:!0,name:"rasterFunction"}})],tt.prototype,"functionName",void 0),l([h({type:lo,json:{write:!0,name:"rasterFunctionArguments"}})],tt.prototype,"functionArguments",void 0),l([h()],tt.prototype,"rasterArgumentNames",void 0),l([h()],tt.prototype,"isNoopProcess",void 0),l([h({json:{write:!0}})],tt.prototype,"indexedColormap",void 0),l([h()],tt.prototype,"colorRamp",void 0),tt=l([F("esri.layers.support.rasterFunctions.ColormapFunction")],tt);const wo=tt;var xe;let we=xe=class extends D{clone(){return new xe({raster:this.raster})}};we=xe=l([F("esri.layers.support.rasterFunctions.ColormapToRGBFunctionArguments")],we);const vo=we;let pt=class extends z{constructor(){super(...arguments),this.functionName="ColormapToRGB",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||!t.colormap?.length)return{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: source data must be single band with a colormap"};const e=t.clone();e.pixelType=this.outputPixelType=this._getOutputPixelType("u8"),this._removeStatsHistColormapVAT(e),e.bandCount=3,e.statistics=[{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20},{min:0,max:255,avg:100,stddev:20}],this.rasterInfo=e;const n=[...t.colormap].sort((i,a)=>i[0]-a[0]),{indexedColormap:s,offset:r}=Ss({colormap:n});return s?(this.lookup={indexedColormap:s,offset:r},{success:!0,supportsGPU:Cs(s)}):{success:!1,supportsGPU:!1,error:"colormap-to-rgb-function: the colormap is not supported"}}_processPixels(t){let e=t.pixelBlocks?.[0];if(!e||!this.lookup)return e;e=e.clone();const n=e.pixels[0],s=e.mask??new Uint8Array(n.length).fill(255),r=new Uint8Array(n.length),i=new Uint8Array(n.length),a=new Uint8Array(n.length),{indexedColormap:o,offset:u}=this.lookup,c=o.length;for(let m=0;m<n.length;m++)if(s[m]){let p=4*(n[m]-u);p<0||p>c-4?s[m]=0:(r[m]=o[p++],i[m]=o[p++],a[m]=o[p++])}return e.pixels=[r,i,a],e.statistics=[new ue(0,255),new ue(0,255),new ue(0,255)],e.pixelType=this.outputPixelType,e}_getWebGLParameters(){return this.lookup}};l([h({json:{write:!0,name:"rasterFunction"}})],pt.prototype,"functionName",void 0),l([h({type:vo,json:{write:!0,name:"rasterFunctionArguments"}})],pt.prototype,"functionArguments",void 0),l([h()],pt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],pt.prototype,"lookup",void 0),pt=l([F("esri.layers.support.rasterFunctions.ColormapToRGBFunction")],pt);const bo=pt;var ve;let qt=ve=class extends D{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map(n=>typeof n=="number"||typeof n=="string"?n:n.toJSON())}clone(){return new ve({rasters:J(this.rasters)})}};l([h({json:{write:!0}})],qt.prototype,"rasters",void 0),l([$t("rasters")],qt.prototype,"writeRasters",null),qt=ve=l([F("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],qt);const Ao=qt;let Mt=class extends z{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();if(n.attributeTable=null,n.colormap=null,n.pixelType=this.outputPixelType,n.bandCount=t.map(({bandCount:r})=>r).reduce((r,i)=>r+i),t.every(({statistics:r})=>r!=null&&r.length)){const r=[];t.forEach(({statistics:i})=>i!=null&&r.push(...i)),n.statistics=r}if(t.every(({histograms:r})=>r!=null&&r.length)){const r=[];t.forEach(({histograms:i})=>i!=null&&r.push(...i)),n.histograms=r}n.multidimensionalInfo&&n.multidimensionalInfo.variables.forEach(r=>{const i=t.map(u=>u.multidimensionalInfo?.variables.find(({name:c})=>c===r.name)),a=i.map(u=>u?.statistics?.length?u.statistics:null),o=i.map(u=>u?.histograms?.length?u.histograms:null);r.statistics=a.every(u=>u!=null)?a.flat():null,r.histograms=o.every(u=>u!=null)?o.flat():null}),n.bandCount>1&&(n.colormap=null,n.attributeTable=null);const s=t.every(r=>r.keyProperties.BandProperties?.length)?t.flatMap(r=>r.keyProperties.BandProperties):void 0;return n.keyProperties={...n.keyProperties,BandProperties:s},this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?e?.[0]==null?null:on(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};l([h({json:{write:!0,name:"rasterFunction"}})],Mt.prototype,"functionName",void 0),l([h({type:Ao,json:{write:!0,name:"rasterFunctionArguments"}})],Mt.prototype,"functionArguments",void 0),l([h()],Mt.prototype,"rasterArgumentNames",void 0),Mt=l([F("esri.layers.support.rasterFunctions.CompositeBandFunction")],Mt);const To=Mt,Po=new Z({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),Fo=new Z({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});function No(t,e,n,s){const[r,i]=t,a=$(n)&&!$(r.pixelType)&&!$(i.pixelType),o=[r.mask,i.mask].filter(y=>y),u=b.combineBandMasks(o),c=t.map(y=>y.pixels[0]),{width:m,height:p}=r,f=b.createEmptyBand(n,m*p);switch(e){case"difference":case"relative-difference":Ro({bands:c,mask:u,outBand:f,isRoundingNeeded:a,isRelative:e==="relative-difference"});break;case"categorical":So({bands:c,mask:u,outBand:f,...s});break;case"euclidean-distance":Io({pixels:t.map(y=>y.pixels),mask:u,outBand:f});break;case"angle-difference":Co({pixels:t.map(y=>y.pixels),mask:u,outBand:f});break;case"band-with-most-change":ko({pixels:t.map(y=>y.pixels),mask:u,outBand:f})}const g=new b({width:m,height:p,pixels:[f],pixelType:n,mask:u});return g.updateStatistics(),g}function Ro(t){const{bands:[e,n],mask:s,isRelative:r,isRoundingNeeded:i,outBand:a}=t,o=e.length;for(let u=0;u<o;u++)if(!s||s[u]){let c=e[u]-n[u];if(r){const m=Math.max(Math.abs(e[u])-Math.abs(n[u]));c=m>0?c/m:0}a[u]=i?Math.round(c):c}}function So(t){const{bands:[e,n],categoryIndexLookups:[s,r],classNames:[i,a],mask:o,keepMethod:u,outBand:c}=t,m=e.length,p=i.length,f=a.length,g=p*f,y=g+1,x=g+2;for(let d=0;d<m;d++)if(!o||o[d]){const v=e[d],w=n[d],A=s[v],T=r[w],N=i[A],P=a[T];c[d]=A==null||T==null?g:u==="changed"&&N===P?y:u==="unchanged"&&N!==P?x:A*f+T}}function Io(t){const{pixels:[e,n],mask:s,outBand:r}=t,i=e[0].length,a=e.length;for(let o=0;o<i;o++)if(!s||s[o]){let u=0;for(let c=0;c<a;c++){const m=e[c][o]-n[c][o];u+=m*m}r[o]=Math.sqrt(u)}}function Co(t){const{pixels:[e,n],mask:s,outBand:r}=t,i=e[0].length,a=e.length;for(let o=0;o<i;o++)if(!s||s[o]){let u=0,c=0,m=0;for(let f=0;f<a;f++){const g=e[f][o],y=n[f][o];u+=g*y,c+=g*g,m+=y*y}const p=Math.sqrt(c*m);r[o]=p?Math.acos(u/p):1.5707963267948966}}function ko(t){const{pixels:[e,n],mask:s,outBand:r}=t,i=e[0].length,a=e.length;for(let o=0;o<i;o++)if(!s||s[o]){let u=0,c=0;for(let m=0;m<a;m++){const p=Math.abs(e[m][o]-n[m][o]);p>u&&(u=p,c=m)}r[o]=c}}var be;let mt=be=class extends D{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new be({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};l([H(Po)],mt.prototype,"method",void 0),l([H(Fo)],mt.prototype,"keepMethod",void 0),l([h({json:{write:!0}})],mt.prototype,"raster2",void 0),l([h({readOnly:!0})],mt.prototype,"rasters",null),mt=be=l([F("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],mt);const _o=mt;let ht=class extends z{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),t==="categorical"){const n=this.sourceRasterInfos.map(i=>i.attributeTable),s=this._getFieldNames(n,"value"),r=n.map(i=>this._getClassFieldName(i));if(s[0]==null||s[1]==null||r[0]==null||r[1]==null)return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,s,r)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:t==="difference"||t==="relative-difference"}}_processPixels(t){const{pixelBlocks:e}=t;if(e?.[0]==null||e?.[1]==null)return null;const{method:n}=this.functionArguments;return No(e,n,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,n]=kt(t);const s=$(t);return s&&(e-=1e-4,n+=1e-4),{method:this.functionArguments.method,domainRange:[e,n],isOutputRounded:s}}_updateAttributeTable(t,e,n){const s=this.sourceRasterInfos.map(A=>A.attributeTable),r=s.map((A,T)=>A.features.map(N=>N.attributes[e[T]])),i=s.map((A,T)=>A.features.map(N=>N.attributes[n[T]])),a=r.map(A=>{const T=[];return A.forEach((N,P)=>T[N]=P),T}),{keepMethod:o}=this.functionArguments;this._categoryConfig={categoryIndexLookups:a,classNames:i,keepMethod:o};const u=s[0].clone();u.fields=[new nt({name:"OID",type:"oid"}),new nt({name:"Value",type:"integer"}),new nt({name:"ClassName",type:"string"}),new nt({name:"Class_From",type:"string"}),new nt({name:"Class_To",type:"string"})];const c=this._getFieldNames(s,"red"),m=this._getFieldNames(s,"green"),p=this._getFieldNames(s,"blue"),f=[],g=c.length===2&&m.length===2&&p.length===2;g&&(f.push(...s.map((A,T)=>A.features.map(N=>[N.attributes[c[T]],N.attributes[m[T]],N.attributes[p[T]]]))),u.fields.push(new nt({name:"Red",type:"integer"}),new nt({name:"Green",type:"integer"}),new nt({name:"Blue",type:"integer"})));const y=u.features[0].clone();y.geometry=null;const x=[],[d,v]=r.map(A=>A.length);let w=1;for(let A=0;A<d;A++){const T=i[0][A];for(let N=0;N<v;N++){const P=i[1][N];if(o==="changed"&&T===P||o==="unchanged"&&T!==P)continue;const R=y.clone();R.attributes={OID:w++,Value:A*v+N,ClassName:T===P?T:`${T} -> ${P}`,Class_From:T,Class_To:P},g&&(R.attributes.Red=f[0][A][0]+f[1][N][0]>>1,R.attributes.Green=f[0][A][1]+f[1][N][1]>>1,R.attributes.Blue=f[0][A][2]+f[1][N][2]>>1),x.push(R)}}if(o==="changed"){const A=y.clone();A.attributes={OID:w++,Value:d*v+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},x.push(A)}else if(o==="unchanged"){const A=y.clone();A.attributes={OID:w++,Value:d*v+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},x.push(A)}u.features=x,t.attributeTable=u}_getFieldNames(t,e){return t.map(({fields:n})=>n.find(s=>s.name.toLowerCase()===e)?.name).filter(n=>n)}_getClassFieldName(t){return(t.fields.find(e=>e.type==="string"&&e.name.toLowerCase().startsWith("class"))??t.fields.find(e=>e.type==="string"&&e.name.toLowerCase().includes("class")||e.name.toLowerCase().includes("type")||e.name.toLowerCase().includes("name"))??t.fields.find(e=>e.type==="string"))?.name}};l([h({json:{write:!0,name:"rasterFunction"}})],ht.prototype,"functionName",void 0),l([h({type:_o,json:{write:!0,name:"rasterFunctionArguments"}})],ht.prototype,"functionArguments",void 0),l([h()],ht.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],ht.prototype,"_categoryConfig",void 0),ht=l([F("esri.layers.support.rasterFunctions.ComputeChangeFunction")],ht);const Bo=ht;var Ae;let Xt=Ae=class extends D{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new Ae({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};l([h({json:{write:!0}})],Xt.prototype,"contrastOffset",void 0),l([h({json:{write:!0}})],Xt.prototype,"brightnessOffset",void 0),Xt=Ae=l([F("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],Xt);const jo=Xt;let ft=class extends z{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if(e.pixelType!=="u8")return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const n=e.clone();this._removeStatsHistColormapVAT(n),this.rasterInfo=n;const{contrastOffset:s,brightnessOffset:r}=this.functionArguments;return this.lookup=vn(s,r),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Je(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};l([h({json:{write:!0,name:"rasterFunction"}})],ft.prototype,"functionName",void 0),l([h({type:jo,json:{write:!0,name:"rasterFunctionArguments"}})],ft.prototype,"functionArguments",void 0),l([h()],ft.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],ft.prototype,"lookup",void 0),ft=l([F("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],ft);const Mo=ft;function Ke(t,e,n,s,r){const i=Math.floor(s/2);for(let o=0;o<i;o++)for(let u=0;u<e;u++)t[o*e+u]=t[(r-1-o)*e+u],t[(n-1-o)*e+u]=t[(n-r+o)*e+u];const a=Math.floor(r/2);for(let o=0;o<n;o++){const u=o*e;for(let c=0;c<a;c++)t[u+c]=t[u+r-1-c],t[u+e-c-1]=t[u+e+c-r]}}const M=new Map;function Oo(t){const e=Math.sqrt(t.length),n=t.slice(0,e),s=[1];for(let r=1;r<e;r++){let i=null;for(let a=0;a<e;a++){const o=t[a+r*e],u=t[a];if(i==null)if(u===0){if(o)return{separable:!1,row:null,col:null}}else i=o/u;else if(o/u!==i)return{separable:!1,row:null,col:null}}if(i==null)return{separable:!1,row:null,col:null};s.push(i)}return{separable:!0,row:n,col:s}}function ws(t,e,n,s,r,i,a){const o=new Float32Array(e*n),u=i.length,c=a?0:s,m=a?s:0,p=a?1:e;for(let f=c;f<n-c;f++){const g=f*e;for(let y=m;y<e-m;y++){if(r&&!r[g+y])continue;let x=0;for(let d=0;d<u;d++)x+=t[g+y+(d-s)*p]*i[d];o[g+y]=x}}return o}function zo(t,e,n,s,r,i,a){const o=new Float32Array(e*n),u=Math.floor(s/2),c=Math.floor(r/2);for(let m=u;m<n-u;m++){const p=m*e;for(let f=c;f<e-c;f++){if(i&&!i[p+f])continue;let g=0;for(let y=0;y<s;y++)for(let x=0;x<r;x++)g+=t[p+f+(y-u)*e+x-c]*a[y*r+x];o[p+f]=g}}return o}function Go(t,e,n=!0){const{pixels:s,width:r,height:i,pixelType:a,mask:o}=t,u=s.length,c=[],{kernel:m,rows:p,cols:f}=e;for(let g=0;g<u;g++){const y=zo(s[g],r,i,p,f,o,m);n&&Ke(y,r,i,p,f),c.push(y)}return new b({width:r,height:i,pixelType:a,pixels:c,mask:o})}function Do(t,e,n,s=!0){const{pixels:r,width:i,height:a,pixelType:o,mask:u}=t,c=r.length,m=[],p=e.length,f=n.length,g=Math.floor(p/2),y=Math.floor(f/2);for(let x=0;x<c;x++){let d=ws(r[x],i,a,g,u,e,!0);d=ws(d,i,a,y,u,n,!1),s&&Ke(d,i,a,p,f),m.push(d)}return new b({width:i,height:a,pixelType:o,pixels:m,mask:u})}function Eo(t,e){const n=Oo(e.kernel),s=e.mirrorEdges!==!1,r=n.separable?Do(t,n.row,n.col,s):Go(t,e,s),{outputPixelType:i}=e;return i&&r.clamp(i),r}M.set(_.none,[0,0,0,0,1,0,0,0,0]),M.set(_.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),M.set(_.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),M.set(_.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),M.set(_.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),M.set(_.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),M.set(_.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),M.set(_.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),M.set(_.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),M.set(_.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),M.set(_.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),M.set(_.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),M.set(_.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),M.set(_.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),M.set(_.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),M.set(_.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),M.set(_.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),M.set(_.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),M.set(_.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),M.set(_.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),M.set(_.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),M.set(_.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),M.set(_.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);var Te;let dt=Te=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=M.get(t);if(!e||t===_.userDefined||t===_.none)return;const n=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",n),this._set("rows",n)}clone(){return new Te({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:J(this.raster)})}};l([h({json:{type:Number,write:!0}})],dt.prototype,"rows",void 0),l([h({json:{type:Number,write:!0}})],dt.prototype,"cols",void 0),l([h({json:{name:"type",type:Number,write:!0}})],dt.prototype,"convolutionType",null),l([h({json:{type:[Number],write:!0}})],dt.prototype,"kernel",void 0),dt=Te=l([F("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],dt);const Uo=dt,vs=25;let gt=class extends z{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,n=t.reduce((s,r)=>s+r);return e===-1||n===0||n===1?t:t.map(s=>s/n)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:n,kernel:s}=this.functionArguments;if(!Object.values(_).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==_.none&&e*n!==s.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const r=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(r.pixelType);const i=r.clone();i.pixelType=this.outputPixelType;const a=[_.none,_.sharpen,_.sharpen2,_.sharpening3x3,_.sharpening5x5];return(t===-1||this.outputPixelType!=="u8"&&!a.includes(t))&&(i.statistics=null,i.histograms=null),i.colormap=null,i.attributeTable=null,this.rasterInfo=i,{success:!0,supportsGPU:s.length<=vs}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null||this.functionArguments.convolutionType===_.none)return e;const{rows:n,cols:s}=this.functionArguments,{_normalizedKernel:r}=this;return Eo(e,{kernel:r,rows:n,cols:s,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(vs);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:kt(this.outputPixelType)}}};l([h({json:{write:!0,name:"rasterFunction"}})],gt.prototype,"functionName",void 0),l([h({type:Uo,json:{write:!0,name:"rasterFunctionArguments"}})],gt.prototype,"functionArguments",void 0),l([h()],gt.prototype,"rasterArgumentNames",void 0),l([h()],gt.prototype,"_normalizedKernel",null),gt=l([F("esri.layers.support.rasterFunctions.ConvolutionFunction")],gt);const Vo=gt;var Pe;const Us=new Z({0:"standard",1:"planform",2:"profile"},{useNumericKeys:!0});let Ot=Pe=class extends D{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return Us.fromJSON(e.type??e.curvatureType??0)}clone(){return new Pe({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};l([h({json:{write:{target:"type"}}}),H(Us)],Ot.prototype,"curvatureType",void 0),l([Ct("curvatureType",["type","curvatureType"])],Ot.prototype,"readCurvatureType",null),l([h({type:Number,json:{write:!0}})],Ot.prototype,"zFactor",void 0),Ot=Pe=l([F("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Ot);const Lo=Ot;let yt=class extends z{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:n,curvatureType:s}=this.functionArguments,{extent:r,primaryPixelSizes:i}=t,a=i?.[0],o=a??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1}),u=this.isGCS&&n>=1?n*Zt:n;return bn(e,{zFactor:u,curvatureType:s,resolution:o})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Zt:t}}};l([h({json:{write:!0,name:"rasterFunction"}})],yt.prototype,"functionName",void 0),l([h({type:Lo,json:{write:!0,name:"rasterFunctionArguments"}})],yt.prototype,"functionArguments",void 0),l([h()],yt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],yt.prototype,"isGCS",void 0),yt=l([F("esri.layers.support.rasterFunctions.CurvatureFunction")],yt);const $o=yt;var Fe;let et=Fe=class extends D{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=Ns.bestMatch}clone(){return new Fe({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};l([h({json:{write:!0}})],et.prototype,"bandIds",void 0),l([h({json:{write:!0}})],et.prototype,"bandNames",void 0),l([h({json:{write:!0}})],et.prototype,"bandWavelengths",void 0),l([H({0:"name",1:"wavelength",2:"id"})],et.prototype,"method",void 0),l([h({json:{write:!0}})],et.prototype,"missingBandAction",void 0),l([h({json:{write:!0}})],et.prototype,"wavelengthMatchTolerance",void 0),et=Fe=l([F("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],et);const Wo=et;let zt=class extends z{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,n=e[0],{method:s,bandNames:r,bandWavelengths:i,bandIds:a,missingBandAction:o}=t,u=r?.length&&(s==="name"||s!=="id"&&!a?.length),c=i?.length&&(s==="wavelength"||s!=="id"&&!a?.length),m=o===Ns.fail,p=u?Ho(n,r):c?Xo(n,i,this.functionArguments,m):qo(n,a,m);if(p==null)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":c?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=p,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const f=n.clone();f.pixelType=this.outputPixelType,f.bandCount=p.length;const{statistics:g,histograms:y}=f;g!=null&&g.length&&(f.statistics=p.map(d=>g[d]||g[g.length-1])),y!=null&&y.length&&(f.histograms=p.map(d=>y[d]||y[y.length-1])),f.multidimensionalInfo&&f.multidimensionalInfo.variables.forEach(d=>{const{statistics:v,histograms:w}=d;v!=null&&v.length&&(d.statistics=p.map(A=>v[A]||v[v.length-1])),w!=null&&w.length&&(d.histograms=p.map(A=>w[A]||w[w.length-1]))});let x=f.keyProperties?.BandProperties;return x?.length&&(x=p.map(d=>d>=x.length?x[x.length-1]:x[d]),f.keyProperties={...f.keyProperties,BandProperties:x}),this.rasterInfo=f,{success:!0,supportsGPU:f.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const n=e.pixels.length,s=this.functionArguments.bandIds.map(r=>r>=n?n-1:r);return e.extractBands(s)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],t.length===0?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:V(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(n=>n>=e?e-1:n).map(n=>t[n])}};l([h({json:{write:!0,name:"rasterFunction"}})],zt.prototype,"functionName",void 0),l([h({type:Wo,json:{write:!0,name:"rasterFunctionArguments"}})],zt.prototype,"functionArguments",void 0),l([h()],zt.prototype,"rasterArgumentNames",void 0),zt=l([F("esri.layers.support.rasterFunctions.ExtractBandFunction")],zt);const Jo=zt;function Ho(t,e){const n=t.bandInfos.map(({name:r})=>r.toLowerCase()),s=[];for(let r=0;r<e.length;r++){const i=e[r].toLowerCase();let a=n.indexOf(i);if(a===-1&&i==="nearinfrared"&&(a=n.findIndex(o=>o.startsWith("nearinfrared_1")),a===-1&&(a=n.findIndex(o=>o.startsWith("nearinfrared")))),a===-1)return null;s.push(a)}return s}function qo(t,e,n){const{bandCount:s}=t;return!e?.length||n&&e.some(r=>r<0||r>=s)?null:e}function Xo(t,e,{wavelengthMatchTolerance:n},s){const{bandInfos:r}=t,i=[];for(let o=0;o<r.length;o++){const{minWavelength:u,maxWavelength:c}=r[o];if(!u||!c)return null;i.push({minWavelength:u,maxWavelength:c})}const a=[];for(let o=0;o<e.length;o++){const u=e[o];let c=!1,m=-1,p=Number.MAX_VALUE;for(let f=0;f<i.length;f++){const g=i[f],y=u>=g.minWavelength&&u<=g.maxWavelength,x=Math.abs(u-(g.minWavelength+g.maxWavelength)/2);y?x<p&&(c=!0,m=f,p=x):!c&&x<p&&(m=f,p=x)}if(!c&&n&&p<n&&(c=!0),!c&&s)return null;a.push(m)}return a}function Ko(t,e,n){const{pixels:s,width:r,height:i,mask:a,bandMasks:o}=t,u=r*i,c=o?.length?b.combineBandMasks(o):a,m=Math.min(e.length,s.length),p=n.startsWith("f"),f=!p&&n!==t.pixelType,[g,y]=kt(n),x=b.createEmptyBand(n,u);for(let v=0;v<i;v++){let w=v*r;for(let A=0;A<r;A++,w++)if(!c||c[w]){let T=0;for(let N=0;N<m;N++)T+=e[N]*s[N][w];p||(T=Math.round(T),f&&(T=T>y?y:T<g?g:T)),x[w]=T}}const d=new b({width:r,height:i,pixels:[x],pixelType:n,mask:c});return d.updateStatistics(),d}var Ne;let te=Ne=class extends D{clone(){return new Ne({conversionParameters:[...this.conversionParameters],raster:this.raster})}};l([h({type:[Number],json:{write:!0}})],te.prototype,"conversionParameters",void 0),te=Ne=l([F("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],te);const Yo=te;let xt=class extends z{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((n,s)=>n+s);return t.map(n=>n/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const n=t.length===3||e.bandCount===3&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:n}}_processPixels(t){const e=t.pixelBlocks?.[0];return e==null?null:Ko(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};l([h({json:{write:!0,name:"rasterFunction"}})],xt.prototype,"functionName",void 0),l([h({type:Yo,json:{write:!0,name:"rasterFunctionArguments"}})],xt.prototype,"functionArguments",void 0),l([h()],xt.prototype,"rasterArgumentNames",void 0),l([h()],xt.prototype,"_normalizedWeights",null),xt=l([F("esri.layers.support.rasterFunctions.GrayscaleFunction")],xt);const Zo=xt;var Re;const Qo=new Z({0:"traditional",1:"multi-directional"},{useNumericKeys:!0}),ti=new Z({1:"degree",2:"percent-rise",3:"scaled"},{useNumericKeys:!0});let X=Re=class extends D{constructor(){super(...arguments),this.altitude=45,this.azimuth=315,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.slopeType="degree",this.zFactor=1,this.removeEdgeEffect=!1}clone(){return new Re({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};l([h({type:Number,json:{write:!0}})],X.prototype,"altitude",void 0),l([h({type:Number,json:{write:!0}})],X.prototype,"azimuth",void 0),l([h(),H(Qo)],X.prototype,"hillshadeType",void 0),l([h({type:Number,json:{write:!0,name:"psPower"}})],X.prototype,"pixelSizePower",void 0),l([h({type:Number,json:{write:!0,name:"psZFactor"}})],X.prototype,"pixelSizeFactor",void 0),l([h(),H(ti)],X.prototype,"slopeType",void 0),l([h({type:Number,json:{write:!0}})],X.prototype,"zFactor",void 0),l([h({type:Boolean,json:{write:!0}})],X.prototype,"removeEdgeEffect",void 0),X=Re=l([F("esri.layers.support.rasterFunctions.HillshadeFunctionArguments")],X);const Vs=X;let wt=class extends z{constructor(){super(...arguments),this.functionName="Hillshade",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"hillshade-function: source data must be single band"};this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone();return this._removeStatsHistColormapVAT(e),e.pixelType=this.outputPixelType,e.bandCount=1,e.statistics=[{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=e,this.isGCS=e.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e)return null;const{extent:n,primaryPixelSizes:s}=t,r=s?.[0],i=r??(n?{x:n.width/e.width,y:n.height/e.height}:{x:1,y:1}),a=re(this.functionArguments,i,this.isGCS),o=ks(e,a);return o.pixelType=this.outputPixelType,o}_getWebGLParameters(){const t=re(this.functionArguments,{x:1,y:1},this.isGCS),e=_s(t),{slopeType:n,zFactor:s,pixelSizeFactor:r,pixelSizePower:i}=this.functionArguments,a=n==="scaled",o=$(this.outputPixelType);return{...e,zFactor:s,gcsFactor:this.isGCS?Zt:1,pixelSizeFactor:a?r:0,pixelSizePower:a?i:0,isOutputRounded:o}}};l([h({json:{write:!0,name:"rasterFunction"}})],wt.prototype,"functionName",void 0),l([h({type:Vs,json:{write:!0,name:"rasterFunctionArguments"}})],wt.prototype,"functionArguments",void 0),l([h()],wt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],wt.prototype,"isGCS",void 0),wt=l([F("esri.layers.support.rasterFunctions.HillshadeFunction")],wt);const ei=wt;var Se;let vt=Se=class extends D{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map(n=>typeof n=="number"||typeof n=="string"?n:n.toJSON())}clone(){return new Se({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:J(this.rasters)})}};l([h({json:{write:!0}})],vt.prototype,"operation",void 0),l([h({json:{write:!0}})],vt.prototype,"rasters",void 0),l([$t("rasters")],vt.prototype,"writeRasters",null),l([h({json:{write:!0}})],vt.prototype,"processAsMultiband",void 0),vt=Se=l([F("esri.layers.support.rasterFunctions.LocalFunctionArguments")],vt);const si=vt;let Gt=class extends z{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:n}=e,{processAsMultiband:s}=this.functionArguments;if(t.some(u=>u.bandCount!==n))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:r,rasters:i}=this.functionArguments,a=rs[r];if(!(a===999||i.length===a||i.length<=1&&a===1))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${a}`};const o=e.clone();return o.bandCount=a!==999||s?n:1,this._removeStatsHistColormapVAT(o),this._updateStatistics(o),this._updatePixelType(o),this.rasterInfo=o,{success:!0,supportsGPU:o.bandCount===1&&a<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e==null||e.some(n=>n==null)?null:Es(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=rs[t],n=Object.keys(ss).find(o=>ss[o]===t)?.toLowerCase()??"undefined",s=this.outputPixelType??"f32";let[r,i]=kt(s);const a=$(s);return a&&(r-=1e-4,i+=1e-4),{imageCount:e,operationName:n,domainRange:[r,i],isOutputRounded:a}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,s=ns(n)?.domain;if(s){t.statistics=[];for(let r=0;r<t.bandCount;r++)t.statistics[r]={min:s[0],max:s[1],avg:(s[0]+s[1])/2,stddev:(s[0]+s[1])/10}}else n===45&&e.statistics?.length&&(t.statistics=e.statistics.map(r=>({min:-r.max,max:-r.min,avg:r.avg!=null?-r.avg:void 0,stddev:r.stddev!=null?-r.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:n}=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,{domain:r,isInteger:i}=ns(s)??{domain:null,isInteger:!1};let a="f32";if(r&&i)a=ce(r[0],r[1]);else if(s===30){const o=e?.[0];a=o?ce(o.min,o.max):$(n)?n:"s32"}else if(s===45&&$(n)){const o=e?.map(({max:p})=>-p),u=e?.map(({min:p})=>-p),c=o?.length?Math.min(...o):null,m=u?.length?Math.min(...u):null;a=c!=null&&m!=null?ce(c,m):n.startsWith("s")?n.replace("s","u"):n==="u1"||n==="u2"||n==="u4"?"s8":n==="u8"?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(a)}};l([h({json:{write:!0,name:"rasterFunction"}})],Gt.prototype,"functionName",void 0),l([h({type:si,json:{write:!0,name:"rasterFunctionArguments"}})],Gt.prototype,"functionArguments",void 0),l([h()],Gt.prototype,"rasterArgumentNames",void 0),Gt=l([F("esri.layers.support.rasterFunctions.LocalFunction")],Gt);const ni=Gt;var Ie;let bt=Ie=class extends D{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=Rs.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const n=t.map(s=>{if(typeof s=="number")return e=!0,[s];if(typeof s=="string"){const r=s.trim().split(" ").filter(i=>i.trim()!=="").map(i=>Number(i));return e=e||r.length>0,r.length===0?null:r}return null});return e?n:null}clone(){return new Ie({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};l([h({json:{write:!0}})],bt.prototype,"includedRanges",void 0),l([h({json:{write:!0}})],bt.prototype,"noDataValues",void 0),l([h()],bt.prototype,"normalizedNoDataValues",null),l([h({json:{write:!0}})],bt.prototype,"noDataInterpretation",void 0),bt=Ie=l([F("esri.layers.support.rasterFunctions.MaskFunctionArguments")],bt);const ri=bt;let At=class extends z{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:n,normalizedNoDataValues:s}=this.functionArguments;if(!n?.length&&!s?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let r=[];for(let a=0;a<t.bandCount;a++){const o=an(e,n?.slice(2*a,2*a+2),s?.[a]);if(o==null){r=null;break}r.push(o)}this.lookups=r;const i=s!=null&&s.every(a=>a?.length===s[0]?.length);return{success:!0,supportsGPU:(!n||n.length<=2*st)&&(!s||i&&s[0].length<=st)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{outputPixelType:n,lookups:s}=this,{includedRanges:r,noDataInterpretation:i,normalizedNoDataValues:a}=this.functionArguments,o=i===Rs.matchAll;return un(e,{includedRanges:r,noDataValues:a,outputPixelType:n,matchAll:o,lookups:s})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,n=new Float32Array(st);n.fill(Lt),e?.[0]?.length&&n.set(e[0]);const s=new Float32Array(st);for(let r=0;r<s.length;r+=2)s[r]=t?.[r]??-Lt,s[r+1]=t?.[r+1]??Lt;return t?.length&&s.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:n,includedRanges:s}}};l([h({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),l([h({type:ri,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),l([h()],At.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],At.prototype,"lookups",void 0),At=l([F("esri.layers.support.rasterFunctions.MaskFunction")],At);const oi=At;var Ce;let Dt=Ce=class extends D{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this;return new Ce({visibleBandID:t,infraredBandID:e,scientificOutput:n})}};l([h({json:{write:!0}})],Dt.prototype,"visibleBandID",void 0),l([h({json:{write:!0}})],Dt.prototype,"infraredBandID",void 0),l([h({json:{write:!0}})],Dt.prototype,"scientificOutput",void 0),Dt=Ce=l([F("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Dt);const ii=Dt;let Et=class extends z{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:n}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const s=this.sourceRasterInfos[0],r=Math.max(e,n);if(s.bandCount<2||r>=s.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};if(e<0||n<0)return{success:!1,supportsGPU:!1,error:"ndvi-function: invalid visible or infrared band id"};const i=s.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),i.bandCount=1,i.keyProperties={...i.keyProperties,BandProperties:void 0};const[a,o,u,c]=t?[-1,1,0,.1]:[0,200,100,10];return i.statistics=[{min:a,max:o,avg:u,stddev:c}],this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{visibleBandID:n,infraredBandID:s,scientificOutput:r}=this.functionArguments;return Vr(e,n,s,!r)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:n}=this.functionArguments,s=this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0];return{bandIndexMat3:V(s),scaled:!n}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:n}=this.functionArguments;return[n,e,0].map(s=>t[s])}};l([h({json:{write:!0,name:"rasterFunction"}})],Et.prototype,"functionName",void 0),l([h({type:ii,json:{write:!0,name:"rasterFunctionArguments"}})],Et.prototype,"functionArguments",void 0),l([h()],Et.prototype,"rasterArgumentNames",void 0),Et=l([F("esri.layers.support.rasterFunctions.NDVIFunction")],Et);const ai=Et;var ke;let rt=ke=class extends D{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new ke({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};l([h({json:{write:!0}})],rt.prototype,"inputRanges",void 0),l([h({json:{write:!0}})],rt.prototype,"outputValues",void 0),l([h({json:{write:!0}})],rt.prototype,"noDataRanges",void 0),l([h({json:{write:!0}})],rt.prototype,"allowUnmatched",void 0),l([h({json:{write:!0}})],rt.prototype,"isLastInputRangeInclusive",void 0),rt=ke=l([F("esri.layers.support.rasterFunctions.RemapFunctionArguments")],rt);const ui=rt;let Tt=class extends z{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.bandCount=1;const{statistics:n}=t;this._removeStatsHistColormapVAT(t);const{allowUnmatched:s,outputValues:r,inputRanges:i,noDataRanges:a,isLastInputRangeInclusive:o}=this.functionArguments;if(n!=null&&n.length&&r?.length)if(s){const u=Math.min.apply(null,[...r,n[0].min]),c=Math.max.apply(null,[...r,n[0].max]);t.statistics=[{...n[0],min:u,max:c}]}else{let u=r[0],c=u;for(let m=0;m<r.length;m++)u=u>r[m]?r[m]:u,c=c>r[m]?c:r[m];t.statistics=[{...n[0],min:u,max:c}]}return this.rasterInfo=t,this.lookup=s?null:ln({srcPixelType:e,inputRanges:i,outputValues:r,noDataRanges:a,allowUnmatched:s,isLastInputRangeInclusive:o,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!r||r.length<=st)&&(!a||a.length<=st)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{lookup:n,outputPixelType:s}=this;if(n){const c=Je(e,{lut:[n.lut],offset:n.offset,outputPixelType:s});return c!=null&&n.mask&&(c.mask=cn(e.pixels[0],e.mask,n.mask,n.offset,"u8")),c}const{inputRanges:r,outputValues:i,noDataRanges:a,allowUnmatched:o,isLastInputRangeInclusive:u}=this.functionArguments;return pn(e,{inputRanges:r,outputValues:i,noDataRanges:a,outputPixelType:s,allowUnmatched:o,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:n}=this.functionArguments,s=new Float32Array(3*st),r=1e-5,i=this.functionArguments.inputRanges??[],a=this.functionArguments.outputValues??[],o=a.length;for(let c=0;c<st;c++)s[3*c]=i[2*c]??Lt-1,s[3*c+1]=i[2*c+1]??Lt,s[3*c+2]=a[c]??0,c<o&&(c>0&&(s[3*c]-=r),(c<o-1||!n)&&(s[3*c+1]-=r));const u=new Float32Array(2*st);return u.fill(Lt),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:s,noDataRanges:u,clampRange:kt(this.outputPixelType)}}};l([h({json:{write:!0,name:"rasterFunction"}})],Tt.prototype,"functionName",void 0),l([h({type:ui,json:{write:!0,name:"rasterFunctionArguments"}})],Tt.prototype,"functionArguments",void 0),l([h()],Tt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],Tt.prototype,"lookup",void 0),Tt=l([F("esri.layers.support.rasterFunctions.RemapFunction")],Tt);const li=Tt;var _e;let Ut=_e=class extends Vs{readColorRamp(t){if(typeof t=="string"){const e=It.jsonValues.find(n=>n.toLowerCase()===t.toLowerCase());return e?Is(It.fromJSON(e)):null}return"toJSON"in t?t.toJSON():t}clone(){return new _e({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,slopeType:this.slopeType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,removeEdgeEffect:this.removeEdgeEffect,colorRamp:this.colorRamp,colormap:this.colormap,raster:this.raster})}};l([h({json:{write:!0}})],Ut.prototype,"colorRamp",void 0),l([Ct("colorRamp")],Ut.prototype,"readColorRamp",null),l([h({type:[[Number]],json:{write:!0}})],Ut.prototype,"colormap",void 0),Ut=_e=l([F("esri.layers.support.rasterFunctions.ShadedReliefFunctionArguments")],Ut);const ci=Ut;let ot=class extends z{constructor(){super(...arguments),this.functionName="ShadedRelief",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: source data must be single band"};let{colorRamp:e,colormap:n}=this.functionArguments;if(!e&&!n?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a color ramp argument must be specified"};this.outputPixelType=this._getOutputPixelType("u8");const s=t.clone();this._removeStatsHistColormapVAT(s),s.pixelType=this.outputPixelType,s.bandCount=3,s.statistics=[{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10},{min:0,max:255,avg:60,stddev:10}],this.rasterInfo=s,this.isGCS=s.spatialReference?.isGeographic??!1,n?.length||(n=pe(e,{interpolateAlpha:!0}));const{indexedColormap:r,offset:i}=Ss({colormap:n});if(!r?.length)return{success:!1,supportsGPU:!1,error:"shadedrelief-function: a valid colorramp is required"};const a=An(r);return this.lookup={indexedColormap:r,offset:i,hsvMap:a},{success:!0,supportsGPU:Cs(r)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(!e||!this.lookup)return null;let n=t.primaryPixelSizes?.[0];if(n==null){const{extent:a}=t;n=a?{x:a.width/e.width,y:a.height/e.height}:{x:1,y:1}}const s=re(this.functionArguments,n,this.isGCS),r=ks(e,s),i=this.sourceRasterInfos[0].statistics?.[0]??{min:0,max:8e3};return Tn(r,e,this.lookup.hsvMap,i),r.pixelType=this.outputPixelType,r}_getWebGLParameters(){const t=re(this.functionArguments,{x:1,y:1},this.isGCS),e=_s(t),{slopeType:n,zFactor:s,pixelSizeFactor:r,pixelSizePower:i}=this.functionArguments,a=n==="scaled",{indexedColormap:o,offset:u}=this.lookup,c=this.sourceRasterInfos[0].statistics?.[0],m=$(this.outputPixelType);return{...e,indexedColormap:o,offset:u,zFactor:s,gcsFactor:this.isGCS?Zt:1,pixelSizeFactor:a?r:0,pixelSizePower:a?i:0,minValue:c?.min??0,maxValue:c?.max??8e3,isOutputRounded:m}}};l([h({json:{write:!0,name:"rasterFunction"}})],ot.prototype,"functionName",void 0),l([h({type:ci,json:{write:!0,name:"rasterFunctionArguments"}})],ot.prototype,"functionArguments",void 0),l([h()],ot.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],ot.prototype,"isGCS",void 0),l([h({json:{write:!0}})],ot.prototype,"lookup",void 0),ot=l([F("esri.layers.support.rasterFunctions.ShadedReliefFunction")],ot);const pi=ot;var Be;const mi=new Z({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let it=Be=class extends D{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Be({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};l([H(mi)],it.prototype,"slopeType",void 0),l([h({type:Number,json:{write:!0}})],it.prototype,"zFactor",void 0),l([h({type:Number,json:{name:"psPower",write:!0}})],it.prototype,"pixelSizePower",void 0),l([h({type:Number,json:{name:"psZFactor",write:!0}})],it.prototype,"pixelSizeFactor",void 0),l([h({type:Boolean,json:{write:!0}})],it.prototype,"removeEdgeEffect",void 0),it=Be=l([F("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],it);const hi=it;let Pt=class extends z{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(t),t.statistics=this.functionArguments.slopeType!=="percent-rise"?[{min:0,max:90,avg:1,stddev:1}]:null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return null;const{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:i}=this.functionArguments,{isGCS:a}=this,{extent:o,primaryPixelSizes:u}=t,c=u?.[0],m=c??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1});return Pn(e,{zFactor:n,slopeType:s,pixelSizePower:r,pixelSizeFactor:i,isGCS:a,resolution:m})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:n,pixelSizePower:s}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Zt:t,slopeType:e,pixelSizeFactor:n??0,pixelSizePower:s??0,isOutputRounded:$(this.outputPixelType)}}};l([h({json:{write:!0,name:"rasterFunction"}})],Pt.prototype,"functionName",void 0),l([h({type:hi,json:{write:!0,name:"rasterFunctionArguments"}})],Pt.prototype,"functionArguments",void 0),l([h()],Pt.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],Pt.prototype,"isGCS",void 0),Pt=l([F("esri.layers.support.rasterFunctions.SlopeFunction")],Pt);const fi=Pt,bs=new Z({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function di(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:i,mask:a,outBand:o}=t;if(n&&!a)return void o.set(s);const{statisticsType:u,kernelRows:c,kernelCols:m}=e,p=u==="stddev",f=r*i,g=new Float64Array(f),y=new Float64Array(f),x=new Uint32Array(f);for(let P=0;P<i;P++){const R=P*r;let k=0,I=0,C=0;for(let B=0;B<m;B++)a&&!a[R+B]||(k+=s[R+B],p&&(I+=s[R+B]**2),C++);g[R]=k,y[R]=I,x[R]=C;for(let B=1;B<=r-m;B++){const G=R+B-1,Q=G+m;a?(a[G]&&(C--,k-=s[G],p&&(I-=s[G]**2)),a[Q]&&(C++,k+=s[Q],p&&(I+=s[Q]**2))):(k-=s[G],k+=s[Q],p&&(I-=s[G]**2,I+=s[Q]**2)),g[R+B]=k,x[R+B]=C,p&&(y[R+B]=I)}}const d=new Float64Array(f),v=new Float64Array(f),w=new Uint32Array(f),A=c*r;for(let P=0;P<=r-m;P++){let R=0,k=0,I=0;for(let C=0;C<c;C++){const B=C*r+P;R+=g[B],I+=x[B],p&&(k+=y[B])}d[P]=R,v[P]=k,w[P]=I;for(let C=1;C<=i-c;C++){const B=(C-1)*r+P,G=B+A;R-=g[B],R+=g[G],I-=x[B],I+=x[G],p&&(k-=y[B],k+=y[G]),d[C*r+P]=R,v[C*r+P]=k,w[C*r+P]=I}}const T=Math.floor(c/2),N=Math.floor(m/2);for(let P=T;P<i-T;P++){const R=P*r;for(let k=N;k<r-N;k++){const I=(P-T)*r+k-N,C=w[I];if(C===0||n&&(!a||a[R+k]))continue;const B=d[I]/C,G=p?Math.sqrt((v[I]-d[I]*B)/C):B;o[R+k]=G,a&&(a[R+k]=255)}}}function gi(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:i,mask:a,outBand:o}=t;if(n&&!a)return void o.set(s);const{kernelRows:u,kernelCols:c,statisticsType:m}=e,p=Math.floor(u/2),f=Math.floor(c/2),g=m==="min",y=o.slice(),x=new Uint32Array(r*i);for(let d=p;d<i-p;d++){const v=d*r;for(let w=f;w<r-f;w++){let A=g?Number.MAX_VALUE:-Number.MAX_VALUE,T=0;for(let N=0;N<u;N++)for(let P=0;P<c;P++){const R=v+w+(N-p)*r+P-f;a&&!a[R]||(A=g?Math.min(A,s[R]):Math.max(A,s[R]),T++)}a?(y[v+w]=T===0?0:A,x[v+w]=T):o[v+w]=T===0?0:A}}if(a)for(let d=p;d<i-p;d++){const v=d*r;for(let w=f;w<r-f;w++)if(x[v+w]){if(n&&a[v+w])continue;o[v+w]=y[v+w],a[v+w]=255}}}function yi(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:i,mask:a,outBand:o}=t;if(n&&!a)return void o.set(s);const{kernelRows:u,kernelCols:c}=e,m=Math.floor(u/2),p=Math.floor(c/2),f=o.slice(),g=new Uint32Array(r*i);for(let y=m;y<i-m;y++){const x=y*r;for(let d=p;d<r-p;d++){if(n&&a?.[x+d])continue;const v=[];for(let w=0;w<u;w++)for(let A=0;A<c;A++){const T=x+d+(w-m)*r+A-p;a&&!a[T]||v.push(s[T])}v.length&&(v.sort((w,A)=>w-A),a?(f[x+d]=v[Math.floor((v.length-1)/2)],g[x+d]=v.length):o[x+d]=v[Math.floor((v.length-1)/2)])}}if(a)for(let y=m;y<i-m;y++){const x=y*r;for(let d=p;d<r-p;d++)if(g[x+d]){if(n&&a[x+d])continue;o[x+d]=f[x+d],a[x+d]=255}}}function xi(t,e){const{fillNoDataOnly:n}=e,{band:s,width:r,height:i,mask:a,outBand:o}=t;if(n&&!a)return void o.set(s);const{kernelRows:u,kernelCols:c}=e,m=Math.floor(u/2),p=Math.floor(c/2),f=e.statisticsType==="majority",g=u*c,y=o.slice(),x=new Uint32Array(r*i);for(let d=m;d<i-m;d++){const v=d*r;for(let w=p;w<r-p;w++){if(n&&a?.[v+w])continue;const A=new Map;for(let R=0;R<u;R++)for(let k=0;k<c;k++){const I=v+w+(R-m)*r+k-p;if(a&&!a[I])continue;const C=s[I];A.set(C,A.has(C)?A.get(C)+1:1)}if(A.size===0)continue;let T=0,N=0,P=f?0:g+1;for(const R of A.keys())N=A.get(R),f===N>P&&(P=N,T=R);a?(y[v+w]=T,x[v+w]=A.size):o[v+w]=T}}if(a)for(let d=m;d<i-m;d++){const v=d*r;for(let w=p;w<r-p;w++)if(x[v+w]){if(n&&a[v+w])continue;o[v+w]=y[v+w],a[v+w]=255}}}function wi(t,e){const{mask:n}=t,{fillNoDataOnly:s}=e;if(s&&!n)return t;const{pixels:r,width:i,height:a,bandMasks:o,pixelType:u}=t,c=r.length,m=i*a,p=[],{kernelRows:f,kernelCols:g,statisticsType:y,mirrorEdges:x}=e;if(s&&!n)return t;const d=e.outputPixelType??u,v=[];for(let T=0;T<c;T++){const N=r[T],P=b.createEmptyBand(d,m);s&&P.set(N);const R=o?.[T]??n,k=R?.slice()??null,I={band:N,width:i,height:a,mask:k,outBand:P};switch(y){case"min":case"max":gi(I,e);break;case"mean":case"stddev":di(I,e);break;case"median":yi(I,e);break;case"majority":case"minority":xi(I,e)}x&&!s&&Ke(P,i,a,f,g),p.push(P),k&&v.push(k)}let w=v[0]??n;v.length!==c&&(v.length=0),c>1&&o?.length&&(w=b.combineBandMasks(o));const A=new b({pixelType:d,width:i,height:a,pixels:p,bandMasks:o&&v.length?v:null,mask:w});return A.updateStatistics(),A}var je;let Ft=je=class extends D{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new je({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:J(this.raster)})}};l([h({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],Ft.prototype,"rows",void 0),l([h({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],Ft.prototype,"cols",void 0),l([h({json:{write:!0}})],Ft.prototype,"fillNoDataOnly",void 0),l([h({json:{read:{source:["statisticsType","type"],reader:(t,e)=>bs.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),H(bs)],Ft.prototype,"statisticsType",void 0),Ft=je=l([F("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Ft);const vi=Ft;let Vt=class extends z{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const n=e.clone();n.pixelType=this.outputPixelType;const{statisticsType:s}=this.functionArguments;return s==="stddev"&&this._removeStatsHistColormapVAT(n),this.rasterInfo=n,{success:!0,supportsGPU:n.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{statisticsType:n,rows:s,cols:r,fillNoDataOnly:i}=this.functionArguments;return wi(e,{kernelRows:s,kernelCols:r,fillNoDataOnly:i,outputPixelType:this.outputPixelType,statisticsType:n,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:n,fillNoDataOnly:s}=this.functionArguments;return{fillNoDataOnly:s,kernelRows:t,kernelCols:e,statisticsType:n,clampRange:kt(this.outputPixelType)}}};l([h({json:{write:!0,name:"rasterFunction"}})],Vt.prototype,"functionName",void 0),l([h({type:vi,json:{write:!0,name:"rasterFunctionArguments"}})],Vt.prototype,"functionArguments",void 0),l([h()],Vt.prototype,"rasterArgumentNames",void 0),Vt=l([F("esri.layers.support.rasterFunctions.StatisticsFunction")],Vt);const bi=Vt;var Me;let Nt=Me=class extends D{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const n=[];return t.forEach(s=>{const r={min:s.min,max:s.max,avg:s.avg??s.mean,stddev:s.stddev??s.standardDeviation};n.push(r)}),n}writeStatistics(t,e,n){if(!t?.length)return;const s=[];t.forEach(r=>{const i={...r,mean:r.avg,standardDeviation:r.stddev};delete i.avg,delete i.stddev,s.push(i)}),e[n]=s}clone(){return new Me({statistics:J(this.statistics),histograms:J(this.histograms)})}};l([h({json:{write:!0}})],Nt.prototype,"statistics",void 0),l([Ct("statistics")],Nt.prototype,"readStatistics",null),l([$t("statistics")],Nt.prototype,"writeStatistics",null),l([h({json:{write:!0}})],Nt.prototype,"histograms",void 0),Nt=Me=l([F("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Nt);const Ai=Nt;let at=class extends z{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:n,histograms:s}=this.functionArguments;return s&&(e.histograms=s),n&&(e.statistics=n),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};l([h({json:{write:!0,name:"rasterFunction"}})],at.prototype,"functionName",void 0),l([h({type:Ai,json:{write:!0,name:"rasterFunctionArguments"}})],at.prototype,"functionArguments",void 0),l([h()],at.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],at.prototype,"indexedColormap",void 0),l([h()],at.prototype,"isNoopProcess",void 0),at=l([F("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],at);const Ti=at;var Oe;const Pi=new Z({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let L=Oe=class extends D{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,n){t?.length&&(Array.isArray(t[0])||(t=t.map(s=>[s.min,s.max,s.avg,s.stddev])),e[n]=t)}clone(){return new Oe({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:J(this.statistics),gamma:J(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:J(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};l([h({type:Boolean,json:{write:!0}})],L.prototype,"computeGamma",void 0),l([h({type:Boolean,json:{name:"dra",write:!0}})],L.prototype,"dynamicRangeAdjustment",void 0),l([h({type:[Number],json:{write:!0}})],L.prototype,"gamma",void 0),l([h()],L.prototype,"histograms",void 0),l([h({type:Number,json:{write:!0}})],L.prototype,"maxPercent",void 0),l([h({type:Number,json:{write:!0}})],L.prototype,"minPercent",void 0),l([h({type:Number,json:{write:!0}})],L.prototype,"numberOfStandardDeviations",void 0),l([h({type:Number,json:{name:"max",write:!0}})],L.prototype,"outputMax",void 0),l([h({type:Number,json:{name:"min",write:!0}})],L.prototype,"outputMin",void 0),l([h({type:Number,json:{write:!0}})],L.prototype,"sigmoidStrengthLevel",void 0),l([h({json:{type:[[Number]],write:!0}})],L.prototype,"statistics",void 0),l([$t("statistics")],L.prototype,"writeStatistics",null),l([H(Pi)],L.prototype,"stretchType",void 0),l([h({type:Boolean,json:{write:!0}})],L.prototype,"useGamma",void 0),L=Oe=l([F("esri.layers.support.rasterFunctions.StretchFunctionArguments")],L);const Fi=L;let ut=class extends z{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:n}=this,{dynamicRangeAdjustment:s,gamma:r,useGamma:i}=n;if(!s&&["u8","u16","s8","s16"].includes(e)){const c=le(n.toJSON(),{rasterInfo:t}),m=$(this.outputPixelType)?"round":"float";this.lookup=Fn({pixelType:e,...c,gamma:i?r:null,rounding:m}),this.cutOffs=c}else s||(this.cutOffs=le(n.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const a=t.clone();a.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(a),this.outputPixelType==="u8"&&(a.keyProperties.DataType="processed");const{outputMin:o=0,outputMax:u=255}=this.functionArguments;a.statistics=[];for(let c=0;c<a.bandCount;c++)a.statistics[c]={min:o,max:u};return this.rasterInfo=a,{success:!0,supportsGPU:!s}}_processPixels(t){const e=t.pixelBlocks?.[0];if(e==null)return e;const{lookup:n}=this;if(n)return Je(e,{...n,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:s}=this,r=this.cutOffs||le(s.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e}),i=s.useGamma?s.gamma:null;return Nn(e,{...r,gamma:i,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:n,useGamma:s}=this.functionArguments,r=this.rasterInfo.bandCount>=2?3:1,i=s&&n?.length?Rn(r,n):[1,1,1],{minCutOff:a,maxCutOff:o}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};a.length===1&&(a[1]=a[2]=a[0],o[1]=o[2]=o[0]);const u=o.map((f,g)=>(e-t)/(o[g]-a[g])),c=$(this.outputPixelType),m=s&&n?[n[0],n[1]??n[0],n[2]??n[0]]:[1,1,1],p=s?[i[0],i[1]??i[0],i[2]??i[0]]:[1,1,1];return{bandCount:r,minOutput:t,maxOutput:e,minCutOff:a,maxCutOff:o,factor:u,useGamma:s,gamma:m,gammaCorrection:p,stretchType:this.functionArguments.stretchType,isOutputRounded:c,type:"stretch"}}};l([h({json:{write:!0,name:"rasterFunction"}})],ut.prototype,"functionName",void 0),l([h({type:Fi,json:{write:!0,name:"rasterFunctionArguments"}})],ut.prototype,"functionArguments",void 0),l([h()],ut.prototype,"rasterArgumentNames",void 0),l([h({json:{write:!0}})],ut.prototype,"lookup",void 0),l([h({json:{write:!0}})],ut.prototype,"cutOffs",void 0),ut=l([F("esri.layers.support.rasterFunctions.StretchFunction")],ut);const Ni=ut;var ze;let ee=ze=class extends D{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new ze({attributeTableAsRecordSet:J(this.attributeTableAsRecordSet)})}};l([h({json:{write:!0}})],ee.prototype,"attributeTableAsRecordSet",void 0),ee=ze=l([F("esri.layers.support.rasterFunctions.TableFunctionArguments")],ee);const Ri=ee;let Rt=class extends z{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const n=t.clone();return n.pixelType=this.outputPixelType,n.bandCount=1,n.dataType!=="thematic"&&(n.keyProperties=n.keyProperties?{...n.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=n,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};l([h({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),l([h({type:Ri,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),l([h()],Rt.prototype,"rasterArgumentNames",void 0),l([h()],Rt.prototype,"isNoopProcess",void 0),Rt=l([F("esri.layers.support.rasterFunctions.TableFunction")],Rt);const Si=Rt,j=new Map;function Ii(t,e){const{rasterFunctionArguments:n}=t;n&&(n.rasters||[n.raster,n.raster2]).forEach(s=>{s&&typeof s!="number"&&(typeof s=="string"?s.startsWith("http")&&(e.includes(s)||e.push(s)):"rasterFunctionArguments"in s&&Ii(s,e))})}function Ci(t,e){if(e=e??{},"function"in(t=J(t))&&"arguments"in t&&t.arguments){const n=Ws(t,new Map,e);if(Ee(n),!n.renderingRule)throw new Wt("raster-function-helper","Unsupported raster function json.");t=n.renderingRule}if("rasterFunction"in t)return Ls(t=Ge(t),e);throw new Wt("raster-function-helper","unsupported raster function json.")}function ki(t,e){return e[0]==="rasters"&&Array.isArray(t.rasters)?t.rasters:e.map(n=>t[n])}function As(t){return!!(t&&typeof t=="object"&&t.rasterFunction&&t.rasterFunctionArguments)}function Ge(t){const{rasterFunction:e,rasterFunctionArguments:n}=t,s={};for(const r in n){let i=n[r];const a=r.toLowerCase();if(a==="rasters"&&Array.isArray(i))s.rasters=i.map(o=>As(o)?Ge(o):o);else switch(As(i)&&(i=Ge(i)),a){case"dra":s.dra=i;break;case"pspower":s.psPower=i;break;case"pszfactor":s.psZFactor=i;break;case"bandids":s.bandIds=i;break;default:s[r[0].toLowerCase()+r.slice(1)]=i}}return e!=="Local"||s.rasters?.length||(s.rasters=["$$"]),{...t,rasterFunctionArguments:s}}function Ls(t,e){const{rasterFunction:n,rasterFunctionArguments:s}=t,r=t.outputPixelType?.toLowerCase();if(n==null||!j.has(n))throw new Wt("raster-function-helper",`unsupported raster function: ${n}`);const i=j.get(n),a=(typeof i.ctor=="function"?i.ctor:i.ctor.default).fromJSON({...t,outputPixelType:r}),{rasterArgumentNames:o}=a,u=[],c=ki(s,o),m=o[0]==="rasters"||o.length>1,p=[];for(let f=0;f<c.length;f++){const g=c[f];let y;g==null||typeof g=="string"&&g.startsWith("$")?u.push(e?.raster):typeof g=="string"?e[g]&&u.push(e[g]):typeof g!="number"&&"rasterFunction"in g&&(y=Ls(g,e),m||(a.functionArguments[o[f]]=y),u.push(y)),m&&p.push(y??g)}if(m&&(o[0]==="rasters"?a.functionArguments.rasters=p:o.forEach((f,g)=>{a.functionArguments[f]=p[g]})),e){a.sourceRasters=u;const f=e.raster?.url;f&&(a.mainPrimaryRasterId=f)}return a}function $s(t,e){if(t&&e)for(const n in t){const s=t[n];s&&typeof s=="object"&&"type"in s&&(s.type==="RasterFunctionTemplate"?$s(s.arguments,e):s.type==="RasterFunctionVariable"&&e[s.name]!=null&&(s.value=e[s.name]))}}function De(t,e){if(!t||typeof t!="object")return t;const{value:n}=t;if(!n||typeof n!="object")return t.isDataset?"$$":n;if(Array.isArray(n))return n.length===0?[]:n.map(r=>typeof r=="object"&&r.type==="RasterFunctionVariable"?De(r,e):r);if("value"in n&&["number","string","boolean"].includes(typeof n.value))return n.value;if(t.isDataset&&n.type!=="Scalar")return"$$";if(!("type"in n))return n;let s=n;switch(n.type){case"Scalar":s=n.value;break;case"AlgorithmicColorRamp":s=Ts(n);break;case"MultiPartColorRamp":s={type:"multipart",colorRamps:n.ArrayOfColorRamp.map(Ts)};break;case"ArgumentArray":if(n.elements?.length&&n.elements[0].type!=="RasterStatistics"){const r=[];for(let i=0;i<n.elements.length;i++){const a=n.elements[i],{type:o}=a;if(o)if(o==="RasterFunctionTemplate"){const{renderingRule:u}=Ws(a,e);r.push(u),a._object_id!=null&&e.set(a._object_id,u)}else{if(o!=="RasterFunctionVariable")throw new Wt("raster-function-helper","unsupported raster function json.");{const u=De(a,e);r.push(u),a._object_id!=null&&e.set(a._object_id,u)}}else r.push(a)}s=r}else s=n.elements}return n._object_id!=null&&e.set(n._object_id,s),s}function Ts(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:n,ToColor:s}=t;if(!Array.isArray(n)){const{r,g:i,b:a}=es({h:n.Hue,s:n.Saturation,v:n.Value});n=[r,i,a,n.AlphaValue]}if(!Array.isArray(s)){const{r,g:i,b:a}=es({h:s.Hue,s:s.Saturation,v:s.Value});s=[r,i,a,s.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:n,toColor:s}}function Ws(t,e,n){n&&$s(t,n);const s={renderingRule:{},templates:e};return Js(t,s),s}function Js(t,e){if(!t||!e.renderingRule)return;const{renderingRule:n,templates:s}=e,{function:r,arguments:i,_object_id:a}=t;if(!r||!i)return;a!=null&&s.set(a,n),n.rasterFunction=r.type.replace("Function",""),n.outputPixelType=r.pixelType;const o={};n.rasterFunctionArguments=o;for(const u in i){if(u==="type"||u==="object_id"||u==="_object_ref_id")continue;const c=i[u];c&&typeof c=="object"&&"type"in c&&(c.type==="RasterFunctionTemplate"||c.type==="RasterFunctionVariable")?(c.type==="RasterFunctionVariable"?o[u]=De(c,s):(n.rasterFunctionArguments[u]={},Js(c,{renderingRule:n.rasterFunctionArguments[u],templates:s})),c._object_id!=null&&s.set(c._object_id,o[u])):o[u]=c}switch(o.DEM&&!o.Raster&&(o.Raster=o.DEM,delete o.DEM),n.rasterFunction){case"Stretch":_i(o);break;case"Colormap":Bi(o);break;case"Convolution":ji(o);break;case"Mask":Mi(o)}}function Ee(t){const{renderingRule:e,templates:n}=t;if(typeof e!="object"||!e?.rasterFunctionArguments||!n.size)return;const{rasterFunctionArguments:s}=e;for(const r in s){const i=s[r],a=r==="_object_ref_id"?i:i&&typeof i=="object"&&"_object_ref_id"in i?i._object_ref_id:null;if(a==null)i&&typeof i=="object"&&(i.rasterFunctionArguments&&Ee({renderingRule:i,templates:n}),Array.isArray(i)&&i.forEach((o,u)=>{if(typeof o=="object")if(o._object_ref_id!=null){if(!n.has(o._object_ref_id))throw new Wt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const c=n.get(a);c&&typeof c=="object"?Object.assign(o,c):i[u]=c}else Ee({renderingRule:o,templates:n})}));else{if(!n.has(a))throw new Wt("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const o=n.get(a);r!=="_object_ref_id"?s[r]=o:o&&typeof o=="object"&&Object.assign(s,o)}}}function _i(t){t.Statistics?.length&&typeof t.Statistics=="object"&&(t.Statistics=t.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),t.NumberOfStandardDeviation!=null&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}function Bi(t){t.ColorRamp?.type?.toLowerCase()==="randomcolorramp"&&(delete t.ColorRamp,t.ColormapName="Random"),t.ColorSchemeType===0&&delete t.ColorRamp}function ji(t){t.ConvolutionType!=null&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}function Mi(t){t.NoDataValues?.length&&typeof t.NoDataValues[0]=="string"&&(t.NoDataValues=t.NoDataValues.filter(e=>e!=="").map(e=>Number(e)))}j.set("Arithmetic",{desc:"Arithmetic Function",ctor:kr,rasterArgumentNames:["rasters"]}),j.set("Aspect",{desc:"Aspect Function",ctor:Br,rasterArgumentNames:["raster"]}),j.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:io,rasterArgumentNames:["raster"]}),j.set("Colormap",{desc:"Colormap Function",ctor:wo,rasterArgumentNames:["raster"]}),j.set("ColormapToRGB",{desc:"ColormapToRGB Function",ctor:bo,rasterArgumentNames:["raster"]}),j.set("CompositeBand",{desc:"CompositeBand Function",ctor:To,rasterArgumentNames:["rasters"]}),j.set("ComputeChange",{desc:"ComputeChange Function",ctor:Bo,rasterArgumentNames:["rasters"]}),j.set("Convolution",{desc:"Convolution Function",ctor:Vo,rasterArgumentNames:["raster"]}),j.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:Mo,rasterArgumentNames:["raster"]}),j.set("ExtractBand",{desc:"ExtractBand Function",ctor:Jo,rasterArgumentNames:["raster"]}),j.set("Curvature",{desc:"Curvature Function",ctor:$o,rasterArgumentNames:["raster"]}),j.set("Hillshade",{desc:"Hillshade Function",ctor:ei,rasterArgumentNames:["raster"]}),j.set("ShadedRelief",{desc:"ShadedRelief Function",ctor:pi,rasterArgumentNames:["raster"]}),j.set("Grayscale",{desc:"Grayscale Function",ctor:Zo,rasterArgumentNames:["raster"]}),j.set("Clip",{desc:"Clip Function",ctor:uo,rasterArgumentNames:["raster"]}),j.set("Local",{desc:"Local Function",ctor:ni,rasterArgumentNames:["rasters"]}),j.set("Mask",{desc:"Mask Function",ctor:oi,rasterArgumentNames:["raster"]}),j.set("NDVI",{desc:"NDVI Function",ctor:ai,rasterArgumentNames:["raster"]}),j.set("Remap",{desc:"Remap Function",ctor:li,rasterArgumentNames:["raster"]}),j.set("Slope",{desc:"Slope Function",ctor:fi,rasterArgumentNames:["raster"]}),j.set("Statistics",{desc:"Focal Statistics Function",ctor:bi,rasterArgumentNames:["raster"]}),j.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:Ti,rasterArgumentNames:["raster"]}),j.set("Stretch",{desc:"Stretch Function",ctor:Ni,rasterArgumentNames:["raster"]}),j.set("Table",{desc:"Attribute Table Function",ctor:Si,rasterArgumentNames:["raster"]});let Kt=class extends We{get affectsPixelSize(){return!1}forwardTransform(t){return t}inverseTransform(t){return t}};l([h()],Kt.prototype,"affectsPixelSize",null),l([h({json:{write:!0}})],Kt.prototype,"spatialReference",void 0),Kt=l([F("esri.layers.support.rasterTransforms.BaseRasterTransform")],Kt);const Ye=Kt;var Ue;function Ve(t,e,n){const{x:s,y:r}=e;if(n<2)return{x:t[0]+s*t[2]+r*t[4],y:t[1]+s*t[3]+r*t[5]};if(n===2){const f=s*s,g=r*r,y=s*r;return{x:t[0]+s*t[2]+r*t[4]+f*t[6]+y*t[8]+g*t[10],y:t[1]+s*t[3]+r*t[5]+f*t[7]+y*t[9]+g*t[11]}}const i=s*s,a=r*r,o=s*r,u=i*s,c=i*r,m=s*a,p=r*a;return{x:t[0]+s*t[2]+r*t[4]+i*t[6]+o*t[8]+a*t[10]+u*t[12]+c*t[14]+m*t[16]+p*t[18],y:t[1]+s*t[3]+r*t[5]+i*t[7]+o*t[9]+a*t[11]+u*t[13]+c*t[15]+m*t[17]+p*t[19]}}function Ps(t,e,n){const{xmin:s,ymin:r,xmax:i,ymax:a,spatialReference:o}=e;let u=[];if(n<2)u.push({x:s,y:a}),u.push({x:i,y:a}),u.push({x:s,y:r}),u.push({x:i,y:r});else{let p=10;for(let f=0;f<p;f++)u.push({x:s,y:r+(a-r)*f/(p-1)}),u.push({x:i,y:r+(a-r)*f/(p-1)});p=8;for(let f=1;f<=p;f++)u.push({x:s+(i-s)*f/p,y:r}),u.push({x:s+(i-s)*f/p,y:a})}u=u.map(p=>Ve(t,p,n));const c=u.map(p=>p.x),m=u.map(p=>p.y);return new St({xmin:Math.min.apply(null,c),xmax:Math.max.apply(null,c),ymin:Math.min.apply(null,m),ymax:Math.max.apply(null,m),spatialReference:o})}function Oi(t){const[e,n,s,r,i,a]=t,o=s*a-i*r,u=i*r-s*a;return[(i*n-e*a)/o,(s*n-e*r)/u,a/o,r/u,-i/o,-s/u]}let q=Ue=class extends Ye{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(t,e){const{coeffX:n,coeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let i=0;i<n.length;i++)r.push(n[i]),r.push(s[i]);return r}writeForwardCoefficients(t,e,n){const s=[],r=[];for(let i=0;i<t?.length;i++)i%2==0?s.push(t[i]):r.push(t[i]);e.coeffX=s,e.coeffY=r}get inverseCoefficients(){let t=this._get("inverseCoefficients");const e=this._get("forwardCoefficients");return!t&&e&&this.polynomialOrder<2&&(t=Oi(e)),t}set inverseCoefficients(t){this._set("inverseCoefficients",t)}readInverseCoefficients(t,e){const{inverseCoeffX:n,inverseCoeffY:s}=e;if(!n?.length||!s?.length||n.length!==s.length)return null;const r=[];for(let i=0;i<n.length;i++)r.push(n[i]),r.push(s[i]);return r}writeInverseCoefficients(t,e,n){const s=[],r=[];for(let i=0;i<t?.length;i++)i%2==0?s.push(t[i]):r.push(t[i]);e.inverseCoeffX=s,e.inverseCoeffY=r}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(t){if(t.type==="point"){const e=Ve(this.forwardCoefficients,t,this.polynomialOrder);return new ne({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Ps(this.forwardCoefficients,t,this.polynomialOrder)}inverseTransform(t){if(t.type==="point"){const e=Ve(this.inverseCoefficients,t,this.polynomialOrder);return new ne({x:e.x,y:e.y,spatialReference:t.spatialReference})}return Ps(this.inverseCoefficients,t,this.polynomialOrder)}clone(){return new Ue({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};l([h({json:{write:!0}})],q.prototype,"polynomialOrder",void 0),l([h()],q.prototype,"forwardCoefficients",void 0),l([Ct("forwardCoefficients",["coeffX","coeffY"])],q.prototype,"readForwardCoefficients",null),l([$t("forwardCoefficients")],q.prototype,"writeForwardCoefficients",null),l([h({json:{write:!0}})],q.prototype,"inverseCoefficients",null),l([Ct("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],q.prototype,"readInverseCoefficients",null),l([$t("inverseCoefficients")],q.prototype,"writeInverseCoefficients",null),l([h()],q.prototype,"affectsPixelSize",null),l([H({PolynomialXform:"polynomial"})],q.prototype,"type",void 0),q=Ue=l([F("esri.layers.support.rasterTransforms.PolynomialTransform")],q);const zi=q;var Le;let Yt=Le=class extends Ye{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(t){return(t=t.clone()).type==="point"?(t.x>180+this.tolerance&&(t.x-=360),t):(t.xmin>=180-this.tolerance?(t.xmax-=360,t.xmin-=360):t.xmax>180+this.tolerance&&(t.xmin=-180,t.xmax=180),t)}inverseTransform(t){return(t=t.clone()).type==="point"?(t.x<-this.tolerance&&(t.x+=360),t):(t.xmin<-this.tolerance&&(t.xmin+=360,t.xmax+=360),t)}clone(){return new Le({tolerance:this.tolerance})}};l([H({GCSShiftXform:"gcs-shift"})],Yt.prototype,"type",void 0),l([h()],Yt.prototype,"tolerance",void 0),Yt=Le=l([F("esri.layers.support.rasterTransforms.GCSShiftTransform")],Yt);const Gi=Yt;var $e;let se=$e=class extends Ye{constructor(){super(...arguments),this.type="identity"}clone(){return new $e}};l([H({IdentityXform:"identity"})],se.prototype,"type",void 0),se=$e=l([F("esri.layers.support.rasterTransforms.IdentityTransform")],se);const Di=se,Ei={GCSShiftXform:Gi,IdentityXform:Di,PolynomialXform:zi};function Ui(t){if(!t?.type)return null;const e=Ei[t?.type];if(e){const n=new e;return n.read(t),n}return null}class Vi{convertVectorFieldData(e){const n=b.fromJSON(e.pixelBlock),s=Ys(n,e.type);return Promise.resolve(s!=null?s.toJSON():null)}computeStatisticsHistograms(e){const n=b.fromJSON(e.pixelBlock),s=dn(n);return Promise.resolve(s)}async decode(e){const n=await gn(e.data,e.options);return n&&n.toJSON()}symbolize(e){e.pixelBlock=b.fromJSON(e.pixelBlock),e.extent=e.extent?St.fromJSON(e.extent):null;const n=this.symbolizer.symbolize(e);return Promise.resolve(n!=null?n.toJSON():null)}async updateSymbolizer(e){this.symbolizer=yn.fromJSON(e.symbolizerJSON),e.histograms&&this.symbolizer?.rendererJSON.type==="rasterStretch"&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=Ci(e.rasterFunctionJSON)}async process(e){const n=this.rasterFunction.process({extent:St.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map(s=>s!=null?b.fromJSON(s):null),primaryPixelSizes:e.primaryPixelSizes?.map(s=>s!=null?ne.fromJSON(s):null),primaryRasterIds:e.primaryRasterIds});return n!=null?n.toJSON():null}stretch(e){const n=this.symbolizer.simpleStretch(b.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(n?.toJSON())}estimateStatisticsHistograms(e){const n=xn(b.fromJSON(e.srcPixelBlock));return Promise.resolve(n)}split(e){const n=Zs(b.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,e.useBilinear===!1);return n&&n.forEach((s,r)=>{n.set(r,s?.toJSON())}),Promise.resolve(n)}clipTile(e){const n=b.fromJSON(e.pixelBlock),s=Qs({...e,pixelBlock:n});return Promise.resolve(s?.toJSON())}async mosaicAndTransform(e){const n=e.srcPixelBlocks.map(a=>a?new b(a):null),s=tn(n,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let r,i=s;return e.coefs&&(i=en(s,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(r=sn(e.destDimension,e.gcsGrid),i=nn(i,e.isUV?"vector-uv":"vector-magdir",r)),{pixelBlock:i?.toJSON(),localNorthDirections:r}}async createFlowMesh(e,n){const s={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:r,indexData:i}=await rn(e.meshType,e.simulationSettings,s,n.signal);return{result:{vertexBuffer:r.buffer,indexBuffer:i.buffer},transferList:[r.buffer,i.buffer]}}async getProjectionOffsetGrid(e){const n=St.fromJSON(e.projectedExtent),s=St.fromJSON(e.srcBufferExtent);let r=null;e.datumTransformationSteps&&(r=new Ks({steps:e.datumTransformationSteps})),(e.includeGCSGrid||In(n.spatialReference,s.spatialReference,r))&&await Cn();const i=e.rasterTransform?Ui(e.rasterTransform):null;return kn({...e,projectedExtent:n,srcBufferExtent:s,datumTransformation:r,rasterTransform:i})}}const ra=Object.freeze(Object.defineProperty({__proto__:null,default:Vi},Symbol.toStringTag,{value:"Module"}));export{ra as R,Ci as T,Gi as c,na as h,En as l,Ii as w,zi as y};
