import{fg as P,fh as I,hg as m,fP as O,fk as k,fl as R,h0 as A,fv as f,fm as l,gl as M,fx as T,fi as d,hc as z,fy as F,fz as D,fo as y,fA as g,fr as v,fs as H,fB as N,ft as x,gV as L,hh as j,gw as J,fT as $,hi as Q,ai as W,he as X,hj as q,hk as U}from"./main-DK5A1thH.js";class Y extends j{overviewGraphicLayer;overviewmapStore;constructor(e){super(e,"overview"),this.overviewGraphicLayer=this.$iApi.geo.layer.createLayer({id:"RampOverviewGraphic",layerType:J.GRAPHIC,url:"",cosmetic:!0,system:!0}),this.overviewmapStore=m(this.$vApp.$pinia)}async createMapView(e){if(!e)throw new Error("Attempted to create overview map view without a basemap");const i=typeof e=="string"?await this.findBasemap(e):e;await this.applyBasemap(i),this._rampExtentSet=this.$iApi.geo.map.getExtentSet().clone(),this._rampSR=this._rampExtentSet.sr.clone();const t=this.overviewmapStore.expandFactor;this.esriView=$(await Q.MapView({map:this.esriMap,container:this._targetDiv,constraints:{rotationEnabled:!1},spatialReference:this._rampSR.toESRI(),extent:this.$iApi.geo.map.getExtent().toESRI().expand(t)})),this.esriView.ui.components=[],this.handlers.push({type:"mouse-wheel",handler:this.esriView.on("mouse-wheel",a=>{a.stopPropagation()})}),this.handlers.push({type:"double-click",handler:this.esriView.on("double-click",a=>{a.stopPropagation()})}),this.handlers.push({type:"key-down",handler:this.esriView.on("key-down",a=>{a.stopPropagation()})}),this.handlers.push({type:"key-up",handler:this.esriView.on("key-up",a=>{a.stopPropagation()})}),this.handlers.push({type:"drag",handler:this.esriView.on("drag",a=>{a.stopPropagation(),this.mapDrag(a)})}),this.esriView.container.addEventListener("touchmove",a=>{a.preventDefault()}),W(()=>this.esriView.fatalError,()=>{const a=new IntersectionObserver(h=>{h.forEach(n=>{n.isIntersecting&&(this.esriView?.tryFatalErrorRecovery(),a.disconnect())})});a.observe(this.esriView.container)}),this.esriView.when(()=>{this._viewPromise.resolveMe(),this.created=!0})}async addMapGraphicLayer(){if(!this.esriMap){this.noMapErr();return}const e=new X(this.$iApi.geo.map.getExtent(),"overview-graphic"),i=this.overviewmapStore.borderColour??"#FF0000",t=this.overviewmapStore.borderWidth??1,a=this.overviewmapStore.areaColour??"#000000",h=this.overviewmapStore.areaOpacity??.25,n=`${a}${Math.round(h*255).toString(16)}`;e.style=new q({fill:{colour:n},outline:{colour:i,width:t}}),await this.overviewGraphicLayer.initiate(),await this.overviewGraphicLayer.addGraphic(e),this.esriMap?.add(this.overviewGraphicLayer.esriLayer)}async removeMapGraphicLayer(){if(!this.esriMap){this.noMapErr();return}if(!this.overviewGraphicLayer.esriLayer)throw new Error("Attempted to remove layer from the map without an esri layer. Likely layer.initiate() was not called or had not finished.");this.overviewGraphicLayer.removeGraphic(),this.esriMap.remove(this.overviewGraphicLayer.esriLayer),await this.overviewGraphicLayer.terminate()}destroyMapView(){this.esriView?.container.removeEventListener("touchmove",e=>{e.preventDefault()}),super.destroyMapView()}async findBasemap(e){const i=this._basemapStore.find(t=>t.id===e);if(i)return i;{const t=A(this.$vApp.$pinia).config.map;if(t){const a=t.basemaps.find(h=>h.id===e);if(a)return U.create(a)}}throw new Error(`Invalid basemap id requested: ${e}`)}async setBasemap(e){if(!this.esriView||!this.esriMap)return this.noMapErr(),!1;const i=await this.findBasemap(e),t=(this.getCurrentBasemapId()?await this.findBasemap(this.getCurrentBasemapId()):void 0)?.tileSchemaId!==i.tileSchemaId;return t?(this.destroyMapView(),await this.createMapView(i)):await this.applyBasemap(i),t}startExtent=null;async mapDrag(e){if(e.native.pointerType==="mouse"){if(e.action==="start")await this.cursorHitTest(e)&&(this.startExtent=$(this.overviewGraphicLayer.getEsriGraphic("overview-graphic").geometry));else if(this.startExtent){const i=this.esriView.toMap(e.origin),t=this.esriView.toMap({x:e.x,y:e.y}),a=this.startExtent.clone().offset(t.x-i.x,t.y-i.y,0);this.overviewGraphicLayer.getEsriGraphic("overview-graphic").geometry=a,e.action==="end"&&(this.$iApi.geo.map.zoomMapTo(this.$iApi.geo.geom.geomEsriToRamp(a),void 0,!1),this.startExtent=null)}}}updateOverview(e){const i=this.overviewmapStore.expandFactor,t=this.zoomMapTo(e.expand(i),void 0,!1),a=this.overviewGraphicLayer.getLocalGraphic("overview-graphic");return this.overviewGraphicLayer.removeGraphic(a),a.geometry=e,this.overviewGraphicLayer.addGraphic(a),t}async cursorHitTest(e){return(await this.esriView.hitTest(e)).results.length>0}}class K extends O{_parseConfig(e){const i=m(this.$vApp.$pinia);i.basemaps=e?.basemaps||{},i.mapConfig.basemaps=Object.values(i.basemaps),i.startMinimized=e?.startMinimized??!0,i.expandFactor=e?.expandFactor??1.5,i.borderColour=e?.borderColour??"#FF0000",i.borderWidth=e?.borderWidth??1,i.areaColour=e?.areaColour??"#000000",i.areaOpacity=e?.areaOpacity??.25}get config(){return super.config}}const Z={class:"relative h-full w-full overflow-hidden"},ee={class:"absolute h-30 w-30 top-0 right-0"},ae=["content","aria-label"],ie=P({__name:"overviewmap",setup(w){const e=m(),{t:i}=k(),t=R("iApi"),a=A(),h=f(),n=l(()=>a.activeBasemapConfig),G=l(()=>e.mapConfig),b=l(()=>e.basemaps),S=l(()=>e.startMinimized),r=M(new Y(t)),o=f(!0),E=f(!1),c=M([]);T(async()=>{await t.geo.map.viewPromise,u(),await r.createMap(G.value,h.value.querySelector(".overviewmap")),await r.viewPromise,await r.addMapGraphicLayer(),o.value=S.value;const p=r.updateOverview(t.geo.map.getExtent());c.push(t.event.on(d.MAP_EXTENTCHANGE,z(100,s=>{p.then(()=>{r.updateOverview(s)})}))),c.push(t.event.on(d.MAP_CREATED,()=>{u()})),c.push(t.event.on(d.MAP_REFRESH_END,()=>{u()})),c.push(t.event.on(d.MAP_BASEMAPCHANGE,async s=>{!s.schemaChanged&&r.created&&n.value&&b.value[n.value.tileSchemaId]===void 0&&(await r.removeMapGraphicLayer(),await r.setBasemap(s.basemapId),await r.addMapGraphicLayer())}))}),F(()=>{c.forEach(p=>t.event.off(p)),r.destroyMap()});const V=async p=>{E.value=!o.value&&await r.cursorHitTest(p)},_=()=>({height:`${o.value?48:200}px`,width:`${o.value?48:200}px`}),C=()=>({top:`${o.value?-6:-3}px`,right:`${o.value?-6:-3}px`,transform:`rotate(${o.value?225:45}deg)`}),u=()=>{if(!n.value){console.error("Overview Map could not obtain the basemap config used by the main map");return}try{const p=n.value?.tileSchemaId;if(!p)throw new Error("Overview Map could not obtain the tile schema of the main map");const s=b.value[p];if(!s)throw new Error("Overview Map could not find a suitable basemap that matches the tile schema of the main map");r.created?r.viewPromise.then(()=>r.setBasemap(s.id)):e.updateInitialBasemap(s.id)}catch{r.created||e.updateInitialBasemap(n.value.id),r.viewPromise.then(()=>r.setBasemap(n.value.id))}};return(p,s)=>{const B=D("tippy");return y(),g("div",{class:"relative",ref_key:"el",ref:h},[v("div",{style:L(_()),class:"pointer-events-auto absolute top-0 right-0 mt-12 mr-12 shadow-tm border-4 border-solid border-white bg-white transition-all duration-300 ease-out"},[v("div",Z,[v("div",{class:H(["overviewmap absolute top-0 right-0 h-192 w-192",{"cursor-move":E.value}]),onMousemove:V},null,34)]),v("div",ee,[N((y(),g("button",{type:"button",tabindex:"0",class:"cursor-pointer absolute h-full w-full",onClick:s[0]||(s[0]=se=>o.value=!o.value),content:x(i)(o.value?"overviewmap.expand":"overviewmap.minimize"),"aria-label":x(i)(o.value?"overviewmap.expand":"overviewmap.minimize")},[(y(),g("svg",{class:"absolute fill-current text-gray-500 transition-all duration-300 ease-out",style:L(C()),xmlns:"http://www.w3.org/2000/svg",fit:"",height:"100%",width:"100%",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 24 24",focusable:"false"},s[1]||(s[1]=[v("g",{id:"apple-keyboard-control"},[v("path",{d:"M 19.7782,11.7782L 18.364,13.1924L 12,6.82843L 5.63604,13.1924L 4.22183,11.7782L 12,4L 19.7782,11.7782 Z "})],-1)]),4))],8,ae)),[[B,{placement:"left",hideOnClick:!1}]])])],4)],512)}}}),te=I(ie,[["__scopeId","data-v-9f9aebec"]]),re={en:{"overviewmap.expand":"Expand Overview","overviewmap.minimize":"Minimize Overview"},fr:{"overviewmap.expand":"Développer l'aperçu","overviewmap.minimize":"Réduire l'aperçu"}};class ne extends K{added(){Object.entries(re).forEach(a=>this.$iApi.$i18n.mergeLocaleMessage(...a)),this._parseConfig(this.config);const e=this.$vApp.$watch(()=>this.config,a=>this._parseConfig(a)),{destroy:i,el:t}=this.mount(te,{app:this.$element});this.$vApp.$el.getElementsByClassName("inner-shell")[0].appendChild(t.childNodes[0]),this.removed=()=>{e(),i(),m(this.$vApp.$pinia).$reset()}}}export{ne as default};
