import{e as w}from"./ClassBreaksDefinition-BZ4FJdWb-DFq7KWuS.js";import{a6 as E}from"./main-CqKuK3N8.js";const B=()=>E.getLogger("esri.rest.support.generateRendererUtils");function v(n,e){return Number(n.toFixed(e))}function gn(n){const e=q(n),t=[],a=e.uniqueValues.length;for(let l=0;l<a;l++){const m=e.uniqueValues[l],s=e.valueFrequency[l],i=m.toString();t.push({value:m,count:s,label:i})}return{uniqueValues:t}}function O(n,e){const{normalizationTotal:t}=n;return{classBreaks:U(n,e),normalizationTotal:t}}function U(n,e){const t=n.definition,{classificationMethod:a,normalizationType:l,definedInterval:m}=t,s=t.breakCount??1,i=[];let r=n.values;if(r.length===0)return[];r=r.sort((c,o)=>c-o);const[h,d]=e??[r.at(0),r.at(-1)];if(a==="equal-interval")if(r.length>=s){const c=(d-h)/s;let o=h;for(let u=1;u<s;u++){const f=v(h+u*c,6);i.push({minValue:o,maxValue:f,label:g(o,f,l)}),o=f}i.push({minValue:o,maxValue:d,label:g(o,d,l)})}else r.forEach(c=>{i.push({minValue:c,maxValue:c,label:g(c,c,l)})});else if(a==="natural-breaks"){const c=q(r),o=n.valueFrequency||c.valueFrequency,u=P(c.uniqueValues,o,s);let f=h;for(let p=1;p<s;p++)if(c.uniqueValues.length>p){const V=v(c.uniqueValues[u[p]],6);i.push({minValue:f,maxValue:V,label:g(f,V,l)}),f=V}i.push({minValue:f,maxValue:d,label:g(f,d,l)})}else if(a==="quantile")if(r.length>=s&&h!==d){let c=h,o=Math.ceil(r.length/s),u=0;for(let f=1;f<s;f++){let p=o+u-1;p>r.length&&(p=r.length-1),p<0&&(p=0),i.push({minValue:c,maxValue:r[p],label:g(c,r[p],l)}),c=r[p],u+=o,o=Math.ceil((r.length-u)/(s-f))}i.push({minValue:c,maxValue:d,label:g(c,d,l)})}else{let c=-1;for(let o=0;o<r.length;o++){const u=r[o];u!==c&&(c=u,i.push({minValue:c,maxValue:u,label:g(c,u,l)}),c=u)}}else if(a==="standard-deviation"){const c=G(r),o=A(r,c);if(o===0)i.push({minValue:r[0],maxValue:r[0],label:g(r[0],r[0],l)});else{const u=$(h,d,s,c,o)*o;let f=0,p=h;for(let b=s;b>=1;b--){const M=v(c-(b-.5)*u,6);i.push({minValue:p,maxValue:M,label:g(p,M,l)}),p=M,f++}let V=v(c+.5*u,6);i.push({minValue:p,maxValue:V,label:g(p,V,l)}),p=V,f++;for(let b=1;b<=s;b++)V=f===2*s?d:v(c+(b+.5)*u,6),i.push({minValue:p,maxValue:V,label:g(p,V,l)}),p=V,f++}}else if(a==="defined-interval"){if(!m)return i;const[c,o]=e??[r.at(0),r.at(-1)],u=Math.ceil((o-c)/m);let f=c;for(let p=1;p<u;p++){const V=v(c+p*m,6);i.push({minValue:f,maxValue:V,label:g(f,V,l)}),f=V}i.push({minValue:f,maxValue:o,label:g(f,o,l)})}return i}function g(n,e,t){let a=null;return a=n===e?t&&t==="percent-of-total"?n+"%":n.toString():t&&t==="percent-of-total"?n+"% - "+e+"%":n+" - "+e,a}function q(n){const e=[],t=[];let a=Number.MIN_VALUE,l=1,m=-1;for(let s=0;s<n.length;s++){const i=n[s];i===a?(l++,t[m]=l):i!==null&&(e.push(i),a=i,l=1,t.push(l),m++)}return{uniqueValues:e,valueFrequency:t}}function P(n,e,t){const a=n.length,l=[];t>a&&(t=a);for(let s=0;s<t;s++)l.push(Math.round(s*a/t-1));l.push(a-1);let m=S(l,n,e,t);return L(m.mean,m.sdcm,l,n,e,t)&&(m=S(l,n,e,t)),l}function S(n,e,t,a){let l=[],m=[],s=[],i=0;const r=[],h=[];for(let u=0;u<a;u++){const f=x(u,n,e,t);r.push(f.sbMean),h.push(f.sbSdcm),i+=h[u]}let d,c=i,o=!0;for(;o||i<c;){o=!1,l=[];for(let u=0;u<a;u++)l.push(n[u]);for(let u=0;u<a;u++)for(let f=n[u]+1;f<=n[u+1];f++)if(d=e[f],u>0&&f!==n[u+1]&&Math.abs(d-r[u])>Math.abs(d-r[u-1]))n[u]=f;else if(u<a-1&&n[u]!==f-1&&Math.abs(d-r[u])>Math.abs(d-r[u+1])){n[u+1]=f-1;break}c=i,i=0,m=[],s=[];for(let u=0;u<a;u++){m.push(r[u]),s.push(h[u]);const f=x(u,n,e,t);r[u]=f.sbMean,h[u]=f.sbSdcm,i+=h[u]}}if(i>c){for(let u=0;u<a;u++)n[u]=l[u],r[u]=m[u],h[u]=s[u];i=c}return{mean:r,sdcm:h}}function L(n,e,t,a,l,m){let s=0,i=0,r=0,h=0,d=!0;for(let c=0;c<2&&d;c++){c===0&&(d=!1);for(let o=0;o<m-1;o++)for(;t[o+1]+1!==t[o+2];){t[o+1]=t[o+1]+1;const u=x(o,t,a,l);r=u.sbMean,s=u.sbSdcm;const f=x(o+1,t,a,l);if(h=f.sbMean,i=f.sbSdcm,!(s+i<e[o]+e[o+1])){t[o+1]=t[o+1]-1;break}e[o]=s,e[o+1]=i,n[o]=r,n[o+1]=h,d=!0}for(let o=m-1;o>0;o--)for(;t[o]!==t[o-1]+1;){t[o]=t[o]-1;const u=x(o-1,t,a,l);r=u.sbMean,s=u.sbSdcm;const f=x(o,t,a,l);if(h=f.sbMean,i=f.sbSdcm,!(s+i<e[o-1]+e[o])){t[o]=t[o]+1;break}e[o-1]=s,e[o]=i,n[o-1]=r,n[o]=h,d=!0}}return d}function $(n,e,t,a,l){let m=Math.max(a-n,e-a)/l/t;return m=m>=1?1:m>=.5?.5:.25,m}function G(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e/=n.length,e}function A(n,e){let t=0;for(let a=0;a<n.length;a++){const l=n[a];t+=(l-e)*(l-e)}return t/=n.length,Math.sqrt(t)}function x(n,e,t,a){let l=0,m=0;for(let r=e[n]+1;r<=e[n+1];r++){const h=a[r];l+=t[r]*h,m+=h}m<=0&&B().warn("Exception in Natural Breaks calculation");const s=l/m;let i=0;for(let r=e[n]+1;r<=e[n+1];r++)i+=a[r]*(t[r]-s)**2;return{sbMean:s,sbSdcm:i}}const Y="<Null>",_="equal-interval",Q=1,R=5,j=10,H=/\s*(\+|-)?((\d+(\.\d+)?)|(\.\d+))\s*/gi,J=new Set(["esriFieldTypeDate","esriFieldTypeInteger","esriFieldTypeSmallInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong","esriFieldTypeOID","esriFieldTypeBigInteger"]),K=new Set(["esriFieldTypeTimeOnly","esriFieldTypeDateOnly"]),W=["min","max","avg","stddev","count","sum","variance","nullcount","median"];function T(n){return n==null||typeof n=="string"&&!n?Y:n}function X(n){const e=n.normalizationField!=null||n.normalizationType!=null,t=n.minValue!=null||n.maxValue!=null,a=!!n.sqlExpression&&n.supportsSQLExpression;return!e&&!t&&!a}function bn(n){const{outStatisticTypes:e}=n,t=n.returnDistinct?[...new Set(n.values)]:n.values,a=t.filter(s=>s!=null).sort(),l=a.length,m={count:l,min:a[0],max:a[l-1]};return n.supportsNullCount&&(m.nullcount=t.length-l),!n.percentileParams||e?.include?.length&&!e.include.includes("median")||e?.exclude?.length&&e.exclude.includes("median")||(m.median=k(t,n.percentileParams)),m}function Z(n){const{values:e,useSampleStdDev:t,supportsNullCount:a,outStatisticTypes:l}=n;let m=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY,i=null,r=null,h=null,d=null,c=0;const o=n.minValue==null?-1/0:n.minValue,u=n.maxValue==null?1/0:n.maxValue;for(const p of e)Number.isFinite(p)?p>=o&&p<=u&&(i=i===null?p:i+p,m=Math.min(m,p),s=Math.max(s,p),c++):typeof p=="string"&&c++;if(c&&i!=null){r=i/c;let p=0;for(const V of e)Number.isFinite(V)&&V>=o&&V<=u&&(p+=(V-r)**2);d=t?c>1?p/(c-1):0:c>0?p/c:0,h=Math.sqrt(d)}else m=null,s=null;const f={avg:r,count:c,max:s,min:m,stddev:h,sum:i,variance:d};return a&&(f.nullcount=e.length-c),!n.percentileParams||l?.include?.length&&!l.include.includes("median")||l?.exclude?.length&&l.exclude.includes("median")||(f.median=k(e,n.percentileParams)),f}function k(n,e){const{fieldType:t,value:a,orderBy:l,isDiscrete:m}=e,s=nn(t,l==="desc");if((n=[...n].filter(u=>u!=null).sort((u,f)=>s(u,f))).length===0)return null;if(a<=0)return n[0];if(a>=1)return n[n.length-1];const i=(n.length-1)*a,r=Math.floor(i),h=r+1,d=i%1,c=n[r],o=n[h];return h>=n.length||m||typeof c=="string"||typeof o=="string"?c:c*(1-d)+o*d}function nn(n,e){if(n){if(J.has(n))return D(e);if(K.has(n))return I(e,!1);if(n==="esriFieldTypeTimestampOffset")return ln(e);const s=I(e,!0);if(n==="esriFieldTypeString")return s;if(n==="esriFieldTypeGUID"||n==="esriFieldTypeGlobalID")return(i,r)=>s(N(i),N(r))}const t=e?1:-1,a=D(e),l=I(e,!0),m=C(e);return(s,i)=>typeof s=="number"&&typeof i=="number"?a(s,i):typeof s=="string"&&typeof i=="string"?l(s,i):m(s,i)??t}const y=(n,e)=>n==null?e==null?0:1:e==null?-1:null,F=(n,e)=>n==null?e==null?0:-1:e==null?1:null;function C(n){return n?y:F}const en=(n,e)=>F(n,e)??(n===e?0:new Date(n).getTime()-new Date(e).getTime()),tn=(n,e)=>y(n,e)??(n===e?0:new Date(e).getTime()-new Date(n).getTime());function ln(n){return n?tn:en}const an=(n,e)=>F(n,e)??(n===e?0:n<e?-1:1),un=(n,e)=>y(n,e)??(n===e?0:n<e?1:-1);function I(n,e){if(!e)return n?un:an;const t=C(n);return n?(a,l)=>t(a,l)??((a=a.toUpperCase())>(l=l.toUpperCase())?-1:a<l?1:0):(a,l)=>t(a,l)??((a=a.toUpperCase())<(l=l.toUpperCase())?-1:a>l?1:0)}const on=(n,e)=>y(n,e)??e-n,rn=(n,e)=>F(n,e)??n-e;function D(n){return n?on:rn}function N(n){return n.slice(24,36)+n.slice(19,23)+n.slice(16,18)+n.slice(14,16)+n.slice(11,13)+n.slice(9,11)+n.slice(6,8)+n.slice(4,6)+n.slice(2,4)+n.slice(0,2)}function vn(n,e,t){let a;for(a in n)e?.include?.length&&!e.include.includes(a)||e?.exclude?.length&&e.exclude.includes(a)?delete n[a]:W.includes(a)&&(Number.isFinite(n[a])||(n[a]=null));return t&&["avg","stddev","variance"].forEach(l=>{n[l]!=null&&(n[l]=Math.ceil(n[l]??0))}),n}function xn(n){const e={};for(let t of n)(t==null||typeof t=="string"&&t.trim()==="")&&(t=null),e[t]==null?e[t]={count:1,data:t}:e[t].count++;return{count:e}}function z(n){return n?.type!=="coded-value"?[]:n.codedValues.map(e=>e.code)}function Tn(n,e,t,a){const l=n.count,m=[];if(t&&e){const s=[],i=z(e[0]);for(const r of i)if(e[1]){const h=z(e[1]);for(const d of h)if(e[2]){const c=z(e[2]);for(const o of c)s.push(`${T(r)}${a}${T(d)}${a}${T(o)}`)}else s.push(`${T(r)}${a}${T(d)}`)}else s.push(r);for(const r of s)l.hasOwnProperty(r)||(l[r]={data:r,count:0})}for(const s in l){const i=l[s];m.push({value:i.data,count:i.count,label:i.label})}return{uniqueValueInfos:m}}function yn(n,e,t,a){let l=null;switch(e){case"log":n!==0&&(l=Math.log(n)*Math.LOG10E);break;case"percent-of-total":Number.isFinite(a)&&a!==0&&(l=n/a*100);break;case"field":Number.isFinite(t)&&t!==0&&(l=n/t);break;case"natural-log":n>0&&(l=Math.log(n));break;case"square-root":n>0&&(l=n**.5)}return l}function sn(n,e,t){const a=mn({field:e.field,normalizationType:e.normalizationType,normalizationField:e.normalizationField,classificationMethod:e.classificationMethod,standardDeviationInterval:e.standardDeviationInterval,definedInterval:e.definedInterval,breakCount:e.numClasses||R});return n=cn(n,e.minValue,e.maxValue),O({definition:a,values:n,normalizationTotal:e.normalizationTotal},t)}function cn(n,e,t){const a=e??-1/0,l=t??1/0;return n.filter(m=>Number.isFinite(m)&&m>=a&&m<=l)}function mn(n){const{breakCount:e,field:t,normalizationField:a,normalizationType:l}=n,m=n.classificationMethod||_,s=m==="standard-deviation"?n.standardDeviationInterval||Q:void 0,i=m==="defined-interval"?n.definedInterval:void 0;return new w({breakCount:e,classificationField:t,classificationMethod:m,normalizationField:l==="field"?a:void 0,normalizationType:l,standardDeviationInterval:s,definedInterval:i})}function Fn(n,e){let t=n.classBreaks;const a=t.length,l=t[0]?.minValue,m=t[a-1]?.maxValue,s=e==="standard-deviation",i=H;return t=t.map(r=>{const h=r.label,d={minValue:r.minValue,maxValue:r.maxValue,label:h};if(s&&h){const c=h.match(i),o=c?.map(u=>+u.trim())??[];o.length===2?(d.minStdDev=o[0],d.maxStdDev=o[1],o[0]<0&&o[1]>0&&(d.hasAvg=!0)):o.length===1&&(h.includes("<")?(d.minStdDev=null,d.maxStdDev=o[0]):h.includes(">")&&(d.minStdDev=o[0],d.maxStdDev=null))}return d}),{minValue:l,maxValue:m,classBreakInfos:t,normalizationTotal:n.normalizationTotal}}function Mn(n,e){const t=fn(n,e);if(t.min==null&&t.max==null)return{bins:[],minValue:t.min,maxValue:t.max,normalizationTotal:e.normalizationTotal};const a=t.intervals,l=t.min??0,m=t.max??0,s=a.map((i,r)=>({minValue:a[r][0],maxValue:a[r][1],count:0}));for(const i of n)if(i!=null&&i>=l&&i<=m){const r=dn(a,i);r>-1&&s[r].count++}return{bins:s,minValue:l,maxValue:m,normalizationTotal:e.normalizationTotal}}function fn(n,e,t=!1){const{field:a,classificationMethod:l,standardDeviationInterval:m,definedInterval:s,normalizationType:i,normalizationField:r,normalizationTotal:h,minValue:d,maxValue:c}=e,o=e.numBins||j;let u=null,f=null,p=null;if((!l||l==="equal-interval")&&!i){if(d!=null&&c!=null)u=d,f=c;else{const V=Z({values:n,minValue:d,maxValue:c,useSampleStdDev:!i,supportsNullCount:X({normalizationType:i,normalizationField:r,minValue:d,maxValue:c})});u=V.min??null,f=V.max??null}p=pn(u??0,f??0,o)}else{const{classBreaks:V}=sn(n,{field:a,normalizationType:i,normalizationField:r,normalizationTotal:h,classificationMethod:l,standardDeviationInterval:m,definedInterval:s,minValue:d,maxValue:c,numClasses:o},d!=null&&c!=null?[d,c]:void 0);u=V[0]?.minValue,f=V[V.length-1]?.maxValue,p=V.map(b=>[b.minValue,b.maxValue])}if(t&&p.length){const V=p.at(-1)[1];p.push([V,V])}return{min:u,max:f,intervals:p}}function dn(n,e){let t=-1;for(let a=n.length-1;a>=0;a--)if(e>=n[a][0]){t=a;break}return t}function pn(n,e,t){const a=(e-n)/t,l=[];let m,s=n;for(let i=1;i<=t;i++)m=s+a,m=Number(m.toFixed(16)),l.push([s,i===t?e:m]),s=m;return l}export{pn as A,X as C,O as D,nn as E,dn as G,k as I,fn as L,sn as O,mn as P,gn as Q,Mn as T,xn as V,T as a,yn as b,Tn as g,vn as h,W as k,bn as o,Z as w,Fn as x};
