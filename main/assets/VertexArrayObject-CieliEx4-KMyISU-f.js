import{kg as d,ke as g,kG as A,kH as b,a6 as x,ki as R}from"./main-CKPAMuMz.js";import{I as o,c as B}from"./Texture-D5XWO2GQ-C9ycMGat.js";import{I as r,f as c,c as f,D as a}from"./enums-wEDHPbCF-Cf76M5_x.js";import{l as y}from"./memoryEstimations-DeWfxwaV-C1Juzq6b.js";const E=()=>x.getLogger("esri.views.webgl.BufferObject");class h{static createIndex(e,t,i){return new h(e,r.ELEMENT_ARRAY_BUFFER,t,i)}static createVertex(e,t,i){return new h(e,r.ARRAY_BUFFER,t,i)}static createUniform(e,t,i){return new h(e,r.UNIFORM_BUFFER,t,i)}static createPixelPack(e,t=c.STREAM_READ,i){const s=new h(e,r.PIXEL_PACK_BUFFER,t);return i&&s.setSize(i),s}static createPixelUnpack(e,t=c.STREAM_DRAW,i){return new h(e,r.PIXEL_UNPACK_BUFFER,t,i)}static createTransformFeedback(e,t=c.STATIC_DRAW,i){const s=new h(e,r.TRANSFORM_FEEDBACK_BUFFER,t);return s.setSize(i),s}constructor(e,t,i,s){this._context=e,this.bufferType=t,this.usage=i,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(f.BufferObject,this),this._glName=this._context.gl.createBuffer(),o(this._context.gl),s&&this.setData(s)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){if(this.bufferType===r.ELEMENT_ARRAY_BUFFER){if(this._indexType===a.UNSIGNED_INT)return 4*this._size;if(this._indexType===a.UNSIGNED_SHORT)return 2*this._size}return this._size}get _isVAOAware(){return this.bufferType===r.ELEMENT_ARRAY_BUFFER||this.bufferType===r.ARRAY_BUFFER}dispose(){this._context?.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(f.BufferObject,this),this._context=null):this._glName&&E().warn("Leaked WebGL buffer object")}setSize(e,t=null){if(this.bufferType===r.ELEMENT_ARRAY_BUFFER&&t!=null)switch(this._indexType=t,t){case a.UNSIGNED_SHORT:e*=2;break;case a.UNSIGNED_INT:e*=4}this._setBufferData(e)}setData(e){if(!e)return;let t=e.byteLength;this.bufferType===r.ELEMENT_ARRAY_BUFFER&&(d(e)?this._indexType=a.UNSIGNED_BYTE:g(e)?(t/=2,this._indexType=a.UNSIGNED_SHORT):A(e)&&(t/=4,this._indexType=a.UNSIGNED_INT)),this._setBufferData(t,e)}_setBufferData(e,t=null){this._size=e;const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const s=this._context.gl;t!=null?s.bufferData(this.bufferType,t,this.usage):s.bufferData(this.bufferType,e,this.usage),o(s),this._isVAOAware&&this._context.bindVAO(i)}setSubData(e,t,i,s){if(!e)return;const u=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:_}=this._context;_.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,i,s-i),o(_),this._isVAOAware&&this._context.bindVAO(u)}getSubData(e,t=0,i,s){if(i<0||s<0)return;const u=F(e)?e.BYTES_PER_ELEMENT:1;if(u*((i??0)+(s??0))>e.byteLength)return;t+u*(s??0)>this.usedMemory&&E().warn("Potential problem getting subdata: requested data exceeds buffer size!");const _=this._context.gl;this.bufferType===r.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,r.TRANSFORM_FEEDBACK_BUFFER),_.getBufferSubData(r.TRANSFORM_FEEDBACK_BUFFER,t,e,i,s),this._context.unbindBuffer(r.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,r.COPY_READ_BUFFER),_.getBufferSubData(r.COPY_READ_BUFFER,t,e,i,s),this._context.unbindBuffer(r.COPY_READ_BUFFER))}async getSubDataAsync(e,t=0,i,s){await this._context.clientWaitAsync(),this.getSubData(e,t,i,s)}}function F(n){return b(n)}const l=()=>x.getLogger("esri.views.webgl.VertexArrayObject");let p=class{constructor(n,e,t,i,s=null){this._context=n,this._locations=e,this._layout=t,this._buffers=i,this._indexBuffer=s,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}getByteLength(n){return this._buffers.get(n)?.usedMemory??0}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return Array.from(this._buffers.values()).reduce((n,e)=>n+e.usedMemory,this._indexBuffer?.usedMemory??0+(this._buffers.size+(this._indexBuffer?1:0))*y)}get cachedMemory(){return this.usedMemory}dispose(){this._context?(this._context.getBoundVAO()===this&&this._context.bindVAO(null),this._buffers.forEach(n=>n.dispose()),this._buffers.clear(),this._indexBuffer=R(this._indexBuffer),this.disposeVAOOnly()):(this._glName||this._buffers.size>0)&&l().warn("Leaked WebGL VAO")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(f.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const{gl:n}=this._context,e=n.createVertexArray();n.bindVertexArray(e),this._bindLayout(),n.bindVertexArray(null),this._glName=e,this._context.instanceCounter.increment(f.VertexArrayObject,this),this._initialized=!0}bind(){this.initialize(),this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const{_buffers:n,_layout:e,_indexBuffer:t}=this;n||l().error("Vertex buffer dictionary is empty!");const i=this._context.gl;this._buffers.forEach((s,u)=>{const _=e.get(u);_?B(this._context,this._locations,s,_):l().error("Vertex element descriptor is empty!")}),t!=null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t.glName)}unbind(){this.initialize(),this._context.gl.bindVertexArray(null)}};export{p as F,h as u};
