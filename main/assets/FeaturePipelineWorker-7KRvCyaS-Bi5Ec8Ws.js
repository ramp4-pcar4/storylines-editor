import{v as V,S as ge,i as Xt,K as w,bo as Se,ah as Ne,b9 as Qt,o as W,f4 as Qs,dA as Zs,bt as et,hC as le,J as P,aA as Zt,$ as Z,j as Ht,f as tt,b as Hs,ff as Jt,bV as Js,x as Ks,hr as er,hn as tr,I as st,gU as rt,E as we,fn as sr,p as rr,fk as ir,bw as nr,ae as ar,O as or,l as dr,n as ur,B as ft,dY as yt,a1 as cr}from"./main-B-qqJ5ov.js";import{M as it,t as lr}from"./workers-PiCjreoO-DJYvxXtl.js";import{V as hr}from"./TileInfo-CWIRDhZl-Bhhxrbtd.js";import{Q as _r,Z as pr,V as gr}from"./Tile-D75RMC64-C3MLariM.js";import{s as nt}from"./TileKey-C5IL-JBr-DkZT6W2U.js";import{t as T}from"./definitions-DJSdSb77-DkoRHaVx.js";import{P as Kt,C as mt,S as bt}from"./diffUtils-Cz3Fi8Xb-BVpJwMOs.js";import{P as fr,m as yr,o as at,E as ot,W as wt,e as Fe,G as es,O as mr,q as br,L as wr}from"./AttributeStore-DjyP9U7y-9RLJ50Kg.js";import{d as Ir,g as vr}from"./MeshWriterRegistry-CIC9Yk_f-C8T9nWhm.js";import{k as ts}from"./QueueProcessor-DbfV9fLy-BkAb7mV-.js";import{A as xr,q as ss,d as Sr,j as rs,V as Fr,D as kr,e as Cr,f as Tr,C as Q,$ as is,n as Mr,O as ns,X as qr}from"./featureConversionUtils-D6hFQ4Af-7zE_Etyc.js";import{i as Y,a as he,c as M}from"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import{f as Er,h as Ie}from"./queryUtils-Brxu6254-BhNhQo-5.js";import{o as de}from"./FieldsIndex-HmzMbJQG-C2DYcGxg.js";import{s as Or}from"./optimizedFeatureQueryEngineAdapter-DFdaawxC-C9Mw8jDp.js";import{Z as as}from"./QueryEngine-CH5uUhZK-DR7r22_4.js";import{P as Rr,p as Ar,q as It}from"./query-DFW9-NG_-D5wFtoZw.js";import{L as Pr}from"./arcgisLayerUrl-HNYh8jvG-B2O143Ys.js";import{b as os}from"./Query-BrwMGK8U-CyKS3Qe-.js";import{k as jr}from"./TimeExtent-Cn0Jofqr-1iB3KTqK.js";import{z as ds}from"./quantizationUtils-bJy1cRwp-nOsuYf6m.js";import{_ as vt}from"./ogcFeatureUtils-Bs12bZY3-5wg2eSst.js";import{o as Dr}from"./pbf-D-y3_eZO-BN_k_F23.js";import{k as Lr,m as zr}from"./pbfQueryUtils-F4ZE8-K8-BRZ1rTyb.js";import{i as xt}from"./CircularArray-DaQg3PQl-BXS52LZy.js";import{createConnection as Ur}from"./createConnection-CrkuTLXs-BWlsWmmE.js";import{a as Wr}from"./UpdateTracking2D-Du_WIf4G-CEm4QtSq.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./LabelMetric-BeluzH3o-iJy2d-T9.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./Texture-BCt2hphT-DvUofMVc.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Program-DLVwTiPA-C0UmoMsx.js";import"./BufferObject-BM_7mcDb-D9oo6-zU.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./TimeOnly-DSMefxKy-d-fxgp_2.js";import"./UnknownTimeZone-C--TOcPG-DKb3aA_p.js";import"./timeSupport-jPViR5jn-C1Ol3Oy9.js";import"./labelUtils-BW14kBqX-DfWgPm_B.js";import"./PieChartMeshWriter-C5yLDFwp-DxKD8WXV.js";import"./GeometryUtils-NHgB9gGQ-ByZ36CAa.js";import"./TurboLine-CIlsAy5m-CMjhThJd.js";import"./utils-SPbpQbmm-DQY8PVIo.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./constants-Bqe1QJ4u-F8oTIn7N.js";import"./vec2f64-CeODonrJ-CkkJCdRC.js";import"./grouping-RwmXkHDc-D7WLmmV6.js";import"./ReactiveMap-CFk6jPfN-Dn1cGCMX.js";import"./signal-CETehA7D-DKHdUMxd.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./projection-BA9M1R7d-BrWcDNEF.js";import"./projectBuffer-CvCBvJ6W-D4VBeyna.js";import"./normalizeUtils-Bxmy9MNI-CeIR1clc.js";import"./normalizeUtilsCommon-CRJlkfEA-CfUHeklq.js";import"./utils-9sQxfkoa-CrB3apxj.js";import"./utils-Bq23Xwmj-ubNLJvr4.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./LRUCache-C3erQTWv-C7R8Kkcb.js";import"./WhereClause-DxwoyBMS-BGGipzaQ.js";import"./fieldType-CD2CL2hr-B0GoEBDi.js";import"./QueryEngineCapabilities-Gr588n9t-DjYb9CEb.js";import"./utils-HtkT8Fn3-UHPSHmAT.js";import"./heatmapUtils-seiMkkkR-PGEGurXS.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./utils-DyydRFHu-De__HudE.js";import"./Basemap-BEqqSTw9-RRlL9tT1.js";import"./loadAll-e978YItg-fzRL7yQg.js";import"./PortalItem-CctGdnxF-CGvGDFAo.js";import"./writeUtils-D5qlLkwk--aMa2nHm.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-wsQhA476.js";import"./utils-tNxq3jkf-BKs1SCBU.js";import"./ClassBreaksDefinition-bYRgYgPp-bDZUh58o.js";import"./Scheduler-B7UX7Wr5-BLeBwT6v.js";import"./queryZScale-BiYV6Pr6-CcXUVQc3.js";import"./Field-C6hA1tZj-7h8v-exC.js";import"./geojson-CNt_qtQf-BAZ0Xux2.js";import"./date-Cqvy-TgA-DIf-QFLz.js";import"./clientSideDefaults-BqqayPct-GTMWWs57.js";import"./capabilities-Cjn77swe-Y9lFlGVh.js";import"./sourceUtils-BMeqkJ5g-CS0xeMKO.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./BindType-9iOk18Ed-CRW1cdX4.js";import"./Util-BjGjeg6f-08Szkf4F.js";import"./UpdatingHandles-CUu3u1ms-HMNQlS0m.js";let Gr=class{constructor(s){this._client=s,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(s){it(this._eventLog.onEvent(s))}};const ke=1,dt=2,Ce=4,ut=8,ct=16,Te=32,lt=64,Me=128;function je(s){switch(s){case ke:case ut:case Te:return-1;case dt:case lt:return 0;case Ce:case ct:case Me:return 1}}function De(s){switch(s){case ke:case dt:case Ce:return-1;case ut:case ct:return 0;case Te:case lt:case Me:return 1}}const St=ke|ut|Te,Ft=Ce|ct|Me,kt=ke|dt|Ce,Ct=Te|lt|Me;let Nr=class{constructor(s,e,t,r,i=0){this.tileKey=s,this._bufferingEnabled=e,this._sizeHint=i,this._meshes={self:new wt(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const n=r?1:0;this._copyBufferedDataIntoSelf=t&&this._bufferingEnabled&&s.level===n}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(s){this._meshes.self.indexEnsureSize(s)}entityStart(s,e=s){this._currentEntityOverlaps=0,this._meshes.self.entityStart(s,e)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let s=0;s<8;s++){const e=1<<s;this._currentEntityOverlaps&e&&this._meshes.neighbors[s].entityEnd()}}}recordStart(s,e,t){this._currentRecordOverlaps=0,this._meshes.self.recordStart(s,e,t)}recordEnd(s=0){const e=this._meshes.self.recordEnd(this._currentRecordOverlaps);return e&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):e}recordBounds(s,e,t,r){this._bufferingEnabled&&this._addOverlap(s,e,t,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(s){this._meshes.self.metricStart(s)}metricBoxWrite(s){this._meshes.self.metricBoxWrite(s)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(s){this._meshes.self.vertexWrite(s)}vertexWriteF32(s){this._meshes.self.vertexWriteF32(s)}vertexWriteRegion(s){this._meshes.self.vertexWriteRegion(s)}indexWrite(s){this._meshes.self.indexWrite(s)}serialize(s){const e={message:[],transferList:[]},t=this._meshes.self.serialize();return e.message.push({tileId:this.tileKey.id,...t.message}),e.transferList.push(...t.transferList),this._meshes.neighbors.forEach((r,i)=>{const n=r.serialize(),a=1<<i,o=je(a),d=De(a),u=new nt(this.tileKey).getNormalizedNeighbor(o,d,s);e.message.push({tileId:u.id,...n.message}),e.transferList.push(...n.transferList)}),e}_addOverlap(s,e,t,r){const i=Math.min(T/2,t),n=Math.min(T/2,r),a=255^((s<0+i?Ft:s>=T-i?St:Ft|St)|(e<0+n?Ct:e>=T-n?kt:Ct|kt));this._currentRecordOverlaps|=a}_copyIntoNeighbors(){for(let s=0;s<8;s++){const e=1<<s;if(this._currentRecordOverlaps&e){if(this._copyBufferedDataIntoSelf){const n=-je(e)*T,a=-De(e)*T;if(a!==0)continue;this._meshes.self.copyLast(n,a);continue}if(!this._meshes.neighbors[s]){const n=Math.floor(this._sizeHint/16);this._meshes.neighbors[s]=new wt(e,n)}const t=this._meshes.neighbors[s],r=-je(e)*T,i=-De(e)*T;t.copyLastFrom(this._meshes.self,r,i)}}}},$r=class{},G=class us{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const r=new us;return r.setDefault(await e.createMeshWriters(t.meshes)),r}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}match(e,t){const r=this.doMatch(e,t)||this.getDefault();if(r&&r.length>0){const i=this.getBackgroundFill();if(i)return[...i,...r]}return r}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},Br=class cs extends G{static async fromDictionaryRenderer(e,t){return new cs(e,t)}constructor(e,t){super(),this._context=e,this._schema=t,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const r=t.getCursor(),i=[];for(;r.next();)i.push(this._updateMeshWriterGroup(e,r));await Promise.all(i)}match(e,t){const r=e.getAttributeHash();return this._hashToGroup.get(r)}async _updateMeshWriterGroup(e,t){const r=t.readLegacyFeatureForDisplay(),i=t.getAttributeHash();if(this._hashToGroup.has(i))return;this._hashToGroup.set(i,null);const n=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:r});if(!n)return;const a=await this._context.createMeshWriters(n.meshes);this._hashToGroup.set(i,a)}},Vr=class ls extends G{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const r=await e.storage.createComputedField(t),i=new ls(r,t.isMaxInclusive);await Promise.all(t.intervals.map(async o=>{const d=await e.createMeshWriters(o.meshes);i.add(o,d)}));const n=await e.createMeshWriters(t.defaultSymbol);i.setDefault(n);const a=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(a),i}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((r,i)=>r.interval.min-i.interval.min)}size(){return super.size()+this._intervals.length}doMatch(e,t){const r=this._field?.read(e,t);if(r==null||isNaN(r)||r===1/0||r===-1/0)return null;for(let i=0;i<this._intervals.length;i++){const{interval:n,result:a}=this._intervals[i],o=r>=n.min,d=this._isMaxInclusive?r<=n.max:r<n.max;if(o&&d)return a}return null}},Yr=class hs extends G{static async fromLabelSchema(e,t){const r=t.classes.map(async n=>{const a=await e.createMeshWriters(n.meshes);return{minScale:n.minScale,maxScale:n.maxScale,meshes:a,expression:null,where:await e.storage.createWhereClause(n.where)}}),i=await Promise.all(r);return new hs(i)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const r=this._getLabels(t.$view.scale),i=[];for(const n of r)n.where&&!n.where(e)||i.push(...n.meshes);return i}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const r=t-t/4,i=t+t/2;return(!e.minScale||e.minScale>=r)&&(!e.maxScale||e.maxScale<=i)}},Xr=class _s extends G{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const r=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],i=(await Promise.all(r)).filter(d=>!!d),n=new _s(i,t.fieldDelimiter),a=await e.createMeshWriters(t.defaultSymbol);n.setDefault(a);const o=await e.createMeshWriters(t.backgroundFill);return n.setBackgroundFill(o),await Promise.all(t.map.map(async(d,u)=>{const h=await e.createMeshWriters(d.symbol);d.value==="<Null>"?n.setNullResult(h):n.add(d.value,h,u+1)})),n}setNullResult(e){this._nullResult=e}getSortKey(e,t){const r=this._getValueFromFields(e,t);if(r==null||r===""||r==="<Null>")return 0;const i=this._resultsMap.get(r.toString());return i?i.sortKey:this._defaultSymbolSortKey}add(e,t,r){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:r}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,r+1)}size(){return super.size()+this._resultsMap.size}doMatch(e,t){const r=this._getValueFromFields(e,t);if(this._nullResult!==null&&(r==null||r===""||r==="<Null>"))return this._nullResult;if(r==null)return null;const i=r.toString();return this._resultsMap.get(i)?.meshWriters}_getValueFromFields(e,t){const r=[];for(const i of this._fields){const n=i.read(e,t);n==null||n===""?r.push("<Null>"):r.push(n)}return r.join(this._separator)}};async function ae(s,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return G.from(s,e);case"interval":return Vr.fromIntervalSchema(s,e);case"dictionary":return Br.fromDictionaryRenderer(s,e);case"label":return Yr.fromLabelSchema(s,e);case"map":return Xr.fromMatcherSchema(s,e);case"subtype":return Qr.fromSubtypes(s,e);case"cluster":return Zr.fromClusterSchema(s,e);default:throw new Error("Impl")}}let Qr=class ps extends G{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const r=new Map,i=[];for(const n in t.renderers){const a=parseInt(n,10),o=ae(e,t.renderers[n]).then(d=>r.set(a,d));i.push(o)}return await Promise.all(i),new ps(r,t.subtypeField)}match(e,t){const r=e.readAttribute(this._subtypeField),i=this._subMatchers.get(r);return i?i.match(e,t):null}},Zr=class gs extends G{static async fromClusterSchema(e,t){const[r,i]=await Promise.all([ae(e,t.feature),ae(e,t.cluster)]);return new gs(r,i)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}},Hr=class fs extends $r{static async create(e,t){const r=await ae(e,t.symbology),i=t.labels?await ae(e,t.labels):null;return new fs(r,i)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,r){const i=this._symbology.match(t,r);if(i){for(const n of i)n.enqueueRequest(e,t,r);if(this._labels){const n=this._labels.match(t,r);if(!n)return;for(const a of n)a.enqueueRequest(e,t,r)}}}write(e,t,r,i,n){const a=this._symbology.match(r,i);if(a){for(const o of a)o.write(e,t,r,i,n);if(e.entityRecordCount()>=1&&this._labels){const o=this._labels.match(r,i);if(!o)return;for(const d of o)d.setReferences(a),d.write(e,t,r,i,n)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}},Jr=class{constructor(s,e,t,r){this.storage=s,this.proxy=e,this.viewParams=t,this.registry=r}async createMeshWriters(s){const e=s.map(t=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,t));return Promise.all(e)}},Kr=class{constructor(s){this._outstandingMessages=[],this._queue=new ts({concurrency:s.concurrency,process:e=>s.process(e)})}async push(s){if(s.end)return await Promise.all(this._outstandingMessages),await this._queue.push(s),void(this._outstandingMessages=[]);const e=this._queue.push(s);return this._outstandingMessages.push(e),e}},ys=class $e{static async create(e,t){if(t.statisticType==="count"){const i=new vr(1);return new $e(t.name,t.alias,t.type,t.statisticType,i)}const r=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new $e(t.name,t.alias,t.type,t.statisticType,r)}constructor(e,t,r,i,n){this.name=e,this.alias=t,this.type=r,this.statisticType=i,this.computed=n}},ht=class{constructor(s){this.subscription=s,this.handledChunks=new Set}destroy(){}},ms=class{constructor(s,e){this._source=s,this._attributeStore=e,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}onSubscribe(s){const e=this.createState(s);this._sendStates.set(s.key.id,e),this.updateChunks()}onUnsubscribe(s){this._sendStates.get(s.key.id)?.destroy(),this._sendStates.delete(s.key.id)}invalidate(){const s=Array.from(this._sendStates.values());this._sendStates.clear();for(const e of s)e.destroy(),this.onSubscribe(e.subscription)}invalidateAttributeData(){}getFeatureObjectIdsForAggregate(s){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(s){return this.displayMap(s,e=>e,e=>e)}getDisplayAndObjectIds(s){return this.displayMap(s,e=>e,(e,t,r)=>[e,r])}beforeUpdateChunks(){}afterUpdateChunks(){}},bs=class extends ms{constructor(s,e,t,r){super(s,e),this.spatialReference=t,this.aggregateFields=r,this.events=new st,this.featureAdapter=Or}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new as({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}removeChunks(s){}forEach(s){return this.forEachAggregateWorldSpace(s)}forEachInBounds(s,e){}forEachBounds(s,e){const t=rt();for(const r of s){const i=Fr(t,r.geometry,!1,!1);i&&e(i)}}},_t=class{constructor(s,e,t,r,i){this.subscription=s,this.reader=e,this.clear=t,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(s,e,t){return{type:"append",clear:this.clear,id:this.id,append:s,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:e,attributeEpoch:t}}},Be=class{constructor(s,e,t,r,i){this.subscription=s,this.reader=e,this.remove=t,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(s,e,t){return{type:"update",id:this.id,modify:s,debugInfo:this.debugInfo,remove:this.remove,version:e,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:t}}},ei=class ws{static fromReader(e){const t=[],r=e.copy(),i=rt();for(;r.next();)r.getBounds(i)&&t.push(r.getIndex());const n=gr(9,a=>(r.setIndex(a),{minX:r.getBoundsXMin(),minY:r.getBoundsYMin(),maxX:r.getBoundsXMax(),maxY:r.getBoundsYMax()}));return n.load(t),new ws(n)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const ti=64;function si(s,e,t,r){const i=[s.xmin,s.ymin,s.xmax,s.ymax],n=dr.fromExtent(ur.fromBounds(i,r)),a=Ie(n,r,P.WGS84,{densificationStep:e*ti});if(!a)return null;const o=ns(new M,a,!1,!1),d=o.coords.filter((y,v)=>!(v%2)),u=o.coords.filter((y,v)=>v%2),h=Math.min(...d),l=Math.min(...u),p=Math.max(...d),g=Math.max(...u),_=Ve(h,l,t,P.WGS84),f=Ve(p,g,t,P.WGS84);return _&&f?{bounds:i,geohashBounds:{xLL:_[0],yLL:_[1],xTR:f[0],yTR:f[1]},level:t}:null}function Ve(s,e,t,r){if(r.isWebMercator){const a=ft(s/yt.radius),o=a-360*Math.floor((a+180)/360),d=[0,0];return Tt(d,0,ft(Math.PI/2-2*Math.atan(Math.exp(-e/yt.radius))),o,t),d}const i=Ie({x:s,y:e},r,P.WGS84);if(!i)return null;const n=[0,0];return Tt(n,0,i.y,i.x,t),n}function ri(s,e){let t=-90,r=90,i=-180,n=180;for(let a=0;a<e;a++){const o=Math.ceil((a+1)/2),d=Math.floor((a+1)/2),u=1-a%2,h=30-(3*o+2*d),l=30-(2*o+3*d),p=3*u+2*(1-u),g=2*u+3*(1-u),_=3*u+7*(1-u)<<l,f=(7*u+3*(1-u)<<h&s.geohashX)>>h,y=(_&s.geohashY)>>l;for(let v=p-1;v>=0;v--){const b=(i+n)/2,F=f&1<<v?1:0;i=(1-F)*i+F*b,n=(1-F)*b+F*n}for(let v=g-1;v>=0;v--){const b=(t+r)/2,F=y&1<<v?1:0;t=(1-F)*t+F*b,r=(1-F)*b+F*r}}return[i,t,n,r]}function Tt(s,e,t,r,i){i%2&&(i+=1);let n=0,a=0,o=-90,d=90,u=-180,h=180;for(let l=0;l<i/2;l++){for(let p=0;p<5;p++){const g=(u+h)/2,_=r>g?1:0;n|=_<<29-(p+5*l),u=(1-_)*u+_*g,h=(1-_)*g+_*h}for(let p=0;p<5;p++){const g=(o+d)/2,_=t>g?1:0;a|=_<<29-(p+5*l),o=(1-_)*o+_*g,d=(1-_)*g+_*d}}s[2*e]=n,s[2*e+1]=a}let Is=class{constructor(s){this._statistics=s}get statistics(){return this._statistics}};const Mt=Math.PI/180;let vs=class Ye{static create(e){return new Ye(e.map(t=>ii(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const r of this._statistics)r.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const r=this._statistics[t],i=e._statistics[t];if(r.field.name!==i.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");r.merge(i)}}clone(){return new Ye(this._statistics.map(e=>e.clone()))}};function ii(s){switch(s.statisticType){case"min":return new ni(s);case"max":return new ai(s);case"avg":return new di(s);case"avg_angle":return new ui(s);case"sum":case"count":return new oi(s);case"mode":return new ci(s)}}let K=class{constructor(s){this.field=s}insert(s,e){if(!this.field.computed)return;const t=this.field.computed.read(s,e);wr(t)||this._insertValue(t)}},ni=class xs extends K{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new xs(this.field);return e.value=this.value,e}},ai=class Ss extends K{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new Ss(this.field);return e.value=this.value,e}},oi=class Fs extends K{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new Fs(this.field);return e.value=this.value,e}},di=class ks extends K{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new ks(this.field);return e._total=this._total,e._count=this._count,e}},ui=class Cs extends K{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,r=180/Math.PI;return Math.atan2(t,e)*r}_insertValue(e){this._x=this._x+Math.cos(e*Mt),this._y=this._y+Math.sin(e*Mt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new Cs(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},ci=class Ts extends K{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[r,i]of this._frequencies.entries())i>t&&(t=i,e=r);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,r]of e._frequencies.entries()){const i=this._frequencies.get(t);i!=null?this._frequencies.set(t,i+r):this._frequencies.set(t,r)}}clone(){const e=new Ts(this.field);return e._frequencies=new Map(this._frequencies),e}},qt=class Xe extends Is{static create(e,t,r,i){const n=vs.create(e),a=new Array(32);for(let o=0;o<a.length;o++)a[o]=null;return new Xe(n,t,r,i,a)}constructor(e,t,r,i,n){super(e),this.xNode=t,this.yNode=r,this.depth=i,this.children=n,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new Xe(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,r,i,n,a){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=r,this._xGeohashTotal+=i,this._yGeohashTotal+=n,this._statistics.insert(e,a),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const r=this._getLngLatBounds(),[i,n,a,o]=r,d=Ie({rings:[[[i,n],[i,o],[a,o],[a,n],[i,n]]]},P.WGS84,e),u=ns(new M,d,!1,!1);return t!=null?Q(new M,u,!1,!1,"esriGeometryPolygon",t,!1,!1):u}getGeometricCentroid(e,t){const r=this._getLngLatBounds(),[i,n,a,o]=r,d=Ie({x:(i+a)/2,y:(n+o)/2},P.WGS84,e),u=qr(new M,d);return t!=null?Q(new M,u,!1,!1,"esriGeometryPoint",t,!1,!1):u}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,r,i,n,a){if(i>=r)return this;const o=1-i%2,d=3*o+2*(1-o),u=2*o+3*(1-o),h=30-n-d,l=30-a-u,p=((e&7*o+3*(1-o)<<h)>>h)+((t&3*o+7*(1-o)<<l)>>l)*(8*o+4*(1-o)),g=this.children[p];return g==null?null:g.find(e,t,r,i+1,n+d,a+u)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),r=Math.floor(e/2),i=30-(3*t+2*r),n=30-(2*t+3*r),a=this.xNode<<i,o=this.yNode<<n;return ri({geohashX:a,geohashY:o},this.depth)}};class li{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=qt.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,r){return this._root.find(e,t,r,0,0,0)}insert(e,t,r,i,n,a,o){let d=this._root,u=0,h=0,l=0;for(;d!==null;){if(d.insert(e,t,r,i,n,o),u>=a)return;const p=Math.ceil((u+1)/2),g=Math.floor((u+1)/2),_=1-u%2,f=30-(3*p+2*g),y=30-(2*p+3*g),v=(i&7*_+3*(1-_)<<f)>>f,b=(n&3*_+7*(1-_)<<y)>>y,F=v+b*(8*_+4*(1-_));h=h<<3*_+2*(1-_)|v,l=l<<2*_+3*(1-_)|b,d.children[F]==null&&(d.children[F]=qt.create(this._fields,h,l,u+1),this._depth=Math.max(this._depth,u+1),this._size+=1),u+=1,d=d.children[F]}}putBins(e,t){for(const r of this.getNodes(t)){const i=e.get(r.id);i?i.merge(r):e.set(r.id,r.clone())}}getNodes(e){const t=[],{geohashBounds:r,level:i}=e;let n=this._root;for(;n!==null;){const a=n.depth,o=n.xNode,d=n.yNode;if(a>=i){t.push(n),n=n.next;continue}const u=Math.ceil((a+1)/2),h=Math.floor((a+1)/2),l=1-a%2,p=30-(3*u+2*h),g=30-(2*u+3*h),_=~((1<<p)-1),f=~((1<<g)-1),y=(r.xLL&_)>>p,v=(r.yLL&f)>>g,b=(r.xTR&_)>>p,F=(r.yTR&f)>>g,C=o<<3*l+2*(1-l),x=d<<2*l+3*(1-l),S=C+8*l+4*(1-l),k=x+4*l+8*(1-l),E=Math.max(C,y),L=Math.max(x,v),R=Math.min(S,b),N=Math.min(k,F);let ce=null,Re=null;for(let Ae=L;Ae<=N;Ae++)for(let Pe=E;Pe<=R;Pe++){const Xs=Pe-C+(Ae-x)*(8*l+4*(1-l)),te=n.children[Xs];te&&(ce||(ce=te,ce.next=n.next),Re&&(Re.next=te),Re=te,te.next=n.next)}n=ce||n.next}return t}}let Ms=class{constructor(s){this._options=s}insert(s,e){const t=s.getCursor(),r={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;t.next();)this._insertFeature(t,r,e)}_insertFeature(s,e,t){const{featureFilter:r}=this._options;if(r!==null&&!r.check(s))return;let i=0,n=0;if(s.geometryType==="esriGeometryPoint")i=s.readXWorldSpace(),n=s.readYWorldSpace();else{if(t){const o=s.readCentroidForDisplay();if(o==null)return;const[d,u]=o.coords;if(d<0||d>T||u<0||u>T)return}const a=s.readCentroidWorldSpace();if(a==null)return;i=a.coords[0],n=a.coords[1]}this._insert(s,i,n,e)}},hi=class extends Ms{constructor(s){super(s),this._tree=new li(this._options.fields)}put(s){throw new Error("Geohash tree does not support put")}putBounded(s,e,t){const{geohashLevel:r,spatialReference:i}=this._options,n=si(e,t,r,i);n!=null&&this._tree.putBins(s,n)}_insert(s,e,t,r){const{geohashLevel:i,spatialReference:n}=this._options,a=Ve(e,t,i,n);a&&this._tree.insert(s,e,t,a[0],a[1],i,r)}},Qe=class fe extends Is{static createId(e,t){return`${e}.${t}`}static create(e,t,r,i){return new fe(e,t,vs.create(r),i)}constructor(e,t,r,i){super(r),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=i,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return fe.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new fe(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,r,i){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=r,this._yWorldTotal+=i,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:Cr(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:Tr(e,this.centroidYWorld)}getGeometry(e,t){const r=this.gridX*this._worldUnitsPerCell,i=this.gridY*this._worldUnitsPerCell,n=new M([4],[r,i,r+this._worldUnitsPerCell,i,r+this._worldUnitsPerCell,i+this._worldUnitsPerCell,r,i+this._worldUnitsPerCell]);if(t!=null){const a=new M;return Q(a,n,!1,!1,"esriGeometryPolygon",t)}return n}getCentroid(e){const t=new M([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const r=new M;return Q(r,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const r=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,n=new M([],[r,i]);if(t!=null){const a=new M;return Q(a,n,!1,!1,"esriGeometryPoint",t)}return n}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}};const _i=96;function Ze(s,e){return rr(s)*ir*_i/e}let pi=class extends Ms{constructor(s){super(s),this._cells=new Map,this._pixelsPerMapUnit=Ze(s.spatialReference,s.scale)}put(s){for(const e of this._cells.values()){const t=s.get(e.id);t?t.merge(e):s.set(e.id,e.clone())}}putBounded(s,e,t){const r=[e.xmin,e.ymin,e.xmax,e.ymax],[i,n,a,o]=r,d=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),u=Math.floor(n*this._pixelsPerMapUnit/this._options.cellSize),h=Math.ceil(a*this._pixelsPerMapUnit/this._options.cellSize),l=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let p=u;p<=l;p++)for(let g=d;g<=h;g++){const _=`${g}.${p}`,f=this._cells.get(_);if(!f)continue;const y=s.get(f.id);y?f&&!s.has(f.id)&&y.merge(f):s.set(f.id,f.clone())}}_insert(s,e,t,r){const i=e*this._pixelsPerMapUnit,n=t*this._pixelsPerMapUnit,a=Math.floor(i/this._options.cellSize),o=Math.floor(n/this._options.cellSize);this._getCellOrCreate(a,o).insert(s,r,e,t)}_getCellOrCreate(s,e){const t=Qe.createId(s,e);let r=this._cells.get(t);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=Qe.create(s,e,this._options.fields,i),this._cells.set(t,r)}return r}},gi=class He extends Fe{static from(e,t){return new He(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint=e.geometryType==="esriGeometryPoint"}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null){const[l,p]=e.scale,[g,_]=e.translate;return this._displayTranslationX=-g/l,this._displayScaleX=1/l,this._displayTranslationY=_/p,this._displayScaleY=1/-p,void(this._displayTransform=e)}const[r,i]=t.scale,[n,a]=t.translate,[o,d]=e.scale,[u,h]=e.translate;if(this._displayScaleX=r/o,this._displayTranslationX=(n-u)/o,this._displayScaleY=i/d,this._displayTranslationY=(-a+h)/d,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new He(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._displayTranslationX=this._displayTranslationX,e._displayTranslationY=this._displayTranslationY,e._displayScaleX=this._displayScaleX,e._displayScaleY=this._displayScaleY,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const e=this._reader.readGeometryForDisplay();if(!this._displayTransform)return e;const t=new M;return Q(t,e,this.hasZ,this.hasM,this.geometryType,this._displayTransform),t.deltaDecode()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,r]=e.coords;e.coords[0]=t*this._displayScaleX+this._displayTranslationX,e.coords[1]=r*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return Mr(e,this.geometryType,!1,!1)}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},ue=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}queryFeaturesInBounds(s){const e=this._getSpatialIndex().search(s);return gi.from(this.reader,e)}getAggregateIndex(s){const e=JSON.stringify(s);if(e!==this._aggregateIndexHash){switch(this._aggregateIndexHash=e,s.type){case"grid":this._aggregateIndex=new pi(s);break;case"geohash":this._aggregateIndex=new hi(s)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=ei.fromReader(this.reader)),this._spatialIndex}},q=class z extends Fe{static fromFeatures(e,t){const{objectIdField:r,geometryType:i}=t,n=xr([],e,i,!1,!1,r);for(let a=0;a<n.length;a++)n[a].displayId=e[a].displayId;return z.fromOptimizedFeatures(n,t)}static fromFeatureSet(e,t){const r=ss(e,t.objectIdField);return z.fromOptimizedFeatureSet(r,t)}static fromOptimizedFeatureSet(e,t){const r=z.fromOptimizedFeatures(e.features,t);return r._exceededTransferLimit=e.exceededTransferLimit,r._transform=e.transform,r._fieldsIndex=new de(e.fields),r}static fromOptimizedFeatures(e,t,r){const i=new z(e,t);return i._fieldsIndex=t.fieldsIndex,i._transform=r,i}static empty(e){return new z([],e)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(e){const t=new Set(e);this._features=this._features.filter(r=>!(r.objectId!=null&&t.has(r.objectId)))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const e=new z(this._features,this.metadata);return this.copyInto(e),e}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return he(this._current)?Sr(this._current.geometry,2):0}_readX(){return he(this._current)?this._current.geometry.coords[0]:0}_readY(){return he(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return he(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){if(!this._fieldsIndex){const n=this._current.attributes[e];if(n!==void 0)return n;const a=e.toLowerCase();for(const o in this._current.attributes)if(o.toLowerCase()===a)return this._current.attributes[o];return}const r=this._fieldsIndex.get(e);if(!r)return;const i=this._current.attributes[r.name];return i==null?i:t&&this.fields.isDateField(e)?new Date(i):i}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}};function qs(s){return s.chunkId==="localEdit"}let Je=class extends ue{constructor(s,e){super(),this.metadata=s,this.removed=new Set,this.overriddenIds=new Set,this._features=[],this.chunkId=e,this.normalizedChunkId=e}get reader(){return q.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}get lastLocalEditDropped(){return this._lastLocalEditDropped}applyOverrides(s){this._onChange();const{reader:e,removed:t}=s,r=[],i=new Set,n=e.getCursor(),a=new Set(t);for(this.overriddenIds.clear();n.next();){const o=n.readOptimizedFeatureWorldSpace(),d=o.objectId;r.push(o),i.add(d),this.overriddenIds.add(d),this.removed.delete(d)}for(const o of this._features){const d=o.objectId;a.has(d)||i.has(d)||(r.push(o),this.overriddenIds.add(d))}this._features=r;for(const o of i.values())this.removed.delete(o);for(const o of t)this.removed.add(o),this.overriddenIds.add(o)}removeOverrides(s){this._lastLocalEditDropped=performance.now(),this._onChange();const e=s.reader.getCursor(),t=new Set;for(;e.next();){const r=e.getObjectId();this.overriddenIds.has(r)&&(t.add(r),this.overriddenIds.delete(r))}this._features=this._features.filter(r=>!t.has(r.objectId))}getTileReader(s){if(!this._features.length)return null;const e=this.queryFeaturesInBounds(s.bounds);return e.setTransformForDisplay(s.transform),e}_onChange(){this.invalidate()}},fi=class extends ht{constructor(s,e){super(s),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=e}reset(){this.destroy(),this.done=!1}invaldateForLocalEditDropped(){this.handledChunks.clear(),this.bins.clear()}destroy(){const s=this.subscription.tile.key.level;for(const e of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${e}.${s}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const s of this.featureCache.values()){const e=s.clone();e.geometry&&kr(e.geometry,e.geometry,!1,!1,this.subscription.tile.transform),yield e}}},yi=class Es extends bs{static async create(e,t,r,i,n){const a=new at({spatialReference:t}),o=await Promise.all(e.fields.map(async u=>ys.create(a,u))),d=e.featureFilter?await es.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await Er(t,P.WGS84),new Es(e,d,n,o,t,r,i)}constructor(e,t,r,i,n,a,o){super(a,o,n,i),this._schema=e,this._featureFilter=t,this._timeZone=r,this._metadata=ot.createFeature({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fieldsIndex:new de(e.fields).toJSON(),globalIdField:null,spatialReference:a.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(e){return new fi(e,this._attributeStore)}async*applyLocalEdit(e){for(const t of this._sendStates.values())t.reset(),yield new _t(t.subscription,q.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,r){const i=new Map(e.map(a=>[t(a),a])),n=[];for(const a of this._sendStates.values())for(const o of a.featuresWorldSpace()){const{objectId:d,displayId:u}=o,h=i.get(d);if(h!=null){const l=r(u,h,d);n.push(l),i.delete(d)}}return n}getDisplayFeatures(e){const t=new Set(e),r=new Set,i=[];for(const n of this._sendStates.values())for(const a of n.featuresWorldSpace())t.has(a.displayId)&&!r.has(a.objectId)&&(a.geometry&&i.push({...rs(a,this._metadata.geometryType,!1,!1),displayId:a.displayId}),r.add(a.objectId));return{features:[],aggregates:i}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const r of t.bins.values())if(r.id===e)return Array.from(r.containedObjectIds);return[]}beforeUpdateChunks(){const e=this._source.chunks();if(!e.length)return;let t=!1;for(const r of e)qs(r)&&r.lastLocalEditDropped!==this._lastHandledLocalEdit&&(this._lastHandledLocalEdit=r.lastLocalEditDropped,t=!0);if(t)for(const r of this._sendStates.values())r.invaldateForLocalEditDropped()}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const r of this._sendStates.values())for(const i of r.featuresWorldSpace())t.has(i.objectId)||(e(i),t.add(i.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:e.scale};case"grid":{const t=this._schema.index.fixedBinLevel,r=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,timeZone:this._timeZone,scale:r}}}}async*_update(e,t){const{handledChunks:r,subscription:i,bins:n,featureCache:a}=e,o=i.tile;if(e.done)return;for(const _ of t.chunks()){if(r.has(_.chunkId))continue;r.add(_.chunkId);const f=_.queryInfo;if("tileId"in f){const y=new nt(f.tileId);if(y.level!==o.level||y.world!==o.key.world)continue}_.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(n,e.tile.extent,e.tile.resolution)}const d=[],u=i.tile.transform,h=i.tile.key.level;for(const _ of n.values()){let f=a.get(_.id);if(f)f.attributes=_.getAttributes();else{const y=_.getGeometry(this.spatialReference,u);f=new Y(y,_.getAttributes(),null),y||(f.centroid=_.getGeometricCentroid(this.spatialReference,u)),f.objectId=_.id,f.displayId=this._attributeStore.createDisplayIdForObjectId(`${f.objectId}.${h}`),a.set(_.id,f)}d.push(f)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const l=q.fromOptimizedFeatures(d,this._metadata,u),p=l.getCursor(),g=e.subscription.tile.createArcadeEvaluationOptions(this._timeZone);for(;p.next();)this._attributeStore.setAttributeData(p.getDisplayId(),p,g);yield new Be(e.subscription,l,[],e.done,{})}},mi=class{constructor(s,e){this.inner=s,this.displayId=e}};const _e=128;let bi=class extends ht{constructor(s){super(s),this.didSend=!1,this.done=!1}},wi=class{constructor(s,e,t,r,i){this._level=s,this._scale=e,this._indexOptions=t,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const s of this._clusters.values())this._store.releaseDisplayIdForObjectId(s.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const s of this._clusters.values()){const e=s.inner.getCentroid(null),t=new Y(e,s.inner.getAttributes(),null);t.objectId=s.inner.id,t.displayId=s.displayId,yield t}}clusters(){return this._clusters.values()}updateChunks(s,e){let t=!1;for(const a of s){const o=a.queryInfo;"tileId"in o&&new nt(o.tileId).level!==this._level||this._handledChunks.has(a.normalizedChunkId)||(this._handledChunks.add(a.normalizedChunkId),t=!0,a.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=Ze(this._indexOptions.spatialReference,this._scale),n=this._indexOptions.cellSize;for(const{subscription:a}of e){const o=a.tile.bounds,d=Math.floor(o[0]*i/n),u=Math.floor(o[1]*i/n),h=Math.ceil(o[2]*i/n),l=Math.ceil(o[3]*i/n);r.xMin=Math.min(r.xMin,d),r.yMin=Math.min(r.yMin,u),r.xMax=Math.max(r.xMax,h),r.yMax=Math.max(r.yMax,l)}return this._lastCellBounds!=null&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(t=!0,this._lastCellBounds=r),t&&this._clusterCells(r),t}async updateStatistics(s){let e=!1;for(const t of this._clusters.values())t.inner.count>1&&(e=this._updateAggregateStatistics(this._statistics,t.inner)||e);if(e){const t=Array.from(this._statistics.entries()).map(([r,i])=>({fieldName:r,minValue:i.minValue,maxValue:i.maxValue}));await s.container.updateStatistics(this._level,t)}}createAggregateFeatures(s,e){const t=s.subscription,r=[],i=t.tile.transform;for(const n of this._clusters.values()){let a=n.inner.getCentroidX(i);const o=n.inner.getCentroidY(i),d=t.tile.lod,u=d.wrap?d.worldSize[0]:null,h=n.inner.count===1?n.inner.firstObjectId:n.inner.id,l=n.displayId;if(u!=null)if(u===1){const p=new M([],[a,o]),g=new Y(p,n.inner.getAttributes(),null);g.geometry.coords[0]-=T,g.objectId=h,g.displayId=l,r.push(g);const _=new M([],[a,o]),f=new Y(_,n.inner.getAttributes(),null);f.geometry.coords[0]+=T,f.objectId=h,f.displayId=l,r.push(f)}else a>T+T/2?a-=u*T:a<-T/2&&(a+=u*T);if(a<T+_e&&a>=-_e&&o<T+_e&&o>=-_e){const p=new M([],[a,o]),g=new Y(p,n.inner.getAttributes(),null);g.objectId=h,g.displayId=l,r.push(g)}}return q.fromOptimizedFeatures(r,e,t.tile.transform)}_clusterCells(s){let e=Array.from(this._cells.values());e=e.sort((a,o)=>o.count-a.count);const t=[];for(const a of this._clusters.values())t.push(a.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/Ze(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const a of e){if(n.has(a.id)||a.gridX<s.xMin||a.gridX>s.xMax||a.gridY<s.yMin||a.gridY>s.yMax)continue;const o=this._store.createDisplayIdForObjectId(a.id),d=new mi(a.clone(),o);n.add(a.id),this._clusters.set(a.id,d);const u=a.centroidXWorld,h=a.centroidYWorld;for(let l=a.gridY-i;l<=a.gridY+i;l++)for(let p=a.gridX-i;p<=a.gridX+i;p++){if(l===a.gridY&&p===a.gridX)continue;const g=this._cells.get(Qe.createId(p,l));if(!g||n.has(g.id))continue;const _=Math.abs(g.centroidXWorld-u),f=Math.abs(g.centroidYWorld-h);_<r&&f<r&&(d.inner.merge(g),n.add(g.id))}}for(const a of t)this._store.releaseDisplayIdForObjectId(a)}_updateAggregateStatistics(s,e){let t=!1;for(const r of e.statistics.values()){if(r.field.type==="esriFieldTypeString")continue;const i=r.value,n=r.field,a=s.get(n.name);if(a){const{minValue:o,maxValue:d}=a,u=Math.min(a.minValue,i),h=Math.max(a.maxValue,i);o===u&&d===h||(a.minValue=u,a.maxValue=h,t=!0)}else s.set(n.name,{minValue:i,maxValue:i}),t=!0}return t}},Ii=class Os extends bs{static async create(e,t,r,i,n,a){const o=new at({spatialReference:r}),d={type:"grid",fields:await Promise.all(t.fields.map(async u=>ys.create(o,u))),spatialReference:r,featureFilter:t.featureFilter?await es.create({geometryType:i.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:i.metadata.timeInfo,fieldsIndex:i.metadata.fieldsIndex,spatialReference:r,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,timeZone:a};return new Os(e,t.clusterRadius,d,t.fields,i,n)}constructor(e,t,r,i,n,a){super(n,a,r.spatialReference,r.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=r,this._cellsPerScale=new Map,this._metadata=ot.createFeature({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fieldsIndex:new de([...i,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:n.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new bi(e)}async*applyLocalEdit(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,r){const i=new Map(e.map(o=>[t(o),o])),n=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const o of a.clusters()){const d=i.get(o.inner.id);if(d==null){if(o.inner.count===1){const u=i.get(o.inner.firstObjectId);if(u!=null){const h=r(o.displayId,u,o.inner.firstObjectId);n.push(h),i.delete(o.inner.firstObjectId)}}}else{const u=r(o.displayId,d,o.inner.id);n.push(u),i.delete(o.inner.id)}}return n}getDisplayFeatures(e){const t=new Set(e),r=new Set,i=[],n=[],a=this._getClusterState(this._requiredLevel,this._requiredScale);for(const o of a.aggregatesWorldSpace())if(t.has(o.displayId)&&!r.has(o.displayId)){const d=rs(o,this._metadata.geometryType,!1,!1);if(r.add(o.displayId),d.attributes.cluster_count===1){i.push({...d,displayId:o.displayId});continue}n.push({...d,displayId:o.displayId})}return{features:i,aggregates:n}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const r of t.clusters())if(r.inner.id===e)return Array.from(r.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;for(const a of e)qs(a)&&a.lastLocalEditDropped!==this._lastHandledLocalEdit&&(this.invalidate(),this._lastHandledLocalEdit=a.lastLocalEditDropped);const t=this._getClusterState(this._requiredLevel,this._requiredScale),r=Array.from(this._sendStates.values()).filter(a=>a.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,r)||!this._source.updateTracking.updating)for(const a of r)a.subscription.tile.level===this._requiredLevel&&(a.didSend=!1,a.done=!1);const i=Array.from(this._sendStates.values()).filter(a=>a.done).map(a=>a.subscription.tile.key),n=new Set(i);for(const a of this._sendStates.values())this._source.updateTracking.updating&&(i.some(o=>o.containsChild(a.subscription.tile.key))||a.subscription.tile.key.getChildKeys().every(o=>n.has(o)))||a.didSend||a.subscription.tile.level!==this._requiredLevel||(a.didSend=!0,yield*this._update(a,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const r of t.aggregatesWorldSpace())e(r)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let r=this._cellsPerScale.get(t);return r||(r=new wi(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,r)),r}async*_update(e,t,r){if(e.done)return;const i=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!r.updateTracking.updating;const n=i.getCursor(),a=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;n.next();)this._attributeStore.setAttributeData(n.getDisplayId(),n,a);yield new _t(e.subscription,i,!0,e.done,{})}},vi=class extends ht{},xi=class extends ms{constructor(s,e,t){super(s,e),this._timeZone=t,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const s of this._source.chunks())this._cleanupChunkIds(s)}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(s){super.onSubscribe(s),this._evalOptions=s.tile.createArcadeEvaluationOptions(this._timeZone)}createState(s){return new vi(s)}get aggregateQueryEngine(){return null}displayMap(s,e,t){const r=new Map(s.map(n=>[e(n),n])),i=[];for(const n of this._source.chunks()){const a=n.reader.getCursor();for(;a.next();){const o=a.getObjectId(),d=a.getDisplayId(),u=r.get(o);if(u!=null){const h=t(d,u,o);i.push(h),r.delete(o)}}}return i}getDisplayFeatures(s){const e=new Set(s),t=new Set,r=[];for(const i of this._source.chunks()){const n=i.reader.getCursor();for(;n.next();){const a=n.getObjectId(),o=n.getDisplayId();e.has(o)&&!t.has(a)&&(r.push({...n.readLegacyFeatureWorldSpace(),displayId:o}),t.add(a))}}return{features:r,aggregates:[]}}async*applyLocalEdit(s){const e=[],t=s.reader.getCursor();for(;t.next();){const n=t.getObjectId(),a=this._attributeStore.createDisplayIdForObjectId(n);t.setDisplayId(a),this._attributeStore.setAttributeData(a,t,this._evalOptions),e.push(a)}const r=[];for(const n of s.removed){const a=this._attributeStore.getDisplayIdForObjectId(n);a!=null&&r.push(a)}w("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:s,modifiedDisplayIds:e,removedDisplayIds:r});const i=new Je(this._source.metadata,"localEdit");i.applyOverrides(s),this.handledChunks.add(i.chunkId),this.handledChunksForAttributeData.add(i.chunkId),this.handledChunksForIdCreation.add(i.chunkId);for(const n of this._sendStates.values())n.handledChunks.add(i.chunkId),yield new Be(n.subscription,null,e,!1,i.queryInfo);for(const n of this._sendStates.values()){const a=i.getTileReader(n.subscription.tile);yield new Be(n.subscription,a,r,!1,i.queryInfo)}for(const n of s.removed)this._attributeStore.releaseDisplayIdForObjectId(n)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const s of this._sendStates.values())yield*this._update(s)}}removeChunks(s){for(const e of s)this.handledChunks.delete(e.chunkId),this.handledChunksForAttributeData.delete(e.chunkId),this._cleanupChunkIds(e)}afterUpdateChunks(){for(const s of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(s);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(s){if(this.handledChunksForIdCreation.has(s.chunkId)){const e=s.reader.getCursor();for(;e.next();){const t=e.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(t):this._attributeStore.releaseDisplayIdForObjectId(t)}this.handledChunksForIdCreation.delete(s.chunkId)}}async _updateAttributeData(){for(const s of this._source.chunks()){const{chunkId:e,reader:t}=s;if(!this.handledChunksForIdCreation.has(e)){this.handledChunksForIdCreation.add(e);const r=t.getCursor();for(;r.next();){const i=this._attributeStore.createDisplayIdForObjectId(r.getObjectId());r.setDisplayId(i)}}}for(const s of this._source.chunks())if(!this.handledChunksForAttributeData.has(s.chunkId)){this.handledChunksForAttributeData.add(s.chunkId);const e=s.reader.getCursor();for(;e.next();){const t=e.getDisplayId();this._attributeStore.setAttributeData(t,e,this._evalOptions)}}}*_update(s){const{subscription:e,handledChunks:t}=s;for(const r of this._source.chunks()){const{chunkId:i}=r;if(t.has(i))continue;t.add(i);const n=r.getTileReader(e.tile);n&&(yield new _t(s.subscription,n,!1,r.end,r.queryInfo))}}},Si=class{constructor(s,e){this._connection=s,this._source=e,this._version=1,this._registry=new Ir,this._proxy=new fr({fetch:(t,r)=>this._connection.layerView.fetch(t,r),fetchDictionary:(t,r)=>this._connection.layerView.fetchDictionary(t,r)}),this._attributeStore=new yr({isLocal:!1,update:t=>it(this._connection.container.updateAttributeView(t))})}destroy(){this._proxy.destroy(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}getDisplayFeatures(s){return this._strategy?this._strategy.getDisplayFeatures(s):{features:[],aggregates:[]}}getDisplayIds(s){const e={};return this._strategy&&this._strategy.displayMap(s,t=>t,(t,r,i)=>{e[i]=t}),e}getFeatureObjectIdsForAggregate(s){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(s):[]}onSubscribe(s){this._strategy?.onSubscribe(s)}onUnsubscribe(s){this._strategy?.onUnsubscribe(s)}async update(s,e,t,r,i){const n=s.processor,a=le(this._schema?.storage,n.storage),o=le(this._schema?.mesh.properties,n.mesh.properties),d=le(this._schema?.mesh.factory,n.mesh.factory),u=le(this._schema?.mesh.strategy,n.mesh.strategy),h=o||d||u;if(!(a||h)&&!r)return;w("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:Kt(this._schema,n),schema:n}),this._schema=n;const l=P.fromJSON(this._source.service.outSpatialReference),p=new at({fields:this._source.metadata.fieldsIndex,spatialReference:l});if(await this._attributeStore.update(n.storage,p,this._source.metadata,l,e),this._strategy?.invalidateAttributeData(),!r&&!h)return;(u||o)&&await this._updateStrategy(n.mesh.strategy,l,i,n.mesh.properties.timeZone),this._updateSortKey(p,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const g=new Jr(p,this._proxy,t,this._registry);return(d||n.mesh.factory.symbology.type==="dictionary")&&(this._factory=await Hr.create(g,n.mesh.factory)),this._invalidate(),this._version=e,this._connection.container.updateRenderState(this._version)}async applyLocalEdit(s){if(!this._strategy)return;const e=this._strategy.applyLocalEdit(s);for await(const t of e)try{await this._process(t)}catch{}}async updateChunks(){this._strategy?.beforeUpdateChunks(),await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(s){this._strategy?.removeChunks(s),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:s}){if(!this._strategy)return void this._attributeStore.setHighlight(s.map(({objectId:t,highlightFlags:r})=>({objectId:t,highlightFlags:r,displayId:-1})),s);const e=this._strategy.displayMap(s,({objectId:t})=>t,(t,{highlightFlags:r},i)=>({objectId:i,displayId:t,highlightFlags:r}));this._attributeStore.setHighlight(e,s)}async _doUpdateChunks(){if(!this._strategy)return;const s=this._strategy.updateChunks(),e=[],t=new Map;for await(const r of s){let i=t.get(r.id);i==null&&(i=new Kr({concurrency:16,process:a=>this._process(a)}),t.set(r.id,i));const n=i.push(r).catch(a=>et(a));e.push(n)}try{await Promise.all(e)}catch{}w("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),w("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(s,e,t,r){switch(this._strategy?.destroy(),s.type){case"feature":this._strategy=new xi(this._source,this._attributeStore,r);break;case"binning":this._strategy=await yi.create(s,e,this._source,this._attributeStore,r);break;case"cluster":this._strategy=await Ii.create(this._connection,s,e,this._source,this._attributeStore,r)}for(const i of t)this._strategy.onSubscribe(i)}async _updateSortKey(s,e){if(this._sortInfo=Zt(this._sortInfo?.computed),e!=null){const t=e.byRenderer?null:await s.createComputedField(e);this._sortInfo={...e,computed:t}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(s){const e=s.subscription;if(w("esri-2d-update-debug")){const o=e.tile;console.debug(`Version[${this._version}] Tile[${o.key.id}, end=${s.end}] Processor._process`)}await this._fetchResources(s),Z(e.signal);const t=await this._write(s,e.tile.createArcadeEvaluationOptions(this._schema?.mesh.properties.timeZone)),r=e.tile.tileInfoView.getLODInfoAt(e.tile.key),{message:i,transferList:n}=t.serialize(r),a={objectIdMap:null,inner:s.createMessage(i,this._version,this._attributeStore.epoch)};if(this._schema?.mesh.properties.returnMeshObjectId){a.objectIdMap={};const o=s.reader?.getCursor();if(o)for(;o.next();)a.objectIdMap[o.getDisplayId()]=o.getObjectId()}if(Z(e.signal),await this._connection.container.onMessage(a,{signal:e.signal,transferList:n}),this._attributeStore.sendUpdates(),w("esri-2d-update-debug")){const o=e.tile;console.debug(`Version[${this._version}] Tile[${o.key.id}, end=${s.end}] Processor._process.await`)}}async _fetchResources(s){await this._fetchMatcherResources(s),await this._fetchWriterResources(s)}async _fetchMatcherResources(s){if(s.reader)return this._factory.enqueueMatcherRequests(this._proxy,s.reader)}async _fetchWriterResources(s){if(!s.reader)return;const e=s.reader.getCursor(),t=s.subscription.tile.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;e.next();)this._factory.enqueueWriterRequests(this._proxy,e,t);await this._proxy.fetchEnqueuedResources()}async _write(s,e){const t=s.subscription.tile,r=s.reader?.getCursor(),i=r?.getSize()??0,n=t.tileInfoView.tileInfo.isWrappable,a=t.tileInfoView.tileInfo.spatialReference.isWGS84,o=new Nr(t.key,this._strategy.enablePixelBuffering,n,a,i);if(!r)return o;const d=t.createArcadeEvaluationOptions(this._schema.mesh.properties.timeZone);for(;r.next();){const u=this._getSortKeyValue(r,e);o.entityStart(r.getDisplayId(),u),this._factory.write(o,this._proxy,r,d,t.level),o.entityEnd()}return o}_getSortKeyValue(s,e){if(!this._sortInfo)return 0;const{computed:t,order:r,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(s,e):t?.read(s,e);return n==null||isNaN(n)?0:n*(r==="asc"?-1:1)}},Fi=class Rs{static from(e){let t=0,r=0,i=0;return e.forEach(n=>{const a=n._readGeometry();a&&(r+=a.isPoint?1:a.lengths.reduce((o,d)=>o+d,0),i+=a.isPoint?1:a.lengths.length,t+=1)}),new Rs(t,r,i)}constructor(e,t,r){this.featureCount=e,this.vertexCount=t,this.ringCount=r}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const Le=4;function ki(s,e,t){const r=s.orderByFields??t.objectIdField+" ASC",i=s.source,n={returnCentroid:!(i!==null&&typeof i=="object"&&"path"in i&&Pr(i.path))&&t.serviceGeometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:P.fromJSON(s.outSpatialReference),orderByFields:s.type==="memory"?[]:[r],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields,multipatchOption:t.serviceGeometryType==="esriGeometryMultiPatch"?"xyFootprint":null};if(e.type==="feature"){const{gdbVersion:a,historicMoment:o,timeExtent:d}=e.mutable.dataFilter;return{...n,gdbVersion:a,historicMoment:o?new Date(o):null,timeExtent:d?jr.fromJSON(d):null,outFields:e.mutable.availableFields}}return n}let Ci=class As{static fromSchema(e,t,r){const i=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[];return new As(ki(e,t,r),i,r.subtypeField,t.mutable.dataFilter.customParameters,r.geometryType,e.queryMetadata)}constructor(e,t,r,i,n,a){this._queryParams=e,this._queryScaleRanges=t,this._subtypeField=r,this._customParameters=i,this._geometryType=n,this._queryMetadata=a}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?Le:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){if(!t.getSize())return null;const r=e.clone();if(this._queryParams.outFields[0]==="*"){if((r.outFields??[])[0]==="*")return null;r.outFields=this._queryParams.outFields}else{const i=new Set(this._queryParams.outFields),n=[];for(const a of i)t.hasField(a)||n.push(a);if(n.length===0)return null;r.outFields=n}return r.returnGeometry=!1,r.returnCentroid=!1,r.quantizationParameters=null,r.cacheHint=!0,{inner:r,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new os({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const r=this.createQuery(t),i=r.inner;if(this._queryScaleRanges.length){const n=this._queryScaleRanges.filter(a=>(!a.minScale||a.minScale>=e.maxScale)&&(!a.maxScale||a.maxScale<=e.minScale)).map(a=>a.subtypeCode);if(n.length){const a=`${this._subtypeField} IN (${n})`;i.where=Js(i.where,a)}}if(i.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),i.resultType="tile",i.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(i.maxAllowableOffset=e.resolution*w("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(i.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(i.maxAllowableOffset*=w("feature-polyline-generalization-factor"))),i.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,i.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(i.maxRecordCountFactor=Le),w("esri-tiles-debug")){const n=e.id.replaceAll("/",".");r.customParameters=r.customParameters?{...r.customParameters,tileId:n}:{tileId:n}}return r}createPagedTileQuery(e,t){const r=this.pageSize;return this.createTileQuery(e,{start:r*t,num:r,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:Le})}};const Ti=2500;let ye=class extends Ht{constructor(s){super(),this._connection=s,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([Ne(()=>this._strategy?.connectionStatus??"disconnected",e=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:e})},{initial:!0}),Ne(()=>this._strategy?.errorString||null,e=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:e}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(s){this._strategy==null&&this._resetUpdateInfo(performance.now());const e="event-handles";this.removeHandles(e),s!=null&&(this.addHandles([s.events.on("data-received",t=>this._onFeature(t)),s.events.on("message-received",t=>this._onWebSocketMessage(t)),s.events.on("features-updated",t=>this._onUpdate(t)),s.events.on("tick",()=>this._onTick())],e),this._queuedCommands.forEach(t=>t(s)),this._queuedCommands=[]),this._strategy=s}updateCustomParameters(s){s!=null&&this._callOrEnqueue(e=>e.updateCustomParameters(s))}sendMessageToSocket(s){this._callOrEnqueue(e=>e.sendMessageToSocket(s))}sendMessageToClient(s){this._callOrEnqueue(e=>e.sendMessageToClient(s))}enableEvent(s,e){e?this._enabledEventTypes.add(s):this._enabledEventTypes.delete(s)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(s){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:s})}_onFeature(s){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:s.attributes,centroid:s.centroid,geometry:s.geometry}})}_onUpdate(s){this._updateInfo.client+=s}_onTick(){const s=performance.now(),e=s-this._lastTime;if(e>Ti){const t=Math.round(this._updateInfo.client/(e/1e3)),r=Math.round(this._updateInfo.websocket/(e/1e3));this._resetUpdateInfo(s),this._layerView.emitEvent({name:"update-rate",event:{client:t,websocket:r}})}}_resetUpdateInfo(s){this._lastTime=s,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(s){this._strategy!=null?s(this._strategy):this._queuedCommands.push(s)}};V([ge()],ye.prototype,"_strategy",void 0),ye=V([Xt("esri.views.2d.layers.features.sources.StreamMessenger")],ye);let pt=class{constructor(s){this._store=s,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(s){throw new Error("InternalError: LoadStrategy does not support query info")}async queryOverride(s){throw new Error("InternalError: LoadStrategy does not support fetching")}async queryByObjectId(s){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(s){throw new Error("InternalError: LoadStrategy does not support loading blobs")}};const ze=268435455;let Mi=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function qi(s,e,t=!1){const r=s.asUnsafe(),i=r.pos(),n=new Mi;let a=0,o=0;const d=1,u=2,h=4,l=3;let p=null,g=null,_=null,f=!1;const y=[];for(;r.next();)switch(r.tag()){case 1:p=r.getString();break;case 3:g=r.getString();break;case 12:_=r.processMessage(zr);break;case 9:if(n.exceededTransferLimit=r.getBool(),n.exceededTransferLimit){n.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),n.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let b=0;b<n.centroid.length;b++)n.centroid[b]=ze}break;case 13:{const b=r.processMessage(Lr);b.index=a++,y.push(b);break}case 15:{const b=r.getLength(),F=r.pos()+b;if(!n.exceededTransferLimit){const x=n.offsets.geometry,S=n.centroid;x.push(0),S.push(ze),S.push(ze)}!f&&n.exceededTransferLimit&&(f=!0,n.offsets.attributes=t?new Float64Array(8e3*a):new Uint32Array(8e3*a));let C=o*a;for(;r.pos()<F&&r.next();)switch(r.tag()){case d:{f?n.offsets.attributes[C++]=r.pos():n.offsets.attributes.push(r.pos());const x=r.getLength();r.skipLen(x);break}case u:if(e){const x=r.getLength(),S=r.pos()+x;for(;r.pos()<S&&r.next();)switch(r.tag()){case l:{r.getUInt32();const k=r.getSInt64(),E=r.getSInt64();n.centroid[2*o]=k,n.centroid[2*o+1]=E;break}default:r.skip()}}else{n.offsets.geometry[o]=r.pos();const x=r.getLength();n.vertexCount+=x,r.skipLen(x)}break;case h:{const x=r.getLength(),S=r.pos()+x;for(;r.pos()<S&&r.next();)switch(r.tag()){case l:{r.getUInt32();const k=r.getSInt64(),E=r.getSInt64();n.centroid[2*o]=k,n.centroid[2*o+1]=E;break}default:r.skip()}break}default:r.skip()}o++,n.hasFeatures=!0;break}default:r.skip()}const v=p||g;if(!v)throw new W("FeatureSet has no objectId or globalId field name");return n.fields=new de(y),n.featureCount=o,n.fieldCount=a,n.objectIdFieldIndex=n.fields.get(v)?.index,n.transform=_,n.displayIds=new Uint32Array(n.featureCount),n.groupIds=new Uint16Array(n.featureCount),r.move(i),n}const Ei=!0,Et=268435455,Ot=128,Rt=128e3,$={small:{delta:new Int32Array(Ot),decoded:new Int32Array(Ot)},large:{delta:new Int32Array(Rt),decoded:new Int32Array(Rt)}};function At(s){return s<=$.small.delta.length?$.small:(s<=$.large.delta.length||($.large.delta=new Int32Array(Math.round(1.25*s)),$.large.decoded=new Int32Array(Math.round(1.25*s))),$.large)}function Oi(s){try{const e=new Dr(new Uint8Array(s),new DataView(s));for(;e.next();){if(e.tag()===2)return Ri(e.getMessage());e.skip()}}catch(e){const t=new W("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});cr.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Ri(s){for(;s.next();){if(s.tag()===1)return s.getMessage();s.skip()}return null}function Ai(s){const e=s.getLength(),t=s.pos()+e;for(;s.pos()<t&&s.next();)switch(s.tag()){case 1:return s.getString();case 2:return s.getFloat();case 3:return s.getDouble();case 4:return s.getSInt32();case 5:return s.getUInt32();case 6:return s.getInt64();case 7:return s.getUInt64();case 8:return s.getSInt64();case 9:return s.getBool();default:return s.skip(),null}return null}function Pi(s,e,t,r,i,n){return .5*Math.abs(s*r+t*n+i*e-s*n-t*e-i*r)}function Ue(s,e,t,r,i){return s?e*i-r*t===0&&e*r+t*i>0:!1}let ji=class Ke extends Fe{static fromBuffer(e,t,r=!1){const i=t.geometryType,n=Oi(e),a=qi(n,i==="esriGeometryPoint",r);return new Ke(n,a,t)}constructor(e,t,r){super(r),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=r.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=r.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new Ke(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===Et?null:new M([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===Et)return null;const r=this._header.centroid[2*this._featureIndex],i=this._header.centroid[2*this._featureIndex+1];t=new M([],[r,i])}else{const r=this._header.offsets.geometry[this._featureIndex],i=this._reader;if(r===0)return null;i.move(r);try{t=e?this._parseGeometryForDisplay(i):this._parseGeometry(i)}catch{return null}}return t?.coords.length===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const r=this._header.fields.get(e);if(r==null)return;const i=this._readAttributeAtIndex(r.index),n=this._header.fields.isDateField(r.name);return t?i==null?i:n?new Date(i):i:i}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new br(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const r=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],i=this._reader;i.move(r);const n=Ai(i);return t.set(this._featureIndex,n),n}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const r=At(t.coords.length).decoded,i=t.clone(r),n=i.coords;let a=0;for(const o of i.lengths){for(let d=1;d<o;d++){const u=2*(a+d),h=2*(a+d-1);n[u]+=n[h],n[u+1]+=n[h+1]}a+=o}return this._cache.unquantGeometry=i,i}return this._cache.unquantGeometry}_parseGeometry(e){const t=e.asUnsafe(),r=t.getLength(),i=t.pos()+r,n=[],a=[];for(;t.pos()<i&&t.next();)switch(t.tag()){case 2:{const o=t.getUInt32(),d=t.pos()+o;for(;t.pos()<d;)a.push(t.getUInt32());break}case 3:{const o=t.getUInt32(),d=t.pos()+o;for(n.push(t.getSInt64()),n.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();t.pos()<d;)n.push(t.getSInt64()),n.push(t.getSInt64()),this.hasZ&&t.getSInt64(),this.hasM&&t.getSInt64();break}default:t.skip()}return new M(a,n)}_parseGeometryForDisplay(e){const t=e.asUnsafe(),r=t.getLength(),i=t.pos()+r,n=[],a=[];let o=0,d=0,u=null,h=0;const l=this.geometryType==="esriGeometryPolygon",p=this.geometryType==="esriGeometryPolyline",g=l||p;for(;t.pos()<i&&t.next();)switch(t.tag()){case 2:{const _=t.getUInt32(),f=t.pos()+_;for(;t.pos()<f;){const y=t.getUInt32();n.push(y),o+=y}u=At(2*o).delta;break}case 3:{t.getUInt32();const _=2+(this.hasZ?1:0)+(this.hasM?1:0);or(u);for(const f of n)if(d+_*f>u.length)for(let y=0;y<f;y++)t.getSInt32(),t.getSInt32(),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();else if(l&&Ei){const y=this.getAreaSimplificationThreshold(f,this._header.vertexCount);let v=2,b=1;const F=!1;let C=t.getSInt32(),x=t.getSInt32();u[d++]=C,u[d++]=x,this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();let S=t.getSInt32(),k=t.getSInt32();for(this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();v<f;){let E=t.getSInt32(),L=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32();const R=C+S,N=x+k;Pi(C,x,R,N,R+E,N+L)>=y?(h+=-.5*(R-C)*(N+x),b>1&&Ue(g,u[d-2],u[d-1],S,k)?(u[d-2]+=S,u[d-1]+=k):(u[d++]=S,u[d++]=k,b++),C=R,x=N):(E+=S,L+=k),S=E,k=L,v++}b<3||F?d-=2*b:(h+=-.5*(C+S-C)*(x+k+x),Ue(g,u[d-2],u[d-1],S,k)?(u[d-2]+=S,u[d-1]+=k,a.push(b)):(u[d++]=S,u[d++]=k,a.push(++b)))}else{let y=0,v=t.getSInt32(),b=t.getSInt32();this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),u[d++]=v,u[d++]=b,y+=1;for(let F=1;F<f;F++){const C=t.getSInt32(),x=t.getSInt32(),S=v+C,k=b+x;h+=-.5*(S-v)*(k+b),this.hasZ&&t.getSInt32(),this.hasM&&t.getSInt32(),F>2&&Ue(g,u[d-2],u[d-1],C,x)?(u[d-2]+=C,u[d-1]+=x):(u[d++]=C,u[d++]=x,y+=1),v=S,b=k}a.push(y)}break}default:t.skip()}return this._cache.area=h,a.length?new M(a,u):u!=null?this._createQuantizedExtrudedGeometry(u[0],u[1]):null}},qe=class{constructor(s,e){this.service=s,this._metadata=e}destroy(){}};function Di(s,e){switch(s.type){case"memory":return new zi(s,e);case"ogc":return new Gi(s,e);case"feature-service":return s.queryMetadata.supportsFormatPBF&&w("featurelayer-pbf")?new Ui(s,e):new Wi(s,e)}}async function Li(s){const e=new lr;return await e.open(s,{}),e}let zi=class extends qe{constructor(s,e){super(s,e),this._portsOpen=Li(s.source).then(t=>this.client=t)}destroy(){this.client.close(),this.client=null}async executeQuery(s,e){await this._portsOpen;const t=await this.client.invoke("queryFeatures",s.toJSON(),e);return q.fromFeatureSet(t,this._metadata)}},Ui=class extends qe{async executeQuery(s,e){const{data:t}=await Ar(this.service.source,s,e),r=!s.quantizationParameters;return ji.fromBuffer(t,this._metadata,r)}},Wi=class extends qe{async executeQuery(s,e){const{source:t,queryMetadata:r}=this.service;if(s.quantizationParameters!=null&&!r.supportsQuantization){const n=s.clone(),a=ds(n.quantizationParameters);n.quantizationParameters=null;const{data:o}=await It(t,n,this._metadata.spatialReference,e),d=ss(o,this._metadata.objectIdField);return is(a,d),q.fromOptimizedFeatureSet(d,this._metadata)}const{data:i}=await It(t,s,this._metadata.spatialReference,e);return this._metadata.geometryType==="esriGeometryPoint"&&(i.features=i.features?.filter(n=>{if(n.geometry!=null){const a=n.geometry;return Number.isFinite(a.x)&&Number.isFinite(a.y)}return!0})),q.fromFeatureSet(i,this._metadata)}},Gi=class extends qe{async executeQuery(s,e){if(s.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const r=s.clone(),i=ds(r.quantizationParameters);r.quantizationParameters=null;const n=await vt(this.service.source,s,e);return is(i,n),q.fromOptimizedFeatureSet(n,this._metadata)}const t=await vt(this.service.source,s,e);return q.fromOptimizedFeatureSet(t,this._metadata)}},Ps=class extends pt{constructor(s,e,t,r,i){super(t),this._serviceInfo=s,this._queryInfo=e,this._metadata=r,this._connection=i,this._queue=new ts({concurrency:16,process:async n=>{const a={signal:n.options?.signal,query:n.query.customParameters};return this._adapter.executeQuery(n.query.inner,a)}}),this._adapter=Di(s,r)}unsafeSetQueryHistoricMoment(s){this._queryInfo.updateHistoricMoment(s)}async updateFields(s){this._queryInfo.updateFields(s);const e=Array.from(this._store.chunks()).map(async r=>{const i=os.fromJSON(r.queryInfo.queryJSON);if(i)try{return await this._tryUpdateFields(r.reader,i),null}catch(n){return n}}),t=(await Promise.all(e)).filter(r=>r);if(t.length)throw new W("featurelayer-query","Encountered errors when downloading fields",{errors:t})}async queryByObjectId(s){if(s.length===0)return q.empty(this._metadata);const e=this._queryInfo.createQuery({objectIds:s});return this._fetch(e)}async _fetch(s,e){const t=await this._enqueue(s,e);return await this._tryUpdateFields(t,s.inner),t}async _tryUpdateFields(s,e){const t=this._queryInfo.createPatchFieldsQuery(e,s);if(!t)return;const r=await this._enqueue(t,this._options);s.joinAttributes(r)}async _enqueue(s,e){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:s,options:e}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},js=class extends Ps{constructor(){super(...arguments),this._chunksById=new Map}unload(s){this._removeChunks(s.tile)}_addChunk(s){const e=s.tile.id;this._chunksById.has(e)||this._chunksById.set(e,[]);const t=s.size();(t||s.first||s.end)&&(w("esri-2d-update-debug")&&console.debug(`Chunk[${s.chunkId}] ATileLoadStrategy.addChunk [count=${t}]`),this._chunksById.get(e).push(s),this._store.insert(s))}_removeChunks(s){const e=this._chunksById.get(s.key.id)??[];for(const t of e)w("esri-2d-update-debug")&&console.debug(`Tile[${s.key.id}] Chunk[${t.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(t);this._chunksById.delete(s.key.id)}},Pt=class extends ue{constructor(s,e,t,r,i,n){super(),this._reader=s,this._queryJSON=e,this._tile=t,this._sourceTile=r,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(s){return this._tile.key.id===s.key.id?this.reader:null}},Ni=class{constructor(s,e){this.subscription=s,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=Se([we(s.signal,()=>this._controller.abort()),we(e,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(s){return this._tileIdToResult.get(s)}set(s,e){this._tileIdToResult.set(s,e)}get options(){return{signal:this._controller.signal}}},$i=class extends js{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const s of this._loadStates.values())s.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(s){this._loadStates.has(s.key.id)||this._loadStates.set(s.key.id,new Ni(s,this._options));const e=this._loadStates.get(s.key.id);let t;try{for await(const i of this._fetchChunkInfos(e,s.tile,0)){const{queryJSON:n,reader:a,sourceTile:o,sourceTileDepth:d,tile:u}=i,h=new Pt(a,n,u,o,d,!1);Z(e.options),this._addChunk(h)}}catch(i){t=i}const r=new Pt(q.empty(this._metadata),null,s.tile,null,-1,!0);if(this._addChunk(r),t)throw t}unload(s){super.unload(s),this._loadStates.get(s.key.id)?.destroy(),this._loadStates.delete(s.key.id)}async*_fetchChunkInfos(s,e,t){let r=s.get(e.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(s,e,t),s.set(e.id,r)),r.reader.exceededTransferLimit&&t<w("featurelayer-query-max-depth"))for(const n of e.createChildTiles())yield*this._fetchChunkInfos(s,n,t+1);else i||(yield r)}async _fetchChunkInfo(s,e,t){const r=s.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(e,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,s.options),queryJSON:i.inner.toJSON(),tile:s.subscription.tile,sourceTile:e,sourceTileDepth:t}}},jt=class extends ue{constructor(s,e,t,r,i){super(),this._reader=s,this._queryJSON=e,this._tile=t,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(s){return this._tile.key.id===s.key.id?this.reader:null}},Bi=class{constructor(s,e){this.subscription=s,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=Se([we(s.signal,()=>this._controller.abort()),we(e,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let s=-1;for(const e of this._pages.values())s=Math.max(s,e);return s+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(s,e){this._pages.add(s),this._done=this._done||e}},Vi=class extends js{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const s of this._loadStates.values())s.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(s){this._loadStates.has(s.key.id)||this._loadStates.set(s.key.id,new Bi(s,this._options));const e=this._loadStates.get(s.key.id);let t;try{await this._fetchPages(e)}catch(i){t=i}const r=new jt(q.empty(this._metadata),null,s.tile,-1,!0);if(Ks(e.options)||this._addChunk(r),t)throw t}unload(s){super.unload(s),this._loadStates.get(s.key.id)?.destroy(),this._loadStates.delete(s.key.id)}async _fetchPages(s){let e=0,t=s.pageStart,r=1;for(;e<20&&!s.done;){const i=[];for(let a=0;a<r;a++)i.push(this._fetchChunk(s,t++));const n=await Promise.all(i);for(const a of n)(a.size()!==0||a.first)&&(s.add(a.page,!a.reader.exceededTransferLimit),Z(s.options),this._addChunk(a));e++,r=Math.min(r+1,4)}}async _fetchChunk(s,e){const t=s.subscription.tile,r=this._queryInfo.createPagedTileQuery(t,e),i=await this._fetch(r,s.options);return new jt(i,r.inner.toJSON(),t,e,!1)}},c;const A=new Array(128).fill(void 0);function I(s){return A[s]}A.push(void 0,null,!0,!1);let ie=A.length;function Yi(s){s<132||(A[s]=ie,ie=s)}function D(s){const e=I(s);return Yi(s),e}function m(s){ie===A.length&&A.push(A.length+1);const e=ie;return ie=A[e],A[e]=s,e}const Ds=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&Ds.decode();let se=null;function me(){return se!==null&&se.byteLength!==0||(se=new Uint8Array(c.memory.buffer)),se}function X(s,e){return s>>>=0,Ds.decode(me().subarray(s,s+e))}const Dt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>{c.__wbindgen_export_0.get(s.dtor)(s.a,s.b)});function Xi(s,e,t,r){const i={a:s,b:e,cnt:1,dtor:t},n=(...a)=>{i.cnt++;const o=i.a;i.a=0;try{return r(o,i.b,...a)}finally{--i.cnt==0?(c.__wbindgen_export_0.get(i.dtor)(o,i.b),Dt.unregister(i)):i.a=o}};return n.original=i,Dt.register(n,i,i),n}function Qi(s,e,t){c._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7be72b1871260ae2(s,e,m(t))}function Zi(){c.enableTracing()}let O=0;const be=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},Hi=typeof be.encodeInto=="function"?function(s,e){return be.encodeInto(s,e)}:function(s,e){const t=be.encode(s);return e.set(t),{read:s.length,written:t.length}};function oe(s,e,t){if(t===void 0){const o=be.encode(s),d=e(o.length,1)>>>0;return me().subarray(d,d+o.length).set(o),O=o.length,d}let r=s.length,i=e(r,1)>>>0;const n=me();let a=0;for(;a<r;a++){const o=s.charCodeAt(a);if(o>127)break;n[i+a]=o}if(a!==r){a!==0&&(s=s.slice(a)),i=t(i,r,r=a+3*s.length,1)>>>0;const o=me().subarray(i+a,i+r);a+=Hi(s,o).written,i=t(i,r,a,1)>>>0}return O=a,i}let U=null;function H(){return(U===null||U.buffer.detached===!0||U.buffer.detached===void 0&&U.buffer!==c.memory.buffer)&&(U=new DataView(c.memory.buffer)),U}function j(s,e){try{return s.apply(this,e)}catch(t){c.__wbindgen_exn_store(m(t))}}function Ji(s,e,t,r){c.wasm_bindgen__convert__closures__invoke2_mut__h35729c14da098d24(s,e,m(t),m(r))}let re=null;function Ki(){return re!==null&&re.byteLength!==0||(re=new Uint16Array(c.memory.buffer)),re}function Lt(s,e){const t=e(2*s.length,2)>>>0;return Ki().set(s,t/2),O=s.length,t}function Ls(s,e,t){const r=oe(s,c.__wbindgen_malloc,c.__wbindgen_realloc),i=O;return D(c.readMetadata(r,i,m(e),m(t)))}function zt(s,e){if(!(s instanceof e))throw new Error(`expected instance of ${e.name}`);return s.ptr}function en(s,e,t,r,i){const n=oe(s,c.__wbindgen_malloc,c.__wbindgen_realloc),a=O;zt(r,ee);var o=r.__destroy_into_raw();zt(i,J);var d=i.__destroy_into_raw();return D(c.readFile(n,a,m(e),m(t),o,d))}function We(s){return s==null}const Ut=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>c.__wbg_fieldmetadata_free(s>>>0,1));class Ee{static __wrap(e){e>>>=0;const t=Object.create(Ee.prototype);return t.__wbg_ptr=e,Ut.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Ut.unregister(this),e}free(){const e=this.__destroy_into_raw();c.__wbg_fieldmetadata_free(e,0)}get name(){let e,t;try{const n=c.__wbindgen_add_to_stack_pointer(-16);c.fieldmetadata_name(n,this.__wbg_ptr);var r=H().getInt32(n+0,!0),i=H().getInt32(n+4,!0);return e=r,t=i,X(r,i)}finally{c.__wbindgen_add_to_stack_pointer(16),c.__wbindgen_free(e,t,1)}}get index(){return c.fieldmetadata_index(this.__wbg_ptr)}get type(){return["esriFieldTypeSmallInteger","esriFieldTypeInteger","esriFieldTypeBigInteger","esriFieldTypeSingle","esriFieldTypeDouble","esriFieldTypeLong","esriFieldTypeString","esriFieldTypeDate","esriFieldTypeOID","esriFieldTypeGeometry","esriFieldTypeBlob","esriFieldTypeRaster","esriFieldTypeGUID","esriFieldTypeGlobalID","esriFieldTypeXML","esriFieldTypeDateOnly","esriFieldTypeTimeOnly","esriFieldTypeTimestampOffset"][c.fieldmetadata_esri_type(this.__wbg_ptr)]}}const Wt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>c.__wbg_filemetadata_free(s>>>0,1));class ee{static __wrap(e){e>>>=0;const t=Object.create(ee.prototype);return t.__wbg_ptr=e,Wt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Wt.unregister(this),e}free(){const e=this.__destroy_into_raw();c.__wbg_filemetadata_free(e,0)}version(){return c.filemetadata_version(this.__wbg_ptr)}numRows(){return c.filemetadata_numRows(this.__wbg_ptr)>>>0}numFields(){return c.filemetadata_numFields(this.__wbg_ptr)>>>0}keyValueMetadata(e){try{const i=c.__wbindgen_add_to_stack_pointer(-16),n=oe(e,c.__wbindgen_malloc,c.__wbindgen_realloc),a=O;c.filemetadata_keyValueMetadata(i,this.__wbg_ptr,n,a);var t=H().getInt32(i+0,!0),r=H().getInt32(i+4,!0);let o;return t!==0&&(o=X(t,r).slice(),c.__wbindgen_free(t,1*r,1)),o}finally{c.__wbindgen_add_to_stack_pointer(16)}}getFieldIndex(e){const t=oe(e,c.__wbindgen_malloc,c.__wbindgen_realloc),r=O,i=c.filemetadata_getFieldIndex(this.__wbg_ptr,t,r);return i===16777215?void 0:i}getFieldByIndex(e){const t=c.filemetadata_getFieldByIndex(this.__wbg_ptr,e);return t===0?void 0:Ee.__wrap(t)}}const Gt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>c.__wbg_geometryinfodescriptor_free(s>>>0,1));class J{static __wrap(e){e>>>=0;const t=Object.create(J.prototype);return t.__wbg_ptr=e,Gt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Gt.unregister(this),e}free(){const e=this.__destroy_into_raw();c.__wbg_geometryinfodescriptor_free(e,0)}get wkbIndex(){const e=c.__wbg_get_geometryinfodescriptor_wkbIndex(this.__wbg_ptr);return e===16777215?void 0:e}set wkbIndex(e){c.__wbg_set_geometryinfodescriptor_wkbIndex(this.__wbg_ptr,We(e)?16777215:e)}get lngIndex(){const e=c.__wbg_get_geometryinfodescriptor_lngIndex(this.__wbg_ptr);return e===16777215?void 0:e}set lngIndex(e){c.__wbg_set_geometryinfodescriptor_lngIndex(this.__wbg_ptr,We(e)?16777215:e)}get latIndex(){const e=c.__wbg_get_geometryinfodescriptor_latIndex(this.__wbg_ptr);return e===16777215?void 0:e}set latIndex(e){c.__wbg_set_geometryinfodescriptor_latIndex(this.__wbg_ptr,We(e)?16777215:e)}static new(){const e=c.geometryinfodescriptor_new();return J.__wrap(e)}}const Nt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>c.__wbg_parquetchunk_free(s>>>0,1));class Oe{static __wrap(e){e>>>=0;const t=Object.create(Oe.prototype);return t.__wbg_ptr=e,Nt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Nt.unregister(this),e}free(){const e=this.__destroy_into_raw();c.__wbg_parquetchunk_free(e,0)}size(){return c.parquetchunk_size(this.__wbg_ptr)>>>0}hasField(e){return c.parquetchunk_hasField(this.__wbg_ptr,e)!==0}readX(e){return c.parquetchunk_readX(this.__wbg_ptr,e)}readY(e){return c.parquetchunk_readY(this.__wbg_ptr,e)}readAttributes(e){return D(c.parquetchunk_readAttributes(this.__wbg_ptr,e))}readAttribute(e,t){return D(c.parquetchunk_readAttribute(this.__wbg_ptr,e,t))}}const $t=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>c.__wbg_parquetfile_free(s>>>0,1));let zs=class Us{static __wrap(e){e>>>=0;const t=Object.create(Us.prototype);return t.__wbg_ptr=e,$t.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,$t.unregister(this),e}free(){const e=this.__destroy_into_raw();c.__wbg_parquetfile_free(e,0)}metadata(){const e=c.parquetfile_metadata(this.__wbg_ptr);return ee.__wrap(e)}readChunksWithCallback(e,t){const r=Lt(e,c.__wbindgen_malloc),i=O;return D(c.parquetfile_readChunksWithCallback(this.__wbg_ptr,r,i,m(t)))}updateChunks(e){const t=Lt(e,c.__wbindgen_malloc),r=O;return D(c.parquetfile_updateChunks(this.__wbg_ptr,t,r))}};const Bt=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(s=>c.__wbg_rangeproviderjs_free(s>>>0,1));class ne{static __wrap(e){e>>>=0;const t=Object.create(ne.prototype);return t.__wbg_ptr=e,Bt.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Bt.unregister(this),e}free(){const e=this.__destroy_into_raw();c.__wbg_rangeproviderjs_free(e,0)}static new(e,t){const r=c.rangeproviderjs_new(m(e),m(t));return ne.__wrap(r)}static withFetch(){const e=c.rangeproviderjs_withFetch();return ne.__wrap(e)}}async function tn(s,e){if(typeof Response=="function"&&s instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(s,e)}catch(r){if(s.headers.get("Content-Type")=="application/wasm")throw r;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r)}const t=await s.arrayBuffer();return await WebAssembly.instantiate(t,e)}{const t=await WebAssembly.instantiate(s,e);return t instanceof WebAssembly.Instance?{instance:t,module:s}:t}}function Ws(){const s={wbg:{}};return s.wbg.__wbg_new_abda76e883ba8a5f=function(){return m(new Error)},s.wbg.__wbg_stack_658279fe44541cf6=function(e,t){const r=oe(I(t).stack,c.__wbindgen_malloc,c.__wbindgen_realloc),i=O;H().setInt32(e+4,i,!0),H().setInt32(e+0,r,!0)},s.wbg.__wbg_error_f851667af71bcfc6=function(e,t){let r,i;try{r=e,i=t,console.error(X(e,t))}finally{c.__wbindgen_free(r,i,1)}},s.wbg.__wbindgen_object_drop_ref=function(e){D(e)},s.wbg.__wbindgen_is_function=function(e){return typeof I(e)=="function"},s.wbg.__wbg_self_3093d5d1f7bcb682=function(){return j(function(){return m(self.self)},arguments)},s.wbg.__wbg_window_3bcfc4d31bc012f8=function(){return j(function(){return m(window.window)},arguments)},s.wbg.__wbg_globalThis_86b222e13bdf32ed=function(){return j(function(){return m(globalThis.globalThis)},arguments)},s.wbg.__wbg_global_e5a3fe56f8be9485=function(){return j(function(){return m(global.global)},arguments)},s.wbg.__wbindgen_is_undefined=function(e){return I(e)===void 0},s.wbg.__wbg_newnoargs_76313bd6ff35d0f2=function(e,t){return m(new Function(X(e,t)))},s.wbg.__wbindgen_object_clone_ref=function(e){return m(I(e))},s.wbg.__wbindgen_number_new=function(e){return m(e)},s.wbg.__wbg_new_525245e2b9901204=function(){return m(new Object)},s.wbg.__wbindgen_string_new=function(e,t){return m(X(e,t))},s.wbg.__wbg_call_1084a111329e68ce=function(){return j(function(e,t){return m(I(e).call(I(t)))},arguments)},s.wbg.__wbg_call_89af060b4e1523f2=function(){return j(function(e,t,r){return m(I(e).call(I(t),I(r)))},arguments)},s.wbg.__wbg_call_7de908392845a9a5=function(){return j(function(e,t,r,i,n){return m(I(e).call(I(t),I(r),I(i),I(n)))},arguments)},s.wbg.__wbg_valueOf_563b3487b1b116aa=function(e){return I(e).valueOf()},s.wbg.__wbg_set_eacc7d73fefaafdf=function(){return j(function(e,t,r){return Reflect.set(I(e),I(t),I(r))},arguments)},s.wbg.__wbg_buffer_b7b08af79b0b0974=function(e){return m(I(e).buffer)},s.wbg.__wbg_new_b85e72ed1bfd57f9=function(e,t){try{var r={a:e,b:t},i=(n,a)=>{const o=r.a;r.a=0;try{return Ji(o,r.b,n,a)}finally{r.a=o}};return m(new Promise(i))}finally{r.a=r.b=0}},s.wbg.__wbg_resolve_570458cb99d56a43=function(e){return m(Promise.resolve(I(e)))},s.wbg.__wbg_then_95e6edc0f89b73b1=function(e,t){return m(I(e).then(I(t)))},s.wbg.__wbg_then_876bb3c633745cc6=function(e,t,r){return m(I(e).then(I(t),I(r)))},s.wbg.__wbg_new_ea1883e1e5e86686=function(e){return m(new Uint8Array(I(e)))},s.wbg.__wbg_length_8339fcf5d8ecd12e=function(e){return I(e).length},s.wbg.__wbg_set_d1e79e2388520f18=function(e,t,r){I(e).set(I(t),r>>>0)},s.wbg.__wbindgen_throw=function(e,t){throw new Error(X(e,t))},s.wbg.__wbindgen_memory=function(){return m(c.memory)},s.wbg.__wbg_queueMicrotask_48421b3cc9052b68=function(e){return m(I(e).queueMicrotask)},s.wbg.__wbindgen_cb_drop=function(e){const t=D(e).original;return t.cnt--==1?(t.a=0,!0):!1},s.wbg.__wbg_queueMicrotask_12a30234db4045d3=function(e){queueMicrotask(I(e))},s.wbg.__wbg_parquetchunk_new=function(e){return m(Oe.__wrap(e))},s.wbg.__wbindgen_bigint_from_i64=function(e){return m(e)},s.wbg.__wbg_parquetfile_new=function(e){return m(zs.__wrap(e))},s.wbg.__wbg_filemetadata_new=function(e){return m(ee.__wrap(e))},s.wbg.__wbindgen_closure_wrapper1401=function(e,t,r){return m(Xi(e,t,74,Qi))},s}function Gs(s,e){return c=s.exports,Ns.__wbindgen_wasm_module=e,U=null,re=null,se=null,c}function sn(s){if(c!==void 0)return c;s!==void 0&&Object.getPrototypeOf(s)===Object.prototype?{module:s}=s:console.warn("using deprecated parameters for `initSync()`; pass a single object instead");const e=Ws();return s instanceof WebAssembly.Module||(s=new WebAssembly.Module(s)),Gs(new WebAssembly.Instance(s,e),s)}async function Ns(s){if(c!==void 0)return c;s!==void 0&&Object.getPrototypeOf(s)===Object.prototype?{module_or_path:s}=s:console.warn("using deprecated parameters for the initialization function; pass a single object instead");const e=Ws();(typeof s=="string"||typeof Request=="function"&&s instanceof Request||typeof URL=="function"&&s instanceof URL)&&(s=fetch(s));const{instance:t,module:r}=await tn(await s,e);return Gs(t,r)}const rn=Object.freeze(Object.defineProperty({__proto__:null,FieldMetadata:Ee,FileMetadata:ee,GeometryInfoDescriptor:J,ParquetChunk:Oe,ParquetFile:zs,RangeProviderJs:ne,default:Ns,enableTracing:Zi,initSync:sn,readFile:en,readMetadata:Ls},Symbol.toStringTag,{value:"Module"}));let Ge=null;async function $s(){return Ge||(Ge=nn()),Ge}async function nn(){const s=await Promise.resolve().then(()=>rn);return await s.default({module_or_path:nr("esri/libs/parquet/pkg/arcgis_parquet_bg.wasm")}),s.enableTracing(),s}const Bs=s=>async function(e,t,r){const i=s(),{data:n}=await tt(e,{responseType:"array-buffer",query:i,headers:{range:`bytes=${t}-${r}`}});return n},Vs=s=>async function(e){const t=s(),{data:r}=await tt(e,{responseType:"native",method:"head",query:t}),i=r.headers.get("Content-Length");if(i==null)throw new Error("Unable to parse content length");return parseInt(i,10)};class ve{static async create(e,t){const r=await $s(),i=await r.readMetadata(e,Bs(t),Vs(t));return ve.fromFileMetadata(i)}static fromFileMetadata(e){const t=[];for(let r=0;r<e.numFields();r++){const i=e.getFieldByIndex(r);t.push({name:i.name,type:i.type,alias:i.name,index:i.index}),i.free()}return new ve(e,t)}constructor(e,t){this._inner=e,this.fields=t}destroy(){this._inner.free()}[Symbol.dispose](){this.destroy()}get size(){return this._inner.numRows()}getFieldIndex(e){return this._inner.getFieldIndex(e)}tryReadGeoMetadata(){const e=this._inner.keyValueMetadata("geo");return e==null?null:JSON.parse(e)}}class gt{static async create(e,t){const r=await $s(),i=Bs(t.getCustomParameters),n=Vs(t.getCustomParameters),a=await Ls(e,i,n),{geometryInfo:o}=t,d=J.new();o.type==="location"?(d.latIndex=a.getFieldIndex(o.latitudeFieldName),d.lngIndex=a.getFieldIndex(o.longitudeFieldName)):d.wkbIndex=a.getFieldIndex(o.primaryFieldName);const u=await r.readFile(e,i,n,a,d);return new gt(u,ve.fromFileMetadata(u.metadata()))}constructor(e,t){this.inner=e,this.metadata=t}destroy(){this.inner.free(),this.metadata.destroy()}[Symbol.dispose](){this.destroy()}}let xe=class extends ue{constructor(s,e,t,r){super(),this._reader=s,this._queryJSON=e,this._page=t,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(s){const e=this.queryFeaturesInBounds(s.bounds);return e.setTransformForDisplay(s.transform),e}},an=class Ys extends Fe{constructor(e,t,r,i,n,a=new Uint32Array(i.size())){super(e),this._fields=t,this._geometryInfo=r,this._inner=i,this._chunkId=n,this._displayIds=a,this._index=-1,this._size=this._inner.size(),this._geometryInfo.type==="geometry"&&(this._primaryGeometryIndex=this._fields.get(this._geometryInfo.primaryFieldName)?.index),e.objectIdField!=null&&(this._objectIdFieldIndex=this._fields.get(e.objectIdField)?.index),this._chunkId>65535&&console.error("Exceeded max allowed parquet reader size")}destroy(){super.destroy(),this._inner.free()}get fields(){return this._fields}get geometryType(){return"esriGeometryPoint"}get hasFeatures(){return!0}get hasNext(){throw new Error("Method not implemented.")}get exceededTransferLimit(){return!1}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return null}getSize(){return this._size}getCursor(){return this.copy()}getAttributeHash(){let e="";for(const t of this.fields.fields)e+=this._readAttribute(t.name,!1)+".";return e}getObjectId(){return this._objectIdFieldIndex!=null?this._inner.readAttribute(this._index,this._objectIdFieldIndex):this._index<<16|this._chunkId}getDisplayId(){return this._displayIds[this._index]}setDisplayId(e){this._displayIds[this._index]=e}setIndex(e){this._index=e}getIndex(){return this._index}next(){for(;++this._index<this._size&&!this._getExists(););return this._index<this._size}readGeometryArea(){throw new Error("Method not implemented.")}copy(){const e=new Ys(this.metadata,this._fields,this._geometryInfo,this._inner,this._chunkId,this._displayIds);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._index=this._index}_readGeometry(e){const t=sr(this._inner.readX(this._index),this._inner.readY(this._index));return new M([],t)}_readX(){return this._readGeometry()?.coords[0]}_readY(){return this._readGeometry()?.coords[1]}_readServerCentroid(){return null}_readAttribute(e,t){const r=this.fields.get(e);if(!r)return;const i=this._inner.readAttribute(this._index,r.index);if(i==null)return i;const n=this.fields.isDateField(r.name);return t?i==null?i:n?new Date(i):i:i}_readAttributes(){const e={};for(const t of this._fields.fields)this._inner.hasField(t.index)&&t.index!==this._primaryGeometryIndex&&(e[t.name]=this._readAttribute(t.name,!1));return this._objectIdFieldIndex==null&&(e.__OBJECTID=this.getObjectId()),e}};class on extends pt{constructor(e,t,r,i){super(i),this._service=e,this._metadata=t,this._schema=r,this._chunkId=0,this._files=[],this._availableFields=new Set(r.mutable.availableFields);const{geometryInfo:n}=this._service;n.type==="location"?(this._availableFields.add(n.latitudeFieldName),this._availableFields.add(n.longitudeFieldName)):this._availableFields.add(n.primaryFieldName)}destroy(){for(const e of this._files)e.destroy()}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(e){await this._promise;const t=new Set(e),r=er(t,this._availableFields);this._availableFields=tr(r,this._availableFields),await Promise.all(this._files.map(i=>{const n=Array.from(r).map(a=>i.metadata.getFieldIndex(a));return i.inner.updateChunks(new Uint16Array(n))}))}async load(e){return this._promise==null&&(this._promise=this._download()),this._promise}unload(e){}async addParquetFile(e){this._insert(e)}async _insert(e){const t=await gt.create(e,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:r}=this._service;Z(this._options);const{fields:i,timeZoneByFieldName:n}=this._service.metadata.fieldsIndex,a=i.map(u=>({...u,index:t.metadata.getFieldIndex(u.name)})),o=de.fromJSON({fields:a,timeZoneByFieldName:n}),d=new Uint16Array(Array.from(this._availableFields.values()).map(u=>o.get(u)?.index));await t.inner.readChunksWithCallback(d,u=>{const h=this._chunkId++,l=new an(this._metadata,o,r,u,h),p=new xe(l,null,h,!1);this._store.insert(p)}),this._files.push(t)}async _download(){try{await Promise.all(this._service.source.urls.map(t=>this._insert(t)));const e=new xe(q.empty(this._metadata),null,-1,!0);this._store.insert(e)}catch(e){throw console.error(e),e}}}class dn extends Ps{constructor(e,t,r,i,n,a){super(e,t,r,n,a),this._random=new Jt(1e3),this._featureCount=i}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),r=Array.from({length:t},(o,d)=>d).sort((o,d)=>this._random.getInt()-this._random.getInt()),i=await Promise.all(r.map(o=>this._downloadPage(o))),n=new xe(q.empty(this._metadata),null,-1,!0);this._store.insert(n);const a=i.filter(o=>o);if(a.length)throw new W("featurelayer-query","Encountered errors when downloading data",{errors:a})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),r=await this._fetch(t,this._options),i=new xe(r,t.inner.toJSON(),e,!1);return Z(this._options),this._store.insert(i),null}catch(t){return t}}}const un="__esri_stream_id__",Vt="__esri_timestamp__",Yt=1e3;class cn{constructor(e,t,r,i,n=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=r,this._purgeOptions=i,this.store=e,this.objectIdField=t,this.purgeInterval=n,this._useGeneratedIds=this.objectIdField===un}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const r of t.entries)this._removed.push(r)}add(e){if(this._useGeneratedIds){const a=this._nextId();e.attributes[this.objectIdField]=a,e.objectId=a}else e.objectId=e.attributes[this.objectIdField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return this._trackIdLessObservations==null&&(this._trackIdLessObservations=new xt(1e5)),void this._trackIdLessObservations.enqueue(t);const r=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(r)){const a=this._purgeOptions?.maxObservations!=null?this._purgeOptions.maxObservations:Yt,o=ar(a,0,Yt);this._trackIdToObservations.set(r,new xt(o))}const i=this._trackIdToObservations.get(r),n=i?.enqueue(t);n!=null&&(this._addOrUpdated.has(n)?this._addOrUpdated.delete(n):this._removed.push(n))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),r=performance.now();r-this._lastPurge>=this.purgeInterval&&(this._purge(r),this._lastPurge=r);const i=[];if(t!=null)for(const a of t){const o=this.store.removeById(a);o!=null&&i.push(o)}const n=[];if(e!=null){const a=new Set(t??[]);for(const o of e)a.has(o.objectId)||(o.attributes[Vt]=r,this.store.add(o),n.push(o))}return!(!n.length&&!i?.length)&&(this.store.update(n,i),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(r=>e[t++]=r),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;t!=null&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const r of this._trackIdToObservations.values())if(t>e.displayCount&&r.size){const i=r.dequeue();this._removed.push(i),t--}}if(this._trackIdLessObservations!=null){let r=t-e.displayCount;for(;r-- >0;){const i=this._trackIdLessObservations.dequeue();i!=null&&this._removed.push(i)}}}}_purgeByAge(e){const t=this._timeInfo?.startTimeField;if(!e.age||!t)return;const r=60*e.age*1e3,i=this._maxAge-r;this.store.forEach(n=>{n.attributes[t]<i&&this._removed.push(n.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const r=e-60*t.ageReceived*1e3;this.store.forEach(i=>{i.attributes[Vt]<r&&this._removed.push(i.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let B=class extends Ht{constructor(s){super(s)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};V([ge()],B.prototype,"connection",void 0),V([ge()],B.prototype,"connectionStatus",null),V([ge()],B.prototype,"errorString",null),B=V([Xt("esri.views.2d.layers.features.sources.StreamConnectionState")],B);let ln=class{constructor(s,e){this._metadata=s,this._onUpdate=e,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return q.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(s){this._objectIdToFeature.set(s.objectId,s)}forEach(s){this._objectIdToFeature.forEach(s)}removeById(s){const e=this._objectIdToFeature.get(s);return e?(this._objectIdToFeature.delete(s),e):null}clear(){this._objectIdToFeature=new Map}update(s,e){this._onUpdate(s?.length??0)}};class hn extends ue{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}}class _n extends pt{constructor(e,t,r,i,n){super(r),this._service=e,this._dataFilter=t,this._streamOptions=i,this._metadata=n,this._connectionState=new B,this._forceRefresh=!1,this.events=new st;const{objectIdField:a,timeInfo:o}=this._metadata,{purgeOptions:d}=t;this._stagingStore=new ln(this._metadata,u=>this.events.emit("features-updated",u)),this._manager=new cn(this._stagingStore,a,o,d),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=this._chunk!=null;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new hn(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=Zt(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(this._connection!=null)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:r,maxReconnectionInterval:i,geometryDefinition:n,definitionExpression:a,customParameters:o}=this._dataFilter;this._connection=Ur(this._service.source,t,this._streamOptions.outSR,e,a,n,r,i,o),this._handlesGroup=Se([this._connection.on("data-received",d=>this._onFeature(d)),this._connection.on("message-received",d=>this._onWebSocketMessage(d))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}}class pn{constructor(e){this._onChange=e,this._chunks=new Map,this._chunksToRemove=[],this.events=new st,this.featureAdapter=new mr}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._localEditChunk!=null&&this._chunksToRemove.push(this._localEditChunk),this._localEditChunk=null}*chunks(){this._localEditChunk&&(yield this._localEditChunk),this._localOverridesChunk&&(yield this._localOverridesChunk),yield*this._chunks.values()}dataChunks(){return this._chunks.values()}insert(e){w("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._localOverridesChunk?.overriddenIds.size&&(e.reader.removeIds(this._localOverridesChunk.overriddenIds),e.invalidate()),this._localEditChunk?.overriddenIds.size&&this._localEditChunk.removeOverrides(e),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){w("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyLocalOverrides(e,t){this._localOverridesChunk==null&&(this._localOverridesChunk=new Je(t,"localOverride")),this._localOverridesChunk.applyOverrides(e);for(const r of this._chunks.values())r.reader.removeIds(this._localOverridesChunk.overriddenIds),r.invalidate();this.events.emit("changed")}applyLocalEdit(e,t){this._localEditChunk==null&&(this._localEditChunk=new Je(t,"localEdit")),this._localEditChunk.applyOverrides(e);for(const r of this._chunks.values())r.reader.removeIds(this._localEditChunk.overriddenIds),r.invalidate();this.events.emit("changed")}forEach(e){const t=new Set;for(const r of this.chunks()){const i=r.reader.getCursor();for(;i.next();){const n=i.getObjectId();t.has(n)||(e(i.copy()),t.add(n))}}}forEachUnsafe(e){const t=new Set;for(const r of this.chunks()){const i=r.reader.getCursor();for(;i.next();){const n=i.getObjectId();t.has(n)||(e(i),t.add(n))}}}forEachInBounds(e,t){const r=new Set;for(const i of this.chunks()){const n=i.queryFeaturesInBounds(e);for(;n.next();){const a=n.getObjectId();r.has(a)||(t(n.copy()),r.add(a))}}}forEachBounds(e,t){const r=rt();for(const i of e)i.getBounds(r)&&t(r)}}class gn{constructor(e,t,r,i,n){this.service=e,this._aggregateAdapter=t,this._subscriptions=r,this._onChange=i,this._connection=n,this._updateTracking=new Wr({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._store=new pn(this._onChange),this._metadata=ot.createFeature(e.metadata)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy(),this.service.type==="memory"&&this.service.source.map(e=>e.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Fi.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,r=this._metadata;this._queryEngine=new as({featureStore:this._store,fieldsIndex:r.fieldsIndex,geometryType:r.geometryType,objectIdField:r.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:r.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(e){this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(r=>this._connection.onEvent({type:"error",tile:e.tile.id,error:r})),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(Qt(this._strategy?.load(e)))}onUnsubscribe(e){this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}getLocalEdit(e){return this._updateTracking.addPromise(this._getGetLocalEdit(e))}applyLocalEdit(e){this._didInvalidateData=!0,this._store.applyLocalEdit(e,this.metadata)}async update(e,t){const r=e.source,i=Kt(this._schema?.mutable,r.mutable);if(!i)return!1;if(w("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:i}),this._schema=r,this._queryEngine?.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),mt(i,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if((r.type==="feature"||r.type==="parquet")&&mt(i,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(r.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(n){this._connection.onEvent({type:"updateFieldsError",error:n})}}return!1}return!(!bt(i,"dataFilter")&&!bt(i,"sourceRefreshVersion"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){this._strategy.addParquetFile(e)}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new ye(this._connection))}async _getGetLocalEdit(e){if(e.historicMoment&&this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e.historicMoment,this._strategy.unsafeSetQueryHistoricMoment(new Date(e.historicMoment))),e.type==="edit-by-feature"){const i=[...e.added,...e.updated].map(n=>Y.fromJSON(n,this.metadata.objectIdField));return{reader:q.fromOptimizedFeatures(i,this.metadata),removed:this._resolveIdentifiers(e.removed)}}const t=this._resolveIdentifiers(e.removed);if(!e.updated.length&&!e.added.length)return{reader:q.empty(this.metadata),removed:t};const r=this._resolveIdentifiers([...e.added,...e.updated]);return{reader:await this._strategy.queryByObjectId(r),removed:t}}_resolveIdentifiers(e){const t=[],r=[];for(const i of e)i.objectId!=null&&i.objectId!==-1?r.push(i.objectId):t.push(i.globalId);if(t.length){const i=new Set(t),n=this.metadata.globalIdField;if(n==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");this._store.forEachUnsafe(a=>{const o=a.readAttribute(n);i.has(o)&&r.push(a.getObjectId())})}return r}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},r=(await tt(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return r!==this._lastEditDate&&(this._lastEditDate=r,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),r=this.service.source&&"collection"in this.service.source,i=e||t||r;if(this._schema.type==="stream"){const d=new _n(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=d,d}if(this._schema.type==="parquet"){const d=this.service;return new on(d,this._metadata,this._schema,this._store)}const n=this.service,a=Ci.fromSchema(n,this._schema,this._metadata),o=await this._supportSnapshotMode(n,a);return o?new dn(n,a,this._store,o.featureCount,this.metadata,this._connection):i?new Vi(n,a,this._store,this.metadata,this._connection):new $i(n,a,this._store,this.metadata,this._connection)}async _updateStrategy(e){const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const r=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,w("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const i=Array.from(this._subscriptions.values());if(!i.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const n=Promise.all(i.map(a=>this._strategy.load(a).then(()=>this._connection.onEvent({type:"loaded",tile:a.tile.id})).catch(o=>this._connection.onEvent({type:"error",tile:a.tile.id,error:o}))));this._updateTracking.addPromise(n);try{r&&await n}catch(a){et(a)}this._connection.onEvent({type:"updateStrategyEnd"}),w("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:r}=e,i=r.snapshotInfo;if(!i||!i.supportsSnapshotMinThreshold||!i.snapshotCountThresholds)return null;const n=e.source,a=t.createQuery();a.inner.orderByFields=[],a.inner.returnGeometry=!1;const o=(await Rr(n,a.inner,{query:a.customParameters})).data.count,{min:d,max:u}=i.snapshotCountThresholds;return o<=d||i.supportsSnapshotMaxThreshold&&o<u?{featureCount:o}:null}}class fn{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class pe{constructor(e){this.inner=e,this.resolver=Hs()}}class eo{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor?.destroy(),this._source?.destroy(),this._handles?.remove(),this._updateLocalEditsRequest=null,this._tileInfoView=null}onAttach(e){w("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,r=hr.fromJSON(e.tileInfoJSON);this._tileInfoView=new _r(r),this._source=new gn(e.service,this._aggregateAdapter,this._subscriptions,()=>this._requestUpdate(),t),this._processor=new Si(t,this._source),this._handles=Se([Ne(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),Qt(this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){w("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new Gr(e)}get features(){const e=this._source?.queryEngine;if(!e)throw new W("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor?.aggregateQueryEngine;if(!e)throw new W("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}async updateSchema(e,t){return w("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new pe({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new pe(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new pe(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onEdits(e){if(this._updateLocalEditsRequest!=null)throw new W("InternalError - Already processing an edit");this._updateLocalEditsRequest=new pe(e);const t=this._updateLocalEditsRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(Qs(e.radius));let r=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;const n=typeof e.fieldOffset=="string",a=e.fieldOffset??0,o=Array.from(this._subscriptions.values()),d=this._source.chunks(),u=t**2,h=3/(Math.PI*u),l=2*t,p=Math.ceil(T/l);for(const g of o){const _=g.tile,f=new Float64Array(p*p);for(const y of d){const v=y.getTileReader(_);if(!v)continue;const b=v.getCursor();for(;b.next();){let F=1;if(e.field!=null){const R=b.readAttribute(e.field);F=n?-1*+R:+R+a}const C=b.readXForDisplay()/l,x=b.readYForDisplay()/l,S=Math.floor(C),k=Math.floor(x);if(S<0||k<0||S>=p||k>=p)continue;const E=((.5+S-C)*l)**2+((.5+k-x)*l)**2;if(E>u)continue;const L=F*(h*(1-E/u)**2);f[k+S*p]+=L}}for(let y=0;y<f.length;y++)r=Math.min(r,f[y]),i=Math.max(i,f[y])}return{max:i,min:r}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((d,u)=>d+u.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const d=[];return this._source.store.forEachUnsafe(u=>d.push(u.readLegacyFeatureWorldSpace())),d}return null}const r=new Set,i=[],n=t.map(d=>d.reader.getCursor()),a=new Jt,o=3*e.sampleSize;for(let d=0;d<o&&i.length<e.sampleSize;d++){const u=n[a.getIntRange(0,t.length-1)];if(u.getSize()===0)continue;const h=a.getIntRange(0,u.getSize()-1);u.setIndex(h);const l=u.getObjectId();r.has(l)||(r.add(l),i.push(u.readLegacyFeatureWorldSpace()))}return i.length>=e.sampleSize?i:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,Zs(()=>this._scheduleNextUpdate()))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=it(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;w("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const r=new pr(this._tileInfoView,t),i=new fn(r,e.version);this._subscriptions.set(t,i),this._source.onSubscribe(i),this._processor.onSubscribe(i)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(w("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(w("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const i=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const n of i)this._doUpdateSubscriptions(n.inner),n.resolver.resolve()}const e=this._updateSchemaRequest;if(this._updateSchemaRequest=null,e!=null){const{schema:i,version:n}=e.inner;await this._doUpdateSchema(i,n)}const t=this._updateLocalEditsRequest;if(this._updateLocalEditsRequest=null,t!=null){w("esri-2d-update-debug")&&console.debug("Pipeline.applyEditOverride",t.inner);const i=await this._source.getLocalEdit(t.inner);await this._processor.applyLocalEdit(i),this._source.applyLocalEdit(i),w("esri-2d-update-debug")&&console.debug("Pipeline.endEditOverride",t.inner)}if(this._updateHighlightRequests.length){const i=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const n of i)this._processor.updateHighlight(n.inner),n.resolver.resolve()}const r=this._source.cleanupRemovedChunks();this._processor.removeChunks(r);try{this._subscriptions.size&&(w("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),w("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(i){et(i)}t?.resolver.resolve(),e?.resolver.resolve(),this._updateRequested?(w("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})):(w("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){w("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const r={tileInfo:this._tileInfoView?.tileInfo},i=await this._source.update(e,t),n=Array.from(this._subscriptions.values());await this._processor.update(e,t,r,i,n),w("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){w("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{eo as default};
