import{v as o,I as r,t as g,av as S,b9 as Y,le as Z,ia as E,cE as F}from"./main-DK5A1thH.js";import{y as O,D as m,x as K,C as W,E as B,G as N,J as Q}from"./SketchViewModel-T2dNp9Tt-LN_5NyI-.js";import{t as H}from"./PointSnappingHint-ClwQ1VNw-D919q5_C.js";import{h as M,f as v,y as G,l as d,m as T,i as L,t as X,s as V}from"./quantityUtils-RaoZoCNH-DBxpP_Oi.js";import{M as h,D as P,b as J,X as D,O as j,c as tt,R as et,T as it,g as nt}from"./automaticLengthMeasurementUtils-BcfJmFU0-BkyAHWFv.js";import{r as ot}from"./uuid-Dj9mdEVg-BaKSCiyT.js";import{d as st,i as at}from"./geodesicLengthMeasurementUtils-X1SKKkBz-CwYgWama.js";import{m as rt}from"./earcut-XDcq3zAf-BcwyrT7l.js";import{A as q,O as lt,v as ut}from"./vec32-BuqRmYBM-Docn8r6P.js";import{f as ct}from"./projectVectorToVector-D0K_S4MR-BN7ztR9y.js";import{K as pt,N as ft,E as ht,p as mt}from"./plane-B_adY3_o-Ns1JnzfT.js";import{X as dt}from"./triangle-BePBrXJ8-BGvt3tv3.js";import{C as gt}from"./index-CVKk0WAC-CetfXNu5.js";import{h as vt}from"./geodesicUtils-DV-lFWtb-DXiNEbM3.js";function yt(e){const{spatialReference:i}=e;return at(i,kt,bt,e)}function kt(e){return V(Math.abs(vt([e],"square-meters")[0]),"square-meters")}function bt(e){try{return V(Math.abs(gt(e,"square-meters")),"square-meters")}catch{return null}}function It(e,i=_()){return xt(e,i,!1)}function xt(e,i,t=e.hasZ){const n=nt(e.spatialReference),a=E(n);if(a==null)return null;const c=(y,f)=>!(f.length<2)&&(q(y,f[0],f[1],t&&f[2]||0),!0);let l=0;for(const y of e.rings){const f=y.length;if(f<3)continue;const{positionsWorldCoords:p}=i;for(;p.length<f;)p.push(F());const U=At,k=q(wt,0,0,0),$=1/f;for(let u=0;u<f;u++){if(!c(U,y[u])||!ct(U,e.spatialReference,p[u],n))return null;lt(k,k,p[u],$)}const z=pt(p[0],p[1],k,ft());if(ut(ht(z))===0)continue;for(let u=0;u<f;u++)mt(z,k,p[u],p[u]);const b=Lt(p);for(let u=0;u<b.length;u+=3)l+=dt(p[b[u]],p[b[u+1]],p[b[u+2]])}return V(l,a)}const At=F(),wt=F();function _(){return{positionsWorldCoords:[]}}function Lt(e){return rt(Vt(e),[],2)}function Vt(e){const i=new Float64Array(2*e.length);for(let t=0;t<e.length;++t){const n=e[t],a=2*t;i[a]=n[0],i[a+1]=n[1]}return i}class Nt{draw(i,t){const n=Ft(i),a=this.sortUniqueHints(n),c=[];for(const l of a)l instanceof K&&c.push(this.visualizeIntersectionPoint(l,t)),l instanceof W&&c.push(this.visualizeLine(l,t)),l instanceof B&&c.push(this.visualizeParallelSign(l,t)),l instanceof N&&c.push(this.visualizeRightAngleQuad(l,t)),l instanceof H&&c.push(this.visualizePoint(l,t));return S(c)}sortUniqueHints(i){return i}}function Ft(e){const i=[];for(const t of e){let n=!0;for(const a of i)if(t.equals(a)){n=!1;break}n&&i.push(t)}return i}let s=class extends Y{constructor(e){super(e),this.actual=null,this.lockable=!0,this.id=ot(),this.inputValue=null,this.readOnly=!1,this.suffix=null,this.visible=!0,this.invalid=!1,this.unlockOnVertexPlacement=!0}get committed(){return this.lockable?this._get("committed"):null}set committed(e){this.lockable&&this._set("committed",e)}get dirty(){return this.inputValue!=null}get locked(){return this.lockable&&this.committed!=null}onInput(e){this.inputValue=e,this.invalid=!1}onCommit(e,i,t){this.lockable?this._onCommitLockable(e,t):this._onCommitNonLockable(t),this.invalid&&e==="commit-and-exit"||t.onCommit(i,e)}_onCommitLockable(e,i){const{inputValue:t,locked:n}=this;n&&I(t)?this.unlock():(e==="commit-and-exit"&&!n||t!=null)&&this._parseInputAndLock(i)}_onCommitNonLockable(e){const{inputValue:i}=this;I(i)?this.lockable?this.setActual(null):this.clearInputValue():i!=null&&this._parseInputAndSetActual(e)}applyValue(e){this.lockable?this.lock(e):this.setActual(e)}clearInputValue(){this.inputValue=null,this.invalid=!1}setActual(e){this.actual=e,this.clearInputValue()}lock(e){this.lockable&&(this.committed=e??this.actual,this.clearInputValue())}unlock(){this.lockable&&(this.committed=null,this.clearInputValue())}toggleLock(e){this.lockable&&(this.locked?this.unlock():this._parseInputAndLock(e))}getSuffix(e){const{suffix:i}=this;return typeof i=="function"?i(e):i}getFormattedValue(e){const{actual:i,committed:t,format:n}=this;return t!=null?n(t,e):i!=null?n(i,e):null}getRawDisplayValue(e){const{actual:i,committed:t,inputValue:n}=this;return n??(this.lockable&&t!=null?this.formatForInputMode(t,e):i!=null?this.formatForInputMode(i,e):null)}_parseInputAndSetActual(e){const{inputValue:i}=this;if(i==null||I(i))return this.setActual(null);const t=this.parse(i,e);t!=null?this.setActual(t):this.invalid=!0}_parseInputAndLock(e){const{inputValue:i,actual:t}=this;if(I(i))return this.unlock();if(i==null)return this.lock(t);const n=this.parse(i,e);n!=null?this.lock(n):this.invalid=!0}};function I(e){return e!=null&&e.trim()===""}o([r()],s.prototype,"actual",void 0),o([r()],s.prototype,"committed",null),o([r()],s.prototype,"dirty",null),o([r()],s.prototype,"format",void 0),o([r()],s.prototype,"formatForInputMode",void 0),o([r()],s.prototype,"lockable",void 0),o([r()],s.prototype,"locked",null),o([r()],s.prototype,"id",void 0),o([r()],s.prototype,"inputValue",void 0),o([r()],s.prototype,"name",void 0),o([r()],s.prototype,"parse",void 0),o([r()],s.prototype,"readOnly",void 0),o([r()],s.prototype,"suffix",void 0),o([r()],s.prototype,"title",void 0),o([r()],s.prototype,"visible",void 0),o([r()],s.prototype,"invalid",void 0),o([r()],s.prototype,"unlockOnVertexPlacement",void 0),s=o([g("esri.views.interactive.tooltip.fields.TooltipField")],s);let x=class extends s{constructor(e){super(e),this.showAsZ=!1}normalizeCtorArgs(e){const i=t=>t.inputUnitInfos.verticalLength.unit;return{name:"elevation",actual:T,parse:h({createQuantity:(t,n)=>L(t,i(n))}),format:(t,n)=>n.formatters.verticalLength(t),formatForInputMode:(t,n)=>n.formatters.scalar(v(t,i(n))),suffix:t=>t.inputUnitInfos.verticalLength.abbreviation,title:t=>t.messages.sketch[this.showAsZ?"z":"elevation"],unlockOnVertexPlacement:!1,...e}}};o([r()],x.prototype,"showAsZ",void 0),x=o([g("esri.views.interactive.tooltip.fields.TooltipFieldElevation")],x);let A=class extends s{constructor(e){super(e),this.precision=1}normalizeCtorArgs(e){const i=t=>t.inputUnitInfos.angle.unit;return{name:"orientation",actual:null,parse:h({createQuantity:(t,n)=>X(t,i(n),"geographic"),sanitize:P}),format:t=>{const n=Q(t);return J(n,"geographic",this.precision)},formatForInputMode:(t,n)=>{const a=Q(t);return n.formatters.scalar(a)},suffix:t=>t.inputUnitInfos.angle.abbreviation,title:t=>t.messages.sketch.orientation,...e}}};o([r()],A.prototype,"precision",void 0),A=o([g("esri.views.interactive.tooltip.fields.TooltipFieldOrientation")],A);let w=class extends s{constructor(e){super(e),this.precision=null}normalizeCtorArgs(e){const i=t=>t.inputUnitInfos.length.unit;return{name:"size",actual:null,parse:h({createQuantity:(t,n)=>L(t,i(n))}),format:(t,n)=>n.formatters.length(t),formatForInputMode:(t,n)=>n.formatters.scalar(v(t,i(n))),suffix:t=>t.inputUnitInfos.length.abbreviation,title:t=>t.messages.sketch.size,...e}}};o([r()],w.prototype,"precision",void 0),w=o([g("esri.views.interactive.tooltip.fields.TooltipFieldSize")],w);function Ht(e){const i=n=>n.inputUnitInfos.angle.unit,t=n=>n.sketchOptions.values.effectiveDirectionMode;return new s({name:"direction",actual:M,parse:h({createQuantity:(n,a)=>X(n,i(a),"geographic"),sanitize:P}),format:(n,a)=>{const c=t(a),l=O(n,c);switch(c){case m.Absolute:return a.formatters.direction(l);case m.Relative:return a.formatters.directionRelative(l);case m.RelativeBilateral:return a.formatters.directionRelativeBilateral(l)}},formatForInputMode:(n,a)=>{const c=O(n,t(a));return a.formatters.scalar(v(c,i(a)))},suffix:n=>n.inputUnitInfos.angle.abbreviation,title:n=>{const a=t(n),{absolute:c,relative:l}=n.messages.sketch.direction;switch(a){case m.Absolute:return c;case m.Relative:case m.RelativeBilateral:return l}},...e})}function C(e){const i=t=>t.inputUnitInfos.length.unit;return new s({name:"distance",actual:T,parse:h({createQuantity:(t,n)=>L(Math.max(t,0),i(n))}),format:(t,n)=>n.formatters.length(t),formatForInputMode:(t,n)=>n.formatters.scalar(v(t,i(n))),suffix:t=>t.inputUnitInfos.length.abbreviation,title:t=>t.messages.sketch.distance,...e})}function Gt(e){return C({format:(i,t)=>t.formatters.totalLength(i),title:i=>i.messages.sketch.totalLength,readOnly:!0,...e})}function Jt(e){return C({...e})}function jt(e){const i=t=>t.inputUnitInfos.length.unit;return C({...e,parse:h({createQuantity:(t,n)=>L(t,i(n))}),format:(t,n)=>n.formatters.lengthRelative(t)})}function Mt(e){return new x(e)}function te(e){return new A(e)}function ee(e){return new w(e)}function ie(e){return R("scale",{name:"scale",actual:null,parse:h({createQuantity:i=>d(Math.abs(i))}),...e})}function ne(e){const i=t=>t.inputUnitInfos.area.unit;return new s({name:"area",actual:G,parse:h({createQuantity:(t,n)=>V(t,i(n))}),format:(t,n)=>n.formatters.area(t),formatForInputMode:(t,n)=>n.formatters.scalar(v(t,i(n))),suffix:t=>t.inputUnitInfos.area.abbreviation,title:t=>t.messages.sketch.area,readOnly:!0,...e})}function _t(e){return new s({name:"x",actual:M,parse:j,format:(i,t)=>t.formatters.longitudeDecimalDegrees(i),formatForInputMode:i=>tt(i),suffix:i=>i.inputUnitInfos.angle.abbreviation,title:i=>i.messages.sketch.longitude,...e})}function Ct(e){return new s({name:"y",actual:M,parse:et,format:(i,t)=>t.formatters.latitudeDecimalDegrees(i),formatForInputMode:i=>it(i),suffix:i=>i.inputUnitInfos.angle.abbreviation,title:i=>i.messages.sketch.latitude,...e})}function Rt(e){return R("x",{name:"x",...e})}function Ut(e){return R("y",{name:"y",...e})}function R(e,i){return new s({actual:d(0),parse:h({createQuantity:t=>d(t)}),format:(t,n)=>n.formatters.scalar(t),formatForInputMode:(t,n)=>n.formatters.scalar(t),title:t=>t.messages.sketch[e],...i})}const oe=e=>{let i=class extends e{constructor(){super(...arguments),this.longitude=_t(),this.latitude=Ct(),this.x=Rt(),this.y=Ut(),this.elevation=Mt(),this.geographic=!1}get effectiveX(){return this.geographic?this.longitude:this.x}get effectiveY(){return this.geographic?this.latitude:this.y}get key(){return{longitude:this.longitude.actual,latitude:this.latitude.actual,x:this.x.actual,y:this.y.actual,elevation:this.elevation.actual,geographic:this.geographic}}setLocationFromPoint(t,n=t?.spatialReference){if(this.geographic=!!n&&st(n),t==null)return this._setActualLonLat(null,null),void this._setActualXY(null,null);if(this.geographic){const a=Z(t,zt);this._setActualLonLat(D(a?.[0]),D(a?.[1]))}else this._setActualXY(d(t.x),d(t.y))}_setActualLonLat(t,n){this.longitude.actual=t,this.latitude.actual=n}_setActualXY(t,n){this.x.actual=t,this.y.actual=n}};return o([r()],i.prototype,"geographic",void 0),o([r()],i.prototype,"effectiveX",null),o([r()],i.prototype,"effectiveY",null),o([r()],i.prototype,"key",null),i=o([g("esri.views.interactive.tooltip.infos.TooltipInfoWithCoordinates")],i),i},zt=[0,0];function Ot(e,i,t=_()){return yt(e)??It(e,t)}function se(e,i=_()){return Ot(e,"on-the-ground",i)}export{jt as C,ne as D,Nt as F,Ht as M,ee as O,te as Q,oe as S,se as W,Gt as _,ie as q,Jt as z};
