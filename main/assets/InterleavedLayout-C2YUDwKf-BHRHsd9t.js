import{E as f,x as a,T as l,L as o,C as _,N as F,R as y,Y as m,m as v,F as w,w as b,P as g,I as E,O as M,S as V,U as T,V as $,v as B,_ as j,k as A,$ as C,j as q,q as D,z as G,D as L,G as U,H,J as I,K as J,Q as k,W as K,X as N,Z as O,t as P,e as Q,s as R,a as h,b as S,g as W,M as X,B as Y,c as Z}from"./BufferView-wDxx79o3-DnwxrwAb.js";import{c}from"./types-l27bT09Q-DE0QfIFp.js";class d{constructor(e,t){this.layout=e,this.buffer=typeof t=="number"?new ArrayBuffer(t*e.stride):t;for(const s of e.fields.keys()){const i=e.fields.get(s);this[s]=new i.constructor(this.buffer,i.offset,this.stride)}}get stride(){return this.layout.stride}get count(){return this.buffer.byteLength/this.stride}get byteLength(){return this.buffer.byteLength}getField(e,t){const s=this[e];return s&&s.elementCount===t.ElementCount&&s.elementType===t.ElementType?s:null}slice(e,t){return new d(this.layout,this.buffer.slice(e*this.stride,t*this.stride))}copyFrom(e,t=0,s=0,i=e.count){const r=this.stride;if(r%4==0){const u=new Uint32Array(e.buffer,t*r,i*r/4);new Uint32Array(this.buffer,s*r,i*r/4).set(u)}else{const u=new Uint8Array(e.buffer,t*r,i*r);new Uint8Array(this.buffer,s*r,i*r).set(u)}return this}get cachedMemory(){return this.byteLength}dispose(){}}class p{constructor(e){this._stride=0,this._fields=new Map,e&&(this._stride=e.stride,e.fields.forEach(t=>this._fields.set(t[0],{...t[1],constructor:te(t[1].constructor)})))}freeze(){return this}vec2f16(e,t){return this._appendField(e,h?S:a,t),this}vec2f(e,t){return this._appendField(e,a,t),this}vec2f64(e,t){return this._appendField(e,m,t),this}vec3f16(e,t){return this._appendField(e,h?W:l,t),this}vec3f(e,t){return this._appendField(e,l,t),this}vec3f64(e,t){return this._appendField(e,v,t),this}vec4f16(e,t){return this._appendField(e,h?X:o,t),this}vec4f(e,t){return this._appendField(e,o,t),this}vec4f64(e,t){return this._appendField(e,w,t),this}mat3f(e,t){return this._appendField(e,_,t),this}mat3f64(e,t){return this._appendField(e,b,t),this}mat4f(e,t){return this._appendField(e,F,t),this}mat4f64(e,t){return this._appendField(e,g,t),this}vec4u8(e,t){return this._appendField(e,T,t),this}f16(e,t){return this._appendField(e,h?Y:f,t),this}f32(e,t){return this._appendField(e,f,t),this}f64(e,t){return this._appendField(e,y,t),this}u8(e,t){return this._appendField(e,E,t),this}u16(e,t){return this._appendField(e,$,t),this}i8(e,t){return this._appendField(e,L,t),this}vec2i8(e,t){return this._appendField(e,U,t),this}vec2i16(e,t){return this._appendField(e,k,t),this}vec2u8(e,t){return this._appendField(e,M,t),this}vec2u16(e,t){return this._appendField(e,B,t),this}vec4u16(e,t){return this._appendField(e,A,t),this}u32(e,t){return this._appendField(e,C,t),this}_appendField(e,t,s){this._fields.has(e)&&Z(!1,`${e} already added to vertex buffer layout`);const i=t.ElementCount*c(t.ElementType),r=this._stride;this._fields.set(e,{constructor:t,size:i,offset:r,optional:s}),this._alignFields()}_alignFields(){let e=0,t=1;this._fields.forEach(s=>{const i=c(s.constructor.ElementType);e=Math.floor((e+i-1)/i)*i,s.offset=e,e+=s.size,t=Math.max(t,i)}),e=Math.floor((e+t-1)/t)*t,this._stride=e}createBuffer(e){return new d(this,e)}createView(e){return new d(this,e)}clone(){const e=new p;return e._stride=this._stride,e._fields=new Map,this._fields.forEach((t,s)=>e._fields.set(s,t)),e.BufferType=this.BufferType,e}get stride(){return this._stride}get fields(){return this._fields}}function re(){return new p}class ne{constructor(e){this.fields=new Array,e.fields.forEach((t,s)=>{const i={...t,constructor:x(t.constructor)};this.fields.push([s,i])}),this.stride=e.stride}}const ee=[f,a,l,o,_,F,y,m,v,w,b,g,E,M,V,T,$,B,j,A,C,q,D,G,L,U,H,I,J,k,K,N,O,P,Q,R];function x(n){return`${n.ElementType}_${n.ElementCount}`}function te(n){return z.get(n)}const z=new Map;ee.forEach(n=>z.set(x(n),n));export{p as d,re as e,ne as t};
