import{_ as D,bn as S}from"./main-CKPAMuMz.js";import{B as A}from"./TextureFormat-Cl0ugX3E-DD0Aw8RG.js";import{u as w}from"./enums-wEDHPbCF-Cf76M5_x.js";function R(){return C??=(async()=>{const t=await D(()=>import("./basis_encoder-DZxp6hVo-BRH08iUs.js"),[],import.meta.url),e=await t.default({locateFile:n=>S(`esri/libs/basisu/${n}`)});return e.initializeBasis(),e})(),C}let C;function b(){return E??=(async()=>await(await D(async()=>{const{default:t}=await import("./dxt_encoder-P9_YitA5-RVWVFb-w.js");return{default:t}},[],import.meta.url)).default({locateFile:t=>S(`esri/libs/dxtEncoder/${t}`)}))(),E}let E,B,X,u=null,h=null;class m{constructor(e,n){this.internalFormat=e,this.compressedTexture=n}}async function j(t){let e;if(e=t.data instanceof ImageBitmap?U(t.data):v(t.data,t.width,t.height,t.components,t.needsFlip),t.hasS3TC){h||await g();const n=new Uint8Array(e.length);if(h?.encode(e,t.width,t.height,t.preMultiplyAlpha,n)){const a=Q(n,!0),o=[n.buffer];return{result:new m(a?.internalFormat??null,a?.textureData??null),transferList:o}}return{result:new m(null,null)}}if(t.hasETC){if(u||await x(),t.preMultiplyAlpha&&!h&&await g(),t.preMultiplyAlpha){const i=new Uint8ClampedArray(e.length);h?.premultiply(new Uint8Array(e),t.width,t.height,i),e=i}const n=await F(e,t.width,t.height,t.hasMipmap),a=n?await M(n):null,o=a?.compressedTexture?.levels.map(i=>i.buffer)||[];return{result:new m(a?.internalFormat??null,a?.compressedTexture??null),transferList:o}}return{result:new m(null,null)}}async function x(){u||(u=await(B??=R()))}async function g(){h||(h=await(X??=b()))}async function F(t,e,n,a,o=255,i=0,s=!1,l=!1){if(!u)return null;const r=new u.BasisEncoder;r.setPerceptual(!l),r.setCheckForAlpha(!0),r.setForceAlpha(!1),r.setRenormalize(l),r.setMipGen(a),r.setMipSRGB(!l),r.setCreateKTX2File(!0),r.setKTX2SRGBTransferFunc(!l),r.setQualityLevel(o),r.setCompressionLevel(i);const c=new Uint8Array(t.byteLength);r.setSliceSourceImage(0,new Uint8Array(t),e,n,s);const d=r.encode(c),f=new Uint8Array(c.buffer,0,d),p=new u.KTX2File(new Uint8Array(f));return p.isValid()?(r.delete(),f):(p.close(),p.delete(),r.delete(),null)}async function M(t){if(!u)return new m(null,null);const e=new u.KTX2File(new Uint8Array(t));e.startTranscoding();const[n,a]=e.getHasAlpha()?[A.ETC2_RGBA,w.COMPRESSED_RGBA8_ETC2_EAC]:[A.ETC1_RGB,w.COMPRESSED_RGB8_ETC2],o=e.getLevels(),i=[];for(let s=0;s<o;s++)i.push(new Uint8Array(e.getImageTranscodedSizeInBytes(s,0,0,n))),e.transcodeImage(i[s],s,0,0,n,0,-1,-1);return e.close(),e.delete(),{internalFormat:a,compressedTexture:{type:"compressed",levels:i}}}function U(t){const e=new OffscreenCanvas(t.width,t.height),n=e.getContext("2d");return n.drawImage(t,0,0),n.getImageData(0,0,e.width,e.height).data}function v(t,e,n,a,o){const i=new Uint8ClampedArray(t).subarray(0,e*n*a);if(!o)return i;const s=new Uint8ClampedArray(i.length),l=e*a;for(let r=0;r<n;r++){const c=r*l,d=(n-r-1)*l;s.set(i.subarray(c,c+l),d)}return s}const G=31,O=1,I=2,P=3,L=4,K=7,k=21,z=131072;function T(t){return t.charCodeAt(0)+(t.charCodeAt(1)<<8)+(t.charCodeAt(2)<<16)+(t.charCodeAt(3)<<24)}const $=T("DXT1"),V=T("DXT3"),H=T("DXT5");function Q(t,e){const n=new Int32Array(t.buffer,t.byteOffset,G);let a,o;switch(n[k]){case $:a=8,o=w.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case V:a=16,o=w.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case H:a=16,o=w.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let i=1,s=n[L],l=n[P];(3&s||3&l)&&(s=s+3&-4,l=l+3&-4);const r=s,c=l;let d,f;n[I]&z&&e!==!1&&(i=Math.max(1,n[K]));let p=t.byteOffset+n[O]+4;const _=[];for(let y=0;y<i;++y)f=(s+3>>2)*(l+3>>2)*a,d=new Uint8Array(t.buffer,p,f),_.push(d),p+=f,s=Math.max(1,s>>1),l=Math.max(1,l>>1);return{textureData:{type:"compressed",levels:_},internalFormat:o,width:r,height:c}}export{m as TextureCompressionWorkerOutput,j as compress,F as compressRGBADataToKTX2,M as createTextureDataKTX2,x as initializeBasisEncoder,g as initializeDXTEncoder};
