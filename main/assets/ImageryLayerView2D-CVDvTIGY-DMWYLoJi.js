import{v as s,S as o,i as w,ah as f,av as V,ag as E,bi as b,a2 as S,K as F,j as R,aU as _,a1 as P,bp as I,n as D,ax as $,f as A,bM as U,o as C,$ as L,w as q}from"./main-BNyfiy7F.js";import{o as M}from"./GraphicsCollection-CWTXNZOX-byIc4Plz.js";import{o as N,c as O,l as j}from"./RasterVFDisplayObject-CnriTVT9-BAfeMPlc.js";import{X as H,Y as G}from"./LayerView-Bish-E63-CKamidsq.js";import{X as J}from"./GraphicsView2D-C4wYE2ut-CZNY0L4M.js";import{l as W}from"./HighlightGraphicContainer-Dt5r6lMq-qyTW80Io.js";import{z as X,P as K,w as Q}from"./dataUtils-BkPy4R3C-BCJGlRln.js";import{d as Y}from"./BitmapContainer-BC8fvmFc-B6YNll-H.js";import{x as Z}from"./Container-BcuL1ZEG-D4wBhLyj.js";import{d as tt}from"./Bitmap-CcqmzvfR-CYPiLhcS.js";import{K as et}from"./ExportStrategy-BNE7Gp0u-DYAtr2DV.js";import{o as it}from"./rasterProjectionHelper-Calp0o_1-C3CN4H0Y.js";import{E as B}from"./MapView-BGOJJ8ch-Dje0kJEZ.js";import{N as rt}from"./WGLContainer-LxgEo4I_-CLS4cGDP.js";import{T as st}from"./timeSupport-ohWmWReZ-C5-edFd-.js";import{b as at}from"./Query-BrwMGK8U-CCzP1I20.js";import{m as ot}from"./popupUtils-nV1O8RUO-DpXyJE-g.js";import{n as nt}from"./RefreshableLayerView-BdQpGYly-6Kzm0_Su.js";import"./BufferObject-BM_7mcDb-D2eG9PsQ.js";import"./Texture-BCt2hphT-B3fQk9VU.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./VertexArrayObject-M4iRGGoi-MVzHGmfo.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./LabelMetric-BeluzH3o-Bgyy7ZLs.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./Program-DLVwTiPA-DuNh6CwL.js";import"./layerViewUtils-DURAPenP-CwED6qeZ.js";import"./UpdatingHandles-CUu3u1ms-BIdeZn6a.js";import"./FieldsIndex-HmzMbJQG-bu1j8kZQ.js";import"./UnknownTimeZone-C--TOcPG-DgJw7EQC.js";import"./UpdateTracking2D-Du_WIf4G-D2umhCAm.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./GeometryUtils-NHgB9gGQ-BOISEWyS.js";import"./utils-SPbpQbmm-Bi_GIGH0.js";import"./definitions-DJSdSb77-DkoRHaVx.js";import"./Tile-D75RMC64-C5dNrHl8.js";import"./TileKey-C5IL-JBr-ByQCsag0.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./QueueProcessor-DbfV9fLy-DadPOwoA.js";import"./workers-PiCjreoO-CoeFUD7p.js";import"./ReactiveMap-CFk6jPfN-_i2hUtfB.js";import"./signal-CETehA7D-CUOb3AUy.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./BindType-9iOk18Ed-CRW1cdX4.js";import"./Util-BjGjeg6f-08Szkf4F.js";import"./vec2f64-CeODonrJ-CkkJCdRC.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./OverrideHelper-DWRbVlj1-Bgtcgj-E.js";import"./colorUtils-Cthpxcks-CzGrSln-.js";import"./quantizationUtils-bJy1cRwp-DcVs_chM.js";import"./AttributeStore-DjyP9U7y-1U26MNH3.js";import"./TimeOnly-DSMefxKy-ONWVZn0z.js";import"./timeSupport-jPViR5jn-xTQK1dJc.js";import"./featureConversionUtils-D6hFQ4Af-CqR__5Xd.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryUtils-Brxu6254-DG1Jkfpk.js";import"./projection-BA9M1R7d-CFfzn5H_.js";import"./projectBuffer-CvCBvJ6W-D_rxfrjt.js";import"./normalizeUtils-Bxmy9MNI-DBdQVIGZ.js";import"./normalizeUtilsCommon-CRJlkfEA-Dnie3PBL.js";import"./utils-9sQxfkoa-CCu3H0rb.js";import"./utils-Bq23Xwmj-B8kwi51K.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./labelUtils-BW14kBqX-CGKKhFzh.js";import"./diffUtils-Cz3Fi8Xb-CinLCnvf.js";import"./FeatureCommandQueue-DzV-HBIG-MSdGS75L.js";import"./constants-Bqe1QJ4u-F8oTIn7N.js";import"./lengthUtils-DKpMe5qR-CSpyMgzR.js";import"./capabilities-agoTWNzb-CtsNgRyk.js";import"./normalizeUtilsSync-CBU7m8rm-B6Gwozkt.js";import"./AGraphicContainer-LUCT6Gle-Kp_Ozy9D.js";import"./TechniqueInstance-DGTKoOL6-D0L0PsXd.js";import"./TileContainer-D48pXXgL-CzQcbOXO.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./parser-DyDJ-rlI-Ce49-Im9.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-C5DXQzdb.js";import"./TileInfo-CWIRDhZl-BRtXiUT7.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./Cyclical-C_9rKUUQ-Cik2Fc52.js";import"./CollectionFlattener-DkHuHn5E-C_QlZM3K.js";import"./themeUtils-YjM7iIiX-DZ9GcGxR.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./Map-1zd11DKO-B85vIrPb.js";import"./Basemap-BEqqSTw9-CurKl591.js";import"./loadAll-e978YItg-DoFxIH1Y.js";import"./PortalItem-CctGdnxF-DED2in5u.js";import"./writeUtils-D5qlLkwk-CuyRnth2.js";import"./compilerUtils-CV1QYWI8-KRXpwzek.js";import"./TablesMixin-C8RojhYs-BRoxMySi.js";import"./Layer-ChoECxvZ-D_sywEJS.js";import"./TimeExtent-Cn0Jofqr-BUf77X_H.js";import"./HeightModelInfo-C5vFqzyF-CIiLczyn.js";import"./arcgisLayerUrl-HNYh8jvG-CarWcTLX.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./unitBezier-CGtWxaCq-BRwEDigF.js";import"./Scheduler-B7UX7Wr5-CQ_fDN4C.js";import"./vec32-D9GsKZ1t-DrP3-XI8.js";import"./imageUtils-BA2D6Uf1-N776nea8.js";import"./Version-CoKzbupV-BQe52sIu.js";import"./ColorBackground-gVZldRLm-DM8-Hp0N.js";import"./Field-C6hA1tZj-cd1zkCNB.js";import"./fieldType-CD2CL2hr-C1DvAoGt.js";import"./ProgramTemplate-DQOm6Omy-Bs_A3gjT.js";import"./StyleDefinition-Ct4HIk9T-B82pTf0h.js";import"./config-nuMERBvb-MDUrh2eL.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";let h=class extends R{constructor(){super(...arguments),this.attached=!1,this.container=new Z,this.updateRequested=!1,this.type="imagery",this._bitmapView=new Y}destroy(){this.attached&&(this.detach(),this.attached=!1),this.updateRequested=!1}get updating(){return!this.attached||this.isUpdating()}update(t){this.strategy.update(t).catch(e=>{_(e)||P.getLogger(this).error(e)})}hitTest(t){return new b({attributes:{},geometry:t.clone(),layer:this.layer})}attach(){this.container.addChild(this._bitmapView);const t=this.layer.version>=10,e=this.layer.version>=10.1?this.layer.imageMaxHeight:2048,i=this.layer.version>=10.1?this.layer.imageMaxWidth:2048;this.strategy=new et({container:this._bitmapView,imageNormalizationSupported:t,imageMaxHeight:e,imageMaxWidth:i,fetchSource:this._fetchImage.bind(this),requestUpdate:()=>this.requestUpdate()})}detach(){this.strategy.destroy(),this._bitmapView.removeAllChildren(),this.container.removeAllChildren(),this.updateRequested=!1}redraw(){this.strategy.updateExports(async t=>{const{source:e}=t;if(!e||e instanceof ImageBitmap)return;const i=await this.layer.applyRenderer({extent:e.extent,pixelBlock:e.originalPixelBlock??e.pixelBlock});e.filter=r=>this.layer.pixelFilter?this.layer.applyFilter(r):{...i,extent:e.extent}}).catch(t=>{_(t)||P.getLogger(this).error(t)})}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.view.requestUpdate())}isUpdating(){return this.strategy.updating||this.updateRequested}getPixelData(){if(this.updating)return null;const t=this.strategy.bitmaps;if(t.length===1&&t[0].source)return{extent:t[0].source.extent,pixelBlock:t[0].source.originalPixelBlock};if(t.length>1){const e=this.view.extent,i=t.map(a=>a.source).filter(a=>a.extent&&a.extent.intersects(e)).map(a=>({extent:a.extent,pixelBlock:a.originalPixelBlock})),r=X(i,e);return r!=null?{extent:r.extent,pixelBlock:r.pixelBlock}:null}return null}async _fetchImage(t,e,i,r){(r=r||{}).timeExtent=this.timeExtent,r.requestAsImageElement=!0,r.returnImageBitmap=!0;const a=await this.layer.fetchImage(t,e,i,r);if(a.imageBitmap)return a.imageBitmap;const n=await this.layer.applyRenderer(a.pixelData,{signal:r.signal}),l=new tt(n.pixelBlock,n.extent?.clone(),a.pixelData.pixelBlock);return l.filter=u=>this.layer.applyFilter(u),l}};s([o()],h.prototype,"attached",void 0),s([o()],h.prototype,"container",void 0),s([o()],h.prototype,"layer",void 0),s([o()],h.prototype,"strategy",void 0),s([o()],h.prototype,"timeExtent",void 0),s([o()],h.prototype,"view",void 0),s([o()],h.prototype,"updateRequested",void 0),s([o()],h.prototype,"updating",null),s([o()],h.prototype,"type",void 0),h=s([w("esri.views.2d.layers.imagery.ImageryView2D")],h);const lt=h;class ht extends rt{constructor(){super(...arguments),this.symbolTypes=["triangle"]}prepareRenderPasses(e){const i=e.registerRenderPass({name:"imagery (vf)",brushes:[j],target:()=>this.children,drawPhase:B.MAP});return[...super.prepareRenderPasses(e),i]}doRender(e){this.visible&&e.drawPhase===B.MAP&&this.symbolTypes.forEach(i=>{e.renderPass=i,super.doRender(e)})}}let y=class extends R{constructor(t){super(t),this._loading=null,this.update=I((e,i)=>this._update(e,i).catch(r=>{_(r)||P.getLogger(this).error(r)}))}get updating(){return!!this._loading}redraw(t){if(!this.container.children.length)return;const e=this.container.children[0];e.symbolizerParameters=t,e.invalidateVAO(),this.container.symbolTypes=t.style==="wind_speed"?["scalar","triangle"]:t.style==="simple_scalar"?["scalar"]:["triangle"],this.container.requestRender()}async _update(t,e,i){if(!t.stationary)return;const{extent:r,spatialReference:a}=t.state,n=new D({xmin:r.xmin,ymin:r.ymin,xmax:r.xmax,ymax:r.ymax,spatialReference:a}),[l,u]=t.state.size;this._loading=this.fetchPixels(n,l,u,i);const m=await this._loading;this._addToDisplay(m,e,t.state),this._loading=null}_addToDisplay(t,e,i){if(t.pixelBlock==null)return this.container.children.forEach(l=>l.destroy()),void this.container.removeAllChildren();const{extent:r,pixelBlock:a}=t,n=new O(a);n.offset=[0,0],n.symbolizerParameters=e,n.rawPixelData=t,n.invalidateVAO(),n.x=r.xmin,n.y=r.ymax,n.pixelRatio=i.pixelRatio,n.rotation=i.rotation,n.resolution=i.resolution,n.width=a.width*e.symbolTileSize,n.height=a.height*e.symbolTileSize,this.container.children.forEach(l=>l.destroy()),this.container.removeAllChildren(),this.container.symbolTypes=e.style==="wind_speed"?["scalar","triangle"]:e.style==="simple_scalar"?["scalar"]:["triangle"],this.container.addChild(n)}};s([o()],y.prototype,"fetchPixels",void 0),s([o()],y.prototype,"container",void 0),s([o()],y.prototype,"_loading",void 0),s([o()],y.prototype,"updating",null),y=s([w("esri.views.2d.layers.imagery.ImageryVFStrategy")],y);const pt=y;let p=class extends R{constructor(){super(...arguments),this.attached=!1,this.container=new ht,this.type="imageryVF",this._dataParameters={exportParametersVersion:0,bbox:"",symbolTileSize:0,time:""},this._fetchpixels=async(t,e,i,r)=>{const a=await this._projectFullExtentPromise,{symbolTileSize:n}=this.layer.renderer,{extent:l,width:u,height:m}=K(t,e,i,n,a);if(a!=null&&!a.intersects(t))return{extent:l,pixelBlock:null};const d={bbox:`${l.xmin}, ${l.ymin}, ${l.xmax}, ${l.ymax}`,exportParametersVersion:this.layer.exportImageServiceParameters.version,symbolTileSize:n,time:JSON.stringify(this.timeExtent||"")};if(this._canReuseVectorFieldData(d)){const c=this.getPixelData();if(c!=null&&`${c.extent.xmin}, ${c.extent.ymin}, ${c.extent.xmax}, ${c.extent.ymax}`===d.bbox)return c}const{pixelData:v}=await this.layer.fetchImage(l,u,m,{timeExtent:this.timeExtent,requestAsImageElement:!1,signal:r});this._dataParameters=d;const g=v?.pixelBlock;return g==null?{extent:l,pixelBlock:null}:{extent:l,pixelBlock:this.layer.rasterInfo.dataType==="vector-uv"?Q(g,"vector-uv"):g}}}get updating(){return!this.attached||this._strategy.updating}attach(){this._projectFullExtentPromise=this._getProjectedFullExtent(this.view.spatialReference),this._strategy=new pt({container:this.container,fetchPixels:this._fetchpixels}),this.addHandles(f(()=>this.layer.renderer,t=>this._updateSymbolizerParams(t),$),"attach")}detach(){this._strategy.destroy(),this.container.children.forEach(t=>t.destroy()),this.container.removeAllChildren(),this.removeHandles("attach"),this._strategy=this.container=this._projectFullExtentPromise=null}getPixelData(){const t=this.container.children[0]?.rawPixelData;if(this.updating||!t)return null;const{extent:e,pixelBlock:i}=t;return{extent:e,pixelBlock:i}}hitTest(t){return new b({attributes:{},geometry:t.clone(),layer:this.layer})}update(t){this._strategy.update(t,this._symbolizerParams).catch(e=>{_(e)||P.getLogger(this).error(e)})}redraw(){const{renderer:t}=this.layer;t&&(this._updateSymbolizerParams(t),this._strategy.redraw(this._symbolizerParams))}_canReuseVectorFieldData(t){const e=this._dataParameters.exportParametersVersion===t.exportParametersVersion,i=this._dataParameters.time===t.time,r=this._dataParameters.symbolTileSize===t.symbolTileSize,a=this._dataParameters.bbox===t.bbox;return e&&i&&r&&a}async _getProjectedFullExtent(t){try{return it(this.layer.fullExtent,t)}catch{try{const e=(await A(this.layer.url,{query:{option:"footprints",outSR:U(t),f:"json"}})).data.featureCollection.layers[0].layerDefinition.extent;return e?D.fromJSON(e):null}catch{return null}}}_updateSymbolizerParams(t){t.type==="vector-field"&&(this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null}))}};s([o()],p.prototype,"attached",void 0),s([o()],p.prototype,"container",void 0),s([o()],p.prototype,"layer",void 0),s([o()],p.prototype,"timeExtent",void 0),s([o()],p.prototype,"type",void 0),s([o()],p.prototype,"view",void 0),s([o()],p.prototype,"updating",null),p=s([w("esri.views.2d.layers.imagery.VectorFieldView2D")],p);const mt=p,dt=t=>{let e=class extends t{constructor(){super(...arguments),this.view=null}get timeExtent(){return st(this.layer,this.view?.timeExtent,this._get("timeExtent"))}async fetchPopupFeaturesAtLocation(i,r){const{layer:a}=this;if(!i)throw new C("imagerylayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a});const{popupEnabled:n}=a,l=ot(a,r);if(!n||l==null)return[];const u=await l.getRequiredFields();L(r);const m=new at;m.timeExtent=this.timeExtent,m.geometry=i,m.outFields=u,m.outSpatialReference=i.spatialReference;const{resolution:d,spatialReference:v}=this.view,g=this.view.type==="2d"?new q(d,d,v):new q(.5*d,.5*d,v),{returnTopmostRaster:c,showNoDataRecords:k}=l.layerOptions||{returnTopmostRaster:!0,showNoDataRecords:!1},z={returnDomainValues:!0,returnTopmostRaster:c,pixelSize:g,showNoDataRecords:k,signal:r?.signal};return a.queryVisibleRasters(m,z).then(T=>T)}canResume(){return!!super.canResume()&&!this.timeExtent?.isEmpty}};return s([o()],e.prototype,"layer",void 0),s([o()],e.prototype,"suspended",void 0),s([o({readOnly:!0})],e.prototype,"timeExtent",null),s([o()],e.prototype,"view",void 0),e=s([w("esri.views.layers.ImageryLayerView")],e),e};let x=class extends dt(nt(H(G))){constructor(){super(...arguments),this._exportImageVersion=-1,this._highlightGraphics=new M,this._highlightView=void 0,this.layer=null,this.subview=null}get pixelData(){const{subview:t}=this;return this.updating||!t?null:"getPixelData"in t?t.getPixelData():null}update(t){this.subview?.update(t)}attach(){this.layer.increaseRasterJobHandlerUsage(),this._setSubView(),this.view&&(this._highlightView=new J({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new W(this.view.featuresTilingScheme)}),this.container.addChild(this._highlightView.container)),this.addAttachHandles([f(()=>this.layer.exportImageServiceParameters.version,t=>{t&&this._exportImageVersion!==t&&(this._exportImageVersion=t,this.requestUpdate())},V),f(()=>this.timeExtent,t=>{const{subview:e}=this;e&&(e.timeExtent=t,"redraw"in e?this.requestUpdate():e.redrawOrRefetch())},V),this.layer.on("redraw",()=>{const{subview:t}=this;t&&("redraw"in t?t.redraw():t.redrawOrRefetch())}),f(()=>this.layer.renderer,()=>this._setSubView())])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this.container.removeAllChildren(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null,this._highlightView?.destroy(),this._exportImageVersion=-1}viewChange(){}moveEnd(){this.requestUpdate()}highlight(t,e){if(!((Array.isArray(t)?t[0]:E.isCollection(t)?t.at(0):t)instanceof b))return S();let i=[];return Array.isArray(t)||E.isCollection(t)?i=t.map(r=>r.clone()):t instanceof b&&(i=[t.clone()]),this._highlightGraphics.addMany(i),S(()=>this._highlightGraphics.removeMany(i))}async doRefresh(){this.requestUpdate()}isUpdating(){const t=!this.subview||this.subview.updating||!!this._highlightView?.updating;return F("esri-2d-log-updating")&&console.log(`Updating ImageryLayerView2D (${this.layer.id}): ${t}
-> subview ${!this.subview||this.subview.updating}
-> higlightView ${this._highlightView?.updating}
`),t}_setSubView(){if(!this.view)return;const t=this.layer.renderer?.type;let e="imagery";if(t==="vector-field"?e="imageryVF":t==="flow"&&(e="flow"),this.subview){const{type:i}=this.subview;if(i===e)return this._attachSubview(this.subview),void(i==="flow"?this.subview.redrawOrRefetch():i==="imagery"&&this.layer.format==="lerc"?this.subview.redraw():this.requestUpdate());this._detachSubview(this.subview),this.subview?.destroy()}this.subview=e==="imagery"?new lt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):e==="imageryVF"?new mt({layer:this.layer,view:this.view,timeExtent:this.timeExtent}):new N({layer:this.layer,layerView:this}),this._attachSubview(this.subview),this.requestUpdate()}_attachSubview(t){t&&!t.attached&&(t.attach(),t.attached=!0,this.container.addChildAt(t.container,0))}_detachSubview(t){t?.attached&&(this.container.removeChild(t.container),t.detach(),t.attached=!1)}};s([o()],x.prototype,"pixelData",null),s([o()],x.prototype,"subview",void 0),x=s([w("esri.views.2d.layers.ImageryLayerView2D")],x);const wi=x;export{wi as default};
