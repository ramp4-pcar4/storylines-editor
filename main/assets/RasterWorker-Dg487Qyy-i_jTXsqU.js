import{v as f,bf as p,n as u,o as a,l as d}from"./main-C6fh4Kls.js";import{o as y}from"./GeographicTransformation-Ccb709r9-Bfjqk6A0.js";import{V as i,y as S,a as x,c as h,T as O,u as N,f as J,d as v,I as k}from"./dataUtils-CfR0oe2x-_p6-Wmo1.js";import{q as B,d as P,k as g,v as b}from"./RasterSymbolizer-BN6RVtx9-B57QOs4g.js";import{q as w}from"./rasterFunctionHelper-ABMN-R6n-Ladgtwwd.js";import{W as z,D}from"./rasterProjectionHelper-DGqzGF1m-DluTD2N4.js";import{y as T,d as I,c as F}from"./PolynomialTransform-XpKTtnAc-Dt4NNC7b.js";import"./pixelRangeUtils-DcEknavd-DdeXXJfY.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./colorUtils-Eg6lOlXm-mswMQzH4.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./clipUtils-fw7VCGXU-cyIIGwvd.js";import"./colorRamps-trM-CPFS-CaaLAHa_.js";import"./Field-BIQ-quF4-D9uGmh34.js";import"./fieldType-PhcL4ff8-AxqBPhT2.js";import"./projectionUtils-B-CplN3q-B6-LeDqE.js";var m;let l=m=class extends T{constructor(){super(...arguments),this.type="identity"}clone(){return new m}};f([p({IdentityXform:"identity"})],l.prototype,"type",void 0),l=m=f([u("esri.layers.support.rasterTransforms.IdentityTransform")],l);const E={GCSShiftXform:I,IdentityXform:l,PolynomialXform:F};function j(n){if(!n?.type)return null;const r=E[n?.type];if(r){const t=new r;return t.read(n),t}return null}class rr{convertVectorFieldData(r){const t=i.fromJSON(r.pixelBlock),s=S(t,r.type);return Promise.resolve(s!=null?s.toJSON():null)}computeStatisticsHistograms(r){const t=i.fromJSON(r.pixelBlock),s=B(t);return Promise.resolve(s)}async decode(r){const t=await P(r.data,r.options);return t&&t.toJSON()}symbolize(r){r.pixelBlock=i.fromJSON(r.pixelBlock),r.extent=r.extent?a.fromJSON(r.extent):null;const t=this.symbolizer.symbolize(r);return Promise.resolve(t!=null?t.toJSON():null)}async updateSymbolizer(r){this.symbolizer=g.fromJSON(r.symbolizerJSON),r.histograms&&this.symbolizer?.rendererJSON.type==="rasterStretch"&&(this.symbolizer.rendererJSON.histograms=r.histograms)}async updateRasterFunction(r){this.rasterFunction=w(r.rasterFunctionJSON)}async process(r){const t=this.rasterFunction.process({extent:a.fromJSON(r.extent),primaryPixelBlocks:r.primaryPixelBlocks.map(s=>s!=null?i.fromJSON(s):null),primaryPixelSizes:r.primaryPixelSizes?.map(s=>s!=null?d.fromJSON(s):null),primaryRasterIds:r.primaryRasterIds});return t!=null?t.toJSON():null}stretch(r){const t=this.symbolizer.simpleStretch(i.fromJSON(r.srcPixelBlock),r.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(r){const t=b(i.fromJSON(r.srcPixelBlock));return Promise.resolve(t)}split(r){const t=x(i.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel??0,r.useBilinear===!1);return t&&t.forEach((s,o)=>{t.set(o,s?.toJSON())}),Promise.resolve(t)}clipTile(r){const t=i.fromJSON(r.pixelBlock),s=h({...r,pixelBlock:t});return Promise.resolve(s?.toJSON())}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map(c=>c?new i(c):null),s=O(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let o,e=s;return r.coefs&&(e=N(s,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(o=J(r.destDimension,r.gcsGrid),e=v(e,r.isUV?"vector-uv":"vector-magdir",o)),{pixelBlock:e?.toJSON(),localNorthDirections:o}}async createFlowMesh(r,t){const s={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:o,indexData:e}=await k(r.meshType,r.simulationSettings,s,t.signal);return{result:{vertexBuffer:o.buffer,indexBuffer:e.buffer},transferList:[o.buffer,e.buffer]}}async getProjectionOffsetGrid(r){const t=a.fromJSON(r.projectedExtent),s=a.fromJSON(r.srcBufferExtent);let o=null;r.datumTransformationSteps?.length&&(o=new y({steps:r.datumTransformationSteps})),await z();const e=r.rasterTransform?j(r.rasterTransform):null;return D({...r,projectedExtent:t,srcBufferExtent:s,datumTransformation:o,rasterTransform:e})}}export{rr as default};
