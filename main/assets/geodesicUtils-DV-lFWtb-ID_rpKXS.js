import{cB as _,T as C,ch as ee,c as B,co as D,af as te,L as ne,Q as se}from"./main-D7vwjMDX.js";import{i as q,d as ae,t as ie}from"./projection-m8vi7Cxv-CyI2jDkU.js";function E(e){if(!e)return null;const n=e.wkid;if(n)return ae[n];const t=e.wkt2??e.wkt;return t?oe(t):null}function oe(e){const n=ie.exec(e);if(!n||n.length!==2)return null;const t=n[1].split(",");if(!t||t.length<3)return null;const c=parseFloat(t[1]),s=parseFloat(t[2]);return isNaN(c)||isNaN(s)?null:{a:c,f:s===0?0:1/s}}function P(e){const n=E(e);if(re(n))return n;const t=n.a*(1-n.f);return Object.assign(n,{b:t,eSq:1-(t/n.a)**2,radius:(2*n.a+t)/3,densificationRatio:1e4/((2*n.a+t)/3)})}function re(e){return e!=null&&"b"in e&&"eSq"in e&&"radius"in e}function O(e,n,t){const{a:c,eSq:s}=P(t),a=Math.sqrt(s),i=Math.sin(n[1]*q),l=c*n[0]*q;let r;return s>0?r=c*((1-s)*(i/(1-s*(i*i))-1/(2*a)*Math.log((1-a*i)/(1+a*i))))*.5:r=c*i,e[0]=l,e[1]=r,e}function Q(e){return ee(e)&&!!E(e)}function ue(e,n="square-meters"){if(e.some(i=>!Q(i.spatialReference)))throw new B("geodesic-areas:invalid-spatial-reference","the input geometries spatial reference is not supported");const t=[];for(let i=0;i<e.length;i++){const l=e[i],r=l.spatialReference,{radius:h,densificationRatio:u}=P(r),o=h*u;t.push(he(l,o))}const c=[],s=[0,0],a=[0,0];for(let i=0;i<t.length;i++){const{rings:l,spatialReference:r}=t[i];let h=0;for(let u=0;u<l.length;u++){const o=l[u];O(s,o[0],r),O(a,o[o.length-1],r);let M=a[0]*s[1]-s[0]*a[1];for(let d=0;d<o.length-1;d++)O(s,o[d+1],r),O(a,o[d],r),M+=a[0]*s[1]-s[0]*a[1];h+=M}h=D(h,"square-meters",n),c.push(h/-2)}return c}function fe(e,n="meters"){if(!e)throw new B("geodesic-lengths:invalid-geometries","the input geometries type is not supported");if(e.some(c=>!Q(c.spatialReference)))throw new B("geodesic-lengths:invalid-spatial-reference","the input geometries spatial reference is not supported");const t=[];for(let c=0;c<e.length;c++){const s=e[c],{spatialReference:a}=s,i=s.type==="polyline"?s.paths:s.rings;let l=0;for(let r=0;r<i.length;r++){const h=i[r];let u=0;for(let o=1;o<h.length;o++){const M=h[o-1][0],d=h[o][0],m=h[o-1][1],g=h[o][1];if(m!==g||M!==d){const p=new K;U(p,[M,m],[d,g],a),u+=p.distance}}l+=u}l=D(l,"meters",n),t.push(l)}return t}function he(e,n){if(e.type!=="polyline"&&e.type!=="polygon")throw new B("geodesic-densify:invalid-geometry","the input geometry is neither polyline nor polygon");const{spatialReference:t}=e;if(!Q(t))throw new B("geodesic-densify:invalid-spatial-reference","the input geometry spatial reference is not supported");const c=e.type==="polyline"?e.paths:e.rings,s=[],a=[0,0],i=new K;for(const r of c){const h=[];s.push(h),h.push([r[0][0],r[0][1]]);let u,o,M=r[0][0],d=r[0][1];for(let m=0;m<r.length-1;m++){if(u=r[m+1][0],o=r[m+1][1],M===u&&d===o)continue;const g=[M,d];U(i,[M,d],[u,o],t);const{azimuth:p,distance:v}=i,w=v/n;if(w>1){for(let A=1;A<=w-1;A++)I(a,g,p,A*n,t),h.push(a.slice());I(a,g,p,(v+Math.floor(w-1)*n)/2,t),h.push(a.slice())}I(a,g,p,v,t),h.push(a.slice()),M=a[0],d=a[1]}}const l=te(C,t);return e.type==="polyline"?new ne({paths:s,spatialReference:l}):new se({rings:s,spatialReference:l})}class K{constructor(n=0,t=void 0,c=void 0){this.distance=n,this.azimuth=t,this.reverseAzimuth=c}}function I(e,n,t,c,s){const a=n[0],i=n[1],l=a*q,r=i*q,h=(t??0)*q,{a:u,b:o,f:M}=P(s),d=Math.sin(h),m=Math.cos(h),g=(1-M)*Math.tan(r),p=1/Math.sqrt(1+g*g),v=g*p,w=Math.atan2(g,m),A=p*d,j=A*A,z=1-j,f=z*(u*u-o*o)/(o*o),x=1+f/16384*(4096+f*(f*(320-175*f)-768)),F=f/1024*(256+f*(f*(74-47*f)-128));let R,S,y,N=c/(o*x),W=2*Math.PI;for(;Math.abs(N-W)>1e-12;)y=Math.cos(2*w+N),R=Math.sin(N),S=Math.cos(N),W=N,N=c/(o*x)+F*R*(y+F/4*(S*(2*y*y-1)-F/6*y*(4*R*R-3)*(4*y*y-3)));const b=v*R-p*S*m,k=Math.atan2(v*S+p*R*m,(1-M)*Math.sqrt(j+b*b)),L=M/16*z*(4+M*(4-3*z)),G=Math.atan2(R*d,p*S-v*R*m)-(1-L)*M*A*(N+L*R*(y+L*S*(2*y*y-1)));return e[0]=(l+G)/q,e[1]=k/q,e}function U(e,n,t,c){const s=n[0]*q,a=n[1]*q,i=t[0]*q,l=t[1]*q,{a:r,b:h,f:u,radius:o}=P(c),M=i-s,d=Math.atan((1-u)*Math.tan(a)),m=Math.atan((1-u)*Math.tan(l)),g=Math.sin(d),p=Math.cos(d),v=Math.sin(m),w=Math.cos(m);let A,j,z,f,x,F,R,S,y,N,W=1e3,b=M;do{if(R=Math.sin(b),S=Math.cos(b),z=Math.sqrt(w*R*(w*R)+(p*v-g*w*S)*(p*v-g*w*S)),z===0)return e.distance=0,e.azimuth=void 0,e.reverseAzimuth=void 0,e;x=g*v+p*w*S,F=Math.atan2(z,x),y=p*w*R/z,j=1-y*y,f=x-2*g*v/j,isNaN(f)&&(f=0),N=u/16*j*(4+u*(4-3*j)),A=b,b=M+(1-N)*u*y*(F+N*z*(f+N*x*(2*f*f-1)))}while(Math.abs(b-A)>1e-12&&--W>0);if(W===0){const Y=o,Z=Math.acos(Math.sin(a)*Math.sin(l)+Math.cos(a)*Math.cos(l)*Math.cos(i-s))*Y,T=i-s,$=Math.sin(T)*Math.cos(l),H=Math.cos(a)*Math.sin(l)-Math.sin(a)*Math.cos(l)*Math.cos(T),J=Math.atan2($,H);return e.azimuth=J/q,e.distance=Z,e.reverseAzimuth=void 0,e}const k=j*(r*r-h*h)/(h*h),L=k/1024*(256+k*(k*(74-47*k)-128)),G=h*(1+k/16384*(4096+k*(k*(320-175*k)-768)))*(F-L*z*(f+L/4*(x*(2*f*f-1)-L/6*f*(4*z*z-3)*(4*f*f-3)))),V=Math.atan2(w*Math.sin(b),p*v-g*w*Math.cos(b)),X=Math.atan2(p*Math.sin(b),p*v*Math.cos(b)-g*w);return e.azimuth=V/q,e.distance=G,e.reverseAzimuth=X/q,e}function pe(e){return Q(e)?e:_(e)?C.WGS84:null}export{K as C,U as D,Q as G,I as W,fe as c,ue as h,pe as u};
