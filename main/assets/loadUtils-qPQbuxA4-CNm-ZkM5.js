import{o as i,g as o}from"./fetchService-Bp_4TwIU-Lh3ZeIyd.js";import{D as y}from"./associatedFeatureServiceUtils-DCapzd9d-BGJe-Txx.js";class p{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}async fetchServiceMetadata(e,r){const a=this._serviceMetadatas.get(e);if(a)return a;const s=await i(e,r);return this._serviceMetadatas.set(e,s),s}async fetchItemData(e){const{id:r}=e;if(!r)return null;const{_itemDatas:a}=this;if(a.has(r))return a.get(r);const s=await e.fetchData();return a.set(r,s),s}async fetchCustomParameters(e,r){const a=await this.fetchItemData(e);return a&&typeof a=="object"&&(r?r(a):a.customParameters)||null}}function l(t){const e={id:t.id,name:t.name},r=o(t.type);return r!=="FeatureLayer"&&(e.layerType=r),e}async function b(t,e,r){if(t?.layers==null||t?.tables==null){const a=await r.fetchServiceMetadata(e,{customParameters:u(t)?.customParameters});(t=t||{}).layers=t.layers||a?.layers?.map(l),t.tables=t.tables||a?.tables?.map(l)}return t}function u(t){if(!t)return null;const{layers:e,tables:r}=t;return e?.length?e[0]:r?.length?r[0]:null}function h(t,e){return e==null?null:[...t.layers||[],...t.tables||[]].find(r=>r.id===e)}function d(t,e){return[...t.layers||[],...t.tables||[]].filter(({layerType:r})=>r?e.includes(r):e.includes("ArcGISFeatureLayer"))}function g(t){return(t?.layers?.length??0)+(t?.tables?.length??0)}function L(t){switch(t){case"catalog":return["CatalogLayer"];case"feature":return["ArcGISFeatureLayer"];case"oriented-imagery":return["OrientedImageryLayer"];case"subtype-group":return["SubtypeGroupLayer","SubtypeGroupTable"]}return null}function w(t){switch(t){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":case"SubtypeGroupTable":return"SubtypeGroupLayer"}return"FeatureLayer"}async function S(t,e,r){if(!t?.url)return e??{};if(e??={},!e.layers){const n=await r.fetchServiceMetadata(t.url);e.layers=n.layers?.map(l)}const{serverUrl:a,portalItem:s}=await y(t.url,{sceneLayerItem:t,customParameters:u(e)?.customParameters}).catch(()=>({serverUrl:null,portalItem:null}));if(a==null)return e.tables=[],e;if(!e.tables&&s){const n=await s.fetchData().catch(()=>null);if(n?.tables)e.tables=n.tables.map(l);else{const c=await r.fetchServiceMetadata(a,{customParameters:u(n)?.customParameters}).catch(()=>null);e.tables=c?.tables?.map(l)}}if(e.tables)for(const n of e.tables)n.url=`${a}/${n.id}`;return e}export{S as L,d as b,L as d,b as f,w as g,g as h,l,p as m,h as p,u};
