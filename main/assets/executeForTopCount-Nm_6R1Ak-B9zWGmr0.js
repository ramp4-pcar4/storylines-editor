import{y as i}from"./utils-DuaeuwP5-BVcrO2Qe.js";import{S as p}from"./queryTopFeatures-BdkfRugo-cQRPLmZL.js";import a from"./TopFeaturesQuery-C3E7qv-F-Be7kYwfy.js";import"./main-BcrVJ-UK.js";import"./normalizeUtils-b-vZURob-BAmt09SH.js";import"./utils-Jw-4AGsF-BN2zxMCH.js";import"./query-nJmB7Ppn-DeFPYkd3.js";import"./pbfQueryUtils-1j64fqcx-D91sdinI.js";import"./pbf-Ijhb7ANA-CJdyTJ3S.js";import"./memoryEstimations-iHVpvWPf-1ZkUvw96.js";import"./OptimizedGeometry-1qDYm3YK-BZ_tm_DB.js";import"./OptimizedFeatureSet-D6mgsKNr-CNc6cgch.js";import"./queryZScale-DBCLQqDI-BArR2DkE.js";import"./projection-m8vi7Cxv-BpsY9XA1.js";import"./TimeExtent-gZaEUVeW-B9yoiETw.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
