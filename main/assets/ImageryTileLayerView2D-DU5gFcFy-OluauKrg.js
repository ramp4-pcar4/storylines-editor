import{v as m,ai as W,I as p,t as A,aj as Oe,R as O,a8 as D,c6 as De,c as Ge,ao as Le,b9 as Ee,ay as Ae,s as je,b8 as qe,E as ve,ck as Te,jX as G}from"./main-DK5A1thH.js";import{$ as he,V as $e,b as B,r as We}from"./multidimensionalUtils-Cerm72TU-DQ16Clt1.js";import{o as Ne,l as He,c as Qe}from"./RasterVFDisplayObject-CBsAGPRv-kPI4NQGp.js";import{D as Ze,w as Je}from"./LayerView2D-CCfp06E--BD189G2x.js";import{s as Xe,v as Pe,E as H,m as Ye,e as E}from"./MapView-BcnxJC0k-Cy95F30Y.js";import{Q as Ke,E as Re,R as et,D as Y,G as tt,I as rt}from"./mat3-DOnW3DjW-C3hbW9XY.js";import{e as q}from"./vec2f32-CVhmN3Me-DxoqVD7C.js";import{u as st}from"./Container-BdpN3llD-B-wOs-W5.js";import{A as $,L as de,M as K,B as it,F as at,G as nt}from"./enums-DBi1-Mm2-CUS1pvQe.js";import{N as V,k as S,F as te,G as ot,M as lt,U as ee,b as ut,V as ct,L as ht,w as dt,x as mt}from"./rasterUtils-eBoM3Jzs-DKWFpTlt.js";import{l as me}from"./vec2f64-CEUyUoff-BBc0aQ6D.js";import{H as pt,O as ft}from"./Texture-DXSFJsEu-0d91IJKM.js";import{t as L}from"./definitions-CBIQmVpq-o3EUznKY.js";import{_ as pe}from"./VertexStream-BTTQGT6f-BvRa9IoP.js";import{c as gt,H as Se}from"./WGLContainer-CF3AeUnM-tNsuNR90.js";import{f as _t}from"./FramebufferObject-DQw0QX3p-D9ggpUo9.js";import{h as Ue}from"./TileContainer-Dc8VVA_r-RYj4Xeua.js";import{i as yt}from"./UpdatingHandles-DBzjq66S-DFpl8Tb3.js";import{D as xt,v as bt}from"./dataUtils-CkgWlGaX-7-RfqoHW.js";import{V as fe}from"./TileInfo-owTCOSRx-B-iRjIhJ.js";import{y as wt,c as ge,q as vt,N as Tt,H as Pt,a as Rt,j as St,b as Ut}from"./rasterProjectionHelper-BV-HUScL-GmkIpTDf.js";import{q as _e,k as It,X as Ct}from"./Tile-DvzRai0K-D8HnwkO_.js";import{i as Ft}from"./Scheduler-Br-2v2ys-DaLUn3wq.js";import{c as zt}from"./timeSupport-XeIgs7eV-DUE3BATc.js";import{i as Mt}from"./popupUtils-sIuvqRgn-Cx__Jk7j.js";import{v as Vt}from"./LayerView-D3XoMhlx-CJo7LRrX.js";import{n as kt}from"./RefreshableLayerView-CB9NNXxL-61bLbIkv.js";import"./Field-Cj6Pz3TI-Ca9WushU.js";import"./fieldType-VTpxE-EM-CxCafxk5.js";import"./VertexArrayObject-DTkLCIKs-UH72P2I_.js";import"./memoryEstimations-iHVpvWPf-CMfAjuGi.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./dataViewUtils-xig9T3UA-BQ8fRV02.js";import"./getDataTypeBytes-HSdrWtlL-ClHsCcSN.js";import"./BoundingBox-D9JxeQeA-SaxmeIkg.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./ReactiveMap-BaMcQuG3-XXoaBLPE.js";import"./layerViewUtils-Bk5QNiAa-BeVWUaX3.js";import"./globalCss-CFN4F315-BD5UDk6S.js";import"./Queue-B8H6jIv7-BD0bPSsY.js";import"./signal-DxzURL18-BUWbVrim.js";import"./Version-BTMwSXf1-W7KhXniF.js";import"./CollectionFlattener-9hYRBLDX-CtE9XQL7.js";import"./workers-0oosFQiO-DY7A0yfU.js";import"./intl-DLmy-Li5-BP8VBpPh.js";import"./projection-m8vi7Cxv-ByA_2Rez.js";import"./jsxFactory-C5LxVioS-D9YNnBiM.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./Map-DbZVFU-I-CQqRaFT7.js";import"./Basemap-DxWxjcEH-h15UwPgV.js";import"./loadAll-BIhJ1RSe-CSGUBoV5.js";import"./PortalItem-CJetnHeq-BjuWGLtc.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-BMLpTkEG.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./Layer-B8q-l4yV-Dsj21cQX.js";import"./TimeExtent-gZaEUVeW-DaDBMnur.js";import"./GraphicsCollection-rAFZo1AJ-sdXgSTo0.js";import"./HeightModelInfo-BkDck4B0-D_EM_hlv.js";import"./timeZoneUtils-z3WjfjXQ-CBz80Iqi.js";import"./Query-CxQYWcUQ-DdfiJ2tS.js";import"./IViewEvents-BE10MM98-CvMfjolG.js";import"./HighlightDefaults-Cg50f_1y-CeQprwVu.js";import"./a11yUtils-C2ydunC--U3BaqQd2.js";import"./heightModelInfoUtils-CI93rfC7-CA4V6Gqu.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./normalizeUtils-b-vZURob-A8spekoP.js";import"./utils-DuaeuwP5-IrMotWQ7.js";import"./utils-Jw-4AGsF-CezsCFGF.js";import"./mat2df32-BCnkwMW8-BLRY8i4P.js";import"./vec32-BuqRmYBM-Docn8r6P.js";import"./unitBezier-DhyPAQO8-B9kUb8N6.js";import"./imageUtils-DEFspgr5-2i-CEKzB.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./ColorBackground-Dcc9SnXm-BLvY25jm.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./EffectView-Bw7SZPlx-B2LQXkoN.js";import"./parser-hXQyB-Qx-BrGynOq8.js";import"./utils-BddLNd1v-CoUAkMm1.js";import"./ProgramTemplate-CBS0ERm4-BoP7Lzld.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./config-DB0LnTDt-CYa9nhWp.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./featureConversionUtils-DRaHTjrY-FINpcsWc.js";import"./OptimizedFeatureSet-D6mgsKNr-D8fSqNQJ.js";import"./OptimizedGeometry-1qDYm3YK-Cg6l96SZ.js";import"./pixelRangeUtils-BteWOAF5-CpV1k138.js";let Bt=class{constructor(r=15e3,e=5e3){this._timer=null,this._cachedBlocks=new Map,this._size=-1,this._duration=r,this._interval=Math.min(r,e)}decreaseRefCount(r,e){const t=r+"/"+e,s=this._cachedBlocks;if(s.has(t)){const i=s.get(t);return i.refCount--,i.refCount<=0&&(s.delete(t),i.controller&&i.controller.abort()),i.refCount}return 0}getBlock(r,e){const t=r+"/"+e,s=this._cachedBlocks;if(s.has(t)){const i=s.get(t);return i.ts=Date.now(),i.refCount++,s.delete(t),s.set(t,i),i.block}return null}putBlock(r,e,t,s){const i=this._cachedBlocks,a=r+"/"+e;if(i.has(a)){const n=i.get(a);n.ts=Date.now(),n.refCount++}else i.set(a,{block:t,ts:Date.now(),refCount:1,controller:s});this._trim(),this._updateTimer()}deleteBlock(r,e){const t=this._cachedBlocks,s=r+"/"+e;t.has(s)&&t.delete(s)}updateMaxSize(r){this._size=r,this._trim()}empty(){this._cachedBlocks.clear(),this._clearTimer()}getCurrentSize(){return this._cachedBlocks.size}_updateTimer(){if(this._timer!=null)return;const r=this._cachedBlocks;this._timer=setInterval(()=>{const e=Array.from(r),t=Date.now();for(let s=0;s<e.length&&e[s][1].ts<=t-this._duration;s++)r.delete(e[s][0]);r.size===0&&this._clearTimer()},this._interval)}_trim(){const r=this._cachedBlocks;if(this._size===-1||this._size>=r.size)return;const e=Array.from(r);for(let t=0;t<e.length-this._size;t++)r.delete(e[t][0])}_clearTimer(){this._timer!=null&&(clearInterval(this._timer),this._timer=null)}};const R=new Map,U=new Bt;function Ot(r,e){return e==null?r:`${r}?sliceId=${e}`}function Dt(r,e){const t={extent:null,rasterInfo:e,cache:new Map},s=R.get(r);return s?(s.push(t),s.length-1):(R.set(r,[t]),0)}function ye(r,e){const t=R.get(r);t&&(t[e]=null,t.some(s=>s!=null)||R.delete(r))}function xa(r,e,t){const s=R.get(r);if(!s)return e==null?U.decreaseRefCount(r,t):0;if(e==null||s[e]==null)return U.decreaseRefCount(r,t);const i=s[e]?.cache,a=i?.get(t);if(i&&a){if(a.refCount--,a.refCount===0){i.delete(t);for(let n=0;n<s.length;n++)s[n]?.cache.delete(t);a.controller&&a.controller.abort()}return a.refCount}return 0}function ba(r,e,t){const s=R.get(r);if(!s)return e==null?U.getBlock(r,t):null;if(e==null||s[e]==null){for(let a=0;a<s.length;a++){const n=s[a]?.cache.get(t);if(n)return n.refCount++,n.block}return U.getBlock(r,t)}const i=s[e]?.cache.get(t);if(i)return i.refCount++,i.block;for(let a=0;a<s.length;a++){if(a===e||!s[a])continue;const n=s[a]?.cache,o=n?.get(t);if(n&&o)return o.refCount++,n.set(t,o),o.block}return null}function wa(r,e,t,s,i=null){const a=R.get(r);if(!a)return void(e==null&&U.putBlock(r,t,s,i));if(e==null||a[e]==null)return void U.putBlock(r,t,s,i);const n={refCount:1,block:s,isResolved:!1,isRejected:!1,controller:i};s.then(()=>n.isResolved=!0).catch(()=>n.isRejected=!0),a[e]?.cache.set(t,n)}function va(r,e,t){const s=R.get(r);s?e!=null&&s[e]!=null?s[e]?.cache.delete(t):U.deleteBlock(r,t):e==null&&U.deleteBlock(r,t)}function Gt(r,e){const t=R.get(r);return t?t[e]??null:null}function xe(r,e,t,s,i,a,n=null){const o=Gt(r,e);if(!o)return;const l=o.extent,{cache:c,rasterInfo:h}=o;if(l&&l.xmin===t.xmin&&l.xmax===t.xmax&&l.ymin===t.ymin&&l.ymax===t.ymax)return;s=s??0;const u=t.clone().normalize(),{spatialReference:d,transform:_}=h,v=new Set;for(let f=0;f<u.length;f++){const P=u[f];if(P.xmax-P.xmin<=s||P.ymax-P.ymin<=s)continue;let x=Rt(P,d,n);_!=null&&(x=_.inverseTransform(x));const Q=new ve({x:s,y:s,spatialReference:P.spatialReference});if(i==null&&!(i=St(Q,d,P,n)))return;const{pyramidLevel:I,pyramidResolution:Z,excessiveReading:F}=Ut(i,h,a||"closest");if(F)return;const{storageInfo:T}=h,{origin:ie}=T,{x:ae,y:ne}=Z,oe=Math.max(0,Math.floor((x.xmin-ie.x)/ae)),le=Math.max(0,Math.floor((ie.y-x.ymax)/ne)),Fe=Math.ceil(x.width/ae-.1),ze=Math.ceil(x.height/ne-.1),ue=I>0?T.pyramidBlockWidth:T.blockWidth,ce=I>0?T.pyramidBlockHeight:T.blockHeight,k=T.blockBoundary[I];if(!k)continue;const j=1,Me=Math.max(k.minCol,Math.floor(oe/ue)-j),Ve=Math.max(k.minRow,Math.floor(le/ce)-j),ke=Math.min(k.maxCol,Math.floor((oe+Fe-1)/ue)+j),Be=Math.min(k.maxRow,Math.floor((le+ze-1)/ce)+j);for(let J=Ve;J<=Be;J++)for(let X=Me;X<=ke;X++)v.add(`${I}/${J}/${X}`)}c.forEach((f,P)=>{if(!v.has(P)){const x=c.get(P);(x==null||x.isResolved||x.isRejected)&&c.delete(P)}}),o.extent={xmin:t.xmin,ymin:t.ymin,xmax:t.xmax,ymax:t.ymax}}const Lt=r=>{let e=class extends r{constructor(){super(...arguments),this.layer=null,this.tileInfo=null}get fullExtent(){try{return this.layer.loaded?this._getFullExtent():null}catch{return null}}get timeExtent(){return zt(this.layer,this.view?.timeExtent,this._get("timeExtent"))}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){try{return this.layer.loaded?wt(this.layer.fullExtent,this.view.spatialReference,!0):null}catch{return null}}supportsSpatialReference(t){try{return!this.layer.loaded||!!ge(this.layer.serviceRasterInfo,t)}catch{return!1}}async fetchPopupFeaturesAtLocation(t,s){const{layer:i}=this;if(!t)throw new Ge("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:i});const{popupEnabled:a}=i,n=Mt(i,s);if(!a||n==null)return[];const o=[],{value:l,magdirValue:c,processedValue:h}=await i.identify(t,{timeExtent:this.timeExtent,signal:s?.signal});let u="";if(l?.length){u=i.type==="imagery-tile"&&i.hasStandardTime()&&l[0]!=null?l.map(x=>i.getStandardTimeValue(x)).join(", "):l.join(", ");const d={ObjectId:0};d[B.servicePixelValue]=i.type==="imagery-tile"&&i.raster.datasetFormat==="Function"?h?.join(", "):u,d[B.rawServicePixelValue]=u;const _=i.raster?.rasterInfo??i.serviceRasterInfo,v=_?.attributeTable;if(v!=null){const{fields:x,features:Q}=v,I=x.find(({name:T})=>T.toLowerCase()==="value"),Z=d[B.servicePixelValue],F=I?Q.find(T=>String(T.attributes[I.name])===Z):null;if(F)for(const T in F.attributes)F.attributes.hasOwnProperty(T)&&(d[$e+T]=F.attributes[T])}const f=_?.dataType;if(f!=="vector-magdir"&&f!=="vector-uv"||(d[B.magnitude]=c?.[0],d[B.direction]=c?.[1]),i.type==="imagery-tile"){const{multidimensionalDefinition:x}=this.layer.normalizeRasterFetchOptions({timeExtent:this.timeExtent});We(i.rasterFields,d,x)}const P=new Le({geometry:this.fullExtent?.clone(),attributes:d,layer:i,sourceLayer:i});o.push(P)}return o}async getSourceScale(){return await this.layer.load(),vt(this.layer.serviceRasterInfo,this.view.spatialReference)}_getFullExtent(){return ge(this.layer.serviceRasterInfo,this.view.spatialReference)}};return m([p()],e.prototype,"fullExtent",null),m([p()],e.prototype,"layer",void 0),m([p({readOnly:!0})],e.prototype,"timeExtent",null),m([p()],e.prototype,"tileInfo",void 0),m([p({readOnly:!0})],e.prototype,"hasTilingEffects",null),m([p()],e.prototype,"datumTransformation",null),e=m([A("esri.views.layers.ImageryTileLayerView")],e),e},Et={bandCount:3,minOutput:0,maxOutput:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:"none",type:"stretch"};class At extends st{constructor(e=null,t=null,s=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,this._colormapTexture=null,this._colormap=null,this._supportsBilinearTexture=!0,this._processedTexture=null,this.functionTextures=[],this.projected=!1,this.stencilRef=0,this.coordScale=[1,1],this._processed=!1,this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=e,this.transformGrid=t,this.interpolation=s}destroy(){this._disposeTextures()}get processedTexture(){return this._processedTexture}set processedTexture(e){this._processedTexture!==e&&(this._disposeTextures(!0),this._processedTexture=e)}get rasterTexture(){return this._rasterTexture}set rasterTexture(e){this._rasterTexture!==e&&(this._rasterTexture?.dispose(),this._rasterTexture=e),e==null&&(this.projected=!1)}get processed(){return this._processed}set processed(e){this._processed=e,e||(G(this.processedTexture),this.invalidateTexture())}get symbolizerParameters(){return this._symbolizerParameters||Et}set symbolizerParameters(e){this._symbolizerParameters!==e&&(this._symbolizerParameters=e,this._colormapTextureInvalidated=!0,this.commonUniforms=null)}get source(){return this._source}set source(e){this._source!==e&&(this._source=e,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.commonUniforms=null,this.projected=!1,this.invalidateTexture())}get suspended(){return this._suspended}set suspended(e){this._suspended&&!e&&this.stage&&(this.ready(),this.requestRender()),this._suspended=e}get bandIds(){return this._bandIds}set bandIds(e){this._bandIds=e,this._isBandIdsChanged(e)&&(this.projected=!1,this.invalidateTexture())}get interpolation(){return this._interpolation||"nearest"}set interpolation(e){this._interpolation=e,this._rasterTexture&&this._rasterTexture.setSamplingMode(this._getTextureSamplingMethod(e||"nearest")==="bilinear"?K.LINEAR:K.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(e){this._transformGrid!==e&&(this._transformGrid=e,this._transformGridTexture=G(this._transformGridTexture))}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}getRasterTextureSize(e=!1){const t=e||this.projected;return[t?this.width:this.source?.width||this.width,t?this.height:this.source?.height||this.height]}getRasterCellSize(){const e=this.rawPixelData?.srcPixelSize,{projected:t,resolution:s}=this;return e&&!t?[e.x,e.y]:[s,s]}_createTransforms(){return{displayViewScreenMat3:E()}}setTransform(e){const t=et(this.transforms.displayViewScreenMat3),[s,i]=e.toScreenNoRotation([0,0],[this.x,this.y]),a=this.resolution/this.pixelRatio/e.resolution,n=a*this.width,o=a*this.height,l=Math.PI*this.rotation/180;Y(t,t,q(s,i)),Y(t,t,q(n/2,o/2)),tt(t,t,-l),Y(t,t,q(-n/2,-o/2)),rt(t,t,q(n,o)),Re(this.transforms.displayViewScreenMat3,e.displayViewMat3,t)}getTextures({forProcessing:e=!1,useProcessedTexture:t=!1}={}){const s=t?this._processedTexture??this._rasterTexture:this._rasterTexture,i=[],a=[];return s?(this._transformGridTexture&&!this.projected&&(a.push(this._transformGridTexture),i.push("u_transformGrid")),t?(a.push(s),i.push("u_image"),this._colormapTexture&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a}):(a.push(s),i.push("u_image"),this._colormapTexture&&!e&&(a.push(this._colormapTexture),i.push("u_colormap")),{names:i,textures:a})):{names:i,textures:a}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:e}){if(!this.stage)return void this._disposeTextures();const t=this._isValidSource(this.source);t&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(e)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(e),this._rasterTexture&&(t?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=ht(e,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}updateProcessedTexture(){const{functionTextures:e}=this;e.length!==0&&(this.processedTexture=e.shift(),e.forEach(t=>t?.dispose()),e.length=0)}_createOrDestroyRasterTexture(e){const t=this.source?.extractBands(this.bandIds);if(!this._isValidSource(t))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdsChanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=!!e.capabilities.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource;this._rasterTexture=dt(e,t,i,a),this.projected=!1,this._processed=!1,this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdsChanged(e){const t=this._rasterTextureBandIds;return!(t==null&&e==null||t&&e&&t.join("")===e.join(""))}_isValidSource(e){return e!=null&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:t}=this.symbolizerParameters,s=t==="lut"&&!this.symbolizerParameters.isClassBreaks||t==="hillshade"||t==="stretch"&&this.symbolizerParameters.bandCount===1;return!this._supportsBilinearTexture||s||e!=="bilinear"&&e!=="cubic"?"nearest":"bilinear"}_updateColormapTexture(e){const t=this._colormap,s=this.symbolizerParameters.colormap;return s?t?s.length!==t.length||s.some((i,a)=>i!==t[a])?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=ee(e,s),void(this._colormap=s)):void 0:(this._colormapTexture=ee(e,s),void(this._colormap=s)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}_disposeTextures(e=!1){!this._transformGridTexture||e&&!this.projected||(this._transformGridTexture.dispose(),this._transformGridTexture=null),!e&&this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null,this._colormap=null,this._colormapTextureInvalidated=!0),!e&&this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this._processedTexture&&(this._processedTexture.dispose(),this._processedTexture=null)}}function jt(r){return r.source!=null}function re(r){const e=[];return r&&(e.push("applyProjection"),r.spacing[0]===1&&e.push("lookupProjection")),e}function Ie(r,e,t){const s=!t.capabilities.textureFloatLinear,i=[];return r==="cubic"?i.push("bicubic"):r==="bilinear"&&(e?(i.push("bilinear"),i.push("nnedge")):s&&i.push("bilinear")),i}const qt={vsPath:"raster/common",fsPath:"raster/lut",attributes:new Map([["a_position",0],["a_texcoord",1]])};function $t(r,e,t){const s=t?[]:re(e.transformGrid);return{defines:s,program:r.painter.materialManager.getProgram(qt,s)}}function Wt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});V(r.context,e,a,n),S(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const{colormap:o,colormapOffset:l}=t.symbolizerParameters,c=te(o,l);S(e,s,c)}const Nt={createProgram:$t,bindTextureAndUniforms:Wt},Ht={vsPath:"raster/common",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Qt(r,e,t){const{colormap:s}=e.symbolizerParameters,i=[...t?[]:re(e.transformGrid),...Ie(e.interpolation,!0,r.context)];return s!=null&&i.push("applyColormap"),{defines:i,program:r.painter.materialManager.getProgram(Ht,i)}}function Zt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});V(r.context,e,a,n),S(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const o=t.symbolizerParameters,{colormap:l,colormapOffset:c}=o;if(l!=null){const u=te(l,c);S(e,s,u)}const h=ot(o);S(e,s,{...h,u_scaling:1})}const Jt={createProgram:Qt,bindTextureAndUniforms:Zt},Xt={vsPath:"raster/common",fsPath:"raster/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Yt(r,e,t){const{colormap:s,bandCount:i}=e.symbolizerParameters,a=[...t?[]:re(e.transformGrid),...Ie(e.interpolation,i===1,r.context)];return e.isRendereredSource&&!t?a.push("noop"):s!=null&&a.push("applyColormap"),{defines:a,program:r.painter.materialManager.getProgram(Xt,a)}}function Kt(r,e,t,s,i=!1){const{names:a,textures:n}=t.getTextures({useProcessedTexture:i});V(r.context,e,a,n),S(e,s,t.commonUniforms),e.setUniformMatrix3fv("u_dvsMat3",t.transforms.displayViewScreenMat3);const o=t.symbolizerParameters,{colormap:l,colormapOffset:c}=o;if(l!=null){const u=te(l,c);S(e,s,u)}const h=lt(o);S(e,s,h)}const er={createProgram:Yt,bindTextureAndUniforms:Kt},N=new Map;function tr(r){return N.get(r)}N.set("lut",Nt),N.set("hillshade",Jt),N.set("stretch",er);const rr=[1,1],sr=[2,0,0,0,2,0,-1,-1,0];function b(r,e,t,s){const{context:i,rasterFunction:a,hasBranches:n}=r,{raster:o}=a.parameters,l=n?o?.id??-1:0,c=[t.functionTextures[l]??t.rasterTexture],h=["u_image"];if(s){const u=ee(i,s);t.functionTextures[100]=u,c.push(u),h.push("u_colormap")}V(i,e,h,c)}function se(r,e,t){const{rasters:s}=r.rasterFunction.parameters;if(!s)return;if(s.length<2)return b(r,e,t);const i=s.filter(a=>a.name!=="Constant").map(a=>a.id!=null&&a.name!=="Identity"?t.functionTextures[a.id]:t.rasterTexture);if(V(r.context,e,["u_image","u_image1","u_image2"].slice(0,i.length),i),i.length!==s.length){if(s.length===2){const a=s.findIndex(l=>l.name==="Constant"),n=a===0?[0,1,0,1,0,0,0,0,0]:[1,0,0,0,1,0,0,0,0],{value:o}=s[a].parameters;e.setUniform1f("u_image1Const",o),e.setUniformMatrix3fv("u_imageSwap",n)}else if(s.length===3){const a=[];if(s.forEach((n,o)=>n.name==="Constant"&&a.push(o)),a.length===1){const{value:n}=s[a[0]].parameters;e.setUniform1f("u_image1Const",n);const o=a[0]===0?[0,1,0,0,0,1,1,0,0]:a[0]===1?[1,0,0,0,0,1,0,1,0]:[1,0,0,0,1,0,0,0,1];e.setUniformMatrix3fv("u_imageSwap",o)}else if(a.length===2){const{value:n}=s[a[0]].parameters;e.setUniform1f("u_image1Const",n);const{value:o}=s[a[1]].parameters;e.setUniform1f("u_image2Const",o);const l=s.findIndex(h=>h.name!=="Constant"),c=l===0?[1,0,0,0,1,0,0,0,1]:l===1?[0,1,0,1,0,0,0,0,1]:[0,0,1,1,0,0,0,1,0];e.setUniformMatrix3fv("u_imageSwap",c)}}}}function y(r){r.setUniform2fv("u_coordScale",rr),r.setUniformMatrix3fv("u_dvsMat3",sr)}const ir={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/aspect",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ar(r,e){return r.painter.materialManager.getProgram(ir,[])}function nr(r,e,t){b(r,e,t),y(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const i=t.getRasterCellSize();e.setUniform2fv("u_cellSize",i)}const or={createProgram:ar,bindTextureAndUniforms:nr},lr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/bandarithmetic",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ur(r,e){const{painter:t,rasterFunction:s}=r,{indexType:i,isOutputRounded:a}=s.parameters,n=[i];return a&&n.push("roundOutput"),t.materialManager.getProgram(lr,n)}function cr(r,e,t){b(r,e,t),y(e);const{bandIndexMat3:s,adjustments:i}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s),e.setUniform1fv("u_adjustments",i)}const hr={createProgram:ur,bindTextureAndUniforms:cr},dr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/colormap2rgb",attributes:new Map([["a_position",0],["a_texcoord",1]])};function mr(r){const{painter:e}=r;return e.materialManager.getProgram(dr,[])}function pr(r,e,t){const{indexedColormap:s,offset:i}=r.rasterFunction.parameters;b(r,e,t,s),y(e),e.setUniform1f("u_colormapOffset",i),e.setUniform1f("u_colormapMaxIndex",s.length/4-1)}const fr={createProgram:mr,bindTextureAndUniforms:pr},gr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/compositeband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function _r(r,e){const t=r.rasterFunction.parameters.rasters.filter(i=>i.name==="Constant"),s=[];return t.length&&(s.push("oneConstant"),t.length===2&&s.push("twoConstant")),r.painter.materialManager.getProgram(gr,s)}function yr(r,e,t){se(r,e,t),y(e)}const xr={createProgram:_r,bindTextureAndUniforms:yr},br={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/computechange",attributes:new Map([["a_position",0],["a_texcoord",1]])};function wr(r){const{painter:e,rasterFunction:t}=r,{method:s,rasters:i,isOutputRounded:a}=t.parameters,n=[s.includes("-")?s.slice(0,s.indexOf("-")):s];return i.filter(o=>o.name==="Constant").length&&n.push("oneConstant"),a&&n.push("roundOutput"),e.materialManager.getProgram(br,n)}function vr(r,e,t){se(r,e,t),y(e);const{domainRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_domainRange",s)}const Tr={createProgram:wr,bindTextureAndUniforms:vr},Pr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/contrast",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Rr(r,e){return r.painter.materialManager.getProgram(Pr,[])}function Sr(r,e,t){b(r,e,t),y(e);const{contrastOffset:s,brightnessOffset:i}=r.rasterFunction.parameters;e.setUniform1f("u_contrastOffset",s),e.setUniform1f("u_brightnessOffset",i)}const Ur={createProgram:Rr,bindTextureAndUniforms:Sr},Ir={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/convolution",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Cr(r,e){const{painter:t,rasterFunction:s}=r,{kernelRows:i,kernelCols:a}=s.parameters,n=[{name:"rows",value:i},{name:"cols",value:a}];return t.materialManager.getProgram(Ir,n)}function Fr(r,e,t){b(r,e,t),y(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{kernel:s,clampRange:i}=r.rasterFunction.parameters;e.setUniform1fv("u_kernel",s),e.setUniform2fv("u_clampRange",i)}const zr={createProgram:Cr,bindTextureAndUniforms:Fr},Mr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/curvature",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Vr(r,e){const{painter:t,rasterFunction:s}=r,{curvatureType:i}=s.parameters,a=[i];return t.materialManager.getProgram(Mr,a)}function kr(r,e,t){b(r,e,t),y(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const{zFactor:i}=r.rasterFunction.parameters,a=t.getRasterCellSize();e.setUniform1f("u_zlFactor",200*i/a[0]/a[1])}const Br={createProgram:Vr,bindTextureAndUniforms:kr},Or={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/extractband",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Dr(r,e){return r.painter.materialManager.getProgram(Or,[])}function Gr(r,e,t){b(r,e,t),y(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const Lr={createProgram:Dr,bindTextureAndUniforms:Gr},Er={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/focalstatistics",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Ar(r,e){const{painter:t,rasterFunction:s}=r,{kernelRows:i,kernelCols:a,fillNoDataOnly:n,statisticsType:o}=s.parameters,l=[{name:"rows",value:i},{name:"cols",value:a},o];return n&&l.push("fill"),t.materialManager.getProgram(Er,l)}function jr(r,e,t){b(r,e,t),y(e),e.setUniform2fv("u_srcImageSize",[t.width,t.height]);const{clampRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_clampRange",s)}const qr={createProgram:Ar,bindTextureAndUniforms:jr},$r={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/grayscale",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Wr(r,e){return r.painter.materialManager.getProgram($r,[])}function Nr(r,e,t){b(r,e,t),y(e);const{weights:s}=r.rasterFunction.parameters;e.setUniform3fv("u_weights",s)}const Hr={createProgram:Wr,bindTextureAndUniforms:Nr},Qr={vsPath:"raster/rfx/vs",fsPath:"raster/hillshade",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Zr(r,e){const{indexedColormap:t}=r.rasterFunction.parameters,s=[];return t?.length&&s.push("applyColormap"),r.painter.materialManager.getProgram(Qr,s)}function Jr(r,e,t){const s=r.rasterFunction.parameters,{indexedColormap:i}=s;b(r,e,t,i),y(e);const a=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",a);const n=t.getRasterCellSize();e.setUniform2fv("u_cellSize",n);const{pixelSizeFactor:o}=s;if(o===0)e.setUniform2fv("u_factor",[s.factor[0]/n[0],s.factor[1]/n[1]]);else{const{zFactor:l,pixelSizePower:c,gcsFactor:h}=s,u=n[0]*h,d=n[1]*h,_=(l+u**c*o)/(8*u),v=(l+d**c*o)/(8*d);e.setUniform2fv("u_factor",[_,v])}e.setUniform1i("u_hillshadeType",s.hillshadeType),e.setUniform1fv("u_sinZcosAs",s.sinZcosAs),e.setUniform1fv("u_sinZsinAs",s.sinZsinAs),e.setUniform1fv("u_cosZs",s.cosZs),e.setUniform1fv("u_weights",s.weights),e.setUniform1f("u_opacity",1),e.setUniform1i("u_flipY",0),e.setUniform1f("u_scaling",255),e.setUniform1f("u_minValue",s.minValue),e.setUniform1f("u_maxValue",s.maxValue),i&&(e.setUniform1f("u_colormapOffset",s.offset),e.setUniform1f("u_colormapMaxIndex",i.length/4-1))}const be={createProgram:Zr,bindTextureAndUniforms:Jr},Xr={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/local",attributes:new Map([["a_position",0],["a_texcoord",1]])};function Yr(r){const{painter:e,rasterFunction:t}=r,{imageCount:s,operationName:i,rasters:a,isOutputRounded:n}=t.parameters,o=[i.toLowerCase()];s===2&&o.push("twoImages");const l=a.filter(c=>c.name==="Constant");return l.length&&(o.push("oneConstant"),l.length===2&&o.push("twoConstant")),n&&o.push("roundOutput"),e.materialManager.getProgram(Xr,o)}function Kr(r,e,t){se(r,e,t),y(e);const{domainRange:s}=r.rasterFunction.parameters;e.setUniform2fv("u_domainRange",s)}const we={createProgram:Yr,bindTextureAndUniforms:Kr},es={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/mask",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ts(r,e){const{painter:t,rasterFunction:s}=r,i=s.parameters.bandCount>1?["multiBand"]:[];return t.materialManager.getProgram(es,i)}function rs(r,e,t){b(r,e,t),y(e);const{includedRanges:s,noDataValues:i}=r.rasterFunction.parameters;e.setUniform1fv("u_includedRanges",s),e.setUniform1fv("u_noDataValues",i)}const ss={createProgram:ts,bindTextureAndUniforms:rs},is={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/ndvi",attributes:new Map([["a_position",0],["a_texcoord",1]])};function as(r,e){const{painter:t,rasterFunction:s}=r,i=s.parameters.scaled?["scaled"]:[];return t.materialManager.getProgram(is,i)}function ns(r,e,t){b(r,e,t),y(e);const{bandIndexMat3:s}=r.rasterFunction.parameters;e.setUniformMatrix3fv("u_bandIndexMat3",s)}const os={createProgram:as,bindTextureAndUniforms:ns},ls={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/remap",attributes:new Map([["a_position",0],["a_texcoord",1]])};function us(r,e){return r.painter.materialManager.getProgram(ls,[])}function cs(r,e,t){b(r,e,t),y(e);const{noDataRanges:s,rangeMaps:i,allowUnmatched:a,clampRange:n}=r.rasterFunction.parameters;e.setUniform1fv("u_noDataRanges",s),e.setUniform1fv("u_rangeMaps",i),e.setUniform1f("u_unmatchMask",a?1:0),e.setUniform2fv("u_clampRange",n)}const hs={createProgram:us,bindTextureAndUniforms:cs},ds={vsPath:"raster/common",fsPath:"raster/reproject",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ms(r,e){const{painter:t}=r,s=[],{interpolation:i,transformGrid:a}=e,n=r.rasterFunction?.parameters;return i==="cubic"?s.push("bicubic"):i==="bilinear"&&(s.push("bilinear"),n?.requireNNEdge&&s.push("nnedge")),a&&(s.push("applyProjection"),a.spacing[0]===1&&s.push("lookupProjection")),t.materialManager.getProgram(ds,s)}function ps(r,e,t){const{names:s,textures:i}=t.getTextures({forProcessing:!0});V(r.context,e,s,i),e.setUniform1f("u_scale",1),e.setUniform2fv("u_offset",[0,0]),e.setUniform2fv("u_coordScale",[1,1]),e.setUniformMatrix3fv("u_dvsMat3",[2,0,0,0,2,0,-1,-1,0]),e.setUniform1i("u_flipY",0),e.setUniform1f("u_opacity",1);const{width:a,height:n,source:o,transformGrid:l}=t;e.setUniform2fv("u_srcImageSize",[o.width,o.height]),e.setUniform2fv("u_targetImageSize",[a,n]),e.setUniform2fv("u_transformSpacing",l?l.spacing:me),e.setUniform2fv("u_transformGridSize",l?l.size:me)}const fs={createProgram:ms,bindTextureAndUniforms:ps},gs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/slope",attributes:new Map([["a_position",0],["a_texcoord",1]])};function _s(r,e){const{painter:t,rasterFunction:s}=r,{slopeType:i,isOutputRounded:a}=s.parameters,n=[];return i==="percent-rise"&&n.push("percentRise"),a&&n.push("roundOutput"),t.materialManager.getProgram(gs,n)}function ys(r,e,t){b(r,e,t),y(e);const s=t.getRasterTextureSize();e.setUniform2fv("u_srcImageSize",s);const i=t.getRasterCellSize();e.setUniform2fv("u_cellSize",i);const{zFactor:a,slopeType:n,pixelSizePower:o,pixelSizeFactor:l}=r.rasterFunction.parameters;e.setUniform1f("u_zFactor",a),e.setUniform1f("u_pixelSizePower",n==="adjusted"?o:0),e.setUniform1f("u_pixelSizeFactor",n==="adjusted"?l:0)}const xs={createProgram:_s,bindTextureAndUniforms:ys},bs={vsPath:"raster/rfx/vs",fsPath:"raster/rfx/stretch",attributes:new Map([["a_position",0],["a_texcoord",1]])};function ws(r,e){const{useGamma:t,bandCount:s,isOutputRounded:i}=r.rasterFunction.parameters,a=[];return t&&a.push("useGamma"),s>1&&a.push("multiBand"),i&&a.push("roundOutput"),r.painter.materialManager.getProgram(bs,a)}function vs(r,e,t){b(r,e,t),y(e);const{width:s,height:i}=t,a=r.rasterFunction.parameters;e.setUniform2fv("u_srcImageSize",[s,i]),e.setUniform1f("u_minOutput",a.minOutput),e.setUniform1f("u_maxOutput",a.maxOutput),e.setUniform1fv("u_factor",a.factor),e.setUniform1fv("u_minCutOff",a.minCutOff),e.setUniform1fv("u_maxCutOff",a.maxCutOff),e.setUniform1fv("u_gamma",a.gamma),e.setUniform1fv("u_gammaCorrection",a.gammaCorrection)}const Ts={createProgram:ws,bindTextureAndUniforms:vs},g=new Map;function Ce(r,e){const t=new pt;return t.width=r,t.height=e,t.internalFormat=it.RGBA32F,t.samplingMode=K.NEAREST,t.dataType=at.FLOAT,t.isImmutable=!0,t.wrapMode=nt.CLAMP_TO_EDGE,t}function Ps(r,e,t,s){const{context:i,requestRender:a,allowDelayedRender:n}=r,o=s.createProgram(r,t);return n&&a!=null&&!o.compiled?(a(),null):(i.bindFramebuffer(e),i.setViewport(0,0,e.width,e.height),i.useProgram(o),o)}function Rs(r){return g.get(r.toLowerCase())}function Ss(r,e,t,s){const i=r.rasterFunction.name.toLowerCase(),a=i==="reproject"?fs:Rs(i);if(a==null)return;const n=Ps(r,t,s,a);if(!n)return;a.bindTextureAndUniforms(r,n,s);const{interpolation:o}=s;i==="reproject"&&(s.interpolation="nearest"),e.draw();const[l,c]=s.getRasterTextureSize(i==="reproject"),h=Ce(l,c),u=new ft(r.context,h);if(t.copyToTexture(0,0,l,c,0,0,u),i==="reproject")s.rasterTexture=u,s.projected=!0,s.interpolation=o;else{const d=r.hasBranches?r.rasterFunction.id:0;s.functionTextures[d]=u}}g.set("arithmetic",we),g.set("aspect",or),g.set("bandarithmetic",hr),g.set("colormaptorgb",fr),g.set("computechange",Tr),g.set("compositeband",xr),g.set("convolution",zr),g.set("contrastbrightness",Ur),g.set("curvature",Br),g.set("extractband",Lr),g.set("statistics",qr),g.set("grayscale",Hr),g.set("hillshade",be),g.set("shadedrelief",be),g.set("local",we),g.set("mask",ss),g.set("ndvi",os),g.set("remap",hs),g.set("slope",xs),g.set("stretch",Ts);class Us extends gt{constructor(){super(...arguments),this.name="raster",this._quad=null,this._rendererUniformInfos=new Map,this._fbo=null}dispose(){G(this._quad),G(this._fbo)}prepareState(e){const{context:t,renderPass:s}=e,i=s==="raster";t.setBlendingEnabled(!i),t.setBlendFunctionSeparate($.ONE,$.ONE_MINUS_SRC_ALPHA,$.ONE,$.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!i)}draw(e,t){if(!jt(t)||t.suspended)return;const{renderPass:s}=e;if(s!=="raster-bitmap")return s==="raster"?this._process(e,t):void this._drawBitmap(e,t,!0);this._drawBitmap(e,t)}_process(e,t){const{rasterFunction:s}=e,i=s.name==="Reproject";if(!(i?!(t.rasterTexture&&t.projected):!t.processed))return;const{timeline:a,context:n}=e;a.begin(this.name);const o=n.getBoundFramebufferObject(),l=n.getViewport();i||(t.processedTexture=G(t.processedTexture)),n.setStencilFunction(de.EQUAL,t.stencilRef,255),t.updateTexture(e),this._initQuad(n);const[c,h]=t.getRasterTextureSize(i),{isStandardRasterTileSize:u,fbo:d}=this._getRasterFBO(n,c,h);Ss(e,this._quad,d,t),u||d.dispose(),n.bindFramebuffer(o),n.setViewport(l.x,l.y,l.width,l.height),a.end(this.name)}_drawBitmap(e,t,s=!1){const{timeline:i,context:a}=e;if(i.begin(this.name),a.setStencilFunction(de.EQUAL,t.stencilRef,255),t.updateTexture(e),s&&!t.processedTexture){if(t.updateProcessedTexture(),!t.processedTexture)return void i.end(this.name);t.processed=!0}this._initBitmapCommonUniforms(t);const n=t.symbolizerParameters.type,o=tr(n),{requestRender:l,allowDelayedRender:c}=e,{defines:h,program:u}=o.createProgram(e,t,t.projected&&s);if(c&&l!=null&&!u.compiled)return void l();a.useProgram(u);const d=this._getUniformInfos(n,a,u,h);this._quad||(this._quad=new pe(a,[0,0,1,0,0,1,1,1])),o.bindTextureAndUniforms(e,u,t,d,s),this._quad.draw(),i.end(this.name)}_initBitmapCommonUniforms(e){if(!e.commonUniforms){const t=mt(1,[0,0]),{transformGrid:s,width:i,height:a}=e,n=ut(s,[i,a],[e.source.width,e.source.height],1,!1);e.commonUniforms={...t,...n,u_coordScale:e.coordScale}}}_getRasterFBO(e,t,s){const i=t===L&&s===L;return i?(this._fbo||(this._fbo=this._createNewFBO(e,t,s)),{isStandardRasterTileSize:i,fbo:this._fbo}):{isStandardRasterTileSize:i,fbo:this._createNewFBO(e,t,s)}}_createNewFBO(e,t,s){const i=Ce(t,s);return new _t(e,i)}_initQuad(e){this._quad||(this._quad=new pe(e,[0,0,1,0,0,1,1,1]))}_getUniformInfos(e,t,s,i){const a=i.length>0?e+"-"+i.join("-"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const n=ct(t,s);return this._rendererUniformInfos.set(a,n),n}}class Is extends Se{constructor(e,t,s,i,a,n,o=null){super(e,t,s,i,a,n),this.bitmap=null,this.bitmap=new At(o,null,null),this.bitmap.coordScale=[a,n],this.bitmap.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.bitmap.destroy(),this.bitmap=null,this.stage=null}set stencilRef(e){this.bitmap.stencilRef=e}get stencilRef(){return this.bitmap.stencilRef}setTransform(e){super.setTransform(e),this.bitmap.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}_createTransforms(){return{displayViewScreenMat3:E(),tileMat3:E()}}onAttach(){this.bitmap.stage=this.stage}onDetach(){this.bitmap.stage=null}}let Cs=class extends Ue{constructor(){super(...arguments),this.isCustomTilingScheme=!1}createTile(r){const e=this._getTileBounds(r),[t,s]=this.tileInfoView.tileInfo.size,i=this.tileInfoView.getTileResolution(r.level);return new Is(r,i,e[0],e[3],t,s)}prepareRenderPasses(r){const e=r.registerRenderPass({name:"imagery (tile)",brushes:[Us],target:()=>this.children.map(t=>t.bitmap),drawPhase:H.MAP});return[...super.prepareRenderPasses(r),e]}doRender(r){if(!this.visible||r.drawPhase!==H.MAP)return;const{rasterFunctionChain:e}=this;if(!e)return r.renderPass="raster-bitmap",void super.doRender(r);if(!e.hasFocalFunction){const[t,s]=this.tileInfoView.tileInfo.size;r.renderPass="raster",r.rasterFunction={name:"Reproject",parameters:{targetImageSize:[t,s],requireNNEdge:e.isSourceSingleBand},pixelType:"f32",id:0,isNoopProcess:!1},super.doRender(r)}if(e?.functions.length){const{functions:t,hasBranches:s}=e;for(let i=0;i<t.length;i++){const a=t[i];a.name!=="Constant"&&a.name!=="Identity"&&(r.renderPass="raster",r.rasterFunction=a,r.hasBranches=s,super.doRender(r))}}r.rasterFunction=null,r.renderPass="bitmap",super.doRender(r)}_getTileBounds(r){const e=this.tileInfoView.getTileBounds(Te(),r);if(this.isCustomTilingScheme&&r.world){const{tileInfo:t}=this.tileInfoView,s=Ye(t.spatialReference);if(s){const i=t.lodAt(r.level);if(!i)return e;const{resolution:a}=i,n=a*t.size[0];e[0]=s*r.world+t.origin.x+r.col*n,e[2]=e[0]+n}}return e}};const Fs=[0,0];let w=class extends Ee{constructor(){super(...arguments),this._updatingHandles=new yt,this._emptyTilePixelBlock=null,this._tileStrategy=null,this._tileInfoView=null,this._fetchQueue=null,this._blockCacheRegistryUrl=null,this._blockCacheRegistryId=null,this._srcResolutions=[],this.previousLOD=null,this._needBlockCacheUpdate=!1,this._globalSymbolizerParams=null,this._symbolizerParams=null,this._abortController=null,this._isCustomTilingScheme=!1,this._maxIndexedColormapSize=0,this._rasterFunctionState="na",this._globalUpdateRequested=!1,this.attached=!1,this.timeExtent=null,this.redrawOrRefetch=Ae(async(r={})=>{const e=this._rasterFunctionState;if(r.reprocess&&(await this._updatingHandles.addPromise(this.layer.updateRasterFunction()),this.updateRasterFunctionParameters()),!this.previousLOD||this.layerView.suspended)return;const t=this._rasterFunctionState,{type:s}=this;return r.refetch||s!=="raster"&&r.reprocess||t==="cpu"||e==="cpu"?this._updatingHandles.addPromise(this.doRefresh()):this._updatingHandles.addPromise(this._redrawImage(r.signal))})}destroy(){this._updatingHandles.destroy()}get useWebGLForProcessing(){return this._get("useWebGLForProcessing")??!0}set useWebGLForProcessing(r){this._set("useWebGLForProcessing",r)}get useProgressiveUpdate(){return this._get("useProgressiveUpdate")??!0}set useProgressiveUpdate(r){if(this._tileStrategy&&this.useProgressiveUpdate!==r){this._tileStrategy.destroy(),this.container.removeAllChildren();const e=this._getCacheSize(r);this._tileStrategy=new _e({cachePolicy:"purge",acquireTile:t=>this.acquireTile(t),releaseTile:t=>this.releaseTile(t),cacheSize:e,tileInfoView:this._tileInfoView}),this._set("useProgressiveUpdate",r),this.layerView.requestUpdate()}}update(r){this._fetchQueue.pause(),this._fetchQueue.state=r.state,this._tileStrategy.update(r),this._fetchQueue.resume();const{extent:e,resolution:t,scale:s}=r.state,i=this._tileInfoView.getClosestInfoForScale(s);if(this.layer.raster){if(!this.useProgressiveUpdate||this._needBlockCacheUpdate){const a=this._srcResolutions[i.level],n="toJSON"in e?e:je.fromJSON(e);xe(this._blockCacheRegistryUrl,this._blockCacheRegistryId,n,t,a,this.layer.raster.ioConfig.sampling)}this._needBlockCacheUpdate=!1,this.previousLOD?.level!==i.level&&(this.previousLOD=i,this._symbolizerParams==null||this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._tileStrategy.updateCacheSize(0))}}moveEnd(){!this.layerView.hasTilingEffects&&this.useProgressiveUpdate||(this._abortController&&this._abortController.abort(),this._abortController=new AbortController,this._fetchQueue.length===0&&this._redrawImage(this._abortController.signal).then(()=>{this._globalUpdateRequested=!1,this.layerView.requestUpdate()}));const r=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy.updateCacheSize(r),this.layerView.requestUpdate()}get updating(){return this._globalUpdateRequested||this._updatingHandles?.updating}attach(){const r=Xe();this._maxIndexedColormapSize=4*(r.maxTextureSize||4096),this._initializeTileInfo(),this._tileInfoView=new It(this.layerView.tileInfo,this.layerView.fullExtent);const e=this._computeFetchConcurrency();this._fetchQueue=new Ct({tileInfoView:this._tileInfoView,concurrency:e,process:(s,i)=>this._fetchTile(s,i),priority:Ft.MAPVIEW_FETCH_QUEUE,scheduler:this.scheduler});const t=this._getCacheSize(this.useProgressiveUpdate);this._tileStrategy=new _e({cachePolicy:"purge",acquireTile:s=>this.acquireTile(s),releaseTile:s=>this.releaseTile(s),cacheSize:t,tileInfoView:this._tileInfoView}),this._updateBlockCacheRegistry()}detach(){this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null,ye(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryUrl=this._blockCacheRegistryId=null}acquireTile(r){const e=this.container.createTile(r);return this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this.layerView.requestUpdate(),this._needBlockCacheUpdate=!0,this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,e}releaseTile(r){this._fetchQueue.abort(r.key.id),this.container.removeChild(r),r.once("detach",()=>{r.destroy(),this.layerView.requestUpdate()}),this.layerView.requestUpdate()}createEmptyTilePixelBlock(r=null){const e=r==null||r.join(",")===this._tileInfoView.tileInfo.size.join(",");if(e&&this._emptyTilePixelBlock!=null)return this._emptyTilePixelBlock;r=r||this._tileInfoView.tileInfo.size;const[t,s]=r,i=new xt({width:t,height:s,pixels:[new Uint8Array(t*s)],mask:new Uint8Array(t*s),pixelType:"u8"});return e&&(this._emptyTilePixelBlock=i),i}_getBandIds(){if(!("rasterFunctionChain"in this.container)||!this.container.rasterFunctionChain)return this.layer.bandIds;const{bandIds:r,raster:e}=this.layer,t="rasterFunction"in e?e.rasterFunction.rawInputBandIds:null;return r?.length&&t?.length&&e.rasterInfo.bandCount!==1?r.map(s=>t[Math.min(s,t.length-1)]):"rasterFunction"in e?t:r}updateRasterFunctionParameters(){}_fetchTile(r,e){const t=this._getFetchOptions(r.level,e.signal);return this.fetchTile(r,t)}_getFetchOptions(r,e){const t=this.canUseWebGLForProcessing(),{layerView:s}=this,{tileInfo:i}=s,a=!i.isWrappable&&Tt(s.view.spatialReference)!=null,n=t&&this.layer.raster.hasUniqueSourceStorageInfo;return{allowPartialFill:!0,datumTransformation:s.datumTransformation,interpolation:t?"nearest":this.layer.interpolation,registryId:this._blockCacheRegistryId,requestRawData:n,skipRasterFunction:this.type==="raster"&&this.container.rasterFunctionChain!=null,signal:e,srcResolution:this._srcResolutions[r],timeExtent:s.timeExtent,tileInfo:i,disableWrapAround:a}}_getCacheSize(r){return r?40:0}_initializeTileInfo(){const{layerView:r}=this,e=r.view.spatialReference;if(this._canUseLayerLODs()){const{origin:c,lods:h}=this.layer.tileInfo,u=h.map(({scale:_})=>_),d=fe.create({spatialReference:e,size:L,scales:u,origin:c});return r.set("tileInfo",d),void(this._srcResolutions=h.map(({resolution:_})=>({x:_,y:_})))}const{scales:t,srcResolutions:s,isCustomTilingScheme:i}=Pt(this.layer.serviceRasterInfo,e,{tileSize:L,alignGlobalDatasetWithAGOL:!0,limitToSrcResolution:!1}),a=fe.create({spatialReference:e,size:L,scales:t}),n=a.origin.x===0;qe(r.fullExtent);const{xmin:o,ymax:l}=r.fullExtent;(n||i&&a.origin.x>o)&&(a.origin=new ve({x:o,y:l,spatialReference:e})),this._isCustomTilingScheme=i,r.set("tileInfo",a),this._srcResolutions=s??[]}_canUseLayerLODs(){const{layer:r,layerView:e}=this;if(r.raster.tileType!=="Map")return!1;const{lods:t}=r.tileInfo,s=e.view.constraints?.effectiveLODs;return s?.length===t.length&&s.every(({scale:i},a)=>Math.abs(i-t[a].scale)<.001)}_computeFetchConcurrency(){const{blockBoundary:r}=this.layer.serviceRasterInfo.storageInfo,e=r[r.length-1];return(e.maxCol-e.minCol+1)*(e.maxRow-e.minRow+1)>64?2:10}async _enqueueTileFetch(r,e){if(!this._fetchQueue.has(r.key.id)){try{const t=await this._fetchQueue.push(r.key),s=this._getBandIds();let i=!this.useProgressiveUpdate||this.layerView.hasTilingEffects&&!this._globalSymbolizerParams;if(this._globalUpdateRequested&&!this.layerView.moving&&this._fetchQueue.length===0){i=!1;try{await this._redrawImage(this._abortController?.signal)}catch(o){O(o)&&D.getLogger(this).error(o)}this._globalUpdateRequested=!1}!this.canUseWebGLForProcessing()&&this.type!=="rasterVF"||this.layerView.hasTilingEffects||this._symbolizerParams!=null||this._updateSymbolizerParams();const a=this._tileInfoView.getTileCoords(Fs,r.key),n=this._tileInfoView.getTileResolution(r.key);await this.updateTileSource(r,{source:t,symbolizerParams:this._symbolizerParams,globalSymbolizerParams:this._globalSymbolizerParams,suspended:i,bandIds:s,coords:a,resolution:n}),r.once("attach",()=>this.layerView.requestUpdate()),this.container.addChild(r)}catch(t){O(t)||D.getLogger(this).error(t)}this.layerView.requestUpdate()}}async _redrawImage(r){if(this.container.children.length===0)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects?await this._updateGlobalSymbolizerParams(r):(this._updateSymbolizerParams(),this._globalSymbolizerParams=null);const e=this.container.children.map(async t=>this.updateTileSymbolizerParameters(t,{local:this._symbolizerParams,global:this._globalSymbolizerParams}));await Promise.allSettled(e),this.container.requestRender()}async _updateGlobalSymbolizerParams(r){const e=this._getFetchOptions(this.previousLOD.level,r),t=await this.layer.fetchPixels(this.layerView.view.extent,this.layerView.view.width,this.layerView.view.height,{...e,interpolation:"nearest",requestRawData:!1,skipRasterFunction:!1});if(!t?.pixelBlock)return;const{resolution:s}=this.previousLOD,i=this._getBandIds(),a=this.layer.symbolizer.generateWebGLParameters({pixelBlock:t.pixelBlock.extractBands(i),isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:s,y:s},bandIds:i});!this.canUseWebGLForProcessing()&&a&&a.type==="stretch"&&this.layer.renderer&&this.layer.renderer.type==="raster-stretch"&&(a.factor=a.factor.map(n=>255*n),a.minOutput=Math.round(255*a.minOutput),a.maxOutput=Math.round(255*a.maxOutput)),this._globalSymbolizerParams=a}_updateSymbolizerParams(){const{resolution:r}=this.previousLOD,e=this._getBandIds();this._symbolizerParams=this.layer.symbolizer.generateWebGLParameters({pixelBlock:null,isGCS:this.layerView.view.spatialReference.isGeographic,resolution:{x:r,y:r},bandIds:e})}_updateBlockCacheRegistry(r=!1){const{layer:e,layerView:t}=this,{raster:s}=e,{multidimensionalDefinition:i}=e.normalizeRasterFetchOptions({multidimensionalDefinition:e.multidimensionalDefinition,timeExtent:t.timeExtent}),a=s.rasterInfo.multidimensionalInfo?s.getSliceIndex(i):null,n=Ot(s.rasterId,a);if(n!==this._blockCacheRegistryUrl){if(this._blockCacheRegistryUrl!=null&&ye(this._blockCacheRegistryUrl,this._blockCacheRegistryId),this._blockCacheRegistryId=Dt(n,s.rasterInfo),r){const{view:o}=t,l=this._tileInfoView.getClosestInfoForScale(o.scale),c=this._srcResolutions[l.level];xe(n,this._blockCacheRegistryId,o.extent,o.resolution,c,s.ioConfig.sampling)}this._blockCacheRegistryUrl=n}}async doRefresh(){if(!this.attached||!this.previousLOD||this.layerView.suspended)return;await this.layer.updateRenderer(),this.layerView.hasTilingEffects||this._updateSymbolizerParams(),this._updateBlockCacheRegistry(!0),this._fetchQueue.reset();const r=[];this._globalUpdateRequested=this.layerView.hasTilingEffects||!this.useProgressiveUpdate,this._tileStrategy.refresh(e=>r.push(this._enqueueTileFetch(e))),await this._updatingHandles.addPromise(Promise.allSettled(r))}};m([p()],w.prototype,"_globalUpdateRequested",void 0),m([p()],w.prototype,"attached",void 0),m([p()],w.prototype,"container",void 0),m([p()],w.prototype,"layer",void 0),m([p()],w.prototype,"layerView",void 0),m([p()],w.prototype,"scheduler",void 0),m([p()],w.prototype,"type",void 0),m([p()],w.prototype,"useWebGLForProcessing",null),m([p()],w.prototype,"useProgressiveUpdate",null),m([p()],w.prototype,"timeExtent",void 0),m([p()],w.prototype,"updating",null),w=m([A("esri.views.2d.layers.imagery.BaseImageryTileSubView2D")],w);let z=class extends w{constructor(){super(...arguments),this.type="raster"}attach(){super.attach(),this.container=new Cs(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this.updateRasterFunctionParameters()}detach(){super.detach(),this.container.removeAllChildren(),this.container=null}canUseWebGLForProcessing(){const{symbolizer:r}=this.layer,e=r.lookup?.colormapLut?.indexedColormap,t=e&&e.length>this._maxIndexedColormapSize;return this.useWebGLForProcessing&&r.canRenderInWebGL&&!t&&!(this.layer.interpolation==="majority"&&Pe(this.layer))}fetchTile(r,e){return this.layer.fetchTile(r.level,r.row,r.col,e)}updateRasterFunctionParameters(){const{clips:r,view:e}=this.layerView;this._geometry!=null&&r.remove(this._geometry);const{raster:t,type:s}=this.layer;if(t.datasetFormat==="Function"){const v=t.getClippingGeometry(e.spatialReference);if(v){const f=new Je({geometry:v});r.add(f),this._geometry=f}}const{container:i}=this;if(t.datasetFormat!=="Function"||s==="wcs")return i.rasterFunctionChain=null,i.children.forEach(v=>{const{bitmap:f}=v;f&&(f.suspended=!0,f.processed=!1,f.projected&&(f.invalidateTexture(),f.rasterTexture=null))}),void(this._rasterFunctionState="na");const a=this._rasterFunctionState,{rasterFunction:n,primaryRasters:o}=t,l=n.supportsGPU&&(!o||o.rasters.length<=1),c=l?n.flatWebGLFunctionChain:null,{renderer:h}=this.layer,u=!l||!c?.functions.length||h?.type==="raster-stretch"&&h.dynamicRangeAdjustment||!this.canUseWebGLForProcessing();i.rasterFunctionChain=u?null:c;const d=n==null?"na":i.rasterFunctionChain?"gpu":"cpu",_=a===d||a==="na"&&d==="cpu"&&c?.functions?.length===0;i.children.forEach(v=>{const{bitmap:f}=v;f&&(f.suspended=!_,f.processed=!1,f.processedTexture=null)}),this._rasterFunctionState=d}async updateTileSource(r,e){const t=this._getBandIds(),s=this._getLayerInterpolation(),i=this.canUseWebGLForProcessing(),{source:a,globalSymbolizerParams:n,suspended:o,coords:l,resolution:c}=e,h=this.layerView.hasTilingEffects?n:e.symbolizerParams,{bitmap:u}=r;if([u.x,u.y]=l,u.resolution=c,a?.pixelBlock!=null){const d={extent:a.extent,pixelBlock:a.pixelBlock,srcPixelSize:a.srcTilePixelSize};if(u.rawPixelData=d,i)u.source=a.pixelBlock,u.isRendereredSource=!1;else{const _=await this.layer.applyRenderer(d,n?.type==="stretch"?n:void 0);u.source=_,u.isRendereredSource=!0}u.symbolizerParameters=i?h:null,u.transformGrid=i?a.transformGrid:null}else{const d=this.createEmptyTilePixelBlock();u.source=d,u.symbolizerParameters=i?h:null,u.transformGrid=null}u.bandIds=i?t:null,u.width=this._tileInfoView.tileInfo.size[0],u.height=this._tileInfoView.tileInfo.size[1],u.interpolation=s,u.suspended=o,u.invalidateTexture()}async updateTileSymbolizerParameters(r,e){const{local:t,global:s}=e,i=this._getBandIds(),a=this._getLayerInterpolation(),n=this.canUseWebGLForProcessing(),{bitmap:o}=r,{rawPixelData:l}=o;n||l==null?(o.isRendereredSource&&l!=null&&(o.source=l.pixelBlock),o.isRendereredSource=!1):(o.source=await this.layer.applyRenderer(l,s?.type==="stretch"?s:void 0),o.isRendereredSource=!0),o.symbolizerParameters=n?this.layerView.hasTilingEffects?s:t:null,o.bandIds=n?i:null,o.interpolation=a,o.suspended=!1}_getLayerInterpolation(){const{interpolation:r,renderer:e}=this.layer;if(!e)return r;const t=e.type;return t==="raster-colormap"||t==="unique-value"?"nearest":e.type==="raster-stretch"&&e.colorRamp!=null?r==="bilinear"||r==="cubic"?"bilinear":"nearest":r}};m([p()],z.prototype,"container",void 0),m([p()],z.prototype,"layer",void 0),m([p()],z.prototype,"type",void 0),z=m([A("esri.views.2d.layers.imagery.ImageryTileView2D")],z);const zs=z;class Ms extends Se{constructor(e,t,s,i,a,n,o=null){super(e,t,s,i,a,n),this.tileData=new Qe(o),this.tileData.coordScale=[a,n],this.tileData.once("isReady",()=>this.ready())}destroy(){super.destroy(),this.tileData.destroy(),this.tileData=null,this.stage=null}set stencilRef(e){this.tileData.stencilRef=e}get stencilRef(){return this.tileData.stencilRef}_createTransforms(){return{displayViewScreenMat3:E(),tileMat3:E()}}setTransform(e){super.setTransform(e);const t=this.resolution/(e.resolution*e.pixelRatio),s=this.transforms.tileMat3,[i,a]=this.tileData.offset,n=[this.x+i*this.resolution,this.y-a*this.resolution],[o,l]=e.toScreenNoRotation([0,0],n),{symbolTileSize:c}=this.tileData.symbolizerParameters,h=Math.round((this.width-this.tileData.offset[0])/c)*c,u=Math.round((this.height-this.tileData.offset[1])/c)*c,d=h/this.rangeX*t,_=u/this.rangeY*t;Ke(s,d,0,0,0,_,0,o,l,1),Re(this.transforms.displayViewScreenMat3,e.displayViewMat3,s),this.tileData.transforms.displayViewScreenMat3=this.transforms.displayViewScreenMat3}onAttach(){this.tileData.stage=this.stage}onDetach(){this.tileData.stage=null}}class Vs extends Ue{constructor(){super(...arguments),this.isCustomTilingScheme=!1,this.symbolTypes=["triangle"]}createTile(e){const t=this.tileInfoView.getTileBounds(Te(),e),[s,i]=this.tileInfoView.tileInfo.size,a=this.tileInfoView.getTileResolution(e.level);return new Ms(e,a,t[0],t[3],s,i)}prepareRenderPasses(e){const t=e.registerRenderPass({name:"imagery (vf tile)",brushes:[He],target:()=>this.children.map(s=>s.tileData),drawPhase:H.MAP});return[...super.prepareRenderPasses(e),t]}doRender(e){this.visible&&e.drawPhase===H.MAP&&this.symbolTypes.forEach(t=>{e.renderPass=t,super.doRender(e)})}}let M=class extends w{constructor(){super(...arguments),this._handle=null,this.type="rasterVF"}canUseWebGLForProcessing(){return!1}async fetchTile(r,e){e={...e,interpolation:"nearest",requestProjectedLocalDirections:!0};const t=await this.layer.fetchTile(r.level,r.row,r.col,e);return this.layer.serviceRasterInfo?.dataType==="vector-magdir"&&t?.pixelBlock&&(t.pixelBlock=await this.layer.convertVectorFieldData(t.pixelBlock,e)),t}updateTileSource(r,e){const t=e.symbolizerParams,{tileData:s}=r;s.key=r.key,s.width=this._tileInfoView.tileInfo.size[0],s.height=this._tileInfoView.tileInfo.size[1];const{symbolTileSize:i}=t,{source:a}=e;if(s.offset=this._getTileSymbolOffset(s.key,i),a?.pixelBlock!=null){const n={extent:a.extent,pixelBlock:a.pixelBlock};s.rawPixelData=n,s.symbolizerParameters=t,s.source=this._sampleVectorFieldData(a.pixelBlock,t,s.offset)}else{const n=[Math.round((this._tileInfoView.tileInfo.size[0]-s.offset[0])/i),Math.round((this._tileInfoView.tileInfo.size[1]-s.offset[1])/i)],o=this.createEmptyTilePixelBlock(n);s.source=o,s.symbolizerParameters=t}return s.invalidateVAO(),Promise.resolve()}updateTileSymbolizerParameters(r,e){const t=e.local,{symbolTileSize:s}=t,{tileData:i}=r;i.offset=this._getTileSymbolOffset(i.key,s);const a=i.symbolizerParameters.symbolTileSize;i.symbolizerParameters=t;const n=i.rawPixelData?.pixelBlock;return n!=null&&a!==s&&(i.source=this._sampleVectorFieldData(n,i.symbolizerParameters,i.offset)),Promise.resolve()}attach(){super.attach(),this.container=new Vs(this._tileInfoView),this.container.isCustomTilingScheme=this._isCustomTilingScheme,this._updateSymbolType(this.layer.renderer),this._handle=W(()=>this.layer.renderer,r=>this._updateSymbolType(r))}detach(){super.detach(),this.container.removeAllChildren(),this._handle?.remove(),this._handle=null,this.container=null}_getTileSymbolOffset(r,e){const t=r.col*this._tileInfoView.tileInfo.size[0]%e,s=r.row*this._tileInfoView.tileInfo.size[1]%e;return[t>e/2?e-t:-t,s>e/2?e-s:-s]}_sampleVectorFieldData(r,e,t){const{symbolTileSize:s}=e;return bt(r,"vector-uv",s,t)}_updateSymbolType(r){r?.type==="vector-field"&&(this.container.symbolTypes=r.style==="wind-barb"?["scalar","triangle"]:r.style==="simple-scalar"?["scalar"]:["triangle"])}};m([p()],M.prototype,"container",void 0),m([p()],M.prototype,"layer",void 0),m([p()],M.prototype,"type",void 0),M=m([A("esri.views.2d.layers.imagery.VectorFieldTileView2D")],M);const ks=M;let C=class extends Lt(kt(Ze(Vt))){constructor(){super(...arguments),this._useWebGLForProcessing=!0,this._useProgressiveUpdate=!0,this.subview=null}get useWebGLForProcessing(){return this._useWebGLForProcessing}set useWebGLForProcessing(r){this._useWebGLForProcessing=r,this.subview&&"useWebGLForProcessing"in this.subview&&(this.subview.useWebGLForProcessing=r)}get useProgressiveUpdate(){return this._useWebGLForProcessing}set useProgressiveUpdate(r){this._useProgressiveUpdate=r,this.subview&&"useProgressiveUpdate"in this.subview&&(this.subview.useProgressiveUpdate=r)}get displayParameters(){const{layer:r}=this,e=this._get("displayParameters");return r.renderer&&r.visible?{bandIds:r.bandIds,renderer:r.renderer,interpolation:r.interpolation,multidimensionalDefinition:r.multidimensionalDefinition,rasterFunction:r.type==="imagery-tile"?r.rasterFunction:null}:e}update(r){this.subview?.update(r),this.notifyChange("updating")}isUpdating(){return!this.subview||this.subview.updating}attach(){this.layer.increaseRasterJobHandlerUsage(),this._updateSubview(),this.addAttachHandles([W(()=>this.displayParameters,(r,e)=>{const t=r.interpolation!==e?.interpolation&&(r.interpolation==="majority"||e?.interpolation==="majority")&&Pe(this.layer),s=r.renderer!==e?.renderer&&this._getSubviewType(e?.renderer)!==this._getSubviewType(r.renderer);s&&this._updateSubview();const i=r.multidimensionalDefinition!==e?.multidimensionalDefinition,a=r.rasterFunction!==e?.rasterFunction,n=a&&!this._useWebGLForProcessing,o=i||t||s||n;this.subview.redrawOrRefetch({refetch:o,reprocess:a}).catch(l=>{O(l)||D.getLogger(this).error(l)}),this.notifyChange("updating")}),W(()=>this.layer.multidimensionalSubset??null,(r,e)=>{const{multidimensionalDefinition:t}=this.layer;t!=null&&he(t,r)!==he(t,e)&&(this.subview.redrawOrRefetch({refetch:!0}).catch(s=>{O(s)||D.getLogger(this).error(s)}),this.notifyChange("updating"))},Oe),W(()=>this.timeExtent,()=>{this.subview.timeExtent=this.timeExtent,this.subview.redrawOrRefetch({refetch:!0}).catch(r=>{O(r)||D.getLogger(this).error(r)})},De)])}detach(){this.layer.decreaseRasterJobHandlerUsage(),this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}viewChange(){this.requestUpdate()}moveEnd(){this.subview.moveEnd()}doRefresh(){return this.subview?this.subview.doRefresh():Promise.resolve()}_updateSubview(){const{renderer:r}=this.layer;if(!r)return;const e=this._getSubviewType(r);if(this.subview){if(this.subview.type===e)return void this._attachSubview(this.subview);this._detachSubview(this.subview),this.subview?.destroy(),this.subview=null}const{layer:t}=this;let s;if(s=e==="rasterVF"?new ks({layer:t,layerView:this,scheduler:this.scheduler}):e==="flow"?new Ne({layer:t,layerView:this,scheduler:this.scheduler}):new zs({layer:t,layerView:this,scheduler:this.scheduler}),"useWebGLForProcessing"in s&&(s.useWebGLForProcessing=this._useWebGLForProcessing),"useProgressiveUpdate"in s&&(s.useProgressiveUpdate=this._useProgressiveUpdate),"previousLOD"in s){const{subview:i}=this;s.previousLOD=i&&"previousLOD"in i?i.previousLOD:null}this._attachSubview(s),this.subview=s,this.requestUpdate()}_attachSubview(r){r&&!r.attached&&(r.attach(),r.attached=!0,this.container.addChildAt(r.container,0))}_detachSubview(r){r?.attached&&(this.container.removeChild(r.container),r.detach(),r.attached=!1)}_getSubviewType(r){const e=r?.type;return e==="vector-field"?"rasterVF":e==="flow"?"flow":"raster"}};m([p()],C.prototype,"subview",void 0),m([p()],C.prototype,"useWebGLForProcessing",null),m([p()],C.prototype,"useProgressiveUpdate",null),m([p({readOnly:!0})],C.prototype,"displayParameters",null),C=m([A("esri.views.2d.layers.ImageryTileLayerView2D")],C);const Bs=C,Ta=Object.freeze(Object.defineProperty({__proto__:null,default:Bs},Symbol.toStringTag,{value:"Module"}));export{Ta as I,wa as h,Ot as i,ba as m,xa as s,va as x};
