import{a6 as L,j5 as P}from"./main-COUzu-Id.js";const k=()=>L.getLogger("esri.views.3d.support.buffer.math");function D(n,t,e){if(n.count!==t.count)return;const o=n.count,d=e[0],r=e[1],s=e[2],u=e[3],f=e[4],i=e[5],c=e[6],a=e[7],y=e[8],v=e[9],B=e[10],h=e[11],m=e[12],z=e[13],w=e[14],V=e[15],l=n.typedBuffer,T=n.typedBufferStride,p=t.typedBuffer,j=t.typedBufferStride;for(let _=0;_<o;_++){const S=_*T,g=_*j,M=p[g],b=p[g+1],G=p[g+2],O=p[g+3];l[S]=d*M+f*b+y*G+m*O,l[S+1]=r*M+i*b+v*G+z*O,l[S+2]=s*M+c*b+B*G+w*O,l[S+3]=u*M+a*b+h*G+V*O}}function E(n,t,e,o=4,d=o){if(n.length/o!==t.length/d)return void k().error("source and destination buffers need to have the same number of elements");const r=n.length/o,s=e[0],u=e[1],f=e[2],i=e[3],c=e[4],a=e[5],y=e[6],v=e[7],B=e[8],h=e[9],m=e[10],z=e[11],w=e[12],V=e[13],l=e[14],T=e[15];let p=0,j=0;for(let _=0;_<r;_++){const S=t[p],g=t[p+1],M=t[p+2],b=t[p+3];n[j]=s*S+c*g+B*M+w*b,n[j+1]=u*S+a*g+h*M+V*b,n[j+2]=f*S+y*g+m*M+l*b,n[j+3]=i*S+v*g+z*M+T*b,p+=d,j+=o}}function F(n,t,e){R(n.typedBuffer,t.typedBuffer,e,n.typedBufferStride,t.typedBufferStride)}function R(n,t,e,o=4,d=o){if(n.length/o!==t.length/d)return;const r=n.length/o,s=e[0],u=e[1],f=e[2],i=e[3],c=e[4],a=e[5],y=e[6],v=e[7],B=e[8];let h=0,m=0;for(let z=0;z<r;z++){const w=t[h],V=t[h+1],l=t[h+2],T=t[h+3];n[m]=s*w+i*V+y*l,n[m+1]=u*w+c*V+v*l,n[m+2]=f*w+a*V+B*l,n[m+3]=T,h+=d,m+=o}}function Y(n,t){const e=Math.min(n.count,t.count),o=n.typedBuffer,d=n.typedBufferStride,r=t.typedBuffer,s=t.typedBufferStride;for(let u=0;u<e;u++){const f=u*d,i=u*s,c=r[i],a=r[i+1],y=r[i+2],v=c*c+a*a+y*y;if(v>0){const B=1/Math.sqrt(v);o[f]=B*c,o[f+1]=B*a,o[f+2]=B*y}}}function $(n,t,e){q(n.typedBuffer,t,e,n.typedBufferStride)}function q(n,t,e,o=4){const d=Math.min(n.length/o,t.count),r=t.typedBuffer,s=t.typedBufferStride;let u=0,f=0;for(let i=0;i<d;i++)n[f]=e*r[u],n[f+1]=e*r[u+1],n[f+2]=e*r[u+2],n[f+3]=e*r[u+3],u+=s,f+=o}function A(n,t,e,o){x(n.typedBuffer,t,e,o,n.typedBufferStride)}function x(n,t,e,o,d=4){const r=Math.min(n.length/d,t.count),s=t.typedBuffer,u=t.typedBufferStride;let f=0,i=0;const c=1/P;for(let a=0;a<r;a++)n[i]=o*(e*s[f])**c,n[i+1]=o*(e*s[f+1])**c,n[i+2]=o*(e*s[f+2])**c,n[i+3]=o*e*s[f+3],f+=u,i+=d}Object.freeze(Object.defineProperty({__proto__:null,linearToSRGB:x,linearToSRGBView:A,normalize:Y,scale:q,scaleView:$,transformMat3:R,transformMat3View:F,transformMat4:E,transformMat4View:D},Symbol.toStringTag,{value:"Module"}));export{R as P,x as R,A as k,F as q,Y as x};
