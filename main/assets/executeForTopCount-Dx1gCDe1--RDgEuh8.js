import{y as i}from"./utils-9sQxfkoa-D-ZcgZ7C.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-CHF9Yd5E.js";import a from"./TopFeaturesQuery-Ckj_IYM7-Coh_IBbN.js";import"./main-DGTGPunX.js";import"./normalizeUtils-Bxmy9MNI-BhT4dpSF.js";import"./normalizeUtilsCommon-CRJlkfEA-Co-ZGBxI.js";import"./utils-Bq23Xwmj-BlfQcZDb.js";import"./query-DFW9-NG_-C3CfiIod.js";import"./pbfQueryUtils-F4ZE8-K8-i6C87DVB.js";import"./pbf-D-y3_eZO-DJtHq_BI.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-C6zBhcK2.js";import"./projection-BA9M1R7d-CaBYQrgp.js";import"./projectBuffer-CvCBvJ6W-BZDmmVE5.js";import"./TimeExtent-Cn0Jofqr-o8qdMECL.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
