import{r as F}from"./common-CYWrYyJl-E8-sukrT.js";import{R as j,E as Y,D as V,H as X,G as Z}from"./mat3-DOnW3DjW-C3hbW9XY.js";import{e as tt,m as et}from"./MapView-DVZSZHRJ-CppFTD_z.js";import{r as ot}from"./vec2f32-hTAvipMV-C0AQcwEv.js";import{r as st}from"./vec3f32-GX_cKsFD-UJPpzdNc.js";import{c as rt}from"./normalizeUtils-u00NGW3M-DJ-zygNC.js";import{v as r,kJ as U,at as it,ak as at}from"./main-llKI7zRI.js";import{j as nt}from"./enums-CQnCd4Rx-BPGUZAFo.js";import{F as pt}from"./WGLContainer-qQmF3DRB-D6WW2VxE.js";import{I as dt}from"./FeatureCommandQueue-C2MKcQFq-BSek-g6T.js";import{e as C}from"./utils-DA6J6wjA-DDjZAYSk.js";import{F as G,K as n,o as L,J as lt,U as w,O as W,g as ht,p as E,Y as ct,D as ut,u as ft,R as mt,P as vt,S as yt,a5 as gt,a0 as wt,l as xt}from"./GraphShaderModule-Baq-N_YO-3c_WS0u3.js";import{i as _t}from"./TechniqueType-CMl1wqtX-7TDFwBxa.js";import{L as St,P,D as k,T as Mt}from"./enums-wEDHPbCF-Cf76M5_x.js";import{c as K}from"./VertexElementDescriptor-DLvjNrmQ-BHK9ksow.js";class $ extends lt{}r([G(0,w)],$.prototype,"pos",void 0),r([G(1,w)],$.prototype,"uv",void 0);class Ot extends gt{}class q extends W{}r([n(ht)],q.prototype,"dvs",void 0);class v extends W{}r([n(w)],v.prototype,"perspective",void 0),r([n(w)],v.prototype,"texSize",void 0),r([n(E)],v.prototype,"wrapAroundShift",void 0),r([n(E)],v.prototype,"opacity",void 0),r([n(ct)],v.prototype,"texture",void 0);class g extends ut{constructor(){super(...arguments),this.type="OverlayShader"}vertex(e){const t=e.uv.divide(this.config.texSize),o=new E(1).add(ft(t,this.config.perspective)),s=new mt(e.pos.add(new w(this.config.wrapAroundShift,0)),1),i=this.transform.dvs.multiply(s);return{uv:t,glPosition:new vt(i.xy.multiply(o),0,o)}}fragment(e){const t=yt(this.config.texture,e.uv).multiply(this.config.opacity),o=new wt;return o.fragColor=t,o}}r([n(q)],g.prototype,"transform",void 0),r([n(v)],g.prototype,"config",void 0),r([U(0,L($))],g.prototype,"vertex",null),r([U(0,L(Ot))],g.prototype,"fragment",null);class Rt extends xt{constructor(){super(...arguments),this.type=_t.Overlay,this._mesh=null,this.shaders={overlay:new g}}render(e,t){const{context:o,painter:s}=e,i=this._getMesh(e,t);s.setPipelineState(C);const{isWrapAround:p,wrapAroundShift:c}=t.config,u={...t.config,wrapAroundShift:0},f={shader:this.shaders.overlay,uniforms:{transform:t.transform,config:u},defines:null,optionalAttributes:null,useComputeBuffer:!1};s.setPipelineState({...C,stencil:{write:!1,test:{compare:St.EQUAL,op:{fail:P.KEEP,zFail:P.KEEP,zPass:P.REPLACE},ref:0,mask:255}}}),s.submitDrawMeshUntyped(o,f,i),p&&(u.wrapAroundShift=c,s.submitDrawMeshUntyped(o,f,i))}shutdown(){at(this._mesh)}_getMesh(e,t){const{context:o}=e;if(this._mesh){const s=this._mesh.vertexBuffers.get("positions");if(!s)throw new Error("Buffer not found");s.buffer.setData(t.position)}else{const s=t.index!=null?t.index.length:t.position.length/2;this._mesh=new dt(o,{vertex:{positions:{data:t.position,attributes:[new K("pos",2,k.FLOAT,0,8)]},uvs:{data:t.tex,attributes:[new K("uv",2,k.UNSIGNED_SHORT,0,4)]}},index:t.index!=null?{index:{data:t.index}}:void 0,groups:[{index:t.index!=null?"index":void 0,primitive:Mt.TRIANGLE_STRIP}],parts:[{group:0,start:0,count:s}]})}return this._mesh}}class kt extends pt{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=tt(),this._overlayTechnique=new Rt}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const t of this.children)t.beforeRender(e)}doRender(e){if(e.drawPhase!==nt.MAP||!this.visible)return;super.doRender(e);const t=this._overlayTechnique;for(const o of this.children)o.draw(e,t)}onDetach(){this._overlayTechnique.shutdown()}_updateMatrices(e){const{state:t}=e,{id:o,size:s,pixelRatio:i,resolution:p,rotation:c,viewpoint:u,displayMat3:f}=t;if(this._viewStateId===o)return;const x=F(c),d=i*s[0],m=i*s[1];this._localOrigin=u.targetGeometry.clone();const{x:y,y:M}=this._localOrigin,_=rt(y,t.spatialReference);this._localOrigin.x=_,this._localOrigin.y=M;const O=p*d,R=p*m,a=j(this._dvsMat3);Y(a,a,f),V(a,a,ot(d/2,m/2)),X(a,a,st(d/O,-m/R,1)),Z(a,a,-x),this._viewStateId=o}_updateOverlays(e,t){const{state:o}=e,{rotation:s,spatialReference:i,worldScreenWidth:p,size:c,viewpoint:u}=o,f=this._localOrigin;let x,d=0;const m=it(i);if(m&&i.isWrappable){const y=c[0],M=c[1],_=F(s),O=Math.abs(Math.cos(_)),R=Math.abs(Math.sin(_)),a=Math.round(y*O+M*R),[T,I]=m.valid,l=et(i),{x:B,y:H}=u.targetGeometry,J=[B,H],b=[0,0];o.toScreen(b,J);const S=[0,0];let A;A=a>p?.5*p:.5*a;const z=Math.floor((B+.5*l)/l),N=T+z*l,Q=I+z*l,D=[b[0]+A,0];o.toMap(S,D),S[0]>Q&&(d=l),D[0]=b[0]-A,o.toMap(S,D),S[0]<N&&(d=-l),x={worldWidth:l,xBounds:[T,I]}}for(const y of t)y.updateDrawCoords(f,d,o,x)}}export{kt as O};
