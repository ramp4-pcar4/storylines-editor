import{y as i}from"./utils-9sQxfkoa-BJL_ZQ2r.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-BhB1z7iJ.js";import a from"./TopFeaturesQuery-Ckj_IYM7-Cj1dHwhm.js";import"./main-BH3u4lL3.js";import"./normalizeUtils-Bxmy9MNI-BSVzu9WL.js";import"./normalizeUtilsCommon-CRJlkfEA-CYF2n0Vm.js";import"./utils-Bq23Xwmj-Cic61Y5e.js";import"./query-DFW9-NG_-nYkZRcwr.js";import"./pbfQueryUtils-F4ZE8-K8-C7HTYC17.js";import"./pbf-D-y3_eZO-D36gPh2d.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-BVz1GH6b.js";import"./projection-BA9M1R7d-Bngn7BFN.js";import"./projectBuffer-CvCBvJ6W-SRZZwGAf.js";import"./TimeExtent-Cn0Jofqr-BU4CoCOe.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
