import{y as i}from"./utils-9sQxfkoa-5IC4P9P8.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-DFhTnxjE.js";import a from"./TopFeaturesQuery-Ckj_IYM7-sPr46fJW.js";import"./main-rP59RlJ2.js";import"./normalizeUtils-Bxmy9MNI-BLeKyp7U.js";import"./normalizeUtilsCommon-CRJlkfEA-DTc9pLVM.js";import"./utils-Bq23Xwmj-Da5Cqq8C.js";import"./query-DFW9-NG_-B3A1iIr0.js";import"./pbfQueryUtils-F4ZE8-K8-BqXb4qDd.js";import"./pbf-D-y3_eZO-vaQunjNs.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-JRu5bf52.js";import"./projection-BA9M1R7d-C3lfDNaO.js";import"./projectBuffer-CvCBvJ6W-Bau4G5ac.js";import"./TimeExtent-Cn0Jofqr-BlrBWCgU.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
