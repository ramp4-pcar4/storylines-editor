import{y as i}from"./utils-9sQxfkoa-DHTUNR7Y.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-Xk1pN4uB.js";import a from"./TopFeaturesQuery-Ckj_IYM7-BMR9nkeT.js";import"./main-Dd1oKYvI.js";import"./normalizeUtils-Bxmy9MNI-DhK61MOP.js";import"./normalizeUtilsCommon-CRJlkfEA-Dt6LkORp.js";import"./utils-Bq23Xwmj-Lw2AzlYN.js";import"./query-DFW9-NG_-BJcoO2Pr.js";import"./pbfQueryUtils-F4ZE8-K8-BY_vawWy.js";import"./pbf-D-y3_eZO-C-MlE-H9.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6-D3lbq_ar.js";import"./projection-BA9M1R7d-CsCQKUmI.js";import"./projectBuffer-CvCBvJ6W-CeNE9wzW.js";import"./TimeExtent-Cn0Jofqr-CfZ28RcL.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
