import{y as i}from"./utils-9sQxfkoa-Cb5DfPf-.js";import{S as p}from"./queryTopFeatures-IbhAPJlP-CKp1hWip.js";import a from"./TopFeaturesQuery-Ckj_IYM7-DbJ9ey5Z.js";import"./main-yXGx98wD.js";import"./normalizeUtils-Bxmy9MNI-BixZKPTw.js";import"./normalizeUtilsCommon-CRJlkfEA-BNPWOyf2.js";import"./utils-Bq23Xwmj-D1EukLM5.js";import"./query-DFW9-NG_-CJbMZFtc.js";import"./pbfQueryUtils-F4ZE8-K8-CNX_k4iD.js";import"./pbf-D-y3_eZO-B6UkmRim.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./queryZScale-BiYV6Pr6--H3nHMLF.js";import"./projection-BA9M1R7d-BXa_dIqE.js";import"./projectBuffer-CvCBvJ6W-BSr9jEdK.js";import"./TimeExtent-Cn0Jofqr-CaBxjv69.js";async function h(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{h as executeForTopCount};
