import{ag as m,aL as u,aq as h,a2 as g,ah as c,v as n,S as d,i as _}from"./main-70qyE4zw.js";import{f as w}from"./CollectionFlattener-DkHuHn5E-BqVSKE7U.js";import{T as f,b as y,v as k,f as M,S as v,g as I,N as V}from"./Stop-he5xSAJJ-CwakBqpf.js";import{X as F,Y as G}from"./LayerView-Bish-E63-DQ78jOj4.js";import{d as H}from"./GraphicContainer-DuOHUciE-BD2NrP8B.js";import{X as b}from"./GraphicsView2D-C4wYE2ut-C48fjBrx.js";import"./Container-BcuL1ZEG-NKMJEGJj.js";import"./MapView-BGOJJ8ch-LjDRUzvi.js";import"./Cyclical-C_9rKUUQ-svhhWbZI.js";import"./workers-PiCjreoO-CE-EFPtX.js";import"./projection-BA9M1R7d-Do-0O91X.js";import"./projectBuffer-CvCBvJ6W-BDHxfcgb.js";import"./TileInfo-CWIRDhZl-DnIdSFXy.js";import"./TileKey-B_6qmYK--BtZdR-Xy.js";import"./themeUtils-YjM7iIiX-CcpGIUck.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./UpdatingHandles-CUu3u1ms-Bhq0qp8v.js";import"./signal-CETehA7D-Bu7x14L1.js";import"./Map-1zd11DKO-7PNsbYtt.js";import"./Basemap-BEqqSTw9-Bx2Mfp8-.js";import"./loadAll-e978YItg-DiBPDxnJ.js";import"./PortalItem-CctGdnxF-C4Hp4rfG.js";import"./writeUtils-D5qlLkwk-Pl9-o_ac.js";import"./compilerUtils-CV1QYWI8-YxpSupUR.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-DX7gBViE-BAgBmV4J.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./TablesMixin-C8RojhYs-BD2t3VNU.js";import"./Layer-ChoECxvZ-DqSjwp--.js";import"./TimeExtent-Cn0Jofqr-ONuFzdZx.js";import"./GraphicsCollection-CWTXNZOX-yqiqjabP.js";import"./HeightModelInfo-C5vFqzyF-BFXCIe2y.js";import"./ReactiveMap-CFk6jPfN-D2BnKQj8.js";import"./Query-BrwMGK8U-D7lB-nR5.js";import"./Field-C6hA1tZj-CVXXXHwR.js";import"./fieldType-CD2CL2hr-Zeg2yYww.js";import"./arcgisLayerUrl-HNYh8jvG-DhlzxZ_0.js";import"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import"./vec2f64-CeODonrJ-CkkJCdRC.js";import"./vec2-tHZ6OaOy-xCj1obDt.js";import"./Tile-D75RMC64-BUc37Stu.js";import"./TileKey-C5IL-JBr-Dh7lfjRe.js";import"./QueueProcessor-DbfV9fLy-D2mTaONe.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./normalizeUtils-Bxmy9MNI-B9xvr18r.js";import"./normalizeUtilsCommon-CRJlkfEA-BZKUlLMF.js";import"./utils-9sQxfkoa-CEsKaxGV.js";import"./utils-Bq23Xwmj-CUQm4xxH.js";import"./mat3-CC4Foazl-BWjyqE2v.js";import"./vec2f32-CVhmN3Me-DxoqVD7C.js";import"./unitBezier-CGtWxaCq-BRwEDigF.js";import"./Scheduler-B7UX7Wr5-rU8xffbA.js";import"./vec32-D9GsKZ1t-D8YEFCrt.js";import"./definitions-DJSdSb77-DkoRHaVx.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./Texture-BCt2hphT-BH1yE4e_.js";import"./imageUtils-BA2D6Uf1-DBzKceF8.js";import"./capabilities-agoTWNzb-CtsNgRyk.js";import"./Version-CoKzbupV-BRREm1ib.js";import"./ColorBackground-gVZldRLm-C0LgMyLR.js";import"./parser-DyDJ-rlI-C8SQPjdW.js";import"./layerViewUtils-DURAPenP-DqUMCcTf.js";import"./AGraphicContainer-LUCT6Gle-BtntAExP.js";import"./TechniqueInstance-DGTKoOL6-BRujKeeS.js";import"./UpdateTracking2D-Du_WIf4G-NoCou__B.js";import"./BidiEngine-Bdqv5H5j-Dyqh9XG-.js";import"./OptimizedFeature-EIithYlr-Cq64mIT3.js";import"./GeometryUtils-NHgB9gGQ-DwdZSU41.js";import"./enums-CpSG_SL3-BMD3Tb1v.js";import"./utils-SPbpQbmm-B3VRKagI.js";import"./Rect-DD6XS68q-D_hsV3ag.js";import"./LabelMetric-BeluzH3o-B40iM9qG.js";import"./Program-DLVwTiPA-DDoAtLPl.js";import"./BufferObject-BM_7mcDb-C1_Nxb9g.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./BindType-9iOk18Ed-CRW1cdX4.js";import"./Util-BjGjeg6f-08Szkf4F.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-hf2nxvhQ-CaAr8PTM.js";import"./TileContainer-D48pXXgL-B4TdOpNK.js";import"./WGLContainer-LxgEo4I_-WHAVvo4s.js";import"./VertexArrayObject-M4iRGGoi-DsjTyV2a.js";import"./ProgramTemplate-DQOm6Omy-D0Z7mn2N.js";import"./vec3f32-BS0cezmI-B_madU1n.js";import"./StyleDefinition-Ct4HIk9T-B82pTf0h.js";import"./config-nuMERBvb-MDUrh2eL.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./featureConversionUtils-D6hFQ4Af-CU2sIpWm.js";import"./OptimizedFeatureSet-DfZGBuxJ-C08BOAgi.js";import"./FeatureCommandQueue-DzV-HBIG-CWfew8yj.js";import"./constants-Bqe1QJ4u-F8oTIn7N.js";import"./lengthUtils-DKpMe5qR-Cpe_knDJ.js";import"./FieldsIndex-HmzMbJQG-CI5ZBvL0.js";import"./UnknownTimeZone-C--TOcPG-LTFIFM4f.js";import"./OverrideHelper-DWRbVlj1-W1DYqe9i.js";import"./colorUtils-Cthpxcks-DQBK3f1V.js";import"./quantizationUtils-bJy1cRwp-BkArDln2.js";import"./AttributeStore-DjyP9U7y-ylnrV-lI.js";import"./TimeOnly-DSMefxKy-DlbeSaf1.js";import"./timeSupport-jPViR5jn-DOG5Rigr.js";import"./queryUtils-Brxu6254-BlqKrrvI.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./labelUtils-BW14kBqX-sq8zSPWD.js";import"./diffUtils-Cz3Fi8Xb-B3JN-UXN.js";import"./normalizeUtilsSync-CBU7m8rm-DCTdL6eJ.js";const C=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],s={graphic:null,property:null,oldValue:null,newValue:null};function l(t){return t instanceof f||t instanceof y||t instanceof k||t instanceof M||t instanceof v||t instanceof I||t instanceof V}function U(t){return m.isCollection(t)&&t.length&&l(t.at(0))}function A(t){return Array.isArray(t)&&t.length>0&&l(t[0])}const T=new Set(["default"]);let p=class extends F(G){constructor(){super(...arguments),this._graphics=new m,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new w({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new m([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),u)}destroy(){this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),this._get("_routeItems")?.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeaturesAtLocation(t,i){return this._graphicsView.hitTest(t).filter(({popupTemplate:r})=>!!r)}highlight(t){let i;i=l(t)?[this._getNetworkFeatureUid(t)]:A(t)?t.map(e=>this._getNetworkFeatureUid(e)):U(t)?t.map(e=>this._getNetworkFeatureUid(e)).toArray():[t.uid];const r=i.filter(h);return r.length?(this._addHighlight(r),g(()=>this._removeHighlight(r))):g()}async hitTest(t,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(t).filter(h).map(o=>this._networkGraphicMap.get(o));if(!r.length)return null;const{layer:e}=this;return r.reverse().map(o=>({type:"route",layer:e,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i);this._highlightIds.set(i,r+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),r=new H(t.featuresTilingScheme);this._graphicsView=new b({container:r,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(r),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return C.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i)-1;r===0?this._highlightIds.delete(i):this._highlightIds.set(i,r)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const r=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(r),r}));for(const i of t.removed)this.removeHandles(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const r=this._createGraphic(i);return r.symbol==null?null:(this._networkFeatureMap.set(i,r),this._networkGraphicMap.set(r,i),r)}).filter(h));for(const i of t.added)this.addHandles([c(()=>i.geometry,(r,e)=>{this._updateGraphic(i,"geometry",r,e)}),c(()=>i.symbol,(r,e)=>{this._updateGraphic(i,"symbol",r,e)})],i);this._graphics.sort((i,r)=>this._getDrawOrder(i)-this._getDrawOrder(r))}}_updateGraphic(t,i,r,e){if(!this._networkFeatureMap.has(t)){const a=this._createGraphic(t);return this._networkFeatureMap.set(t,a),this._networkGraphicMap.set(a,t),void this._graphics.add(a)}const o=this._networkFeatureMap.get(t);o[i]=r,s.graphic=o,s.property=i,s.oldValue=e,s.newValue=r,this._graphicsView.graphicUpdateHandler(s)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),i=this._getHighlightBits(T);this._graphicsView.setHighlight(t.map(r=>({objectId:r,highlightFlags:i})))}};n([d()],p.prototype,"_graphics",void 0),n([d()],p.prototype,"_routeItems",null),p=n([_("esri.views.2d.layers.RouteLayerView2D")],p);const Ui=p;export{Ui as default};
