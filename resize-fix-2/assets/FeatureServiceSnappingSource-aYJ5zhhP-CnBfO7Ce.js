const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./WhereClause-D4rZJkVN-BTS2QIEM.js","./main-166dfadA.js","./main-B0FwZY5L.css","./TimeOnly-CGkId3bj-_svlPvq1.js","./enum-g1DWyQyu-kiyCESWw.js","./UnknownTimeZone-DxjyzFvs-DHiLp542.js"])))=>i.map(i=>d[i]);
import{v as n,ac as H,ab as Z,bJ as G,u as N,b3 as y,a1 as f,a3 as B,lz as R,a2 as b,S as o,ag as J,n as S,cf as K,bv as Q,ao as Y,a8 as $,bK as X,cq as ee,l as te,aj as A,_ as ie,du as se,eK as ne,ba as D,ad as C,mz as re,mA as oe,mB as ae,mC as le,a0 as de,mD as pe,lV as ue,aD as he,Z as ce,e5 as ye,bc as L}from"./main-166dfadA.js";import{g as ge}from"./asyncUtils-BPUlNCrX-CX8alBs6.js";import{h as fe}from"./memoize-DvEt8OkT-Cy_RrfpZ.js";import{i as W}from"./UpdatingHandles-Bd2FQ26N-QGEzDuA9.js";import{B as me}from"./elevationInfoUtils-Ccn2Wfoe-YsnqSxvM.js";import{e as E}from"./TileKey-B_6qmYK--BtZdR-Xy.js";import{A as we}from"./vec32-Cj8pVsU0-Ctf7DHQR.js";import{h as _e,k as ve,n as be}from"./boundedPlane-QDtjx5eO-BdHPAtJi.js";import{t as Se}from"./layerViewUtils-DLIaYA64-Dvnc4Lhk.js";import{af as Ie}from"./SketchViewModel-B0qFHK0t-B3EPsnLF.js";import{c as Oe,u as He}from"./queryEngineUtils-BDP_R2CG-BjfT7aVC.js";import{c as ke}from"./WorkerHandle-DMS_RzFc-CNl8c3BZ.js";import{s as Te}from"./projectVectorToVector-DcyiGOWJ-DszlWVJ5.js";import{a as Fe,n as Me}from"./TileInfo-U28GysF5-D9hOYV_a.js";import{o as Pe}from"./debugFlags-8tOwPnHK-kKEH7C33.js";import"./ElevationInfo-DE5to86a-rU5nSExK.js";import"./lengthUtils-C61nRlXw-DiUUk0Rq.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./sphere-zPMQWhGG-sokqAPnW.js";import"./mat4-OOmHNWi7-BuqdpAWY.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-DD-nkcCV-CSNWKRqG.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./mat3f64-BnNZDR5l-Bz3OL2oI.js";import"./vectorStacks-5ZZtmT9E-CWQey70M.js";import"./mat4f64-xsZDPPj0-Dq35B4BL.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./vec2f64-CkowXrDb-3zFQ3LNH.js";import"./lineSegment-BAWQVP9P-zGClfem_.js";import"./plane-Cf3Koz3c-DndwFo37.js";import"./projectionUtils-B-CplN3q-DW7g1ptQ.js";import"./GraphicsLayer-BiEC2-gS-D87hqE5P.js";import"./GraphicsCollection-uWAVmks7-DsBvR75Y.js";import"./Layer-DvVVmz9x-BoCs8Zyk.js";import"./TimeExtent-Cf2Pienb-lZIPdeTr.js";import"./BlendLayer-DjW_5k0v-D03X0hGI.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-BwLwuQj7-Cyk8TB1l.js";import"./parser-CWccHtwJ-CDxzEgWH.js";import"./mat4f32-BdRMyjXW-CWt6U0BP.js";import"./ScaleRangeLayer-x42fwED3-BnYkSFK6.js";import"./editableLayers-DFUBlMJy-XUCdo9lx.js";import"./utils-Dd8gTonD-CKEv6z1U.js";import"./Queue-DV3gpSdl-Dx7NzZxn.js";import"./Version-CnwD6MZa-CqkTXJAU.js";import"./Cyclical-DgD7_U1C-BSvKrC6B.js";import"./quantityUtils-B1Ov7DZK-DVJJWW_9.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./geodesicUtils-DKS2UG72-B1kfdtmm.js";import"./Query-n1aoaaFC-DRIwK8jK.js";import"./Field-BIQ-quF4-_aOBtzg2.js";import"./fieldType-PhcL4ff8-B53C9lP5.js";import"./geodeticLengthOperator-DHGBHzf3-CnTwELlt.js";import"./geodeticCurveType-D_etKnbP-CirnHLSB.js";import"./earcut-C6NeZYSh-Da0ULCQ5.js";import"./triangle-BM89wdHY-48Ws5DX2.js";import"./spatialReferenceEllipsoidUtils-BK0OQJn2-GGWjOczs.js";import"./VertexSnappingCandidate-OoGbhLWl-Dy-6x5aD.js";import"./PointSnappingHint-OKXicQ1z-1htkZyxl.js";import"./workers-CeRXsnNJ-Bi1n9qgF.js";import"./intl-BAA1onnp-8AUvsUYq.js";import"./projectPointToVector-BZJhoF_5-BvK8uO_b.js";function P(e,t){return ve(t.extent,q),be(q,we(Ce,e.x,e.y,0))}const q=_e(),Ce=se();let g=class extends H{get tiles(){const e=this.tilesCoveringView,t=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return e.sort((i,a)=>P(t,i)-P(t,a)),e}_scaleEnabled(){return Se(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,a=[];for(const{row:s,colFrom:r,colTo:l}of e)for(let p=r;p<=l;p++){const w=t.normalizeCol(p),h=new E(null,i,s,w);this.tileInfo.updateTileInfo(h),a.push(h)}return a}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(e){super(e),this.pointOfInterest=null}initialize(){this.addHandles(f(()=>this.view?.state?.viewpoint,()=>this.notifyChange("tilesCoveringView"),J))}};n([o({readOnly:!0})],g.prototype,"tiles",null),n([o({readOnly:!0})],g.prototype,"_scaleEnabled",null),n([o({readOnly:!0})],g.prototype,"tilesCoveringView",null),n([o({readOnly:!0})],g.prototype,"tileInfo",null),n([o({readOnly:!0})],g.prototype,"tileSize",null),n([o({constructOnly:!0})],g.prototype,"view",void 0),n([o({constructOnly:!0})],g.prototype,"layer",void 0),n([o()],g.prototype,"pointOfInterest",void 0),g=n([S("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],g);let m=class extends H{get _sortedTilesCoveringView(){const e=(this.view.featureTiles?.tiles?.toArray()??[]).map(Ee),t=this._effectivePointOfInterest;return t!=null&&e.sort((i,a)=>P(t,i)-P(t,a)),e}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){return this.pointOfInterest??this.view.pointsOfInterest?.focus.location}constructor(e){super(e),this.tiles=[],this.pointOfInterest=null}initialize(){this.addHandles([f(()=>this.view.featureTiles,e=>{this.removeHandles(U),e&&this.addHandles(e.addClient(),U)},b),f(()=>this._sortedTilesCoveringView,e=>this._set("tiles",e),{initial:!0,equals:(e,t)=>K(e,t,(i,a)=>i.id===a.id)})])}};function Ee({lij:[e,t,i],extent:a}){return new E(`${e}/${t}/${i}`,e,t,i,a)}n([o({readOnly:!0})],m.prototype,"tiles",void 0),n([o({readOnly:!0})],m.prototype,"_sortedTilesCoveringView",null),n([o({readOnly:!0})],m.prototype,"tileInfo",null),n([o({readOnly:!0})],m.prototype,"tileSize",null),n([o({constructOnly:!0})],m.prototype,"view",void 0),n([o()],m.prototype,"pointOfInterest",void 0),n([o()],m.prototype,"_effectivePointOfInterest",null),m=n([S("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],m);const U="feature-tiles",ze=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends H{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._symbols=ze.map(t=>new ne({color:[t[0],t[1],t[2],.6],outline:{color:"black",width:1}})),this._enabled=!0}initialize(){this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=r=>{if(r.label!=null)return r.label;let l=r.lij.toString();return r.loadPriority!=null&&(l+=` (${r.loadPriority})`),r.measures&&(l+=`[${r.measures.lodLevel}]`),l},t=this.getTiles(),i=new Array,a=new Set((this._labels.size,this._labels.keys()));t.forEach((r,l)=>{const p=r.lij.toString();a.delete(p);const w=r.measures?.lodLevel??r.level,h=r.geometry;if(this.enablePolygons&&!this._polygons.has(p)){const d=new D({geometry:h,symbol:this._symbols[w%this._symbols.length]});this._polygons.set(p,d),i.push(d)}if(this.enableLabels){const d=e(r),_=l/(t.length-1),I=L(0,200,_),k=L(20,6,_)/.75,z=r.loadPriority!=null&&r.loadPriority>=t.length,x=new C([I,z?0:I,z?0:I]),V=this.view.type==="3d"?()=>new re({verticalOffset:new oe({screenLength:40/.75}),callout:new ae({color:new C("white"),border:new le({color:new C("black")})}),symbolLayers:new de([new pe({text:d,halo:{color:"white",size:1/.75},material:{color:x},size:k})])}):()=>new ue({text:d,haloColor:"white",haloSize:1/.75,color:x,size:k}),F=this._labels.get(p);if(F){const T=V();F.symbol!=null&&JSON.stringify(T)===JSON.stringify(F.symbol)||(F.symbol=T)}else{const T=new D({geometry:h.extent.center,symbol:V()});this._labels.set(p,T),i.push(T)}}});const s=new Array;a.forEach(r=>{const l=this._polygons.get(r);l!=null&&(s.push(l),this._polygons.delete(r));const p=this._labels.get(r);p!=null&&(s.push(p),this._labels.delete(r))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([o({constructOnly:!0})],O.prototype,"view",void 0),n([o({readOnly:!0})],O.prototype,"updating",void 0),n([o()],O.prototype,"enabled",null),O=n([S("esri.views.support.TileTreeDebugger")],O);let M=class extends O{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(he(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(s=>{e.set(s.data.id,s.featureCount)}),this._debugInfo.pendingTiles.forEach(s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)});const i=s=>{const r=t.get(s),l=e.get(s)??"?";return r?`${r}:${l}
${s}`:`store:${l}
${s}`},a=new Map;return this._debugInfo.storedTiles.forEach(s=>{a.set(s.data.id,s.data)}),this._debugInfo.pendingTiles.forEach(s=>{a.set(s.data.id,s.data)}),Array.from(a.values()).map(s=>({lij:[s.level,s.row,s.col],level:s.level,geometry:ce.fromExtent(ye(s.extent,this.view.spatialReference)),label:i(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([o({constructOnly:!0})],M.prototype,"handle",void 0),M=n([S("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],M);let c=class extends H{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new W,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:a}of t.pointsInFeatures)for(const{z:s}of a)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=Q(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=Y(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new Ve(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const i=xe(e.layer);if(i==null)return;const a={configuration:j(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=j(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:a,coordinateHelper:s}=e,r={...e,point:Te(i[0],i[1],i[2],s.spatialReference.toJSON()),filter:a?.toJSON()};return this._workerHandle.invoke(r,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:a},s){const r={historicMoment:e,addedFeatures:t?.map(({objectId:l})=>l).filter($)??[],deletedFeatures:i?.map(({objectId:l,globalId:p})=>({objectId:l,globalId:p}))??[],updatedFeatures:a?.map(({objectId:l})=>l).filter($)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",r,s)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},s))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function j(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function xe(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:X.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}n([o({constructOnly:!0})],c.prototype,"schedule",void 0),n([o({constructOnly:!0})],c.prototype,"hasZ",void 0),n([o({constructOnly:!0})],c.prototype,"elevationAlignPointsInFeatures",void 0),n([o({constructOnly:!0})],c.prototype,"queryForSymbologySnapping",void 0),n([o({readOnly:!0})],c.prototype,"updating",null),n([o({readOnly:!0})],c.prototype,"availability",void 0),n([o()],c.prototype,"_workerHandleUpdating",void 0),c=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],c);class Ve extends ke{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let v=class extends H{get tiles(){return[new E("0/0/0",0,0,0,ee(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new Fe({origin:new te({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new Me({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};n([o({readOnly:!0})],v.prototype,"tiles",null),n([o({readOnly:!0})],v.prototype,"tileInfo",null),n([o({readOnly:!0})],v.prototype,"tileSize",null),n([o({constructOnly:!0})],v.prototype,"layer",void 0),n([o()],v.prototype,"pointOfInterest",void 0),v=n([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],v);let u=class extends H{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find(e=>e.layer===this._layer)}get _isSuspended(){return Z(this._layer)&&!this.layerSource.sublayerSources.some(e=>e.enabled&&e.layer.visible)?!0:!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:a}=i,{fieldsIndex:s,timeInfo:r,floorInfo:l,subtypeField:p}=a,w=t&&"filter"in t?t.filter:null,h=w?.where&&w.where!=="1=1"?this._getOrLoadWhereFields(w.where,s):[];if(w?.timeExtent&&r){const{startField:d,endField:_}=r,I=s.get(d)?.name??d,k=s.get(_)?.name??_;I&&h.push(I),k&&h.push(k)}if(e?.map&&Ie(e.map)&&e.map.utilityNetworks?.find(d=>d.isUtilityLayer(a))){const d=a.fieldsIndex.get("assetGroup")?.name,_=a.fieldsIndex.get("assetType")?.name;d&&_&&(h.push(d),h.push(_))}if(a&&l?.floorField&&e?.floors?.length){const d=s.get(l.floorField)?.name??l.floorField;d&&h.push(d)}if(p){const d=s.get(p)?.name??p;d&&h.push(d)}return new Set(h)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,a=e!=null?e.type:"2d",s=this._layer.createQuery();return this._layerView&&"effectiveDisplayFilter"in this._layerView&&(s.where=G(s.where,this._layerView.effectiveDisplayFilter?.where)),{filter:s,customParameters:t?{...i,token:t}:i,viewType:a}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new W,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=fe(He)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new v({layer:this._layer}),e=this._workerHandle=new c;else switch(t.type){case"2d":this._tilesOfInterest=new g({view:t,layer:this._layer}),e=this._workerHandle=new c;break;case"3d":{const{resourceController:i}=t,a=this._layer;this._tilesOfInterest=new m({view:t}),e=this._workerHandle=new c({schedule:s=>i.immediate.schedule(s),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(s,r)=>{const l=await t.whenLayerView(a);return N(r),l.elevationAlignPointsInFeatures(s,r)},queryForSymbologySnapping:async(s,r)=>{const l=await t.whenLayerView(a);return N(r),l.queryForSymbologySnapping(s,r)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:s})=>{const{elevationInfo:r}=a;me(s,r)&&y(e.notifyElevationSourceChange())}),f(()=>a.elevationInfo,()=>y(e.notifyElevationSourceChange()),b),f(()=>this._layerView?.layer?.renderer,()=>y(e.notifySymbologyChange()),b),f(()=>this._layerView?.symbologySnappingSupported??!1,s=>y(e.setSymbologySnappingSupported(s)),b),B(()=>this._layerView?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([R(e)]),y(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>y(e.updateTiles(this._updateTilesParameters,null)),b),this.addHandles([f(()=>this.configuration,i=>y(e.configure(i,null)),J),f(()=>this._layer.historicMoment,i=>y(e.setHistoricMoment(i)),A),f(()=>this._outFields,i=>y(e.updateOutFields(i)),b),f(()=>this._isSuspended,i=>y(e.setSuspended(i)),A)]),t!=null&&this.addHandles(f(()=>Pe.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new M({view:t,handle:e}),this.addHandles(R(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},b)),this.addHandles([this.layerSource.layer.on("edits",i=>y(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy(),this._tilesOfInterest.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:a}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(a);const s=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(r=>Oe(r,s))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const a=ge(async()=>{const s=await ie(()=>import("./WhereClause-D4rZJkVN-BTS2QIEM.js"),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url).then(r=>r.W);return this._whereModule=s.default,this._whereModule});return this._loadWhereModuleTask=a,this._updatingHandles.addPromise(a.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};n([o({constructOnly:!0})],u.prototype,"spatialReference",void 0),n([o({constructOnly:!0})],u.prototype,"layerSource",void 0),n([o({constructOnly:!0})],u.prototype,"view",void 0),n([o()],u.prototype,"_tilesOfInterest",void 0),n([o({readOnly:!0})],u.prototype,"_updateTilesParameters",null),n([o()],u.prototype,"_layerView",null),n([o()],u.prototype,"_isSuspended",null),n([o({readOnly:!0})],u.prototype,"updating",null),n([o()],u.prototype,"_outFields",null),n([o({readOnly:!0})],u.prototype,"configuration",null),n([o({readOnly:!0})],u.prototype,"availability",null),n([o()],u.prototype,"_loadWhereModuleTask",void 0),n([o()],u.prototype,"_whereModule",void 0),u=n([S("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],u);export{u as FeatureServiceSnappingSource};
