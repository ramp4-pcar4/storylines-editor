import{u as a}from"./workerHelper-DSKw1QDW-DFxo6VYb.js";import{X as l,N as c,f as p,l as u,U as d,K as f}from"./edgeProcessing-CKfhkuI9-BjxaZI6Q.js";import"./InterleavedLayout-DcHoXu73-Cg05a7-1.js";import"./BufferView-BBCzkcZS-Cj1SO_lP.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec32-BuqRmYBM-CeCtpreK.js";import"./main-MRyW-Zz3.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./deduplicate-DZCyc4JG-DBFiP2Kr.js";import"./Indices-DkAzsiH--BgB6t7F5.js";import"./VertexAttribute-DFC3a3eR-BhmQtMsu.js";import"./glUtil-n1JOrdV3-CRAZdee5.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./Normals-BP6u0Eou-DnKTLvpz.js";class j{async extract(t){const e=o(t),r=l(e),s=[e.data.buffer];return{result:g(r,s),transferList:s}}async extractComponentsEdgeLocations(t){const e=o(t),r=c(e.data,e.skipDeduplicate,e.indices,e.indicesLength),s=p(r,D),n=[];return{result:a(s.regular.instancesData,n),transferList:n}}async extractEdgeLocations(t){const e=o(t),r=c(e.data,e.skipDeduplicate,e.indices,e.indicesLength),s=p(r,L),n=[];return{result:a(s.regular.instancesData,n),transferList:n}}}function o(i){return{data:u.createView(i.dataBuffer),indices:i.indicesType==="Uint32Array"?new Uint32Array(i.indices):i.indicesType==="Uint16Array"?new Uint16Array(i.indices):i.indices,indicesLength:i.indicesLength,writerSettings:i.writerSettings,skipDeduplicate:i.skipDeduplicate}}function g(i,t){return t.push(i.regular.lodInfo.lengths.buffer),t.push(i.silhouette.lodInfo.lengths.buffer),{regular:{instancesData:a(i.regular.instancesData,t),lodInfo:{lengths:i.regular.lodInfo.lengths.buffer}},silhouette:{instancesData:a(i.silhouette.instancesData,t),lodInfo:{lengths:i.silhouette.lodInfo.lengths.buffer}},averageEdgeLength:i.averageEdgeLength}}class m{allocate(t){return d.createBuffer(t)}trim(t,e){return t.slice(0,e)}write(t,e,r){t.position0.setVec(e,r.position0),t.position1.setVec(e,r.position1)}}class h{allocate(t){return f.createBuffer(t)}trim(t,e){return t.slice(0,e)}write(t,e,r){t.position0.setVec(e,r.position0),t.position1.setVec(e,r.position1),t.componentIndex.set(e,r.componentIndex)}}const L=new m,D=new h;export{j as default};
