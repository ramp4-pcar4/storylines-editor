import{c,H as S,bt as X,q as z,d9 as B,a8 as P,c4 as k,R as O,ci as M,b as F,jG as J,jH as H,x as N,jI as A,dv as b,T as $,ad as K,a0 as Z,s as ee,ff as te,iu as T}from"./main-BrXQBr3M.js";import{L as re,s as ae}from"./featureConversionUtils-DRaHTjrY-fgjzbpdH.js";import{K as ne,W as se}from"./executeQueryForSnapping-BaQkcS1W-DiFnUwo7.js";import{p as oe,h as ie}from"./queryUtils-OXllLZed-BpQENmsE.js";import{Y as ue}from"./QueryEngine-DEm6IK5j-CZ6Vwi1q.js";import{Y as le,U as pe,m as ce}from"./geojson-v8vpimDG-CQZ-_pKw.js";import{A as me}from"./sourceUtils-4Pkpu1X1-BDv0IOUF.js";import{Q as fe,O as de}from"./projection-m8vi7Cxv-DG9zGNlV.js";import{y as h}from"./Field-Cj6Pz3TI-BT1_6DON.js";import{o as ye}from"./FieldsIndex-Y7EBAYp0-BqfCvCRQ.js";import"./OptimizedFeatureSet-D6mgsKNr-DozTzjts.js";import"./memoryEstimations-iHVpvWPf-Bcit1dlR.js";import"./OptimizedGeometry-1qDYm3YK-NqjQEvGQ.js";import"./PooledRBush-J5-OtqBl-BPvUcKNI.js";import"./quickselect-DHTstthl-Ds_Aj0x5.js";import"./timeSupport-_0FhDj9z-BU_U-AYv.js";import"./optimizedFeatureQueryEngineAdapter-Bx4OOJmK-CCXYJ5FT.js";import"./normalizeUtils-b-vZURob-Cu-Bjt2-.js";import"./utils-DuaeuwP5-t1uDCGxn.js";import"./utils-Jw-4AGsF-DGUB3bF1.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./WhereClauseCache-CAR59H4Y--ciTvgoK.js";import"./LRUCache-BLmkvs7b-Cf0KRICn.js";import"./MemCache-BCippCv6-DnYe-hpD.js";import"./WhereClause-nZnXFKnG-B5BHwoCA.js";import"./TimeOnly-C3SOkmg2-CtsxsW96.js";import"./fieldType-VTpxE-EM-CC-owBT-.js";import"./QueryEngineCapabilities-C8pazosU-DZTubngj.js";import"./TimeExtent-gZaEUVeW-D2eGsof2.js";import"./quantizationUtils-Cndke4AR-CpcVDbiy.js";import"./utils-BrRx2KpZ--Oyy5UD9.js";import"./heatmapUtils--OU2Fakh-BWGHg30d.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./utils-BG7WTOnW-ifxlWSTl.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-uiUWvEP6.js";import"./intl-DLmy-Li5-DRUw9zN4.js";import"./timeZoneUtils-z3WjfjXQ-8JPN5aIG.js";import"./ClassBreaksDefinition-B_vYk3bu-T-oMuoDJ.js";import"./SnappingCandidate-DJDyIbpo-CuetCfU1.js";import"./FixedIntervalBinParameters-aoOPIkh7-BjdIlnFZ.js";import"./NormalizationBinParametersMixin-ZkplD1Sk-D7EQSx5U.js";import"./Scheduler-Br-2v2ys-C5OE6Pu_.js";import"./signal-DxzURL18-BiAWl8ZV.js";import"./date-Cqvy-TgA-DIf-QFLz.js";function w(r,t){if(r&&t){for(const e of r.children)if(e.localName in t){const a=t[e.localName];if(typeof a=="function"){const n=a(e);n&&w(e,n)}else w(e,a)}}}function*g(r,t){for(const e of r.children)if(e.localName in t){const a=t[e.localName];typeof a=="function"?yield a(e):yield*g(e,a)}}const R="xlink:href",x="2.0.0",I="__esri_wfs_id__",he="wfs-layer:getWFSLayerTypeInfo-error",ge="wfs-layer:empty-service",L="wfs-layer:feature-type-not-found",we="wfs-layer:geojson-not-supported",xe="wfs-layer:kvp-encoding-not-supported",_e="wfs-layer:malformed-json",U="wfs-layer:unknown-geometry-type",Fe="wfs-layer:unknown-field-type",Te="wfs-layer:unsupported-spatial-reference",be="wfs-layer:unsupported-wfs-version";async function Ot(r,t){const e=Ce((await F(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetCapabilities",VERSION:x,...t?.customParameters},signal:t?.signal})).data);return Ee(r,e),e}function Ce(r){const t=Q(r);Le(t),V(t);const e=t.firstElementChild,a=J(Pe(e));return{operations:Re(e),get featureTypes(){return Array.from(a())},readFeatureTypes:a}}const Se=["json","application/json","geojson","application/json; subtype=geojson","application/geo+json"];function v(r){for(const t of Se){const e=r.findIndex(a=>a.toLowerCase()===t);if(e>=0)return r[e]}return null}function Re(r){let t=!1;const e={GetCapabilities:{url:""},DescribeFeatureType:{url:""},GetFeature:{url:"",outputFormat:null,supportsPagination:!1}},a=[],n=[];if(w(r,{OperationsMetadata:{Parameter:s=>{if(s.getAttribute("name")==="outputFormat")return{AllowedValues:{Value:({textContent:o})=>{o&&a.push(o)}}}},Operation:s=>{switch(s.getAttribute("name")){case"GetCapabilities":return{DCP:{HTTP:{Get:o=>{e.GetCapabilities.url=o.getAttribute(R)}}}};case"DescribeFeatureType":return{DCP:{HTTP:{Get:o=>{e.DescribeFeatureType.url=o.getAttribute(R)}}}};case"GetFeature":return{DCP:{HTTP:{Get:o=>{e.GetFeature.url=o.getAttribute(R)}}},Parameter:o=>{if(o.getAttribute("name")==="outputFormat")return{AllowedValues:{Value:({textContent:i})=>{i&&n.push(i)}}}}}}},Constraint:s=>{switch(s.getAttribute("name")){case"KVPEncoding":return{DefaultValue:o=>{t=o.textContent.toLowerCase()==="true"}};case"ImplementsResultPaging":return{DefaultValue:o=>{e.GetFeature.supportsPagination=o.textContent.toLowerCase()==="true"}}}}}}),e.GetFeature.outputFormat=v(n)??v(a),!t)throw new c(xe,"WFS service doesn't support key/value pair (KVP) encoding");if(e.GetFeature.outputFormat==null)throw new c(we,"WFS service doesn't support GeoJSON output format");return e}function Ee(r,t){H(r)&&(N(r,t.operations.DescribeFeatureType.url,!0)&&(t.operations.DescribeFeatureType.url=A(t.operations.DescribeFeatureType.url)),N(r,t.operations.GetFeature.url,!0)&&(t.operations.GetFeature.url=A(t.operations.GetFeature.url)))}function G(r){const t=parseInt(r.textContent?.match(/(?<wkid>\d+$)/i)?.groups?.wkid??"",10);if(!Number.isNaN(t))return t}function Pe(r){return g(r,{FeatureTypeList:{FeatureType:t=>{const e={typeName:"undefined:undefined",name:"",title:"",description:"",extent:null,namespacePrefix:"",namespaceUri:"",defaultSpatialReference:4326,supportedSpatialReferences:[]},a=new Set;return w(t,{Name:n=>{const{name:s,prefix:o}=_(n.textContent);e.typeName=`${o}:${s}`,e.name=s,e.namespacePrefix=o,e.namespaceUri=n.lookupNamespaceURI(o)},Abstract:n=>{e.description=n.textContent},Title:n=>{e.title=n.textContent},WGS84BoundingBox:n=>{e.extent=ee.fromJSON(ke(n))},DefaultCRS:n=>{const s=G(n);s&&(e.defaultSpatialReference=s,a.add(s))},OtherCRS:n=>{const s=G(n);s&&a.add(s)}}),e.title||(e.title=e.name),a.add(4326),e.supportedSpatialReferences.push(...a),e}}})}function ke(r){let t,e,a,n;for(const s of r.children)switch(s.localName){case"LowerCorner":[t,e]=s.textContent.split(" ").map(o=>Number.parseFloat(o));break;case"UpperCorner":[a,n]=s.textContent.split(" ").map(o=>Number.parseFloat(o))}return{xmin:t,ymin:e,xmax:a,ymax:n,spatialReference:te}}function Ne(r,t,e){return b(r,a=>e?a.name===t&&a.namespaceUri===e:a.typeName===t||a.name===t)}async function Mt(r,t,e,a={}){const{featureType:n,extent:s}=await Ae(r,t,e,a),{spatialReference:o}=W(r.operations.GetFeature.url,n,a.spatialReference),{fields:i,geometryType:u,swapXY:l,objectIdField:p,geometryField:m}=await Ie(r,n,o,a);return{url:r.operations.GetCapabilities.url,name:n.name,namespaceUri:n.namespaceUri,fields:i,geometryField:m,geometryType:u,objectIdField:p,spatialReference:a.spatialReference??new $({wkid:n.defaultSpatialReference}),extent:s,swapXY:l,wfsCapabilities:r,customParameters:a.customParameters}}async function Ae(r,t,e,a={}){const n=r.readFeatureTypes(),s=t?Ne(n,t,e):n.next().value,{spatialReference:o=new $({wkid:s?.defaultSpatialReference})}=a;if(s==null)throw t?new c(L,`The type '${t}' could not be found in the service`):new c(ge,"The service is empty");let i=s.extent;if(i&&!M(i.spatialReference,o))try{await fe(i.spatialReference,o,void 0,a),i=de(i,o)}catch{throw new c(Te,"Projection not supported")}return{extent:i,spatialReference:o,featureType:s}}async function Ie(r,t,e,a={}){const{typeName:n}=t,[s,o]=await Promise.allSettled([je(r.operations.DescribeFeatureType.url,n,a),Ge(r,n,e,a)]),i=f=>new c(he,`An error occurred while getting info about the feature type '${n}'`,{error:f});if(s.status==="rejected")throw i(s.reason);if(o.status==="rejected")throw i(o.reason);const{fields:u,errors:l}=s.value??{},p=s.value?.geometryType||o.value?.geometryType,m=o.value?.swapXY??!1;if(p==null)throw new c(U,`The geometry type could not be determined for type '${n}`,{typeName:n,geometryType:p,fields:u,errors:l});return{...ve(u??[]),geometryType:p,swapXY:m}}function ve(r){const t=r.find(a=>a.type==="geometry");let e=r.find(a=>a.type==="oid");return r=r.filter(a=>a.type!=="geometry"),e||(e=new h({name:I,type:"oid",alias:I}),r.unshift(e)),{geometryField:t?.name??null,objectIdField:e.name,fields:r}}async function Ge(r,t,e,a={}){let n,s=!1;const[o,i]=await Promise.all([E(r.operations.GetFeature.url,t,e,r.operations.GetFeature.outputFormat,{...a,count:1}),F(r.operations.GetFeature.url,{responseType:"text",query:D(t,e,void 0,{...a,count:1}),signal:a?.signal})]),u=o.type==="FeatureCollection"&&o.features[0]?.geometry;if(u){let l;switch(n=K.fromJSON(ce(u.type)),u.type){case"Point":l=u.coordinates;break;case"LineString":case"MultiPoint":l=u.coordinates[0];break;case"MultiLineString":case"Polygon":l=u.coordinates[0][0];break;case"MultiPolygon":l=u.coordinates[0][0][0]}const p=/<[^>]*pos[^>]*> *(-?\d+(?:\.\d+)?) (-?\d+(?:\.\d+)?)/.exec(i.data);if(p){const m=l[0].toFixed(3),f=l[1].toFixed(3),d=parseFloat(p[1]).toFixed(3);m===parseFloat(p[2]).toFixed(3)&&f===d&&(s=!0)}}return{geometryType:n,swapXY:s}}async function je(r,t,e){return qe(t,(await F(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"DescribeFeatureType",VERSION:x,TYPENAME:t,TYPENAMES:t,...e?.customParameters},signal:e?.signal})).data)}function qe(r,t){const{name:e}=_(r),a=Q(t);V(a);const n=b(g(a.firstElementChild,{element:s=>s}),s=>s.getAttribute("name")===e);if(n!=null){const s=n.getAttribute("type"),o=s?b(g(a.firstElementChild,{complexType:i=>i}),i=>i.getAttribute("name")===_(s).name):b(g(n,{complexType:i=>i}),()=>!0);if(o)return Me(o)}throw new c(L,`Type '${r}' not found in document`,{document:new XMLSerializer().serializeToString(a)})}const Oe=new Set(["objectid","fid"]);function Me(r){const t=[],e=[];let a;const n=g(r,{complexContent:{extension:{sequence:{element:s=>s}}}});for(const s of n){const o=s.getAttribute("name");if(!o)continue;let i,u;if(s.hasAttribute("type")?i=_(s.getAttribute("type")).name:w(s,{simpleType:{restriction:m=>(i=_(m.getAttribute("base")).name,{maxLength:f=>{u=+f.getAttribute("value")}})}}),!i)continue;const l=s.getAttribute("nillable")==="true";let p=!1;switch(i.toLowerCase()){case"integer":case"nonpositiveinteger":case"negativeinteger":case"long":case"int":case"short":case"byte":case"nonnegativeinteger":case"unsignedlong":case"unsignedint":case"unsignedshort":case"unsignedbyte":case"positiveinteger":e.push(new h({name:o,alias:o,type:"integer",nullable:l,length:T("integer")}));break;case"float":case"double":case"decimal":e.push(new h({name:o,alias:o,type:"double",nullable:l,length:T("double")}));break;case"boolean":case"string":case"gyearmonth":case"gyear":case"gmonthday":case"gday":case"gmonth":case"anyuri":case"qname":case"notation":case"normalizedstring":case"token":case"language":case"idrefs":case"entities":case"nmtoken":case"nmtokens":case"name":case"ncname":case"id":case"idref":case"entity":case"duration":case"time":e.push(new h({name:o,alias:o,type:"string",nullable:l,length:u??T("string")}));break;case"datetime":case"date":e.push(new h({name:o,alias:o,type:"date",nullable:l,length:u??T("date")}));break;case"pointpropertytype":a="point",p=!0;break;case"multipointpropertytype":a="multipoint",p=!0;break;case"curvepropertytype":case"multicurvepropertytype":case"multilinestringpropertytype":a="polyline",p=!0;break;case"surfacepropertytype":case"multisurfacepropertytype":case"multipolygonpropertytype":a="polygon",p=!0;break;case"geometrypropertytype":case"multigeometrypropertytype":p=!0,t.push(new c(U,`geometry type '${i}' is not supported`,{type:new XMLSerializer().serializeToString(r)}));break;default:t.push(new c(Fe,`Unknown field type '${i}'`,{type:new XMLSerializer().serializeToString(r)}))}p&&e.push(new h({name:o,alias:o,type:"geometry",nullable:l}))}for(const s of e)if(s.type==="integer"&&!s.nullable&&Oe.has(s.name.toLowerCase())){s.type="oid";break}return{geometryType:a,fields:e,errors:t}}async function E(r,t,e,a,n){let{data:s}=await F(r,{responseType:"text",query:D(t,e,a,n),signal:n?.signal});s=s.replaceAll(/": +(-?\d+),(\d+)(,)?/g,'": $1.$2$3');try{return JSON.parse(s)}catch(o){throw new c(_e,"Error while parsing the response",{response:s,error:o})}}function D(r,t,e,a){const n=typeof t=="number"?t:t.wkid;return{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:x,TYPENAMES:r,OUTPUTFORMAT:e,SRSNAME:"EPSG:"+n,STARTINDEX:a?.startIndex,COUNT:a?.count,...a?.customParameters}}async function $e(r,t,e){const a=await F(r,{responseType:"text",query:{SERVICE:"WFS",REQUEST:"GetFeature",VERSION:x,TYPENAMES:t,RESULTTYPE:"hits",...e?.customParameters},signal:e?.signal}),n=/numberMatched=["'](?<numberMatched>\d+)["']/gi.exec(a.data);if(n?.groups)return+n.groups.numberMatched}function Q(r){return new DOMParser().parseFromString(r.trim(),"text/xml")}function _(r){const[t,e]=r.split(":");return{prefix:e?t:"",name:e??t}}function Le(r){const t=r.firstElementChild?.getAttribute("version");if(t&&t!==x)throw new c(be,`Unsupported WFS version ${t}. Supported version: ${x}`)}function V(r){let t="",e="";if(w(r.firstElementChild,{Exception:a=>(t=a.getAttribute("exceptionCode"),{ExceptionText:n=>{e=n.textContent}})}),t)throw new c(`wfs-layer:${t}`,e)}function W(r,t,e){const a={wkid:t.defaultSpatialReference},n=e?.wkid!=null?{wkid:e.wkid}:a;return{spatialReference:n,getFeatureSpatialReference:Z(r)||n.wkid&&t.supportedSpatialReferences.includes(n.wkid)?{wkid:n.wkid}:{wkid:t.defaultSpatialReference}}}const j="esri.layers.WFSLayer";class Ue{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:a,getFeatureOutputFormat:n,fields:s,geometryType:o,featureType:i,maxRecordCount:u,maxTotalRecordCount:l,maxPageCount:p,objectIdField:m,customParameters:f}=t,{spatialReference:d,getFeatureSpatialReference:C}=W(a,i,t.spatialReference);try{await oe(C,d)}catch{throw new c("unsupported-projection","Projection not supported",{inSpatialReference:C,outSpatialReference:d})}S(e),this._customParameters=f,this._featureType=i,this._fieldsIndex=ye.fromLayerJSON({fields:s,dateFieldsTimeReference:s.some(Y=>Y.type==="esriFieldTypeDate")?{timeZoneIANA:X}:null}),this._geometryType=o,this._getFeatureUrl=a,this._getFeatureOutputFormat=n,this._getFeatureSpatialReference=C,this._maxRecordCount=u,this._maxTotalRecordCount=l,this._maxPageCount=p,this._objectIdField=m,this._spatialReference=d;let y=await this._snapshotFeatures(e);if(y.errors.length>0&&(this._supportsPagination=!1,y=await this._snapshotFeatures(e),y.errors.length>0))throw y.errors[0];return this._queryEngine=new ue({fieldsIndex:this._fieldsIndex,geometryType:o,hasM:!1,hasZ:!1,objectIdField:m,spatialReference:d,timeInfo:null,featureStore:new ne({geometryType:o,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(y.features),{warnings:q(y),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new c("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),(await this._queryEngine.executeQueryForIds(t,e.signal)).filter(z)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),se(this._queryEngine,t,e.signal)}async queryAttributeBins(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeAttributeBinsQuery(t,e.signal)}async refresh(t){return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=B(e=>this._snapshotFeatures({signal:e})),this._snapshotTask.promise.then(e=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(e.features);for(const a of q(e))P.getLogger(j).warn(new k("wfs-layer:refresh-warning",a.message,a.details));e.errors?.length&&P.getLogger(j).warn(new k("wfs-layer:refresh-error","Refresh completed with errors",{errors:e.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t?.signal,a=this._maxTotalRecordCount,n=this._maxPageCount,s=this._supportsPagination?await $e(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let o=[];const i=[];if(s==null)try{o=await this._singleQuery(e)}catch(u){O(u)||i.push(u)}else{const u=Math.min(s,a),l=De(this,Math.max(1,Math.min(Math.ceil(u/this._maxRecordCount),n)),e);await Promise.allSettled(Array.from({length:10}).map(()=>Qe(l,o,i)))}return S(e),{features:o,totalRecordCount:s,maxTotalRecordCount:a,maxPageCount:n,errors:i}}async _singleQuery(t){const e=await E(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const a=t*this._maxRecordCount,n=await E(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:e});return this._processGeoJSON(n,{startIndex:a,signal:e})}_processGeoJSON(t,e){le(t,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:n}=e;S(n);const s=pe(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!M(this._spatialReference,this._getFeatureSpatialReference))for(const i of s)i.geometry!=null&&(i.geometry=re(ie(ae(i.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let o=a??1;for(const i of s){const u={};me(this._fieldsIndex,u,i.attributes,!0),i.attributes=u,u[this._objectIdField]==null&&(i.objectId=u[this._objectIdField]=o++)}return s}}function*De(r,t,e){for(let a=0;a<t;a++)yield r._pageQuery(a,e)}async function Qe(r,t,e){let a=r.next();for(;!a.done;){try{const n=await a.value;t.push(...n)}catch(n){O(n)||e.push(n)}a=r.next()}}function q(r){const t=[];return r.totalRecordCount!=null&&(r.features.length<r.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${r.features.length} of ${r.totalRecordCount} in ${r.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount}}),r.totalRecordCount>r.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${r.totalRecordCount} features exceeds the maximum allowed of ${r.maxTotalRecordCount}.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount,maxTotalRecordCount:r.maxTotalRecordCount}})),t}const $t=Object.freeze(Object.defineProperty({__proto__:null,default:Ue},Symbol.toStringTag,{value:"Module"}));export{I as S,Mt as W,Ne as Y,$t as a,w as o,Ot as v,ve as z};
