import{v as l,eb as x,a as B,aa as S,lP as N,aE as $,ai as b,aC as E,kw as j,L as Y,b8 as T,db as O,ao as I,lQ as K,E as w,d9 as Q,gI as G,a8 as W,c as X,I as d,t as L,av as J,aG as tt,aj as z,df as et,c6 as it}from"./main-BrXQBr3M.js";import st from"./GraphicsLayer-GkJJfSu5-DuYgOfBS.js";import{l as ot}from"./ViewingMode-CyR_b1T8-_s7_Gbsk.js";import{w as rt}from"./SnappingVisualizer2D-DR-yrbjS-BialhzQX.js";import{I as nt}from"./drawUtils-BUIg7AUj-LGsIYcko.js";import{p as at,j as pt}from"./GraphicMover-CiNX1V2i-CVpW6kxN.js";import{T as P,M as ht,aC as ct}from"./SketchViewModel-T2dNp9Tt-DgIPIoSS.js";import{m as k}from"./quantityUtils-RaoZoCNH-7yvlACmu.js";import{B as lt,e as dt,i as mt,o as F,s as vt,S as yt,V as _t,q as gt}from"./automaticLengthMeasurementUtils-BcfJmFU0-Bdr2YwzW.js";import{s as ut,i as ft}from"./SelectedVertexTooltipInfo-C6fS9jtg-CJ62AavV.js";import{t as xt}from"./TranslateTooltipInfo-BmeZ3crn-D_Ve2Bot.js";import{W as U}from"./automaticAreaMeasurementUtils-Bz1iefP0-c1Jk-cpw.js";import{u as Gt}from"./settings-zzKkZJrb-BdFkN7JE.js";import{g as bt}from"./globalCss-CFN4F315-nvTe32za.js";import{a as Vt,E as wt,e as Mt}from"./index-CVKk0WAC-D5H03Yyr.js";import"./GraphicsCollection-rAFZo1AJ-C66GkgUC.js";import"./Layer-B8q-l4yV-CrUv4jz5.js";import"./TimeExtent-gZaEUVeW-D2eGsof2.js";import"./ScaleRangeLayer-DIxukUBC-C1pkfLgo.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-DzmXEA9_-BnStZKpJ.js";import"./parser-hXQyB-Qx-Dp0xTp_H.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-uiUWvEP6.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./ElevationInfo-DkWlof50-Bezaxy73.js";import"./lengthUtils-wU9RRIqK-BTv_PZij.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./HighlightDefaults-Cg50f_1y-DBQnO5UZ.js";import"./layerViewUtils-Bk5QNiAa-DVg9x4hA.js";import"./featureUtils-CZUu1SmW-BISwh1ji.js";import"./intl-DLmy-Li5-DRUw9zN4.js";import"./utils-BG7WTOnW-ifxlWSTl.js";import"./timeZoneUtils-z3WjfjXQ-8JPN5aIG.js";import"./GraphicManipulator-DXPP3gDs-C41cKRRl.js";import"./vec32-BuqRmYBM-a_dAxp7z.js";import"./projection-m8vi7Cxv-DG9zGNlV.js";import"./projectPointToVector-CG1hALQu-_1t8tYzF.js";import"./drapedUtils-7RfmdK5D-DW8HPu8_.js";import"./UpdatingHandles-DBzjq66S-BsyyovN3.js";import"./projectVectorToVector-D0K_S4MR-4Lr69e04.js";import"./geodesicUtils-DV-lFWtb-Cfgf3osD.js";import"./Query-CxQYWcUQ-B-eUtOfF.js";import"./Field-Cj6Pz3TI-BT1_6DON.js";import"./fieldType-VTpxE-EM-CC-owBT-.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./plane-B_adY3_o-k_KeEgEV.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./mat4f64-BaJwL7tQ-k0uMm8LY.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./sphere-Cj20syUS-D-Z5ol5q.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./Queue-B8H6jIv7-C4vOEIQq.js";import"./signal-DxzURL18-BiAWl8ZV.js";import"./Version-BTMwSXf1-CLS208tz.js";import"./MeshTransform-CvTryVbE-CcTWe5ZS.js";import"./quat-D8L_R4I0-B2071tyE.js";import"./axisAngleDegrees-nTnQhoaG-M2xEtDgJ.js";import"./meshVertexSpaceUtils-BwEbYR8F-B7wjvwC7.js";import"./MeshLocalVertexSpace-DFCiKNRA-BlhP6OPR.js";import"./themeUtils-RB4IoNvm-uO-dsvgO.js";import"./jsxFactory-C5LxVioS-C8vZZ24R.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./a11yUtils-C2ydunC---DkjY4RU.js";import"./unitFormatUtils-zTNxheG9-BZKEJ8fP.js";import"./ByteSizeUnit-DL8UhsB0-B2-AmVRx.js";import"./spatialReferenceEllipsoidUtils-DlQOpWof-DZSRlDRY.js";import"./geodesicLengthMeasurementUtils-X1SKKkBz-BJVMMixh.js";import"./PointSnappingHint-ClwQ1VNw-BUlpW57L.js";import"./earcut-XDcq3zAf-BcwyrT7l.js";import"./triangle-BePBrXJ8-D-GiIJSi.js";import"./lineSegment-BJNfNZM5-C_IxAdr_.js";import"./draw-store-C1_quxsr-KNUUV-aj.js";import"./widget-BgluoE6k-DUnNINRe.js";import"./diffUtils-BSe9IE26-BhPEeZ3Z.js";import"./hydratedFeatures-BDT5zTGB-DiUP0hcO.js";import"./Scheduler-Br-2v2ys-C5OE6Pu_.js";import"./geometryEngineBase-DueYg7ux-CCeespPx.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./hydrated-Bae3cp-4-CqrNuLE6.js";import"./mat2d-BQA-1WB--Pnyy0dhf.js";import"./utils-C0LvbFCo-RMQaTNpt.js";import"./substitute-TfjvVaWd-CYbhCX1-.js";let f=class extends yt{constructor(t){super(t),this.type="translate-vertex",this.distance=k,this.elevation=null,this.area=null,this.totalLength=null}clear(){this.distance=k,this.elevation=null,this.area=null,this.totalLength=null}};l([d()],f.prototype,"type",void 0),l([d()],f.prototype,"distance",void 0),l([d()],f.prototype,"elevation",void 0),l([d()],f.prototype,"area",void 0),l([d()],f.prototype,"totalLength",void 0),f=l([L("esri.views.interactive.tooltip.infos.TranslateVertexTooltipInfo")],f);function St(t){const e={sketchOptions:t,viewType:"2d"};return{movePoint:new ut(e),selectedVertex:new ft(e),translateGraphic:new xt(e),translateVertices:new f(e)}}function Et(t,e){function i(){const o=e(),n=o.sketchOptions.tooltips.effectiveEnabled?o.activeTooltipInfo:null;return{...o,activeTooltipInfo:n}}let s=!1;function r(o){s||(s=!0,o(),s=!1)}return J([b(()=>{const o=i();return{context:o,geometry:o.graphic?.geometry,vertexGeometry:o.selectedVertex?.geometry}},({context:o})=>{r(()=>{It(o),t.info=o.activeTooltipInfo})},tt),b(()=>{const o=i(),{activeTooltipInfo:n}=o;if(n&&"key"in n)return{context:o,key:n.key}},(o,n)=>{o&&n&&o.key!==n.key&&r(()=>C(o.context))},z),mt(t,{onBeforePaste:()=>{s=!0},onAfterPaste:()=>{C(i()),s=!1}})])}function It(t){const e=t.activeTooltipInfo;if(e){switch(e?.type){case"move-point":return kt(e,t);case"selected-vertex":return Tt(e,t)}e.sketchOptions=t.sketchOptions}}function kt(t,{graphic:e}){D(t,e,e?.geometry)}function Tt(t,{graphic:e,selectedVertex:i}){D(t,e,i?.geometry);const s=e?.geometry;switch(s?.type){case"polygon":t.geometryType="polygon",t.totalLength.visible=!1,t.area.actual=U(s);break;case"polyline":t.geometryType="polyline",t.totalLength.actual=F(s),t.area.visible=!1}}function D(t,e,i){e&&i?.type==="point"&&(t.setLocationFromPoint(i),t.elevation.actual=_t(i),t.elevation.visible=!!e.geometry?.hasZ,t.elevation.readOnly=!1,t.elevation.showAsZ=!0)}function C(t){function e(o,n){const a=n?.geometry;if(!a||a.type!=="point")return;const{dx:c,dy:p,dz:h}=gt(o,a);if(c===0&&p===0&&h===0)return;const{x:v,y:_,z:g,m:u,spatialReference:V}=a,M=new w({x:v+c,y:_+p,z:g!=null?g+h:void 0,m:u,spatialReference:V});t.updateGeometry(n,M,a,c,p)}const{activeTooltipInfo:i,graphic:s,selectedVertex:r}=t;switch(i?.type){case"move-point":return e(i,s);case"selected-vertex":return e(i,r)}}function Ot(t,e,i){t.clear(),Z(t,e,i)}function Ct(t,e,i,s){t.clear(),i?.type==="polygon"?t.area=U(i):i?.type==="polyline"&&(t.totalLength=F(i)),Z(t,e,s)}function Z(t,e,i){if(!i)return;const{x:s,y:r}=i.origin,o=e.toMap(i),n=e.toMap(et(s,r)),a=vt(n,o);t.distance=a??k}class Ht{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-start"}}class Rt{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape"}}class At{constructor(e,i,s){this.graphic=e,this.mover=i,this.selected=s,this.type="reshape-stop"}}class Lt{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-start"}}class zt{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move"}}class Pt{constructor(e,i,s){this.mover=e,this.dx=i,this.dy=s,this.type="move-stop"}}class Ft{constructor(e){this.added=e,this.type="vertex-select"}}class Ut{constructor(e){this.removed=e,this.type="vertex-deselect"}}class Dt{constructor(e,i,s,r){this.added=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-add"}}class Zt{constructor(e,i,s,r){this.removed=e,this.graphic=i,this.oldGraphic=s,this.vertices=r,this.type="vertex-remove"}}const y=Gt.reshapeGraphics,qt={vertices:{default:new x({style:"circle",size:y.vertex.size,color:y.vertex.color,outline:{color:y.vertex.outlineColor,width:1}}),hover:new x({style:"circle",size:y.vertex.hoverSize,color:y.vertex.hoverColor,outline:{color:y.vertex.hoverOutlineColor,width:1}}),selected:new x({style:"circle",size:y.selected.size,color:y.selected.color,outline:{color:y.selected.outlineColor,width:1}})},midpoints:{default:new x({style:"circle",size:y.midpoint.size,color:y.midpoint.color,outline:{color:y.midpoint.outlineColor,width:1}}),hover:new x({style:"circle",size:y.midpoint.size,color:y.midpoint.color,outline:{color:y.midpoint.outlineColor,width:1}})}};let m=class extends B.EventedAccessor{constructor(t){super(t),this._updateHandlesOnExternalGeometryChange=null,this._activeOperationInfo=null,this._editGeometryOperations=null,this._graphicAttributes={esriSketchTool:"box"},this._mover=null,this._snappingContext=null,this._snappingGraphicsLayer=null,this._hoverGraphic=null,this._snappingTask=null,this._stagedVertex=null,this.tooltip=null,this.activeTooltipInfo=null,this.callbacks={onReshapeStart(){},onReshape(){},onReshapeStop(){},onMoveStart(){},onMove(){},onMoveStop(){},onGraphicClick(){}},this.enableMidpoints=!0,this.enableMovement=!0,this.enableVertices=!0,this.graphic=null,this.layer=null,this.midpointGraphics=new S,this.midpointSymbol=new x({style:"circle",size:6,color:[200,200,200],outline:{color:[100,100,100],width:1}}),this.selectedVertices=new S,this.snappingManager=null,this.symbols=qt,this.sketchOptions=new P,this.type="reshape",this.vertexGraphics=new S,this.view=null}initialize(){const t=this.view;this._highlightHelper=new at({view:t}),this._setup(),this._updateHandlesOnExternalGeometryChange=N(()=>this.graphic?.geometry,e=>{if(!e)return;const i=new Set(this.selectedVertices.map(p=>p.attributes?.pointIndex));this._highlightHelper.removeAll(),this._setUpHighlights(),this._setupGraphics(),this._clearSelection(),this.vertexGraphics.filter(p=>i.has(p.attributes.pointIndex)).forEach(p=>this._addToSelection(p));const{enableMovement:s,_mover:r,graphic:o,midpointGraphics:n,vertexGraphics:a}=this,c=a.concat(n).items;s&&c.push(o),r?.set("graphics",c)},z),this.tooltip=lt(()=>({view:t,options:this.sketchOptions.tooltips})),this.tooltipInfos=St(this.sketchOptions),this.addHandles([$(()=>t?.ready,()=>{const{layer:e,view:i}=this;ct(i,e),this.addHandles(i.on("key-down",s=>this._keyDownHandler(s),bt.TOOL))},{once:!0,initial:!0}),b(()=>this.graphic,()=>this.refresh()),b(()=>this.layer,(e,i)=>{i&&(this._clearSelection(),this._resetGraphics(i)),this.refresh()}),b(()=>this.enableMidpoints,()=>this.refresh()),Et(this.tooltip,()=>this._tooltipsContext),b(()=>this.view.effectiveTheme.accentColor,()=>this._updateSymbolsForTheme(),it),this._updateHandlesOnExternalGeometryChange]),this._updateTooltip()}destroy(){this._reset(),this._mover?.destroy(),this._mover=null,this.tooltip=E(this.tooltip)}get _coordinateHelper(){return this._editGeometryOperations?.data.coordinateHelper??Vt(!!this.graphic.geometry?.hasZ,!!this.graphic.geometry?.hasM,this.view.spatialReference)}get _selectedVertex(){return this.selectedVertices.length===1?this.selectedVertices.at(0):void 0}get _tooltipsContext(){return{sketchOptions:this.sketchOptions,activeTooltipInfo:this.activeTooltipInfo,graphic:this.graphic,selectedVertex:this._selectedVertex,updateGeometry:(t,e,i,s,r)=>{this._setUpGeometryHelper();const o=t===this.graphic;if(o?this._emitMoveStartEvent(0,0):this._emitReshapeStartEvent(t),this._syncGeometryAfterVertexMove(t,e,s,r,!0),o){const{view:n}=this,a=n.toScreen(i),c=n.toScreen(e),p=(c?.x??0)-(a?.x??0),h=(c?.y??0)-(a?.y??0);this._emitMoveEvent(p,h),this._emitMoveStopEvent(p,h)}else this._emitReshapeEvent(t),this._emitReshapeStopEvent(t);this._editGeometryOperations=E(this._editGeometryOperations)}}}set highlightsEnabled(t){this._highlightHelper?.removeAll(),this._set("highlightsEnabled",t),this._setUpHighlights()}get state(){const t=this.view.ready,e=!(!this.graphic||!this.layer);return t&&e?"active":t?"ready":"disabled"}isUIGraphic(t){const e=[];return this.graphic&&e.push(this.graphic),e.concat(this.vertexGraphics.items,this.midpointGraphics.items),e.length>0&&e.includes(t)}refresh(){this._reset(),this._setup()}reset(){this.graphic=null}clearSelection(){this._clearSelection()}removeSelectedVertices(){const{selectedVertices:t}=this;t.length&&this._removeVertices(t)}_setup(){const{graphic:t,layer:e}=this;if(!e||t?.geometry==null)return;const i=t.geometry;i.type!=="mesh"&&i.type!=="extent"?(i.type==="polygon"&&j(i),this._setUpHighlights(),this._setupGraphics(),this._setupMover()):this._logGeometryTypeError()}_setUpHighlights(){this.highlightsEnabled&&this.graphic&&this._highlightHelper?.add(this.graphic)}_setUpGeometryHelper(){const t=this.graphic.geometry;if(t==null||t.type==="mesh"||t.type==="extent")return void this._logGeometryTypeError();const e=t.type==="multipoint"?new Y({paths:[t.points],spatialReference:t.spatialReference}):t;this._editGeometryOperations=wt.fromGeometry(e,ot.Local)}_saveSnappingContextForHandle(t,e){this._snappingGraphicsLayer=new st({listMode:"hide",internal:!0,title:"Reshape snapping layer"}),this.view.map.layers.add(this._snappingGraphicsLayer);const i=this._editGeometryOperations;T(i),this._snappingContext=new Mt({editGeometryOperations:i,elevationInfo:{mode:"on-the-ground",offset:0},pointer:e.viewEvent?.pointerType||"mouse",excludeFeature:this.graphic,feature:this.graphic,visualizer:new rt(this._snappingGraphicsLayer),vertexHandle:this._getVertexFromEditGeometry(t)})}_reset(){this._clearSelection(),this._highlightHelper?.removeAll(),this._updateTooltip(),this._resetGraphics(),this._resetSnappingStateVars(),this._activeOperationInfo=null,this._mover&&this._mover.destroy(),this._mover=null,this.view.cursor="default"}_resetSnappingStateVars(){this.snappingManager!=null&&this.snappingManager.doneSnapping(),this._snappingGraphicsLayer!=null&&(this.view?.map&&this.view.map.layers.remove(this._snappingGraphicsLayer),this._snappingGraphicsLayer.destroy()),this._editGeometryOperations=E(this._editGeometryOperations),this._snappingTask=O(this._snappingTask),this._snappingTask=null,this._snappingContext=null,this._stagedVertex=null}_resetGraphics(t){this._removeMidpointGraphics(t),this._removeVertexGraphics(t),this.selectedVertices.removeAll(),this._updateTooltip()}_removeMidpointGraphics(t){const e=t||this.layer;e&&e.removeMany(this.midpointGraphics.items),this.midpointGraphics.items.forEach(i=>i.destroy()),this.midpointGraphics.removeAll()}_removeVertexGraphics(t){const e=t||this.layer;e&&e.removeMany(this.vertexGraphics.items),this.vertexGraphics.items.forEach(i=>i.destroy()),this.vertexGraphics.removeAll()}_setupGraphics(){const t=this.graphic.geometry;if(t!=null&&(t.type==="polyline"||t.type==="polygon")){const e=H(t);this.enableMidpoints&&this._setUpMidpointGraphics(e),this.enableVertices&&this._setUpVertexGraphics(e)}}_setUpMidpointGraphics(t){this._removeMidpointGraphics();const e=this._createMidpointGraphics(t);this.midpointGraphics.addMany(e),this.layer.addMany(e)}_setUpVertexGraphics(t){this._removeVertexGraphics();const e=this._createVertexGraphics(t);this.vertexGraphics.addMany(e),this._storeRelatedVertexIndices(),this.layer.addMany(e)}_createVertexGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];return t?.forEach((r,o)=>{r.forEach((n,a)=>{s.push(new I({geometry:this._coordinateHelper.arrayToPoint(n),symbol:i?.vertices?.default,attributes:{...e,pathIndex:o,pointIndex:a}}))})}),s}_createMidpointGraphics(t){const{_graphicAttributes:e,symbols:i}=this,s=[];for(let r=0;r<t.length;r++){const o=t[r];for(let n=0;n<o.length;n++){const a=(n+1)%o.length;if(this.graphic.geometry?.type==="polyline"&&a===0)continue;const c=o[n],p=o[a],h=this._getMidpoint(c,p);s.push(new I({geometry:h,symbol:i.midpoints.default,attributes:{...e,pathIndex:r,pointIndexStart:n,pointIndexEnd:a}}))}}return s}_updateSymbolsForTheme(){const t=this.view.effectiveTheme.accentColor;this.symbols={vertices:{...this.symbols.vertices,default:this.symbols.vertices.default.clone().set("color",t),hover:this.symbols.vertices.hover?.clone().set("color",t)},midpoints:{...this.symbols.midpoints}};for(const e of this.vertexGraphics)this._isSelected(e)?e.symbol=this.symbols.vertices.selected:this._hoverGraphic===e?e.symbol=this.symbols.vertices.hover:e.symbol=this.symbols.vertices.default}_storeRelatedVertexIndices(){const t=this.vertexGraphics.items;if(!t)return;const e=t.map(({geometry:i})=>({x:i.x,y:i.y}));for(let i=0;i<e.length;i++){const s=[];for(let r=0;r<e.length;r++){if(i===r)continue;const o=e[i],n=e[r];o.x===n.x&&o.y===n.y&&s.push(r)}t[i].attributes.relatedGraphicIndices=s}}_setupMover(){const{enableMovement:t,graphic:e,midpointGraphics:i,vertexGraphics:s,view:r}=this,o=s.concat(i).items;t&&o.push(e),this._mover=new pt({enableMoveAllGraphics:!1,highlightsEnabled:!1,indicatorsEnabled:!1,graphics:o,view:r,callbacks:{onGraphicClick:n=>this._onGraphicClickCallback(n),onGraphicMoveStart:n=>this._onGraphicMoveStartCallback(n),onGraphicMove:n=>this._onGraphicMoveCallback(n),onGraphicMoveStop:n=>this._onGraphicMoveStopCallback(n),onGraphicPointerOver:n=>this._onGraphicPointerOverCallback(n),onGraphicPointerOut:n=>this._onGraphicPointerOutCallback(n)}})}_onGraphicClickCallback(t){t.viewEvent.stopPropagation();const e=t.graphic;if(e===this.graphic)this.clearSelection(),this.emit("graphic-click",t),this.callbacks.onGraphicClick?.(t);else if(this._isMidpoint(e)){if(t.viewEvent.button===2)return;const i=this.graphic.clone(),s=this._createVertexFromMidpoint(e);this.refresh(),this._emitVertexAddEvent([e],i,s)}else this._isVertex(e)&&(t.viewEvent.stopPropagation(),t.viewEvent.button===2?this._removeVertices(e):(t.viewEvent.native.shiftKey||this._clearSelection(),this.selectedVertices.includes(e)?this._removeFromSelection(e,!0):this._addToSelection(e)))}_setUpOperation(t){const{graphic:e,dx:i,dy:s}=t,r=e===this.graphic;this._resetSnappingStateVars(),this._setUpGeometryHelper(),this._saveSnappingContextForHandle(e,t),this._activeOperationInfo={target:this.graphic,mover:e,operationType:r?"move":"reshape",totalDx:i,totalDy:s}}_onGraphicMoveStartCallback(t){const{dx:e,dy:i,graphic:s}=t;if(s===this.graphic){const{geometry:r}=s;return this._setUpOperation(t),this._emitMoveStartEvent(e,i),void(r!=null&&r.type==="point"&&this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(e,i)}))}if(!this.selectedVertices.includes(s)){if(this._clearSelection(),this._isMidpoint(s)){const r=this.graphic.clone(),o=this._createVertexFromMidpoint(s);this._emitVertexAddEvent([s],r,o)}this._addToSelection(s)}this._setUpOperation(t),this._emitReshapeStartEvent(s),this._onHandleMove(s,e,i,t,()=>{this._updateTooltip(s,t.viewEvent),this._emitReshapeEvent(s)})}_onGraphicMoveCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t;e.totalDx+=i,e.totalDy+=s;const{operationType:o}=e,{geometry:n}=r;if(n!=null){if(o!=="move")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(r,t.viewEvent),this._emitReshapeEvent(r)});else if(n.type==="point")this._onHandleMove(r,i,s,t,()=>{this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)});else if(n.type==="polyline"||n.type==="polygon"){const a=H(n);this._updateVertexGraphicLocations(a),this._updateTooltip(this.graphic,t.viewEvent),this._emitMoveEvent(i,s)}}}_onGraphicMoveStopCallback(t){const e=this._activeOperationInfo;if(!e)return;const{dx:i,dy:s,graphic:r}=t,{operationType:o}=e;e.totalDx+=i,e.totalDy+=s,this._onHandleMove(r,i,s,t,()=>o==="move"?this._emitMoveStopEvent():this._emitReshapeStopEvent(r)),this._isMidpoint(r)?this.refresh():(this._updateTooltip(this._isVertex(r)?r:null),this._resetSnappingStateVars(),this._activeOperationInfo=null)}_updateVertexGraphicLocations(t){const{_coordinateHelper:e}=this;for(const i of this.vertexGraphics){const{pathIndex:s,pointIndex:r}=i.attributes;i.geometry=e.arrayToPoint(t[s][r])}this._updateMidpointGraphicLocations(t)}_updateMidpointGraphicLocations(t){for(const e of this.midpointGraphics){const{pathIndex:i,pointIndexStart:s,pointIndexEnd:r}=e.attributes,o=t[i];e.geometry=this._getMidpoint(o[s],o[r])}}_getMidpoint(t,e){const{_coordinateHelper:i}=this,s=i.arrayToVector(t),r=i.arrayToVector(e),o=i.toXYZ(s),n=i.toXYZ(r),[a,c,p]=K(o,n),h=i.hasM()?0:void 0;return new w({x:a,y:c,z:p,m:h,spatialReference:i.spatialReference})}_getVertexFromEditGeometry(t){const[e,i]=R(t);return T(this._editGeometryOperations),this._editGeometryOperations.data.components[e].vertices[i]}_onHandleMove(t,e,i,s,r){O(this._snappingTask);const o=this._snappingContext;if(!o)return;const n=t.geometry,a=s.type==="graphic-move-stop";if(this.snappingManager!=null&&this.selectedVertices.length<2&&!a){const c=this.snappingManager;this._stagedVertex=c.update({point:n,context:o}),this._syncGeometryAfterVertexMove(t,new w(this._stagedVertex),e,i,a),r(),this._snappingTask=Q(async p=>{const h=await c.snap({point:n,context:o,signal:p});h.valid&&(this._stagedVertex=h.apply(),this._syncGeometryAfterVertexMove(t,new w(this._stagedVertex),e,i,a),r())})}else{const c=this._stagedVertex!=null?new w(this._stagedVertex):n;this._syncGeometryAfterVertexMove(t,c,e,i,a),r()}}_syncGeometryAfterVertexMove(t,e,i,s,r=!1){const o=this._editGeometryOperations?.data.geometry;if(o)if(o.type==="point")t.geometry=e;else if(o.type==="mesh")t.geometry=o.centerAt(e);else{const{_coordinateHelper:n}=this,[a,c]=R(t);let p=G(o);const h=p[a].length-1,v=n.pointToArray(e);p[a][c]=v,o.type==="polygon"&&(c===0?p[a][h]=v:c===h&&(p[a][0]=v)),this._isVertex(t)&&(p=this._moveRelatedCoordinates(p,t,v),p=this._moveSelectedHandleCoordinates(p,t,i,s,o.type==="polygon"),this._updateMidpointGraphicLocations(p)),this._updateGraphicGeometry(o.clone());const _=n.pointToVector(e),g=this._getVertexFromEditGeometry(t),u=n.getZ(_),V=_[0]-g.pos[0],M=_[1]-g.pos[1],q=u!=null?u-g.pos[2]:0;this._editGeometryOperations?.moveVertices([g],V,M,q),r&&(this._mover?this._mover.updateGeometry(this._mover.graphics.indexOf(t),e):t.geometry=e)}}_moveRelatedCoordinates(t,e,i){const{relatedGraphicIndices:s}=e.attributes;for(const r of s){const o=this.vertexGraphics.at(r),{pathIndex:n,pointIndex:a}=o.attributes;t[n][a]=i,o.geometry=e.geometry}return t}_moveSelectedHandleCoordinates(t,e,i,s,r){for(const o of this.selectedVertices)if(o!==e){const{pathIndex:n,pointIndex:a,relatedGraphicIndices:c}=o.attributes,p=nt(o.geometry,i,s,this.view),h=G(p),v=t[n].length-1;t[n][a]=h,o.geometry=p,r&&(a===0?t[n][v]=h:a===v&&(t[n][0]=h));for(const _ of c){const g=this.vertexGraphics.at(_),{pathIndex:u,pointIndex:V}=g.attributes;t[u][V]=h,g.geometry=p}}return t}_onGraphicPointerOverCallback(t){const e=t.graphic;this._hoverGraphic=e;const i=this._isVertex(e);i&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.hover),this._updateTooltip(i?e:null),this._updateHoverCursor(e)}_onGraphicPointerOutCallback(t){const e=t.graphic;this._hoverGraphic=null,this._isVertex(e)&&!this._isSelected(e)&&(e.symbol=this.symbols.vertices.default),this.view.cursor="default",this._updateTooltip()}_createVertexFromMidpoint(t){const{_graphicAttributes:e,graphic:i}=this,s=i.geometry;if(s==null||s.type!=="polygon"&&s.type!=="polyline")return[];const r=s.clone(),o=[],{pathIndex:n,pointIndexStart:a,pointIndexEnd:c}=t.attributes,p=G(t.geometry),h=c===0?a+1:c,v=G(r);return v[n].splice(h,0,p),t.attributes={...e,pathIndex:n,pointIndex:h,relatedGraphicIndices:[]},o.push({coordinates:v[n][h],componentIndex:n,vertexIndex:h}),this._updateGraphicGeometry(r),o}_addToSelection(t){const e=A(t);for(const i of e)i.symbol=this.symbols.vertices.selected,this.selectedVertices.add(i),this._updateTooltip(i);this._emitSelectEvent(e)}_removeFromSelection(t,e){const{vertices:i}=this.symbols,s=e?i.hover:i.default;this.selectedVertices.remove(t),t.symbol=s,this._emitDeselectEvent([t]),this._updateTooltip()}_clearSelection(){const t=this.selectedVertices.toArray();if(t.length>0){for(const e of t)e.set("symbol",this.symbols.vertices.default);this.selectedVertices.removeAll(),this._emitDeselectEvent(t),this._updateTooltip()}}_keyDownHandler(t){this._activeOperationInfo==null&&dt(t,this.tooltip)||ht.delete.includes(t.key)&&!t.repeat&&this.selectedVertices.length&&this._removeVertices(this.selectedVertices)}_removeVertices(t){const e=this.graphic.geometry;if(e==null||e.type!=="polygon"&&e.type!=="polyline"||e.type==="polygon"&&this.vertexGraphics.length<4||this.vertexGraphics.length<3)return;const i=this.graphic.clone(),s=e.clone();let r=G(s);const o=[],n=A(t);for(const a of n){const{x:c,y:p}=a.geometry;for(let h=0;h<r.length;h++){const v=r[h];for(let _=0;_<v.length;_++){const[g,u]=v[_];c===g&&p===u&&(o.push({coordinates:r[h][_],componentIndex:h,vertexIndex:_}),r[h].splice(Number(_),1))}}}if(s.type==="polygon")r=r.filter(a=>{if(a.length<2)return!1;const[c,p]=a[0],[h,v]=a[a.length-1];return(a.length!==2||c!==h||p!==v)&&(c===h&&p===v||a.push(a[0]),!0)}),s.rings=r;else{for(const a of r)a.length===1&&r.splice(r.indexOf(a),1);s.paths=r}this._updateGraphicGeometry(s),this.refresh(),this._emitVertexRemoveEvent(n,i,o)}_isVertex(t){return this.vertexGraphics.includes(t)}_isSelected(t){return this._isVertex(t)&&this.selectedVertices.includes(t)}_isMidpoint(t){return this.midpointGraphics.includes(t)}_updateHoverCursor(t){this.view.cursor=this._isMidpoint(t)?"copy":"move"}_updateTooltip(t,e){let i=null;const{graphic:s,view:r,tooltipInfos:o}=this,n=s?.geometry;n?.type==="point"?i=o.movePoint:this._selectedVertex?i=o.selectedVertex:t===this.graphic?(i=o.translateGraphic,Ot(i,r,e)):t&&this.selectedVertices.length>1&&(i=o.translateVertices,Ct(i,r,n,e)),this.activeTooltipInfo=i}_updateGraphicGeometry(t){this._updateHandlesOnExternalGeometryChange?.pause(),this.graphic.geometry=t,this._updateHandlesOnExternalGeometryChange?.resume()}_emitMoveStartEvent(t,e){const i=new Lt(this.graphic,t,e);this.emit("move-start",i),this.callbacks.onMoveStart?.(i)}_emitMoveEvent(t,e){const i=new zt(this.graphic,t,e);this.emit("move",i),this.callbacks.onMove?.(i)}_emitMoveStopEvent(t,e){if(t==null||e==null){const s=this._activeOperationInfo;if(!s)return;t=s.totalDx,e=s.totalDy}const i=new Pt(this.graphic,t,e);this.emit("move-stop",i),this.callbacks.onMoveStop?.(i)}_emitReshapeStartEvent(t){const e=new Ht(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-start",e),this.callbacks.onReshapeStart?.(e)}_emitReshapeEvent(t){const e=new Rt(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape",e),this.callbacks.onReshape?.(e)}_emitReshapeStopEvent(t){const e=new At(this.graphic,t,this.selectedVertices.toArray());this.emit("reshape-stop",e),this.callbacks.onReshapeStop?.(e)}_emitSelectEvent(t){const e=new Ft(t);this.emit("select",e),this.callbacks.onVertexSelect?.(e)}_emitDeselectEvent(t){const e=new Ut(t);this.emit("deselect",e),this.callbacks.onVertexDeselect?.(e)}_emitVertexAddEvent(t,e,i){const s=new Dt(t,this.graphic,e,i);this.emit("vertex-add",s),this.callbacks.onVertexAdd?.(s)}_emitVertexRemoveEvent(t,e,i){const s=new Zt(t,this.graphic,e,i);this.emit("vertex-remove",s),this.callbacks.onVertexRemove?.(s)}_logGeometryTypeError(){W.getLogger(this).error(new X("reshape:invalid-geometry","Reshape operation not supported for the provided graphic. The geometry type is not supported."))}};function H(t){const e=G(t.clone());if(t.type==="polygon")for(const i of e){const s=i[i.length-1];i[0][0]===s[0]&&i[0][1]===s[1]&&i.length>2&&i.pop()}return e}function R({attributes:t}){return[t?.pathIndex||0,t?.pointIndex||0]}function A(t){return t instanceof I?[t]:[...t]}l([d()],m.prototype,"_activeOperationInfo",void 0),l([d()],m.prototype,"_coordinateHelper",null),l([d()],m.prototype,"_editGeometryOperations",void 0),l([d()],m.prototype,"tooltip",void 0),l([d()],m.prototype,"tooltipInfos",void 0),l([d()],m.prototype,"activeTooltipInfo",void 0),l([d()],m.prototype,"_selectedVertex",null),l([d()],m.prototype,"_tooltipsContext",null),l([d()],m.prototype,"callbacks",void 0),l([d()],m.prototype,"enableMidpoints",void 0),l([d()],m.prototype,"enableMovement",void 0),l([d()],m.prototype,"enableVertices",void 0),l([d()],m.prototype,"graphic",void 0),l([d({value:!0})],m.prototype,"highlightsEnabled",null),l([d()],m.prototype,"layer",void 0),l([d({readOnly:!0})],m.prototype,"midpointGraphics",void 0),l([d()],m.prototype,"midpointSymbol",void 0),l([d({readOnly:!0})],m.prototype,"selectedVertices",void 0),l([d()],m.prototype,"snappingManager",void 0),l([d({readOnly:!0})],m.prototype,"state",null),l([d()],m.prototype,"symbols",void 0),l([d({type:P})],m.prototype,"sketchOptions",void 0),l([d({readOnly:!0})],m.prototype,"type",void 0),l([d({readOnly:!0})],m.prototype,"vertexGraphics",void 0),l([d()],m.prototype,"view",void 0),m=l([L("esri.views.draw.support.Reshape")],m);const bi=m;export{bi as default};
