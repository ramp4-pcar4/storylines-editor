import{by as w,c$ as B,Y as g,v as t,I as r,bz as u,t as m,a9 as v,c0 as I,dT as f}from"./main-BrXQBr3M.js";import{d as D}from"./NormalizationBinParametersMixin-ZkplD1Sk-D7EQSx5U.js";const O=new w({esriFieldTypeInteger:"integer",esriFieldTypeString:"string"});let a=class extends B.ClonableMixin(g){constructor(e){super(e),this.alias=null,this.responseType=null,this.type=null,this.value=null,this.valueType=null}};t([r({type:String,json:{name:"outAlias",write:!0}})],a.prototype,"alias",void 0),t([r({type:String})],a.prototype,"responseType",void 0),t([r({type:String,json:{write:!0}})],a.prototype,"type",void 0),t([r({type:String,json:{write:!0}})],a.prototype,"value",void 0),t([u(O)],a.prototype,"valueType",void 0),a=t([m("esri.rest.support.AttributeBinsGrouping")],a);const c=a;a.from=v(a);const k=new w({esriFieldTypeSmallInteger:"small-integer",esriFieldTypeInteger:"integer",esriFieldTypeSingle:"single",esriFieldTypeDouble:"double",esriFieldTypeLong:"long",esriFieldTypeDate:"date",esriFieldTypeDateOnly:"date-only",esriFieldTypeTimeOnly:"time-only",esriFieldTypeTimestampOffset:"timestamp-offset"}),P=new w({naturalLog:"natural-log",squareRoot:"square-root"});let o=class extends B.ClonableMixin(g){constructor(e){super(e),this.expression=null,this.expressionValueType=null,this.field=null,this.firstDayOfWeek=null,this.hideUpperBound=null,this.splitBy=null,this.stackBy=null,this.transformation=null}};t([r({type:String,json:{name:"onExpression.value",write:!0}})],o.prototype,"expression",void 0),t([u(k,{name:"onExpression.valueType"})],o.prototype,"expressionValueType",void 0),t([r({type:String,json:{name:"onField",write:!0}})],o.prototype,"field",void 0),t([r({type:String,json:{write:!0}})],o.prototype,"firstDayOfWeek",void 0),t([r({type:String,json:{write:!0}})],o.prototype,"hideUpperBound",void 0),t([r({type:c,json:{write:{overridePolicy(){return{enabled:this.splitBy?.value!=null||this.splitBy?.type!=null}}}}})],o.prototype,"splitBy",void 0),t([r({type:c,json:{write:{target:{stackBy:{type:c},jsonStyle:{type:String}},writer:(e,n)=>{e&&(n.stackBy=e.toJSON(),e.responseType!=null&&(n.jsonStyle=e.responseType))},overridePolicy(){return{enabled:this.stackBy?.value!=null||this.stackBy?.type!=null}}},read:{source:["stackBy","jsonStyle"],reader:(e,n)=>c.fromJSON({...n.stackBy,responseType:n.jsonStyle})}}})],o.prototype,"stackBy",void 0),t([u(P)],o.prototype,"transformation",void 0),o=t([m("esri.rest.support.BinParametersBase")],o);const h=o;function T(e,n,s){f(s,e instanceof Date?e.getTime():e,n)}let p=class extends D(h){constructor(e){super(e),this.numBins=null,this.end=null,this.start=null,this.type="auto-interval"}};t([r({type:Number,json:{name:"parameters.numberOfBins",write:!0}})],p.prototype,"numBins",void 0),t([r({json:{name:"parameters.end",write:{writer:T}}})],p.prototype,"end",void 0),t([r({json:{name:"parameters.start",write:{writer:T}}})],p.prototype,"start",void 0),t([u({autoIntervalBin:"auto-interval"},{readOnly:!0})],p.prototype,"type",void 0),p=t([m("esri.rest.support.AutoIntervalBinParameters")],p);const L=p;p.from=v(p);const N=I()({year:"years",quarter:"quarters",month:"months",week:"weeks",day:"days",hour:"hours",minute:"minutes",second:"seconds"});let y=class extends B.ClonableMixin(g){constructor(e){super(e),this.value=null,this.unit=null}};t([r({type:Number,json:{name:"number",write:!0}})],y.prototype,"value",void 0),t([u(N)],y.prototype,"unit",void 0),y=t([m("esri.rest.support.DateBinTimeInterval")],y);const j=y;y.from=v(y);function x(e,n,s){f(s,typeof e=="string"?e:e?.getTime(),n)}function b(e,n){const s=e.parameters[n];return s?typeof s=="string"?s:new Date(s):null}let i=class extends h{constructor(e){super(e),this.end=null,this.interval=null,this.offset=null,this.returnFullIntervalBin=null,this.start=null,this.snapToData=null,this.type="date"}};t([r({cast:e=>e!=null?typeof e=="string"?e:new Date(e):null,json:{name:"parameters.end",read:{reader:(e,n)=>b(n,"end")},write:{writer:x}}})],i.prototype,"end",void 0),t([r({type:j,json:{name:"parameters",write:!0}})],i.prototype,"interval",void 0),t([r({type:j,json:{name:"parameters.offset",write:!0}})],i.prototype,"offset",void 0),t([r({type:Boolean,json:{name:"parameters.returnFullIntervalBin",write:!0}})],i.prototype,"returnFullIntervalBin",void 0),t([r({cast:e=>e!=null?typeof e=="string"?e:new Date(e):null,json:{name:"parameters.start",read:{reader:(e,n)=>b(n,"start")},write:{writer:x}}})],i.prototype,"start",void 0),t([r({type:String,json:{name:"parameters.snapToData",write:!0}})],i.prototype,"snapToData",void 0),t([u({dateBin:"date"},{readOnly:!0})],i.prototype,"type",void 0),i=t([m("esri.rest.support.DateBinParameters")],i);const U=i;i.from=v(i);function q(e){return e[0]instanceof Date}function C(e,n,s){f(s,e&&q(e)?e.map(F=>F.getTime()):e,n)}let d=class extends h{constructor(e){super(e),this.boundaries=[],this.type="fixed-boundaries"}};t([r({json:{name:"parameters.boundaries",write:{writer:C}}})],d.prototype,"boundaries",void 0),t([u({fixedBoundariesBin:"fixed-boundaries"},{readOnly:!0})],d.prototype,"type",void 0),d=t([m("esri.rest.support.FixedBoundariesBinParameters")],d);const $=d;d.from=v(d);function S(e,n,s){f(s,e instanceof Date?e.getTime():e,n)}let l=class extends D(h){constructor(e){super(e),this.end=null,this.interval=null,this.start=null,this.type="fixed-interval"}};t([r({json:{name:"parameters.end",write:{writer:S}}})],l.prototype,"end",void 0),t([r({type:Number,json:{name:"parameters.interval",write:!0}})],l.prototype,"interval",void 0),t([r({json:{name:"parameters.start",write:{writer:S}}})],l.prototype,"start",void 0),t([u({fixedIntervalBin:"fixed-interval"},{readOnly:!0})],l.prototype,"type",void 0),l=t([m("esri.rest.support.FixedIntervalBinParameters")],l);const E=l;l.from=v(l);export{U as A,$ as M,L as N,E as U,h as c};
