const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./imageryUtils-BCPb5mXs-BojhnZL5.js","./utils-DawrlST4-DsFs3-Aa.js","./main-BrXQBr3M.js","./main-BFPx82v4.css","./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js","./PortalItem-CJetnHeq-DARRzPZU.js","./jsonContext-D_JQG_uA-BzpGXUfv.js","./portalItemUtils-DsrxEt4W-DPSqOdgS.js","./projection-m8vi7Cxv-DG9zGNlV.js"])))=>i.map(i=>d[i]);
import{v as s,I as o,S as X,t as w,by as ot,J as L,U as x,bz as ke,c0 as Qi,a1 as Ar,E as F,b5 as se,cX as Q,dW as Xt,z as D,ao as Ki,eb as xr,eB as jr,eX as Yt,c$ as ve,Y as v,T as he,dV as Ee,dU as Ut,eY as _t,d0 as Y,dG as ne,ay as Tr,G as Cr,c as b,ae as Nr,b4 as Fr,s as He,Q as Ht,di as Lr,a8 as ni,eC as zi,c4 as Pr,r as zr,_ as Or,b as S,f as Br,$ as oi,af as _,ai as Ur,eZ as _r,be as Hr}from"./main-BrXQBr3M.js";import{o as Vr,l as Er,i as kr,Y as Jr,z as Zr,j as Gr,X as qr}from"./PortalLayer-rRU66wtN-CGrt1Fj6.js";import{U as Wr}from"./Layer-B8q-l4yV-CrUv4jz5.js";import{M as Ai,l as Qr,b as $e,v as Kr,H as $r,_ as Xr,X as Yr,e as es,n as ts,t as is,i as rs,a as ss,c as ei,f as ns,d as os,F as as,r as ls,V as us}from"./multidimensionalUtils-Cerm72TU-BYHlB5X1.js";import{N as we,F as Ve,z as gt,Q as ft,i as ps,a as Jt,q as xi,w as $i,v as Xi,Z as ji,b as Yi,c as cs,X as ms,K as ds,W as er,o as ys,_ as Oi,d as hs,H as gs,C as fs,J as ws}from"./RasterSymbolizer-YAjvxuoS-HGl1ILu6.js";import{p as Is}from"./pixelRangeUtils-BteWOAF5-CpV1k138.js";import{o as tr,f as ir,l as Zt,i as rr}from"./commonProperties-BLIn8DYU-BQFd4ays.js";import{y as sr}from"./Field-Cj6Pz3TI-BT1_6DON.js";import{o as Ms}from"./FieldsIndex-Y7EBAYp0-BqfCvCRQ.js";import{i as Bi}from"./imageBitmapUtils-D8LZDu4M-BfMnqv_P.js";import{s as Fe,r as vs,y as bs,d as Ss,D as ye,T as Rs,w as Ds}from"./dataUtils-CkgWlGaX-1Kv_q72Z.js";import{U as As}from"./workers-0oosFQiO-CKblg_PO.js";import{J as Gt,d as Ui}from"./ClassBreaksRenderer-D97YzbWp-C6I_4ju-.js";import{u as xs}from"./RendererLegendOptions-f5mIImtQ-C9HuzuEm.js";import{g as nr,c as or,v as ar}from"./colorRamps-KMmVdCPJ-CmpjMakp.js";import{I as _i,_ as Ti}from"./UniqueValueRenderer-BmoLL_Ee-B6g7RAOV.js";import{$ as Je}from"./normalizeUtils-b-vZURob-Cu-Bjt2-.js";import{T as js,h as Ts}from"./visualVariableUtils-BO-_wo28-DfrVsYLw.js";import{s as Cs,i as Ns}from"./utils-C_9ghOVk-CTZnzkQh.js";import"./ColorStop-DoHCvOqO-CN19nLxS.js";import"./ClassBreaksDefinition-B_vYk3bu-T-oMuoDJ.js";import{y as V,f as k,c as J}from"./utils-DuaeuwP5-t1uDCGxn.js";import{s as Fs,b as ti}from"./Query-CxQYWcUQ-B-eUtOfF.js";import{j as qt}from"./TimeExtent-gZaEUVeW-D2eGsof2.js";import{O as Ci}from"./FeatureSet-Dxf4LeOj-Di7NLuoW.js";import{e as Ls,i as Ps}from"./executeForIds-MucOSmLz-CbcXh75P.js";import{u as zs}from"./executeQueryJSON-BK4r1MU--DZSz2QyW.js";import{a as Os}from"./ArcGISService-CdvDPeWS-btR957ts.js";import{d as Bs,f as Us}from"./ScaleRangeLayer-DIxukUBC-C1pkfLgo.js";import{L as _s,h as Hs}from"./popupUtils-BiEhUPlu-BC3pJCmj.js";import{T as Vs}from"./RefreshableLayer-yYqabqcs-CdaCD0C8.js";import{N as Es}from"./TemporalLayer-DxgXU1f--CqhZG0jm.js";import{a as ks}from"./versionUtils-DDW8eV12-DBlOlu1K.js";import{E as Mt}from"./interfaces-Cwm0pihk-Ptzy6gTd.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./ElevationInfo-DkWlof50-Bezaxy73.js";import"./lengthUtils-wU9RRIqK-BTv_PZij.js";import"./PortalItem-CJetnHeq-DARRzPZU.js";import"./portalItemUtils-DsrxEt4W-DPSqOdgS.js";import"./projection-m8vi7Cxv-DG9zGNlV.js";import"./_commonjsHelpers-BITg13Vk-KnjfkSck.js";import"./colorUtils-DxUhbS7D-1R0v1SSy.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./fieldType-VTpxE-EM-CC-owBT-.js";import"./timeZoneUtils-z3WjfjXQ-8JPN5aIG.js";import"./Queue-B8H6jIv7-C4vOEIQq.js";import"./intl-DLmy-Li5-DRUw9zN4.js";import"./diffUtils-BSe9IE26-BhPEeZ3Z.js";import"./styleUtils-DxAOZq5S-C08OtaT1.js";import"./utils-Jw-4AGsF-DGUB3bF1.js";import"./jsonUtils-DzmXEA9_-BnStZKpJ.js";import"./parser-hXQyB-Qx-Dp0xTp_H.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./mat4-BFStKTjU-uiUWvEP6.js";import"./cimSymbolUtils-BuFg2oLA-duvhADIj.js";import"./utils-BYqzY6_X-Dq82pUKM.js";import"./defaultCIMValues-gWpu7WSC-cjxb95kj.js";import"./enums-f9UUstHQ-hLTu4V1l.js";import"./LRUCache-BLmkvs7b-Cf0KRICn.js";import"./MemCache-BCippCv6-DnYe-hpD.js";import"./query-nJmB7Ppn-DwEyXHqP.js";import"./pbfQueryUtils-1j64fqcx-C20qEEwE.js";import"./pbf-Ijhb7ANA-BfpAjbNq.js";import"./memoryEstimations-iHVpvWPf-Bcit1dlR.js";import"./OptimizedGeometry-1qDYm3YK-NqjQEvGQ.js";import"./OptimizedFeatureSet-D6mgsKNr-DozTzjts.js";import"./queryZScale-DBCLQqDI-BY98U1gi.js";let Pe=class extends v{constructor(){super(...arguments),this.pixelType="unknown"}};s([o({type:String,json:{write:{isRequired:!0}}})],Pe.prototype,"name",void 0),s([o({type:String,json:{write:!0}})],Pe.prototype,"description",void 0),s([o({type:X,json:{type:X,write:!0,name:"_object_id"}})],Pe.prototype,"id",void 0),s([o({type:String,json:{type:we.jsonValues,read:we.read,write:{writer:we.write,isRequired:!0}}})],Pe.prototype,"pixelType",void 0),s([o({type:String,json:{write:{isRequired:!0}}})],Pe.prototype,"type",void 0),Pe=s([w("esri.layers.support.RasterFunctionInfo")],Pe);const Js=Pe;let De=class extends v{constructor(){super(...arguments),this.isDataset=!1,this.isPublic=!1,this.type="RasterFunctionVariable"}};s([o({type:String,json:{write:!0}})],De.prototype,"name",void 0),s([o({type:Number,json:{type:X,write:!0,name:"_object_id"}})],De.prototype,"id",void 0),s([o({type:Boolean,json:{write:!0}})],De.prototype,"isDataset",void 0),s([o({type:Boolean,json:{write:!0}})],De.prototype,"isPublic",void 0),s([o({json:{write:!0}})],De.prototype,"value",void 0),s([o({type:String,json:{write:!0}})],De.prototype,"type",void 0),De=s([w("esri.layers.support.RasterFunctionVariable")],De);const Zs=De,vt={key:"type",base:null,typeMap:{RasterFunctionVariable:Zs}};let Ze=class extends v{};s([o({types:vt,json:{types:vt,name:"MatchVariable"}})],Ze.prototype,"matchVariable",void 0),s([o({types:vt,json:{types:vt,name:"UnionDimension"}})],Ze.prototype,"unionDimension",void 0),s([o({type:Number,json:{type:X,write:!0,name:"_object_id"}})],Ze.prototype,"id",void 0),s([o({type:String,json:{write:!0}})],Ze.prototype,"type",void 0),Ze=s([w("esri.layers.support.RasterFunctionProperties")],Ze);const Gs=Ze,ii=new ot({0:"mosaic",1:"item",2:"item-group"},{useNumericKeys:!0});let E=class extends v{constructor(){super(...arguments),this.description="",this.functionType="mosaic",this.type="RasterFunctionTemplate"}};s([o({type:[String],json:{write:!0}})],E.prototype,"aliases",void 0),s([o({type:Object,json:{write:{isRequired:!0}}})],E.prototype,"arguments",void 0),s([o({type:String,json:{write:{isRequired:!0}}})],E.prototype,"description",void 0),s([o({type:Js,json:{write:{isRequired:!0},name:"function"}})],E.prototype,"functionInfo",void 0),s([o({type:ii.apiValues,json:{type:[0,1,2],read:ii.read,write:{writer:ii.write,isRequired:!0}}})],E.prototype,"functionType",void 0),s([o({type:String,json:{write:!0}})],E.prototype,"group",void 0),s([o({type:String,json:{write:!0}})],E.prototype,"help",void 0),s([o({type:Number,json:{type:X,write:!0,name:"_object_id"}})],E.prototype,"id",void 0),s([o({type:String,json:{write:{isRequired:!0}}})],E.prototype,"name",void 0),s([o({type:String,json:{write:!0,name:"definition"}})],E.prototype,"queryDefinition",void 0),s([o({type:String,json:{write:!0}})],E.prototype,"tag",void 0),s([o({type:Gs,json:{write:!0}})],E.prototype,"properties",void 0),s([o({type:String,json:{write:!0}})],E.prototype,"thumbnail",void 0),s([o({type:String,json:{write:!0}})],E.prototype,"thumbnailEx",void 0),s([o({json:{type:["RasterFunctionTemplate"],write:!0}})],E.prototype,"type",void 0),E=s([w("esri.layers.support.RasterFunctionTemplate")],E);const lr=E;var ai;const Dt=new Set(["raster","raster2","dem","fillraster"]),At=new Set(["rasters"]),Hi=e=>e?.rasterFunction?W.fromJSON(e):e,ri=e=>e&&e instanceof W?e.toJSON():e,li=e=>e?.functionName&&!e.declaredClass,Vi=e=>li(e)?new W(e):e,qs=e=>{if(e==null)return null;e=D(e);const i={};for(const n of Object.keys(e))Dt.has(n.toLowerCase())?i[n]=Hi(e[n]):At.has(n.toLowerCase())&&Array.isArray(e[n])?i[n]=e[n].map(Hi):i[n]=e[n];return i},ur=e=>e?lr.fromJSON({type:"RasterFunctionTemplate",...e}):void 0,Ws={types:{key:"type",base:null,typeMap:{RasterFunctionTemplate:lr}},json:{write:!0,name:"rasterFunctionDefinition",read:ur}};let W=ai=class extends v{constructor(e){super(e),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.functionDefinition=null}set functionArguments(e){if(e){const i=Object.keys(e);if(i.some(n=>Dt.has(n.toLowerCase())&&li(e[n]))||i.some(n=>At.has(n.toLowerCase())&&Array.isArray(e[n])&&e[n].some(t=>li(t)))){e=D(e);for(const n of i)Dt.has(n.toLowerCase())?e[n]=Vi(e[n]):At.has(n.toLowerCase())&&Array.isArray(e[n])&&(e[n]=e[n].map(t=>Vi(t)))}}this._set("functionArguments",e)}readFunctionArguments(e){return qs(e)}writeFunctionArguments(e,i,n){const t={};for(const r of Object.keys(e))Dt.has(r.toLowerCase())?t[r]=ri(e[r]):At.has(r.toLowerCase())&&Array.isArray(e[r])?t[r]=e[r].map(ri):t[r]=ri(e[r]);i[n]=t}readFunctionName(e,i){const n=i.rasterFunctionInfos;return i.name||(n?.length&&n[0].name!=="None"?n[0].name:i.rasterFunction||i.rasterFunctionDefinition?.name)}get rasterFunctionDefinition(){return this.functionDefinition?.toJSON()}set rasterFunctionDefinition(e){this.functionDefinition=ur(e)}get hasClipFunction(){return this.rasterFunctionDefinition?JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"'):JSON.stringify(this).includes('"rasterFunction":"Clip"')}clone(){return new ai({functionName:this.functionName,functionArguments:D(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:D(this.rasterFunctionDefinition)})}};s([o({json:{type:Object,name:"rasterFunctionArguments"}})],W.prototype,"functionArguments",null),s([L("functionArguments")],W.prototype,"readFunctionArguments",null),s([x("functionArguments")],W.prototype,"writeFunctionArguments",null),s([o({json:{type:String,write:{target:"rasterFunction"}}})],W.prototype,"functionName",void 0),s([L("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],W.prototype,"readFunctionName",null),s([ke({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1,default:"unknown"})],W.prototype,"outputPixelType",void 0),s([o({type:String,json:{read:!0,write:!0}})],W.prototype,"variableName",void 0),s([o()],W.prototype,"rasterFunctionDefinition",null),s([o(Ws)],W.prototype,"functionDefinition",void 0),s([o()],W.prototype,"hasClipFunction",null),W=ai=s([w("esri.layers.support.RasterFunction")],W);const j=W,Qs={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},Ks=new Set(["u1","u2","u4","u8","s8","u16","s16"]),$s={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Xs=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function pr(e){return Xs.has(e.type)}function ui(e,i){if(!e||!i)return D(e||i);const n=D(e);if(n.functionDefinition&&i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),cr(n.functionDefinition.arguments,i),n.rasterFunctionDefinition=n.functionDefinition.toJSON()}else i.functionName?.toLowerCase()!=="none"&&(mr(n.functionArguments).Raster=i);return n}function cr(e,i){for(const n in e)n.toLowerCase()==="raster"&&(e[n].type==="RasterFunctionVariable"?(e[n]=i.rasterFunctionDefinition,e[n].type="RasterFunctionTemplate"):e[n].type==="RasterFunctionTemplate"&&cr(e[n].arguments,i))}function Ie(e){const i=D(Qs[e.functionName+"Function"]),n=e.functionArguments;for(const t in n)t.toLowerCase()==="raster"?(i.arguments[t]=Ie(n[t]),i.arguments[t].type="RasterFunctionTemplate"):t.toLowerCase()==="colormap"?(i.arguments[t].value=an(n[t]),i.arguments.ColorSchemeType.value=0):i.arguments[t].value=n[t];return i}function Ys(e,i){switch(i=i||{},e.type){case"raster-stretch":return rn(e,i);case"class-breaks":return sn(e,i);case"unique-value":return nn(e,i);case"raster-colormap":return on(e,i);case"vector-field":return en(e,i);case"raster-shaded-relief":return tn(e,i);case"flow":throw new Error("Unsupported rendering rule.")}}function mr(e){const i=e?.Raster??e?.raster;return i&&i.declaredClass==="esri.layers.support.RasterFunction"?mr(i.functionArguments):e}const lt={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function en(e,i){const n=new j;n.functionName="VectorFieldRenderer";const{dataType:t,bandNames:r}=i,a=t==="vector-uv";let l,u;if(r&&r.length===2){const h=r.map(g=>g.toLowerCase());l=h.indexOf("magnitude"),u=h.indexOf("direction")}l!==-1&&l!==null||(l=0,u=1);const p=e.rotationType==="arithmetic"?1:2,c=e.flowRepresentation==="flow-from"?0:1,m=e.visualVariables?e.visualVariables.find(h=>h.field==="Magnitude"):new Zt,d={magnitudeBandID:l,directionBandID:u,isUVComponents:a,referenceSystem:p,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:$s[e.style.toLowerCase().replace("-","_")],minimumMagnitude:m.minDataValue,maximumMagnitude:m.maxDataValue,minimumSymbolSize:m.minSize,maximumSymbolSize:m.maxSize};n.functionArguments=d;const f=Ie(n);return i.convertToRFT?j.fromJSON({rasterFunctionDefinition:f}):n}function tn(e,i){const n=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new j;const t=new j;t.functionName="Hillshade";const r=e.hillshadeType==="traditional"?0:1,a=e.scalingType==="none"?1:3,l={HillshadeType:r,SlopeType:a,ZFactor:e.zFactor};return r===0&&(l.Azimuth=e.azimuth,l.Altitude=e.altitude),a===3&&(l.PSPower=e.pixelSizePower,l.PSZFactor=e.pixelSizeFactor),t.functionArguments=l,t.variableName="Raster",e.colorRamp&&(t.functionName="ShadedRelief",n?l.ColorRamp=Yi(e.colorRamp):l.Colormap=Jt(e.colorRamp)),n?new j({rasterFunctionDefinition:Ie(t)}):t}function rn(e,i){const n=i.convertToRFT,t=new j;t.functionName="Stretch";const r=lt[ft.toJSON(e.stretchType)],a="u8",l=e.customStatistics?.map(p=>[p.min,p.max,p.avg??0,p.stddev??1]),u={StretchType:r,Statistics:l,DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(e.outputMin!=null&&(u.Min=e.outputMin),e.outputMax!=null&&(u.Max=e.outputMax),r===lt.standardDeviation?(u.NumberOfStandardDeviations=e.numberOfStandardDeviations,t.outputPixelType=a):r===lt.percentClip?(u.MinPercent=e.minPercent,u.MaxPercent=e.maxPercent,t.outputPixelType=a):r===lt.minMax?t.outputPixelType=a:r===lt.sigmoid&&(u.SigmoidStrengthLevel=e.sigmoidStrengthLevel),t.functionArguments=u,t.variableName="Raster",e.colorRamp){const p=e.colorRamp,c=new j;if(n)c.functionArguments={ColorRamp:Yi(p)};else{const m=cs(p,!0);if(m)c.functionArguments={colorRampName:m};else if(!i.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=e.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&d.colorRamps?.length&&d.colorRamps.forEach(f=>f.algorithm=f.algorithm||"esriCIELabAlgorithm"),c.functionArguments={colorRamp:d}}else c.functionArguments={Colormap:Jt(p)}}return c.variableName="Raster",c.functionName="Colormap",c.functionArguments.Raster=t,n?new j({rasterFunctionDefinition:Ie(c)}):c}return n?new j({rasterFunctionDefinition:Ie(t)}):t}function sn(e,i){const n=[],t=[],r=[],a=[],{pixelType:l,rasterAttributeTable:u}=i,p=u==null?null:u.features,c=dr(u);if(c&&p&&Array.isArray(p)&&e.classBreakInfos){e.classBreakInfos.forEach((y,I)=>{const M=y.symbol?.color;let R;M?.a&&y.minValue!=null&&y.maxValue!=null&&p.forEach(N=>{y.minValue!=null&&y.maxValue!=null&&(R=N.attributes[e.field],(R>=y.minValue&&R<y.maxValue||I===e.classBreakInfos.length-1&&R>=y.minValue)&&a.push([N.attributes[c],M.r,M.g,M.b]))})});const h=l?Vt(a,l):a,g=new j;return g.functionName="Colormap",g.functionArguments={},g.functionArguments.Colormap=h,g.variableName="Raster",i.convertToRFT?new j({rasterFunctionDefinition:Ie(g)}):g}e.classBreakInfos.forEach((h,g)=>{if(h.minValue==null||h.maxValue==null)return;const y=h.symbol&&h.symbol.color;y?.a?(g===0?n.push(h.minValue,h.maxValue+1e-4):n.push(h.minValue+1e-4,h.maxValue+1e-4),t.push(g),a.push([g,y.r,y.g,y.b])):r.push(h.minValue,h.maxValue)});const m=l?Vt(a,l):a,d=new j;d.functionName="Remap",d.functionArguments={InputRanges:n,OutputValues:t,NoDataRanges:r},d.variableName="Raster";const f=new j;return f.functionName="Colormap",f.functionArguments={Colormap:m,Raster:d},i.convertToRFT?new j({rasterFunctionDefinition:Ie(f)}):f}function Vt(e,i){const n=Ks.has(i)?Is(i):null;return n&&e.push([Math.floor(n[0]-1),0,0,0],[Math.ceil(n[1]+1),0,0,0]),e}function dr(e){if(e==null)return;const{fields:i}=e;return i?.find(n=>n?.name&&n.name.toLowerCase()==="value")?.name}function nn(e,i){const n=[],{pixelType:t,rasterAttributeTable:r}=i,a=r==null?null:r.features,l=dr(r),u=e.defaultSymbol?.color?.toRgb(),p=e.uniqueValueInfos;if(p)if(a){if(l){const d=new Map;p.forEach(h=>{const g=h.value,y=Ei(h);g!=null&&y?.a&&d.set(String(g),y.toRgb())});const f=e.field;f&&a.forEach(({attributes:h})=>{const g=String(h[f]),y=h[l],I=d.get(g);I?n.push([y,...I]):u&&n.push([y,...u])})}}else for(let d=0;d<p.length;d++){const f=p[d],h=Ei(f),g=+f.value;if(h?.a){if(isNaN(g))return null;n.push([g,h.r,h.g,h.b])}}const c=t?Vt(n,t):n,m=new j;return m.functionName="Colormap",m.functionArguments={},m.functionArguments.Colormap=c,m.variableName="Raster",i.convertToRFT?new j({rasterFunctionDefinition:Ie(m)}):m}function Ei(e){return e.symbol?.type==="polygon-3d"?e.symbol.symbolLayers?.find(i=>i.type==="fill")?.material?.color:e.symbol?.color}function on(e,i){const n=e.extractColormap();if(!n||n.length===0)return null;const{pixelType:t}=i,r=t?Vt(n,t):n,a=new j;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=r,i.convertToRFT?new j({rasterFunctionDefinition:Ie(a)}):a}function an(e){const i=[],n=[];return e.forEach(t=>{i.push(t[0]),n.push(ms([...t.slice(1),255]))}),{type:"RasterColormap",values:i,colors:n}}var pi;const st=Qi()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),xt=Qi()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function ln(e){let i;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return xt.fromJSON(i)}let H=pi=class extends v{constructor(e){super(e),this.ascending=!0,this.itemRasterFunction=null,this.lockRasterIds=null,this.method="none",this.multidimensionalDefinition=null,this.objectIds=null,this.operation="first",this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,i){return i.ascending!=null?i.ascending:i.sortAscending==null||i.sortAscending}readMethod(e,i){return ln(i.mosaicMethod||i.defaultMosaicMethod)}writeMultidimensionalDefinition(e,i,n){e!=null&&(e=e.filter(({variableName:t,dimensionName:r})=>t&&t!=="*"||r)).length&&(i[n]=e.map(t=>t.toJSON()))}readOperation(e,i){const n=i.mosaicOperation,t=i.mosaicOperator?.toLowerCase(),r=n||(t?st.toJSON(t):null);return st.fromJSON(r)||"first"}castSortValue(e){return e==null||typeof e=="string"||typeof e=="number"?e:`${e}`}clone(){return new pi({ascending:this.ascending,itemRasterFunction:D(this.itemRasterFunction),lockRasterIds:D(this.lockRasterIds),method:this.method,multidimensionalDefinition:D(this.multidimensionalDefinition),objectIds:D(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:D(this.viewpoint),where:this.where})}};s([o({type:Boolean,json:{write:!0}})],H.prototype,"ascending",void 0),s([L("ascending",["ascending","sortAscending"])],H.prototype,"readAscending",null),s([o({type:j,json:{name:"itemRenderingRule",write:!0}})],H.prototype,"itemRasterFunction",void 0),s([o({type:[X],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],H.prototype,"lockRasterIds",void 0),s([o({type:xt.apiValues,json:{type:xt.jsonValues,write:{target:"mosaicMethod",writer:xt.write,isRequired:!0}}})],H.prototype,"method",void 0),s([L("method",["mosaicMethod","defaultMosaicMethod"])],H.prototype,"readMethod",null),s([o({type:[Ai],json:{write:!0}})],H.prototype,"multidimensionalDefinition",void 0),s([x("multidimensionalDefinition")],H.prototype,"writeMultidimensionalDefinition",null),s([o({type:[X],json:{name:"fids",write:!0}})],H.prototype,"objectIds",void 0),s([o({type:st.apiValues,json:{type:st.jsonValues,read:{reader:st.read},write:{target:"mosaicOperation",writer:st.write}}})],H.prototype,"operation",void 0),s([L("operation",["mosaicOperation","mosaicOperator"])],H.prototype,"readOperation",null),s([o({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],H.prototype,"sortField",void 0),s([o({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],H.prototype,"sortValue",void 0),s([Ar("sortValue")],H.prototype,"castSortValue",null),s([o({type:F,json:{write:!0}})],H.prototype,"viewpoint",void 0),s([o({type:String,json:{write:!0}})],H.prototype,"where",void 0),H=pi=s([w("esri.layers.support.MosaicRule")],H);const re=H;let B=class extends v{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(e,i,n){this.layer.version<10.3||(i[n]=e)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(e,i,n){this.format&&this.format.toLowerCase().includes("jpg")&&e!=null&&(i[n]=e)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(e,i,n){this.format==="lerc"&&e!=null&&(i[n]=e)}get format(){return this.layer.renderer?.type==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}get pixelType(){const{layer:e}=this;return e.pixelType!==e.serviceRasterInfo.pixelType?e.pixelType:void 0}writeLercVersion(e,i,n){this.format==="lerc"&&this.layer.version>=10.5&&(i[n]=e)}get version(){const e=this.layer;return e.commitProperty("bandIds"),e.commitProperty("format"),e.commitProperty("compressionQuality"),e.commitProperty("compressionTolerance"),e.commitProperty("interpolation"),e.commitProperty("noData"),e.commitProperty("noDataInterpretation"),e.commitProperty("mosaicRule"),e.commitProperty("rasterFunction"),e.commitProperty("adjustAspectRatio"),e.commitProperty("pixelFilter"),e.commitProperty("pixelType"),e.commitProperty("definitionExpression"),e.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let i=e.mosaicRule;const n=e.definitionExpression;return i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new re({where:n})),i}get rasterFunction(){const e=this.layer;let{rasterFunction:i}=e;const n=e.pixelFilter,t=!e.format||e.format.includes("jpg")||e.format.includes("png");i=this._addResampleRasterFunction(i);const r=e.multidimensionalSubset?.areaOfInterest;return r&&(i=un(i,r)),t&&!n&&e.renderer?.type!=="vector-field"&&(i=this.combineRendererWithRenderingRule(i)),i}combineRendererWithRenderingRule(e){const i=this.layer,{rasterInfo:n,renderer:t}=i;return e=e||i.rasterFunction,!t||!pr(t)?e:ui(Ys(t,{rasterAttributeTable:n.attributeTable,pixelType:n.pixelType,dataType:n.dataType,bandNames:n.bandInfos.map(({name:r})=>r),convertColorRampToColormap:i.version<10.6,convertToRFT:!!e?.rasterFunctionDefinition,bandCount:n.bandCount}),e)}_addResampleRasterFunction(e){if(this.layer.renderer?.type!=="vector-field"||e?.functionName==="Resample")return e;const i=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,n=this.layer.serviceRasterInfo.pixelSize;let t=new j({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:n}});return t=e?.rasterFunctionDefinition?new j({rasterFunctionDefinition:Ie(t)}):t,ui(t,e)}};function un(e,i){const n=new j({functionName:"Clip",functionArguments:{ClippingGeometry:i.toJSON(),ClippingType:1}});return ui(n,e)}s([o()],B.prototype,"layer",void 0),s([o({json:{write:!0}})],B.prototype,"adjustAspectRatio",null),s([x("adjustAspectRatio")],B.prototype,"writeAdjustAspectRatio",null),s([o({json:{write:!0}})],B.prototype,"bandIds",null),s([o({json:{write:!0}})],B.prototype,"compression",void 0),s([o({json:{write:!0}})],B.prototype,"compressionQuality",null),s([x("compressionQuality")],B.prototype,"writeCompressionQuality",null),s([o({json:{write:!0}})],B.prototype,"compressionTolerance",null),s([x("compressionTolerance")],B.prototype,"writeCompressionTolerance",null),s([o({json:{write:!0}})],B.prototype,"format",null),s([o({type:String,json:{read:{reader:Ve.read},write:{writer:Ve.write}}})],B.prototype,"interpolation",null),s([o({json:{write:!0}})],B.prototype,"noData",null),s([o({type:String,json:{read:{reader:gt.read},write:{writer:gt.write}}})],B.prototype,"noDataInterpretation",null),s([o({type:we.apiValues,json:{read:we.read,write:we.write}})],B.prototype,"pixelType",null),s([o({json:{write:!0}})],B.prototype,"lercVersion",void 0),s([x("lercVersion")],B.prototype,"writeLercVersion",null),s([o({type:Number})],B.prototype,"version",null),s([o({json:{write:!0}})],B.prototype,"mosaicRule",null),s([o({json:{write:!0,name:"renderingRule"}})],B.prototype,"rasterFunction",null),B=s([w("esri.layers.support.ExportImageServiceParameters")],B);var ci;const pn={base:Fr,key:"type",typeMap:{extent:He,polygon:Ht}};let Ge=ci=class extends v{constructor(e){super(e),this.areaOfInterest=null,this.subsetDefinitions=null}get dimensions(){const{subsetDefinitions:e}=this;if(e==null||e.length===0)return[];const i=new Map;e.forEach(t=>{if(!t.dimensionName)return;let r,a;if(Array.isArray(t.values[0])){const l=t.values;r=l[0][0],a=l[t.values.length-1][1]}else{const l=t.values;r=l[0],a=l[t.values.length-1]}if(i.has(t.dimensionName)){const l=i.get(t.dimensionName);l[0]=Math.min(r,l[0]),l[1]=Math.max(a,l[1])}else i.set(t.dimensionName,[r,a])});const n=[];for(const t of i)n.push({name:t[0],extent:t[1]});return n}get variables(){const{subsetDefinitions:e}=this;if(e==null||e.length===0)return[];const i=new Set;return e.forEach(n=>{n.variableName&&i.add(n.variableName)}),[...i]}clone(){const e=this.subsetDefinitions?.map(n=>n.clone()),i=this.areaOfInterest?this.areaOfInterest.clone():this.areaOfInterest;return new ci({areaOfInterest:i,subsetDefinitions:e})}};s([o({types:pn,json:{read:se,write:!0}})],Ge.prototype,"areaOfInterest",void 0),s([o({readOnly:!0})],Ge.prototype,"dimensions",null),s([o({readOnly:!0})],Ge.prototype,"variables",null),s([o({type:[Ai],json:{write:!0}})],Ge.prototype,"subsetDefinitions",void 0),Ge=ci=s([w("esri.layers.support.MultidimensionalSubset")],Ge);const cn=Ge;let mn=class{constructor(){this._workerThread=null,this._destroyed=!1}async initialize(){const e=await As("RasterWorker");this._destroyed?e.close():this._workerThread=e}destroy(){this._destroyed=!0,this._workerThread&&(this._workerThread.close(),this._workerThread=null)}async convertVectorFieldData(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("convertVectorFieldData",{pixelBlock:e.pixelBlock.toJSON(),type:e.dataType},i);return n?new ye(n):null}computeStatisticsHistograms(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");return this._workerThread.invoke("computeStatisticsHistograms",{pixelBlock:e.pixelBlock.toJSON()},i)}async decode(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("decode",e,i);return n?new ye(n):null}async symbolize(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n={extent:e.extent?.toJSON(),pixelBlock:e.pixelBlock?.toJSON(),simpleStretchParams:e.simpleStretchParams,bandIds:e.bandIds},t=await this._workerThread.invoke("symbolize",n,i);return t?new ye(t):null}async updateSymbolizer(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=e?.rendererJSON?.histograms;await Promise.all(this._workerThread.broadcast("updateSymbolizer",{symbolizerJSON:e.toJSON(),histograms:n},i))}async updateRasterFunction(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");await Promise.all(this._workerThread.broadcast("updateRasterFunction",{rasterFunctionJSON:e.toJSON()},i))}async process(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=await this._workerThread.invoke("process",{extent:e.extent?.toJSON(),primaryPixelSizes:e.primaryPixelSizes?.map(t=>t!=null?t.toJSON():null),primaryPixelBlocks:e.primaryPixelBlocks.map(t=>t!=null?t.toJSON():null),primaryRasterIds:e.primaryRasterIds},i);return n?new ye(n):null}async stretch(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON(),stretchParams:e.stretchParams},t=await this._workerThread.invoke("stretch",n,i);return t?new ye(t):null}async split(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON(),tileSize:e.tileSize,maximumPyramidLevel:e.maximumPyramidLevel,useBilinear:e.useBilinear},t=await this._workerThread.invoke("split",n,i);return t&&t.forEach((r,a)=>{t.set(a,r?ye.fromJSON(r):null)}),t}async clipTile(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.pixelBlock)return null;const n={...e,pixelBlock:e.pixelBlock.toJSON()},t=await this._workerThread.invoke("clipTile",n,i);return t?ye.fromJSON(t):null}async estimateStatisticsHistograms(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.pixelBlock)return null;const n={srcPixelBlock:e.pixelBlock.toJSON()};return await this._workerThread.invoke("estimateStatisticsHistograms",n,i)}async mosaicAndTransform(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");if(!e?.srcPixelBlocks?.length)return{pixelBlock:null};const n={...e,srcPixelBlocks:e.srcPixelBlocks.map(r=>r!=null?r.toJSON():null)},t=await this._workerThread.invoke("mosaicAndTransform",n,i);return{pixelBlock:t.pixelBlock?new ye(t.pixelBlock):null,localNorthDirections:t.localNorthDirections}}async createFlowMesh(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n={buffer:e.flowData.data.buffer,maskBuffer:e.flowData.mask.buffer,width:e.flowData.width,height:e.flowData.height},{meshType:t,simulationSettings:r}=e,a=await this._workerThread.invoke("createFlowMesh",{meshType:t,flowData:n,simulationSettings:r},{...i,transferList:[n.buffer,n.maskBuffer]});return{vertexData:new Float32Array(a.vertexBuffer),indexData:new Uint32Array(a.indexBuffer)}}getProjectionOffsetGrid(e,i){if(!this._workerThread)throw new b("raster-jobhandler:no-connection","no available worker connection");const n=e.datumTransformation!=null?e.datumTransformation.steps.map(a=>({wkid:a.wkid,wkt:a.wkt,isInverse:a.isInverse})):null,t=e.rasterTransform!=null?e.rasterTransform.toJSON():null,r={projectedExtent:e.projectedExtent.toJSON(),srcBufferExtent:e.srcBufferExtent.toJSON(),pixelSize:e.pixelSize,hasWrapAround:e.hasWrapAround,spacing:e.spacing,datumTransformationSteps:n,rasterTransform:t,isAdaptive:e.isAdaptive,includeGCSGrid:e.includeGCSGrid};return this._workerThread.invoke("getProjectionOffsetGrid",r,i)}};var mi;const bt=new ot({flow_from:"flow-from",flow_to:"flow-to"});let Z=mi=class extends tr(v){constructor(e){super(e),this.density=.8,this.color=new Q([255,255,255,1]),this.maxPathLength=200,this.trailWidth=1.5,this.flowSpeed=10,this.trailLength=100,this.smoothing=0,this.flowRepresentation="flow-from",this.type="flow",this.authoringInfo=null,this.legendOptions=null,this.trailCap="butt",this.background="none"}clone(){const{density:e,maxPathLength:i,trailWidth:n,flowSpeed:t,trailLength:r,smoothing:a,flowRepresentation:l,trailCap:u,background:p}=this,c=this.color.clone(),m=(this.visualVariables||[]).map(h=>h.clone()),d=this.authoringInfo?.clone(),f=this.legendOptions?.clone();return new mi({density:e,color:c,maxPathLength:i,trailWidth:n,flowSpeed:t,trailLength:r,trailCap:u,background:p,smoothing:a,flowRepresentation:l,visualVariables:m,authoringInfo:d,legendOptions:f})}getSymbol(e,i){}async getSymbolAsync(e,i){}getSymbols(){return[]}};s([o({type:Number,json:{write:!0}})],Z.prototype,"density",void 0),s([o({type:Q,json:{write:{allowNull:!0}}})],Z.prototype,"color",void 0),s([o({type:Number,cast:Xt,json:{write:!0}})],Z.prototype,"maxPathLength",void 0),s([o({type:Number,cast:Xt,json:{write:!0}})],Z.prototype,"trailWidth",void 0),s([o({type:Number,json:{write:!0}})],Z.prototype,"flowSpeed",void 0),s([o({type:Number,json:{write:!0}})],Z.prototype,"trailLength",void 0),s([o({type:Number,cast:Xt,json:{write:!1}})],Z.prototype,"smoothing",void 0),s([o({type:bt.apiValues,json:{type:bt.jsonValues,read:{reader:bt.read},write:{writer:bt.write}}})],Z.prototype,"flowRepresentation",void 0),s([ke({flowRenderer:"flow"})],Z.prototype,"type",void 0),s([o({type:ir,json:{write:!0}})],Z.prototype,"authoringInfo",void 0),s([o({type:xs,json:{write:!0}})],Z.prototype,"legendOptions",void 0),s([o({type:String,json:{write:!0}})],Z.prototype,"trailCap",void 0),s([o({type:String,json:{write:!0}})],Z.prototype,"background",void 0),Z=mi=s([w("esri.renderers.FlowRenderer")],Z);const yr=Z;let Xe=class extends v{constructor(){super(...arguments),this.value=null,this.label=null,this.color=null}};s([o({type:Number,json:{write:{isRequired:!0}}})],Xe.prototype,"value",void 0),s([o({type:String,json:{write:!0}})],Xe.prototype,"label",void 0),s([o({type:Q,json:{type:[X],write:{isRequired:!0}}})],Xe.prototype,"color",void 0),Xe=s([w("esri.renderers.support.ColormapInfo")],Xe);const hr=Xe;var ut;let pt=ut=class extends v{constructor(e){super(e),this.colormapInfos=null,this.type="raster-colormap"}static createFromColormap(e,i){if(!e)return null;const n=e[0].length===5,t=[...e].sort((r,a)=>r[0]-a[0]).map(r=>hr.fromJSON({value:r[0],color:n?r.slice(1,5):r.slice(1,4).concat([255]),label:i?i[r[0]]??"":r[0]}));return new ut({colormapInfos:t})}static createFromColorramp(e){const i=Jt(e);return ut.createFromColormap(i)}clone(){return new ut({colormapInfos:this.colormapInfos.map(e=>e.toJSON())})}extractColormap(){return this.colormapInfos.map(({value:e,color:i})=>[e,i.r,i.g,i.b,i.a>1?i.a:255*i.a&255]).sort((e,i)=>e[0]-i[0])}};s([o({type:[hr],json:{write:{isRequired:!0}}})],pt.prototype,"colormapInfos",void 0),s([ke({rasterColormap:"raster-colormap"}),o({json:{write:{isRequired:!0}}})],pt.prototype,"type",void 0),pt=ut=s([w("esri.renderers.RasterColormapRenderer")],pt);const Ni=pt;var di;let te=di=class extends v{constructor(e){super(e),this.altitude=45,this.azimuth=315,this.colorRamp=null,this.hillshadeType="traditional",this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.scalingType="none",this.type="raster-shaded-relief",this.zFactor=1}readColorRamp(e){return ar(e)}clone(){return new di({hillshadeType:this.hillshadeType,altitude:this.altitude,azimuth:this.azimuth,zFactor:this.zFactor,scalingType:this.scalingType,pixelSizeFactor:this.pixelSizeFactor,pixelSizePower:this.pixelSizePower,colorRamp:D(this.colorRamp)})}};s([o({type:Number,json:{write:{isRequired:!0}}})],te.prototype,"altitude",void 0),s([o({type:Number,json:{write:{isRequired:!0}}})],te.prototype,"azimuth",void 0),s([o({types:nr,json:{write:!0}})],te.prototype,"colorRamp",void 0),s([L("colorRamp")],te.prototype,"readColorRamp",null),s([o({type:["traditional","multi-directional"],json:{write:{isRequired:!0}}})],te.prototype,"hillshadeType",void 0),s([o({type:Number,json:{write:!0}})],te.prototype,"pixelSizePower",void 0),s([o({type:Number,json:{write:!0}})],te.prototype,"pixelSizeFactor",void 0),s([o({type:["none","adjusted"],json:{write:{isRequired:!0}}})],te.prototype,"scalingType",void 0),s([ke({rasterShadedRelief:"raster-shaded-relief"}),o({json:{write:{isRequired:!0}}})],te.prototype,"type",void 0),s([o({type:Number,json:{write:{isRequired:!0}}})],te.prototype,"zFactor",void 0),te=di=s([w("esri.renderers.RasterShadedReliefRenderer")],te);const gr=te;var yi;let O=yi=class extends v{constructor(e){super(e),this.colorRamp=null,this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.maxPercent=null,this.minPercent=null,this.numberOfStandardDeviations=null,this.outputMax=null,this.outputMin=null,this.sigmoidStrengthLevel=null,this.histograms=null,this.useGamma=!1,this.stretchType="none",this.type="raster-stretch"}readColorRamp(e){if(e)return ar(e)}get statistics(){return this._get("statistics")}set statistics(e){Lr(ni.getLogger(this),"statistics",{replacement:"customStatistics",version:"4.31",warnOnce:!0}),this._set("statistics",e)}get customStatistics(){const e=this.statistics;return e&&Array.isArray(e[0])?e.map(i=>({min:i[0],max:i[1],avg:i[2],stddev:i[3]})):e}set customStatistics(e){this._set("statistics",e?.map(i=>[i.min,i.max,i.avg??0,i.stddev??1]))}readCustomStatistics(e){return e?.map(i=>({min:i[0],max:i[1],avg:i[2],stddev:i[3]}))}writeCustomStatistics(e,i,n){e?.length&&(i[n]=e.map(t=>[t.min,t.max,t.avg??0,t.stddev??1]))}readStretchType(e,i){let n=i.stretchType;return typeof n=="number"&&(n=ds[n]),ft.read(n)}clone(){const e=new yi({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,gamma:D(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,colorRamp:D(this.colorRamp),histograms:D(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment});return e._set("statistics",D(this.statistics)),e}};s([o({types:nr,json:{write:!0}})],O.prototype,"colorRamp",void 0),s([L("colorRamp")],O.prototype,"readColorRamp",null),s([o({type:Boolean,json:{write:!0}})],O.prototype,"computeGamma",void 0),s([o({type:Boolean,json:{write:{target:"dra"},read:{source:"dra"}}})],O.prototype,"dynamicRangeAdjustment",void 0),s([o({type:[Number],json:{write:!0}})],O.prototype,"gamma",void 0),s([o({type:Number,json:{write:!0}})],O.prototype,"maxPercent",void 0),s([o({type:Number,json:{write:!0}})],O.prototype,"minPercent",void 0),s([o({type:Number,json:{write:!0}})],O.prototype,"numberOfStandardDeviations",void 0),s([o({type:Number,json:{read:{source:"max"},write:{target:"max"}}})],O.prototype,"outputMax",void 0),s([o({type:Number,json:{read:{source:"min"},write:{target:"min"}}})],O.prototype,"outputMin",void 0),s([o({type:Number,json:{write:!0}})],O.prototype,"sigmoidStrengthLevel",void 0),s([o({})],O.prototype,"statistics",null),s([o()],O.prototype,"histograms",void 0),s([o({json:{type:[[Number]],name:"statistics",write:!0}})],O.prototype,"customStatistics",null),s([L("customStatistics")],O.prototype,"readCustomStatistics",null),s([x("customStatistics")],O.prototype,"writeCustomStatistics",null),s([o({type:Boolean,json:{write:!0}})],O.prototype,"useGamma",void 0),s([o({type:ft.apiValues,json:{type:ft.jsonValues,write:ft.write}})],O.prototype,"stretchType",void 0),s([L("stretchType",["stretchType"])],O.prototype,"readStretchType",null),s([ke({rasterStretch:"raster-stretch"})],O.prototype,"type",void 0),O=yi=s([w("esri.renderers.RasterStretchRenderer")],O);const Fi=O;var hi;const ki=new Set(["esriMetersPerSecond","esriKilometersPerHour","esriKnots","esriFeetPerSecond","esriMilesPerHour"]),St=new ot({beaufort_ft:"beaufort-ft",beaufort_km:"beaufort-km",beaufort_kn:"beaufort-kn",beaufort_m:"beaufort-m",beaufort_mi:"beaufort-mi",classified_arrow:"classified-arrow",ocean_current_kn:"ocean-current-kn",ocean_current_m:"ocean-current-m",simple_scalar:"simple-scalar",single_arrow:"single-arrow",wind_speed:"wind-barb"}),Rt=new ot({flow_from:"flow-from",flow_to:"flow-to"});let G=hi=class extends tr(v){constructor(e){super(e),this.attributeField="Magnitude",this.flowRepresentation="flow-from",this.rotationType="arithmetic",this.style="single-arrow",this.symbolTileSize=50,this.type="vector-field"}readInputUnit(e,i){return ki.has(e)?Fe.fromJSON(e):null}readOutputUnit(e,i){return ki.has(e)?Fe.fromJSON(e):null}get styleRenderer(){const e=this.style,i=this.attributeField,n=this._createStyleRenderer(e);return n.field=i,n}get sizeVariables(){const e=[];if(this.visualVariables)for(const i of this.visualVariables)i.type==="size"&&e.push(i);if(e.length===0){const i=new Zt({field:"Magnitude",minSize:.2*this.symbolTileSize,maxSize:.8*this.symbolTileSize});this.visualVariables?this.visualVariables.push(i):this._set("visualVariables",[i]),e.push(i)}return e}get rotationVariables(){const e=[];if(this.visualVariables)for(const i of this.visualVariables)i.type==="rotation"&&e.push(i);if(e.length===0){const i=new rr({field:"Direction",rotationType:this.rotationType});this.visualVariables?this.visualVariables.push(i):this._set("visualVariables",[i]),e.push(i)}return e}clone(){return new hi({attributeField:this.attributeField,flowRepresentation:this.flowRepresentation,rotationType:this.rotationType,symbolTileSize:this.symbolTileSize,style:this.style,visualVariables:D(this.visualVariables),inputUnit:this.inputUnit,outputUnit:this.outputUnit})}async getGraphicsFromPixelData(e,i=!1,n=[]){const t=new Array,r=vs(this.inputUnit,this.outputUnit),a=this.rotationVariables[0]?.rotationType||this.rotationType,l=i?bs(e.pixelBlock,"vector-uv",a,r):Ss(e.pixelBlock,"vector-magdir",r);if(l==null)return t;const u=e.extent,p=l.mask!=null&&l.mask.length>0;let c=0;const m=(u.xmax-u.xmin)/l.width,d=(u.ymax-u.ymin)/l.height;for(let f=0;f<l.height;f++)for(let h=0;h<l.width;h++,c++){let g=new F({x:u.xmin+h*m+m/2,y:u.ymax-f*d-d/2,spatialReference:u.spatialReference});g=(await Je(g))[0];const y=n.some(I=>I.intersects(g));if((!p||l.mask[c])&&!y){const I={Magnitude:l.pixels[0][c],Direction:l.pixels[1][c]},M=new Ki({geometry:new F({x:g.x,y:g.y,spatialReference:u.spatialReference}),attributes:I});M.symbol=this._getVisualVariablesAppliedSymbol(M),t.push(M)}}return t}getSymbol(e,i){}async getSymbolAsync(e,i){}getSymbols(){return[]}getClassBreakInfos(){return this.styleRenderer?.classBreakInfos}getDefaultSymbol(){return this.styleRenderer?.defaultSymbol}_getDefaultSymbol(e){return new xr({path:"M14,32 14,18 9,23 16,3 22,23 17,18 17,32 z",outline:new jr({width:0}),size:20,color:e||new Q([0,92,230])})}_getVisualVariablesAppliedSymbol(e){if(!e)return;const i=this.styleRenderer?.getSymbol(e)?.clone(),n=this.sizeVariables,t=this.rotationVariables;if(n&&n.length&&this.sizeVariables.forEach(r=>Cs(i,js([r],e))),t&&t.length){const r=this.flowRepresentation==="flow-to"==(this.style==="ocean-current-kn"||this.style==="ocean-current-m")?0:180;e.attributes.Direction=e.attributes.Direction+r,this.rotationVariables.forEach(a=>Ns(i,Ts(a,e),a.axis))}return i}_createStyleRenderer(e){let i={defaultSymbol:this._getDefaultSymbol(),classBreakInfos:[]};switch(e){case"single-arrow":i=this._createSingleArrowRenderer();break;case"beaufort-kn":i=this._createBeaufortKnotsRenderer();break;case"beaufort-m":i=this._createBeaufortMeterRenderer();break;case"beaufort-ft":i=this._createBeaufortFeetRenderer();break;case"beaufort-mi":i=this._createBeaufortMilesRenderer();break;case"beaufort-km":i=this._createBeaufortKilometersRenderer();break;case"ocean-current-m":i=this._createCurrentMeterRenderer();break;case"ocean-current-kn":i=this._createCurrentKnotsRenderer();break;case"simple-scalar":i=this._createSimpleScalarRenderer();break;case"wind-barb":i=this._createWindBarbsRenderer();break;case"classified-arrow":i=this._createClassifiedArrowRenderer()}return new Gt(i)}_createSingleArrowRenderer(){return{defaultSymbol:this._getDefaultSymbol()}}_createBeaufortKnotsRenderer(){const e=[0,1,3,6,10,16,21,27,33,40,47,55,63],i=[[40,146,199],[89,162,186],[129,179,171],[160,194,155],[191,212,138],[218,230,119],[250,250,100],[252,213,83],[252,179,102],[250,141,52],[247,110,42],[240,71,29]];return{defaultSymbol:this._getDefaultSymbol(new Q([214,47,39])),classBreakInfos:this._getClassBreaks(e,i)}}_createBeaufortMeterRenderer(){const e=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7],i=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]];return{defaultSymbol:this._getDefaultSymbol(new Q([214,47,39])),classBreakInfos:this._getClassBreaks(e,i)}}_createBeaufortFeetRenderer(){const e=this._getDefaultSymbol(new Q([214,47,39]));let i=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=3.28084;return i=i.map(r=>r*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(i,n)}}_createBeaufortMilesRenderer(){const e=this._getDefaultSymbol(new Q([214,47,39]));let i=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=2.23694;return i=i.map(r=>r*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(i,n)}}_createBeaufortKilometersRenderer(){const e=this._getDefaultSymbol(new Q([214,47,39]));let i=[0,.2,1.8,3.3,5.4,8.5,11,14.1,17.2,20.8,24.4,28.6,32.7];const n=[[69,117,181],[101,137,184],[132,158,186],[162,180,189],[192,204,190],[222,227,191],[255,255,191],[255,220,161],[250,185,132],[245,152,105],[237,117,81],[232,21,21]],t=3.6;return i=i.map(r=>r*t),{defaultSymbol:e,classBreakInfos:this._getClassBreaks(i,n)}}_createCurrentMeterRenderer(){const e=[0,.5,1,1.5,2],i=[[78,26,153],[179,27,26],[202,128,26],[177,177,177]];return{defaultSymbol:this._getDefaultSymbol(new Q([177,177,177])),classBreakInfos:this._getClassBreaks(e,i)}}_createCurrentKnotsRenderer(){const e=[0,.25,.5,1,1.5,2,2.5,3,3.5,4],i=[[0,0,0],[0,37,100],[78,26,153],[151,0,100],[179,27,26],[177,78,26],[202,128,26],[177,179,52],[177,177,177]];return{defaultSymbol:this._getDefaultSymbol(new Q([177,177,177])),classBreakInfos:this._getClassBreaks(e,i)}}_createClassifiedArrowRenderer(){const e=this._getDefaultSymbol(new Q([56,168,0]));let i=[0,1e-6,3.5,7,10.5,14];if(this.sizeVariables?.length){const t=this.sizeVariables[0].minDataValue,r=this.sizeVariables[0].maxDataValue;if(t&&r){const a=(r-t)/5;i=Array.from(Array(6).keys()).map(l=>t+a*l)}}const n=[[56,168,0],[139,309,0],[255,255,0],[255,128,0],[255,0,0]];return{defaultSymbol:e,classBreakInfos:this._getClassBreaks(i,n)}}_createSimpleScalarRenderer(){return{defaultSymbol:Yt.fromJSON({imageData:"iVBORw0KGgoAAAANSUhEUgAAACsAAAArCAQAAABLVLlLAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAACqjSMyAAAACXBIWXMAAABIAAAASABGyWs+AAAC3ElEQVRIx9XXvW4cVRQH8N982btpsIREJECyiCXsxX4DKh6AliqGKCBBE2SlwlHgAbBD/AKmyEYUeQ1KahPZSZQvBCkQLTHZ7KGY8Xodz4w3a1NwbzVzz/znfJ//zbStVC5q3icKak9GAs2QIdDx3PtW/S011NW3p+M5Eomh11ipTIKe6+4LQzHaQ+G+63pIZNJJQXMpljwTwj1brpgx5w1zZlyx5Z4QnllEIm2xeeSUHBf0hV0bejo1Uh09G3aFvgXk7cCJFBc9EdaRVuHJJaOdKyTV2TVhYLMduNR0Q9gxL5GaaTDw8GzejrDRBpxWoGsySRW0dttKuattwNkIlFw2YXgzOdYq4Ox49PlM+JrKd5OusjTWhBuVxUfMX/KXXZ3WEmkuqa67wspR4BTbwtKr/5u4fFgStse/T7EifFPnnYl9zPq4vmUOPrRndgoHjDti1gOPqlyXoifcRNGQzUd31lDyfHmob1Gp35vSr+P6vilcQ5Egtyd8YF/ySg9NhPM+9M/IOaHwp5+PSZayXTvCogEUwlatC3J8LLwYtcWB8EuDXQVuCkV5/B4eNHb7wGBs87LBDS+xjdVSn09wq1G8dFM+9tSUhIGneLvUdniKxKpTYljCpu3j7rVWlHj/P23v4NPGUEyeCQnexe9lJjzEQqMjJs+EzNAX6B98dBZVRmroJx95x/A/6gln18EyfCUsl+qdXb/tjvfbw+mwforpUOBz4XLVoBwAn3aWnfeH246NyBXhrq7TTN5lNSP9RkU+puUJm3W2Tsdq0nZWM07srk7MwQrZSRysjjGWBLRJNsNbfj2JMR4AbxpU1XLAb9Mxfpsq5EjMuuiR8L0JiHOOBX3hiUvOmavN0nMueSzcceFk0BK4pMqLo7vDD1Z0qrtDx7Itt4Xwm9UqbMmk8S0Dtuzb2pvOU99Z1nLTOfleNmvfZfP2pYZmPfajwosKdDBNpacNpVGGsWX9CyDI8Xq/Sj6QAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE0LTExLTEwVDAzOjE3OjU4LTA1OjAwF+tHyQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNC0xMS0xMFQwMzoxNzo1OC0wNTowMGa2/3UAAAAASUVORK5CYII=",height:20,width:20,type:"esriPMS",angle:0})}}_createWindBarbsRenderer(){const e=Array.from(Array(31).keys()).map(r=>5*r),i=[{range:"0-5",path:"M20 20 M5 20 A15 15 0 1 0 35 20 A15 15 0 1 0 5 20 M20 20 M10 20 A10 10 0 1 0 30 20 A10 10 0 1 0 10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTIwIDIwIE01IDIwIEExNSAxNSAwIDEgMCAzNSAyMCBBMTUgMTUgMCAxIDAgNSAyMCBNMjAgMjAgTTEwIDIwIEExMCAxMCAwIDEgMCAzMCAyMCBBMTAgMTAgMCAxIDAgMTAgMjAiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"5-10",path:"M25 0 L25 40 M25 35 L17.5 37.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"10-15",path:"M25 0 L25 40 L10 45 L25 40",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"15-20",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L17.5 37.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjEyIDAgMTUgNDUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"20-25",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"25-30",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L17.5 32.5",imageData:"PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIEwyNSAzNSBNMjUgMzAgTDE3LjUgMzIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"30-35",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"35-40",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"40-45",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"45-50",path:"M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"50-55",path:"M25 0 L25 40 L10 40 L25 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"55-60",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L17.5 32.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxNy41IDMyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"60-65",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"65-70",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"70-75",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"75-80",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"80-85",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"85-90",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L17.5 17.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxNy41IDE3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"90-95",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"95-100",path:"M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20 L25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCBMMjUgMTUgTTI1IDEwIEwxNy41IDEyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="},{range:"100-105",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"105-110",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L17.5 27.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDE3LjUgMjcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"110-115",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"115-120",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L17.5 22.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDE3LjUgMjIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"120-125",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"125-130",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L17.5 17.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDE3LjUgMTcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"130-135",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"135-140",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDE3LjUgMTIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg=="},{range:"140-145",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+"},{range:"145-150",path:"M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5",imageData:"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IE0yNSAxMCBNMjUgNSBMMTcuNSA3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4="}],n=Yt.fromJSON({imageData:"iVBORw0KGgoAAAANSUhEUgAAACgAAAApCAQAAADtq6NDAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAJiS0dEAP+Hj8y/AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEY0lEQVRIx5XXWWxWRRQH8N+d+31tUdGAVjGglYJABFEBY91jfDAg7piYaFTccA++uMQEFRcSXlATtxiXqMQt4G4iisYl0ai4sIQYtVFZ1KIFKdTS0l4f7vRCS5fPebozc+bM/2z/Mzcx0AgSiUxXnKfIdMn875FIhX53U2n/B/s+kKM4UINTjTBZImixxnrv+9a2iL6zEoUBXcoudrWj/OtHm3wt02lfU9Qao9OnHvIhgmww84MEl1qnxfNmGrqHxAizLdPpC6chGcAxKGGcL+30gOERf1BSpUqVslQSV8d5ReZFe8VQ9avufJn31cWwlJV7iafKStGOE/1qvfH9qUxxu8ydUdmuSKbGO8YUdT2inKLG69pM70tliktl5qIkCAJGmusDG7Vqsc0WjZa4UBlBiA5YZIcjYzB7qDtH5kaUJFLs7RGZTZ42W4PRRmtwvbdt1+wGiaS4drEtDttdZYIDNVuAclR3vA3+dI3qHqmVSy7U6Tv1MScCPvPR7nIpFlsdCy3FdTLPGhK92e2CUITjMJ9ocwKxnsZqc3O3JwMma3d6UVLnyVxB4aXemZqvPqLdpJhW3KVVbY4yYImPo6M5Urv50fj+0z/FG9YaEiENs8UtMfXUaTeTePNHlhXfA1UU+2lyD1Il3Gtt9+adfpNG7dNlpg2U/T3KYLZ2dUWFdTgp3/rQ4sK973qnInV5TIf40x3dhvrJPBiqyWUo4wAtLqhQYS71qK+QKOFRywmGK/kpikzV6WMKhh58vGWs4TIJNjiEYLIuP8Tt4/zmLyqk+AyrJSbF+Qq1DgqRUPMxyl+9q3IQhX/rMCJ6tEunriDs1oSyQZKlr9AkhT2ZIARbJfaJS1vtVbHB+Rgi0RK/y1q1BWsEEyLoz40xtGKcARPVWB1BTPO7f4LNtpkUl1aoMbViLyZo0GRjPD3BxnxjqXeLYlvhqYrzMMG3HoyJXa3JjfnGlbYYFlP7Jh3qKsKY4hQ7TY0nG+xwRL61n63mxHtqNHosigyMLmClNwvuecFnOZB88nNBDzNkzhxEZaKMBVoKapggMzvHHXBEpNSSFAvtcFRsVn0bW8LlMmcXs+c0Kne3gRR32+zg4uXwjC6zit6Wt4a8LXVfcp/MtQXHn2ynGbuCmb8GvvFeJLEE82ReU9/n6+dkq2x3buG9Wn94smcgAw631RPR7BTH+kbmHReZoEpOdEe7zWqZl40s0JWs9Hmv7hjBHqPDwsjGKVJnWWqjbdZp1KhJi0aPmxYZsIRhlttgeF+Jlke41QcOQKoqilSb6HJzSvNG3G/UoWnxwsmt+sVaYwd63dRbqdnMyCPVeyRPvpYgdavM22oGKoMUVRbJfOWMwidJ8Zzb1UvmWK/VVUXzHaTjjrVYh1897HT7xxYEVUaa5SWb/WO+YUWa9SrwvigzM8YlzlYv2GSdVCYxxlBtVnnFq5olwp5/BEk/OLsf5LUmG2+inRJdVvjZ97ZH9/zP34ug1O91pf4p+D+JYBpvrKxfbwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNC0xMS0xMFQwMzoxMjowOS0wNTowMB9ViV0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQtMTEtMTBUMDM6MTI6MDktMDU6MDBuCDHhAAAAAElFTkSuQmCC",height:20,width:20,type:"esriPMS",angle:0}),t=e.map((r,a)=>{let l;if(a!==e.length-1)if(a===0)l={minValue:r,maxValue:e[a+1],symbol:n};else{const u=Yt.fromJSON({type:"esriPMS",imageData:i[a].imageData,contentType:"image/svg+xml",height:32,width:32,angle:0});l={minValue:r,maxValue:e[a+1],symbol:u}}return new Ui(l)});return{defaultSymbol:n,classBreakInfos:t}}_getClassBreaks(e,i){return i.map((n,t)=>new Ui({minValue:e[t],maxValue:e[t+1],symbol:this._getDefaultSymbol(new Q(n))}))}};s([o({type:["Magnitude"],json:{write:!0}})],G.prototype,"attributeField",void 0),s([o({type:Rt.apiValues,json:{type:Rt.jsonValues,read:{reader:Rt.read},write:{writer:Rt.write}}})],G.prototype,"flowRepresentation",void 0),s([o({type:["geographic","arithmetic"],json:{write:!0}})],G.prototype,"rotationType",void 0),s([o({type:St.apiValues,json:{type:St.jsonValues,read:{reader:St.read},write:{writer:St.write}}})],G.prototype,"style",void 0),s([o({json:{write:!0}})],G.prototype,"symbolTileSize",void 0),s([o({type:Fe.apiValues,json:{type:Fe.jsonValues,write:{writer:Fe.write}}})],G.prototype,"inputUnit",void 0),s([L("inputUnit")],G.prototype,"readInputUnit",null),s([o({type:Fe.apiValues,json:{type:Fe.jsonValues,read:{reader:Fe.read},write:{writer:Fe.write}}})],G.prototype,"outputUnit",void 0),s([L("outputUnit")],G.prototype,"readOutputUnit",null),s([ke({vectorField:"vector-field"})],G.prototype,"type",void 0),s([o({type:Gt})],G.prototype,"styleRenderer",null),s([o({type:Zt})],G.prototype,"sizeVariables",null),s([o({type:rr})],G.prototype,"rotationVariables",null),G=hi=s([w("esri.renderers.VectorFieldRenderer")],G);const Li=G,dn=.25,yn=or.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),Ji=or.fromJSON(ps[0]),fr=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function hn(e){return e.presetRenderers?.find(({method:i,value:n})=>i==="raster-function-template"?n===e.rasterFunctionName:i==="variable"&&n===e.variableName)}function gn(e,i){const{attributeTable:n,colormap:t}=e;if(xi(e)){const r=Dn(e);if(r!=null)return r}if(i?.rasterFunctionColorRamp){const r=Zi(e,i);return r.colorRamp=i.rasterFunctionColorRamp,r}if(t!=null){const r=Sn(e);if(r!=null)return r}if(n!=null){const r=vn(e);if(r!=null)return r}return Zi(e,i)}function fn(e,i=!1){const n=["raster-stretch"];return Xi(e,i)&&n.push("raster-colormap"),$i(e)&&n.push("unique-value"),gs(e,i)&&n.push("class-breaks"),fs(e)&&n.push("raster-shaded-relief"),xi(e)&&n.push("vector-field"),ws(e)&&n.push("flow"),n}function nl(e){return e.datasetFormat==="Function"&&e.rasterFunction.functionName==="Colormap"?e.rasterFunction.colorRamp:void 0}function ol(e,i,n){const t=["nearest","bilinear","cubic","majority"],r=n?.toLowerCase().replace("bicubic","cubic"),a=t.find(l=>l===r);return i==="Map"?a??"bilinear":e.dataType==="standard-time"?a??"nearest":e.dataType==="thematic"||e.attributeTable||e.colormap?a==="nearest"||a==="majority"?a:"nearest":a??"bilinear"}function Zi(e,i){e=wn(e,i?.variableName);const{bandCount:n}=e;let{bandIds:t,stretchType:r}=i||{};t?.some(d=>d>=n)&&(t=null);let a=e.statistics,l=e.histograms;n>1?(t=t?.length?t:wr(e),a=a==null?null:t?.map(d=>a[d]),l=l==null?null:t?.map(d=>l[d])):t=[0],r==null&&(r=Mn(e)),i?.includeStatisticsInStretch&&(r==="percent-clip"||r==="histogram-equalization")&&e.statistics?.length&&(r="min-max");let u=!1;switch(r){case"none":u=!1;break;case"percent-clip":u=!l?.length;break;default:u=!a?.length}const{dataType:p}=e,c=t?.length===1&&fr.has(p)?yn:null,m=new Fi({stretchType:r,dynamicRangeAdjustment:u,colorRamp:c,outputMin:0,outputMax:255,gamma:t?.length===1?[1]:[1,1,1],useGamma:!1});return r==="percent-clip"?m.maxPercent=m.minPercent=dn:r==="standard-deviation"&&(m.numberOfStandardDeviations=2),u||e.multidimensionalInfo==null&&!i?.includeStatisticsInStretch||(r==="percent-clip"?m.histograms=l:r!=="min-max"&&r!=="standard-deviation"||(m.statistics=a)),m}function wn(e,i){const{multidimensionalInfo:n}=e;if(!i||!n)return e;const t=n.variables.find(r=>r.name===i);if(!t)return e;if(e=e.clone(),t){const{statistics:r,histograms:a}=t;r?.length&&(e.statistics=r.map(l=>({min:l.min,max:l.max,avg:l.avg,stddev:l.stddev}))),a?.length&&(e.histograms=a)}return e}function wr(e){const i=e.bandCount;if(i===1)return null;if(i===2)return[0];const{bandInfos:n}=e;let t;if(n.length===i){const{red:r,green:a,blue:l,nir:u}=In(n);r!=null&&a!=null&&l!=null?t=[r,a,l]:u!=null&&r!=null&&a!=null&&(t=[u,r,a])}return!t&&i>=3&&(t=[0,1,2]),t}function In(e){const i={};for(let n=0;n<e.length;n++){const t=e[n],r=t.name.toLowerCase();if(r==="red")i.red=n;else if(r==="green")i.green=n;else if(r==="blue")i.blue=n;else if(r==="nearinfrared"||r==="nearinfrared_1"||r==="nir")i.nir=n;else if(t.maxWavelength&&t.minWavelength){const a=t.minWavelength,l=t.maxWavelength;i.blue==null&&a>=410&&a<=480&&l>=480&&l<=540?i.blue=n:i.green==null&&a>=490&&a<=560&&l>=560&&l<=610?i.green=n:i.red==null&&a>=595&&a<=670&&l>=660&&l<=730?i.red=n:i.nir==null&&a>=700&&a<=860&&l>=800&&l<=950&&(i.nir=n)}}return i}function Mn(e){let i="percent-clip";const{pixelType:n,dataType:t,histograms:r,statistics:a,multidimensionalInfo:l}=e,u=fr.has(t)||t==="generic"&&l!=null;return n!=="u8"||t!=="processed"&&r!=null&&a!=null?n==="u8"||t==="elevation"||u?i="min-max":r!=null?i="percent-clip":a!=null&&(i="min-max"):i="none",i}function vn(e,i,n,t){if(!$i(e,i))return null;const{attributeTable:r,statistics:a}=e,l=Ir(r,i),u=wt(r,"red"),p=wt(r,"green"),c=wt(r,"blue"),m=new ir,d=[],f=new Set,h=!!(u&&p&&c);if(r!=null)r.features.forEach(g=>{const y=g.attributes[l.name];if(!f.has(g.attributes[l.name])&&y!=null){f.add(y);const I=h&&(u.type==="single"||u.type==="double")&&(p.type==="single"||p.type==="double")&&(c.type==="single"||c.type==="double")&&!r.features.some(R=>R.attributes[u.name]>1||R.attributes[p.name]>1||R.attributes[c.name]>1),M=I?255:1;d.push(new _i({value:g.attributes[l.name],label:g.attributes[l.name]+"",symbol:new zi({style:"solid",outline:null,color:new Q(h?[g.attributes[u.name]*M,g.attributes[p.name]*M,g.attributes[c.name]*M,1]:[0,0,0,0])})}))}});else if(a?.[0])for(let g=a[0].min;g<=a[0].max;g++)d.push(new _i({value:g,label:g.toString(),symbol:new zi({style:"solid",outline:null,color:new Q([0,0,0,0])})}));if(d.sort((g,y)=>g.value&&typeof g.value.valueOf()=="string"?0:g.value>y.value?1:-1),!h){const g=Jt(Ji,{numColors:d.length});d.forEach((y,I)=>y.symbol.color=new Q(g[I].slice(1,4))),m.colorRamp=Ji}return new Ti({field:l.name,uniqueValueInfos:d,authoringInfo:m})}function Ir(e,i,n){let t;return e!=null?(t=i?e.fields.find(r=>i.toLowerCase()===r.name.toLowerCase()):bn(e.fields),t||(n||(t=e.fields.find(r=>r.type==="string")),t||(t=wt(e,"value")))):t=new sr({name:"value"}),t}function bn(e){let i;for(let n=0;n<e.length;n++){const t=e[n].name.toLowerCase();if(e[n].type==="string"){if(t.startsWith("class")){i=e[n];break}i==null&&(t.endsWith("name")||t.endsWith("type"))&&(i=e[n])}}return i}function wt(e,i){return e==null?null:e.fields.find(n=>n.name.toLowerCase()===i)}function Sn(e){if(!Xi(e))return null;let i;const{attributeTable:n,colormap:t}=e;if(n!=null){const r=wt(n,"value"),a=Ir(n,null,!0);a.type==="string"&&(i={},n.features.forEach(l=>{const u=l.attributes;i[u[r.name]]=a?u[a.name]:u[r.name]}))}return Ni.createFromColormap(t,i)}const Rn=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function Dn(e){if(!xi(e))return null;let i;if(e.statistics!=null&&e.statistics.length&&(e.dataType==="vector-magdir"||e.dataType==="vector-uv")){const{minMagnitude:r,maxMagnitude:a}=xn(e.dataType,e.statistics);i=[new Zt({field:"Magnitude",minSize:10,maxSize:40,minDataValue:r,maxDataValue:a})]}const n=e.multidimensionalInfo!=null?Rn.get(e.multidimensionalInfo.variables[0].unit):void 0,t=new Li({visualVariables:i,inputUnit:n,rotationType:"geographic"});return t.visualVariables=[...t.sizeVariables,...t.rotationVariables],t}function Gi(e){return{color:e.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function An(e){if(e.type==="uniqueValue"){const i=e.uniqueValueInfos;return i?.[0].symbol?.symbolLayers?.length&&(e.uniqueValueInfos=i?.map(n=>({value:n.value,label:n.label,symbol:n.symbol?Gi(n.symbol):null}))),e}if(e.type==="classBreaks"){const i=e.classBreakInfos;return i[0].symbol?.symbolLayers?.length&&(e.classBreakInfos=i.map(n=>({classMinValue:n.classMinValue,classMaxValue:n.classMaxValue,label:n.label,symbol:n.symbol?Gi(n.symbol):null}))),e}return e}function xn(e,i){let n,t;if(e==="vector-magdir")n=i[0].min,t=i[0].max;else{const r=i[0].min,a=i[0].max,l=i[1].min,u=i[1].max;n=0,t=Math.max(Math.abs(r),Math.abs(l),Math.abs(a),Math.abs(u))}return{minMagnitude:n,maxMagnitude:t}}const Et={key:"type",base:null,typeMap:{"unique-value":Ti,"class-breaks":Gt,"raster-colormap":Ni,"raster-stretch":Fi,"vector-field":Li,"raster-shaded-relief":gr,flow:yr}},kt={...Et,typeMap:{...Et.typeMap}};delete kt.typeMap["vector-field"],delete kt.typeMap.flow;const jn={uniqueValue:Ti,classBreaks:Gt,rasterStretch:Fi,rasterColormap:Ni,vectorField:Li,rasterShadedRelief:gr,flowRenderer:yr};function Tn(e){return e&&jn[e.type]||null}function Cn(e,i){if(!e)return null;if(e.type==="classBreaks"&&e.classificationMethod){const t=e.authoringInfo||{classificationMethod:""};t.classificationMethod=e.classificationMethod,e.authoringInfo=t}e.type==="vectorField"&&e.visualVariables&&!Array.isArray(e.visualVariables)&&(e.visualVariables=[e.visualVariables]);const n=Tn(e);if(n){const t=new n;return t.read(e,i),t}return i?.messages&&e&&i.messages.push(new Pr("renderer:unsupported","Renderers of type '"+(e.type||"unknown")+"' are not supported",{definition:e,context:i})),null}let ze=class extends ve.ClonableMixin(v){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};s([o({type:F,json:{read:!0}})],ze.prototype,"fromGeometry",void 0),s([o({type:F,json:{read:!0,write:!0}})],ze.prototype,"toGeometry",void 0),s([o({json:{write:!0}})],ze.prototype,"objectIds",void 0),s([o({type:String,json:{write:!0}})],ze.prototype,"where",void 0),s([o({type:Number,json:{write:!0}})],ze.prototype,"maxCount",void 0),ze=s([w("esri.rest.support.FindImagesParameters")],ze);const Nn=ze,Mr=e=>{let i=class extends e{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return s([o({json:{write:!0}})],i.prototype,"make",void 0),s([o({json:{write:!0}})],i.prototype,"model",void 0),s([o({json:{write:!0}})],i.prototype,"focalLength",void 0),s([o({json:{write:!0}})],i.prototype,"pixelSize",void 0),s([o({json:{write:!0}})],i.prototype,"rows",void 0),s([o({json:{write:!0}})],i.prototype,"cols",void 0),i=s([w("esri.rest.support.CameraInfoMixin")],i),i};let pe=class extends Mr(v){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(e,i){i.acquisitionDate=e?.getTime()}};s([o({json:{write:!0}})],pe.prototype,"id",void 0),s([o({json:{name:"uri",write:!0}})],pe.prototype,"referenceUri",void 0),s([o({type:Date,json:{write:!0}})],pe.prototype,"acquisitionDate",void 0),s([x("acquisitionDate")],pe.prototype,"writeAcquisitionDate",null),s([o({json:{write:!0}})],pe.prototype,"cameraID",void 0),s([o({type:F,json:{write:!0}})],pe.prototype,"center",void 0),s([o({type:F,json:{write:!0}})],pe.prototype,"perspectiveCenter",void 0),s([o({json:{write:!0}})],pe.prototype,"orientation",void 0),pe=s([w("esri.rest.support.ImageInspectionInfo")],pe);const Fn=pe;let jt=class extends v{constructor(){super(...arguments),this.images=null}};s([o({type:[Fn],json:{write:!0}})],jt.prototype,"images",void 0),jt=s([w("esri.rest.support.FindImagesResult")],jt);const Ln=jt;var gi;let qe=gi=class extends v{constructor(e){super(e),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new gi(D({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};s([o({type:[String],json:{name:"angleName",write:!0}})],qe.prototype,"angleNames",void 0),s([o({type:F,json:{write:!0}})],qe.prototype,"point",void 0),s([o({type:he,json:{write:!0}})],qe.prototype,"spatialReference",void 0),s([o({type:X,json:{write:!0}})],qe.prototype,"rasterId",void 0),qe=gi=s([w("esri.rest.support.ImageAngleParameters")],qe);const Pn=qe;let Ye=class extends v{constructor(e){super(e),this.north=null,this.up=null,this.spatialReference=null}};s([o({type:Number,json:{write:!0}})],Ye.prototype,"north",void 0),s([o({type:Number,json:{write:!0}})],Ye.prototype,"up",void 0),s([o({type:he,json:{write:!0}})],Ye.prototype,"spatialReference",void 0),Ye=s([w("esri.rest.support.ImageAngleResult")],Ye);const zn=Ye,ae=new ot({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let _e=class extends v{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};s([o({type:Number,json:{read:!0,write:!0}})],_e.prototype,"value",void 0),s([o({type:String,json:{read:!0,write:!0}})],_e.prototype,"displayValue",void 0),s([o({type:Number,json:{read:!0,write:!0}})],_e.prototype,"uncertainty",void 0),_e=s([w("esri.rest.support.imageMeasureUtils.BaseImageMeasureResultValue")],_e);let nt=class extends _e{constructor(){super(...arguments),this.unit=null}};s([o({type:String,json:{read:Ee.read,write:Ee.write}})],nt.prototype,"unit",void 0),nt=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultLengthValue")],nt);let Tt=class extends _e{constructor(){super(...arguments),this.unit=null}};s([o({type:String,json:{read:Ut.read,write:Ut.write}})],Tt.prototype,"unit",void 0),Tt=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultAreaValue")],Tt);let It=class extends _e{constructor(){super(...arguments),this.unit=null}};s([o({type:String,json:{read:_t.read,write:_t.write}})],It.prototype,"unit",void 0),It=s([w("esri.rest.support.imageMeasureUtils.ImageMeasureResultAngleValue")],It);let Oe=class extends v{constructor(e){super(e),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};s([o()],Oe.prototype,"type",void 0),s([o({type:ae.apiValues,json:{read:ae.read,write:ae.write}})],Oe.prototype,"measureOperation",void 0),s([o({type:re,json:{write:!0}})],Oe.prototype,"mosaicRule",void 0),s([o({type:F,json:{write:!0}})],Oe.prototype,"pixelSize",void 0),s([o({json:{write:!0}})],Oe.prototype,"raster",void 0),Oe=s([w("esri.rest.support.BaseImageMeasureParameters")],Oe);const Wt=Oe;var fi;let Ae=fi=class extends Wt{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=e.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new fi(D({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([o({types:Y,json:{name:"fromGeometry",read:!0,write:!0}})],Ae.prototype,"geometry",void 0),s([x("geometry")],Ae.prototype,"writeGeometry",null),s([o({type:ae.apiValues,json:{write:ae.write}})],Ae.prototype,"measureOperation",null),s([o({json:{read:!0}})],Ae.prototype,"is3D",void 0),s([o({type:String,json:{read:Ee.read,write:Ee.write}})],Ae.prototype,"linearUnit",void 0),s([o({type:String,json:{read:Ut.read,write:Ut.write}})],Ae.prototype,"areaUnit",void 0),Ae=fi=s([w("esri.rest.support.ImageAreaParameters")],Ae);const On=Ae;let ct=class extends v{constructor(e){super(e),this.name=null,this.sensorName=null}};s([o({type:String,json:{read:!0,write:!0}})],ct.prototype,"name",void 0),s([o({type:String,json:{read:!0,write:!0}})],ct.prototype,"sensorName",void 0),ct=s([w("esri.rest.support.BaseImageMeasureResult")],ct);const Qt=ct;let mt=class extends Qt{constructor(){super(...arguments),this.area=null,this.perimeter=null}};s([o({type:Tt,json:{read:!0,write:!0}})],mt.prototype,"area",void 0),s([o({type:nt,json:{read:!0,write:!0}})],mt.prototype,"perimeter",void 0),mt=s([w("esri.rest.support.ImageAreaResult")],mt);const Bn=mt;let Ct=class extends ve.ClonableMixin(v){constructor(){super(...arguments),this.outSpatialReference=null}};s([o({type:he,json:{name:"outSR",write:!0}})],Ct.prototype,"outSpatialReference",void 0),Ct=s([w("esri.rest.support.ImageBoundaryParameters")],Ct);const Un=Ct;let et=class extends v{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(e,i){return e==null?null:e.rings?Ht.fromJSON(e):He.fromJSON(e)}};s([o({type:Number,json:{write:!0}})],et.prototype,"area",void 0),s([o({types:Y,json:{name:"shape",write:!0}})],et.prototype,"geometry",void 0),s([L("geometry")],et.prototype,"readGeometry",null),et=s([w("esri.rest.support.ImageBoundaryResult")],et);const _n=et;var wi;let ge=wi=class extends Wt{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=e.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new wi(D({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([o({type:F,json:{read:!0,write:!0}})],ge.prototype,"fromGeometry",void 0),s([x("fromGeometry")],ge.prototype,"writeFromGeometry",null),s([o({type:F,json:{read:!0,write:!0}})],ge.prototype,"toGeometry",void 0),s([o({type:ae.apiValues,json:{write:ae.write}})],ge.prototype,"measureOperation",null),s([o({json:{read:!0}})],ge.prototype,"is3D",void 0),s([o({type:String,json:{read:Ee.read,write:Ee.write}})],ge.prototype,"linearUnit",void 0),s([o({type:String,json:{read:_t.read,write:_t.write}})],ge.prototype,"angularUnit",void 0),ge=wi=s([w("esri.rest.support.ImageDistanceParameters")],ge);const Hn=ge;let tt=class extends Qt{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};s([o({type:nt,json:{read:!0,write:!0}})],tt.prototype,"distance",void 0),s([o({type:It,json:{read:!0,write:!0}})],tt.prototype,"azimuthAngle",void 0),s([o({type:It,json:{read:!0,write:!0}})],tt.prototype,"elevationAngle",void 0),tt=s([w("esri.rest.support.ImageDistanceResult")],tt);const Vn=tt;let xe=class extends ve.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=JSON.stringify(e.toJSON()))}};s([o({types:Y,json:{read:se,write:!0}})],xe.prototype,"geometry",void 0),s([x("geometry")],xe.prototype,"writeGeometry",null),s([o({json:{write:!0}})],xe.prototype,"objectIds",void 0),s([ke(Fs,{ignoreUnknown:!1,name:"spatialRel"})],xe.prototype,"spatialRelationship",void 0),s([o({type:qt,json:{name:"time",write:!0}})],xe.prototype,"timeExtent",void 0),s([o({type:String,json:{write:!0}})],xe.prototype,"where",void 0),xe=s([w("esri.rest.support.ImageGPSInfoParameters")],xe);const En=xe;let Nt=class extends Mr(v){constructor(){super(...arguments),this.id=null}};s([o({json:{write:!0}})],Nt.prototype,"id",void 0),Nt=s([w("esri.rest.support.CameraInfo")],Nt);const kn=Nt;let ce=class extends v{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(e,i){i.acquisitionDate=e?.getTime()}};s([o({json:{write:!0}})],ce.prototype,"id",void 0),s([o({json:{write:!0}})],ce.prototype,"name",void 0),s([o({type:Date,json:{write:!0}})],ce.prototype,"acquisitionDate",void 0),s([x("acquisitionDate")],ce.prototype,"writeAcquisitionDate",null),s([o({json:{write:!0}})],ce.prototype,"cameraID",void 0),s([o({type:F,json:{write:!0}})],ce.prototype,"center",void 0),s([o({json:{write:!0}})],ce.prototype,"gps",void 0),s([o({json:{write:!0}})],ce.prototype,"orientation",void 0),ce=s([w("esri.rest.support.ImageGPSInfo")],ce);const Jn=ce;let dt=class extends v{constructor(){super(...arguments),this.images=null,this.cameras=null}};s([o({type:[Jn],json:{write:!0}})],dt.prototype,"images",void 0),s([o({type:[kn],json:{write:!0}})],dt.prototype,"cameras",void 0),dt=s([w("esri.rest.support.ImageGPSInfoResult")],dt);const Zn=dt;var Ii;let je=Ii=class extends Wt{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=e.toJSON())}get measureOperation(){return this.operationType}clone(){return new Ii(D({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([o({type:F,json:{read:!0}})],je.prototype,"fromGeometry",void 0),s([x("fromGeometry")],je.prototype,"writeFromGeometry",null),s([o({type:F,json:{read:!0,write:!0}})],je.prototype,"toGeometry",void 0),s([o({type:ae.apiValues,json:{write:ae.write}})],je.prototype,"measureOperation",null),s([o({json:{read:!0}})],je.prototype,"operationType",void 0),s([o({type:String,json:{read:Ee.read,write:Ee.write}})],je.prototype,"linearUnit",void 0),je=Ii=s([w("esri.rest.support.ImageHeightParameters")],je);const Gn=je;let Ft=class extends Qt{constructor(){super(...arguments),this.height=null}};s([o({type:nt,json:{read:!0,write:!0}})],Ft.prototype,"height",void 0),Ft=s([w("esri.rest.support.ImageHeightResult")],Ft);const qn=Ft;var Mi;let fe=Mi=class extends v{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.rasterFunction=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=e.toJSON())}clone(){return new Mi(D({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};s([o({types:Y,json:{read:se}})],fe.prototype,"geometry",void 0),s([x("geometry")],fe.prototype,"writeGeometry",null),s([o({type:re,json:{write:!0}})],fe.prototype,"mosaicRule",void 0),s([o({type:j,json:{write:!0,name:"renderingRule"}})],fe.prototype,"rasterFunction",void 0),s([o({type:F,json:{write:!0}})],fe.prototype,"pixelSize",void 0),s([o({json:{write:!0}})],fe.prototype,"raster",void 0),s([o({type:qt,json:{read:{source:"time"},write:{target:"time"}}})],fe.prototype,"timeExtent",void 0),fe=Mi=s([w("esri.rest.support.ImageHistogramParameters")],fe);const Wn=fe;var vi;let U=vi=class extends v{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let i=e;i?.mosaicMethod&&(i=re.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(e,i,n){e!=null&&(i[n]=JSON.stringify(e.toJSON()))}set rasterFunction(e){let i=e;i?.rasterFunction&&(i=j.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("rasterFunction",i)}writeRasterFunction(e,i,n){e!=null&&(i[n]=JSON.stringify(e.toJSON())),e.rasterFunctionDefinition&&(i[n]=JSON.stringify(e.rasterFunctionDefinition))}writeRasterFunctions(e,i,n){e!=null&&(i[n]=JSON.stringify(e.map(t=>t.rasterFunctionDefinition||t.toJSON())))}writePixelSize(e,i,n){e!=null&&(i[n]=JSON.stringify(e))}writeTimeExtent(e,i,n){if(e!=null){const t=e.start!=null?e.start.getTime():null,r=e.end!=null?e.end.getTime():null;i[n]=t!=null?r!=null?`${t},${r}`:`${t}`:null}}clone(){return new vi(D({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};s([o({types:Y,json:{write:!0}})],U.prototype,"geometry",void 0),s([x("geometry")],U.prototype,"writeGeometry",null),s([o({type:re,json:{write:!0}})],U.prototype,"mosaicRule",null),s([x("mosaicRule")],U.prototype,"writeMosaicRule",null),s([o({type:j,json:{write:!0,name:"renderingRule"}})],U.prototype,"rasterFunction",null),s([x("rasterFunction")],U.prototype,"writeRasterFunction",null),s([o({type:[j],json:{write:!0,name:"renderingRules"}})],U.prototype,"rasterFunctions",void 0),s([x("rasterFunctions")],U.prototype,"writeRasterFunctions",null),s([o({type:F,json:{write:!0}})],U.prototype,"pixelSize",void 0),s([x("pixelSize")],U.prototype,"writePixelSize",null),s([o({type:Boolean,json:{write:!0}})],U.prototype,"returnGeometry",void 0),s([o({type:Boolean,json:{write:!0}})],U.prototype,"returnCatalogItems",void 0),s([o({type:Boolean,json:{write:!0}})],U.prototype,"returnPixelValues",void 0),s([o({type:Number,json:{write:!0}})],U.prototype,"maxItemCount",void 0),s([o({type:qt,json:{write:{target:"time"}}})],U.prototype,"timeExtent",void 0),s([x("timeExtent")],U.prototype,"writeTimeExtent",null),s([o({json:{write:!0}})],U.prototype,"raster",void 0),s([o({json:{write:!0}})],U.prototype,"viewId",void 0),s([o({type:Boolean,json:{write:!0}})],U.prototype,"processAsMultidimensional",void 0),U=vi=s([w("esri.rest.support.ImageIdentifyParameters")],U);const vr=U;let me=class extends v{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};s([o({json:{write:!0}})],me.prototype,"catalogItemVisibilities",void 0),s([o({type:Ci,json:{write:!0}})],me.prototype,"catalogItems",void 0),s([o({type:F,json:{write:!0}})],me.prototype,"location",void 0),s([o({json:{write:!0}})],me.prototype,"name",void 0),s([o({json:{write:!0}})],me.prototype,"objectId",void 0),s([o({json:{write:!0}})],me.prototype,"processedValues",void 0),s([o({json:{write:!0}})],me.prototype,"properties",void 0),s([o({json:{write:!0}})],me.prototype,"value",void 0),me=s([w("esri.rest.support.ImageIdentifyResult")],me);const Qn=me;var bi;let it=bi=class extends v{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(e,i,n){i.geometries={geometryType:"esriGeometryPoint",geometries:e.map(t=>t.toJSON())}}clone(){return new bi({geometries:this.geometries?.map(e=>e.clone())??[],rasterId:this.rasterId})}};s([o({type:[F],json:{write:!0}})],it.prototype,"geometries",void 0),s([x("geometries")],it.prototype,"writeGeometry",null),s([o({type:X,json:{write:!0}})],it.prototype,"rasterId",void 0),it=bi=s([w("esri.rest.support.ImagePixelLocationParameters")],it);const Kn=it;let Lt=class extends v{constructor(){super(...arguments),this.geometries=null}};s([o({json:{write:!0}})],Lt.prototype,"geometries",void 0),Lt=s([w("esri.rest.support.ImagePixelLocationResult")],Lt);const $n=Lt;var Si;let We=Si=class extends Wt{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=e.toJSON())}get measureOperation(){const{is3D:e,geometry:i}=this;return i.type==="point"?e?"point-3D":"point":e?"centroid-3D":"centroid"}clone(){return new Si(D({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};s([o({types:Y,json:{name:"fromGeometry",read:se}})],We.prototype,"geometry",void 0),s([x("geometry")],We.prototype,"writeGeometry",null),s([o({type:ae.apiValues,json:{read:ae.read,write:ae.write}})],We.prototype,"measureOperation",null),s([o({json:{read:!0}})],We.prototype,"is3D",void 0),We=Si=s([w("esri.rest.support.ImagePointParameters")],We);const Xn=We;let Pt=class extends Qt{constructor(){super(...arguments),this.point=null}};s([o({type:F,json:{name:"point.value",read:!0,write:!0}})],Pt.prototype,"point",void 0),Pt=s([w("esri.rest.support.ImagePointResult")],Pt);const Yn=Pt;var Ri;let q=Ri=class extends v{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.raster=void 0,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=e.toJSON())}set locations(e){if(e?.length){const i=new zr({spatialReference:e[0].spatialReference,points:e.map(({x:n,y:t})=>[n,t])});this._set("locations",e),this.geometry=i}}clone(){return new Ri(D({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};s([o({types:Y,json:{read:se}})],q.prototype,"geometry",void 0),s([x("geometry")],q.prototype,"writeGeometry",null),s([o({type:[F]})],q.prototype,"locations",null),s([o({type:String,json:{type:Ve.jsonValues,read:Ve.read,write:Ve.write}})],q.prototype,"interpolation",void 0),s([o({type:re,json:{write:!0}})],q.prototype,"mosaicRule",void 0),s([o({type:[String],json:{write:!0}})],q.prototype,"outFields",void 0),s([o({type:F,json:{write:!0}})],q.prototype,"pixelSize",void 0),s([o({type:String,json:{write:!0}})],q.prototype,"raster",void 0),s([o({type:Boolean,json:{write:!0}})],q.prototype,"returnFirstValueOnly",void 0),s([o({type:Number,json:{write:!0}})],q.prototype,"sampleDistance",void 0),s([o({type:Number,json:{write:!0}})],q.prototype,"sampleCount",void 0),s([o({type:Number,json:{write:!0}})],q.prototype,"sliceId",void 0),s([o({type:qt,json:{read:{source:"time"},write:{target:"time"}}})],q.prototype,"timeExtent",void 0),q=Ri=s([w("esri.rest.support.ImageSampleParameters")],q);const eo=q;let Te=class extends v{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};s([o({json:{write:!0}})],Te.prototype,"attributes",void 0),s([o({type:F,json:{write:!0}})],Te.prototype,"location",void 0),s([o({json:{write:!0}})],Te.prototype,"locationId",void 0),s([o({json:{write:!0}})],Te.prototype,"rasterId",void 0),s([o({json:{write:!0}})],Te.prototype,"resolution",void 0),s([o({json:{write:!0}})],Te.prototype,"pixelValue",void 0),Te=s([w("esri.rest.support.ImageSample")],Te);const to=Te;let zt=class extends v{constructor(){super(...arguments),this.samples=[]}};s([o({type:[to],json:{write:!0}})],zt.prototype,"samples",void 0),zt=s([w("esri.rest.support.ImageSampleResult")],zt);const io=zt;let Qe=class extends ve.ClonableMixin(v){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(e,i,n){i.geometries=e?.length?{geometryType:ne(e[0]),geometries:e.map(t=>({...t.toJSON(),spatialReference:void 0}))}:null}};s([o({types:[Y]})],Qe.prototype,"geometries",void 0),s([x("geometries")],Qe.prototype,"writeGeometries",null),s([o({type:[X],json:{write:!0}})],Qe.prototype,"rasterIds",void 0),s([o({type:he,json:{name:"outSR",write:!0}})],Qe.prototype,"outSpatialReference",void 0),Qe=s([w("esri.rest.support.ImageToMapMultirayParameters")],Qe);const ro=Qe;let Ce=class extends ve.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]={...e.toJSON(),spatialReference:void 0})}};s([o({types:Y,json:{read:se,write:!0}})],Ce.prototype,"geometry",void 0),s([x("geometry")],Ce.prototype,"writeGeometry",null),s([o({json:{write:!0}})],Ce.prototype,"rasterId",void 0),s([o({type:he,json:{name:"outSR",write:!0}})],Ce.prototype,"outSpatialReference",void 0),s([o({json:{name:"options.DOff",write:!0}})],Ce.prototype,"depthOffset",void 0),s([o({json:{name:"options.Adjust",write:!0}})],Ce.prototype,"adjust",void 0),Ce=s([w("esri.rest.support.ImageToMapParameters")],Ce);const so=Ce;let yt=class extends ve.ClonableMixin(v){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};s([o({type:String,json:{name:"uri",write:!0}})],yt.prototype,"referenceUri",void 0),s([o({type:Number,json:{write:!0}})],yt.prototype,"rasterId",void 0),yt=s([w("esri.rest.support.ImageUrlParameters")],yt);const no=yt;let Ot=class extends v{constructor(){super(...arguments),this.url=null}};s([o({json:{name:"imageURL",write:!0}})],Ot.prototype,"url",void 0),Ot=s([w("esri.rest.support.ImageUrlResult")],Ot);const oo=Ot,si=new ot({0:"constant",1:"plane",2:"minimum",3:"maximum",4:"average"},{useNumericKeys:!0});let Ne=class extends ve.ClonableMixin(v){constructor(){super(...arguments),this.geometries=[],this.mosaicRule=null,this.pixelSize=null,this.constantZ=null,this.baseType="plane"}writeGeometries(e,i,n){e?.length&&(i.geometryType=ne(e[0]),i.geometries=e.map(t=>t.toJSON()))}};s([o({types:[Y]})],Ne.prototype,"geometries",void 0),s([x("geometries")],Ne.prototype,"writeGeometries",null),s([o({type:re,json:{write:!0}})],Ne.prototype,"mosaicRule",void 0),s([o({type:F,json:{write:!0}})],Ne.prototype,"pixelSize",void 0),s([o({json:{write:!0}})],Ne.prototype,"constantZ",void 0),s([o({type:si.apiValues,json:{read:si.read,write:si.write}})],Ne.prototype,"baseType",void 0),Ne=s([w("esri.rest.support.ImageVolumeParameters")],Ne);const ao=Ne;let de=class extends v{constructor(){super(...arguments),this.area=null,this.cut=null,this.fill=null,this.maxZ=null,this.minZ=null,this.meanZ=null,this.cutCellCount=null,this.fillCellCount=null}};s([o({json:{write:!0}})],de.prototype,"area",void 0),s([o({json:{write:!0}})],de.prototype,"cut",void 0),s([o({json:{write:!0}})],de.prototype,"fill",void 0),s([o({json:{name:"maxz",write:!0}})],de.prototype,"maxZ",void 0),s([o({json:{name:"minz",write:!0}})],de.prototype,"minZ",void 0),s([o({json:{name:"meanz",write:!0}})],de.prototype,"meanZ",void 0),s([o({json:{write:!0}})],de.prototype,"cutCellCount",void 0),s([o({json:{write:!0}})],de.prototype,"fillCellCount",void 0),de=s([w("esri.rest.support.ImageVolume")],de);const lo=de;let Bt=class extends v{constructor(){super(...arguments),this.volumes=[]}};s([o({type:[lo],json:{write:!0}})],Bt.prototype,"volumes",void 0),Bt=s([w("esri.rest.support.ImageVolumeResult")],Bt);const uo=Bt;let Ke=class extends ve.ClonableMixin(v){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]=JSON.stringify(e))}};s([o({types:Y,json:{read:se,write:!0}})],Ke.prototype,"geometry",void 0),s([x("geometry")],Ke.prototype,"writeGeometry",null),s([o({json:{write:!0}})],Ke.prototype,"rasterId",void 0),s([o({json:{name:"options.VisibleOnly",write:!0}})],Ke.prototype,"visibleOnly",void 0),Ke=s([w("esri.rest.support.MapToImageParameters")],Ke);const po=Ke;let Be=class extends v{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(e,i){return e.spatialReference||(e={...e,spatialReference:i.Shape.spatialReference}),F.fromJSON(e)}};s([o({types:Y,json:{name:"Shape",read:se,write:!0}})],Be.prototype,"geometry",void 0),s([o({json:{name:"Length",write:!0}})],Be.prototype,"length",void 0),s([o({json:{name:"Area",write:!0}})],Be.prototype,"area",void 0),s([o({type:F,json:{name:"Center",write:!0}})],Be.prototype,"center",void 0),s([L("center")],Be.prototype,"readCenter",null),Be=s([w("esri.rest.support.MeasureAreaFromImageResult")],Be);const co=Be;var Di;let rt=Di=class extends v{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(e,i,n){e!=null&&(i.geometryType=ne(e),i[n]={...e.toJSON(),spatialReference:void 0})}clone(){const e=D({geometry:this.geometry,rasterId:this.rasterId});return new Di(e)}};s([o({types:Y,json:{name:"fromGeometry",read:se,write:!0}})],rt.prototype,"geometry",void 0),s([x("geometry")],rt.prototype,"writeGeometry",null),s([o({json:{write:!0}})],rt.prototype,"rasterId",void 0),rt=Di=s([w("esri.rest.support.MeasureFromImageParameters")],rt);const mo=rt;let ht=class extends v{constructor(){super(...arguments),this.geometry=null,this.length=null}};s([o({types:Y,json:{name:"Shape",read:se,write:!0}})],ht.prototype,"geometry",void 0),s([o({json:{name:"Length",write:!0}})],ht.prototype,"length",void 0),ht=s([w("esri.rest.support.MeasureLengthFromImageResult")],ht);const yo=ht;function Pi(e){const i=e?.time;if(i&&(i.start!=null||i.end!=null)){const n=[];i.start!=null&&n.push(i.start),i.end==null||n.includes(i.end)||n.push(i.end),e.time=n.join(",")}}async function br(e,i,n){i=_(Wn,i);const t=V(e),r=i.geometry?[i.geometry]:[],a=await Je(r),l=i.toJSON();Pi(l);const u=a?.[0];u!=null&&(l.geometry=Me(u));const p=k({...t.query,f:"json",...l});return J(p,n)}async function ho(e,i,n){const t=(i=_(ao,i)).toJSON();t.geometries=JSON.stringify(t.geometries);const r=V(e),a=k({...r.query,f:"json",...t}),l=J(a,n),{data:u}=await S(`${r.path}/calculateVolume`,l);return uo.fromJSON({volumes:u.results})}async function go(e,i,n){const t=(i=_(Pn,i)).toJSON();t.angleName!=null&&(t.angleName=t.angleName.join(",")),i?.point?.spatialReference?.imageCoordinateSystem&&(t.point.spatialReference=$t(i.point.spatialReference)),i?.spatialReference?.imageCoordinateSystem&&(t.spatialReference=at(i.spatialReference));const r=V(e),a=k({...r.query,f:"json",...t}),l=J(a,n),{data:u}=await S(`${r.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new he({wkid:0,imageCoordinateSystem:u.spatialReference}):he.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new zn(u)}async function fo(e,i,n){const t=(i=_(Kn,i)).toJSON(),{geometries:r}=i;if(r)for(let c=0;c<r.length;c++)r[c].spatialReference?.imageCoordinateSystem&&(t.geometries.geometries[c].spatialReference=$t(r[c].spatialReference));const a=V(e),l=k({...a.query,f:"json",...t}),u=J(l,n),{data:p}=await S(`${a.path}/computePixelLocation`,u);return $n.fromJSON(p)}async function wo(e,i,n){const t=await br(e,i,n),r=V(e),{data:a}=await S(`${r.path}/computeStatisticsHistograms`,t),{statistics:l}=a;return l?.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:a.histograms}}async function Io(e,i,n){const t=await br(e,i,n),r=V(e),{data:a}=await S(`${r.path}/computeHistograms`,t);return{histograms:a.histograms}}async function Mo(e,i,n){const t=(i=_(eo,i)).toJSON();Pi(t),t.outFields?.length&&(t.outFields=t.outFields.join(","));const r=await Je(i.geometry),a=r?.[0];a!=null&&(t.geometry=Me(a));const l=V(e),u=k({...l.query,f:"json",...t}),p=J(u,n),{data:c}=await S(`${l.path}/getSamples`,p),m=c.samples.map(d=>{const f=d.value==="NaN"||d.value===""?null:d.value.split(" ").map(h=>Number(h));return{...d,pixelValue:f}});return io.fromJSON({samples:m})}async function qi(e,i,n){i=_(vr,i);const t=V(e),r=i.geometry?[i.geometry]:[];return Je(r).then(a=>{const l=i.toJSON(),u=a?.[0];u!=null&&(l.geometry=JSON.stringify(Me(u)));const p=k({...t.query,f:"json",...l}),c=J(p,n);return S(t.path+"/identify",c)}).then(a=>Qn.fromJSON(a.data))}async function vo(e,i,n){i=_(Gn,i);const t=await Kt(e,i,[i.fromGeometry,i.toGeometry],n);return qn.fromJSON(t)}async function bo(e,i,n){i=_(On,i);const t=await Kt(e,i,[i.geometry],n);return Bn.fromJSON(t)}async function So(e,i,n){i=_(Xn,i);const t=await Kt(e,i,[i.geometry],n);return Yn.fromJSON(t)}async function Ro(e,i,n){i=_(Hn,i);const t=await Kt(e,i,[i.fromGeometry,i.toGeometry],n);return Vn.fromJSON(t)}async function Kt(e,i,n,t){const r=V(e),a=await Je(n),l=i.toJSON();a[0]!=null&&(l.fromGeometry=JSON.stringify(Me(a[0]))),a[1]!=null&&(l.toGeometry=JSON.stringify(Me(a[1])));const u=k({...r.query,f:"json",...l}),p=J(u,t),{data:c}=await S(r.path+"/measure",p);return c}async function Do(e,i,n){const t=await Sr(e,i,n);return yo.fromJSON(t)}async function Ao(e,i,n){const t=await Sr(e,i,n);return co.fromJSON(t)}async function Sr(e,i,n){i=_(mo,i);const t=V(e),r=i.toJSON(),a=k({...t.query,f:"json",...r}),l=J(a,n),{data:u}=await S(t.path+"/measureFromImage",l);return u}function Me(e){const i=e.toJSON();return e.spatialReference?.imageCoordinateSystem&&(i.spatialReference=$t(e.spatialReference)),i}function $t(e){const{imageCoordinateSystem:i}=e;if(i){const{id:n,referenceServiceName:t}=i;return n!=null?t?{icsid:n,icsns:t}:{icsid:n}:{ics:i}}return e.toJSON()}function at(e,i){if(!e.imageCoordinateSystem)return oi(e);const n=$t(e),{icsid:t,icsns:r}=n;return t==null||r!=null&&!i?.toLowerCase().includes("/"+r.toLowerCase()+"/")?JSON.stringify(n):`0:${t}`}async function xo(e,i,n){i=_(Un,i);const t=V(e),r=i.toJSON();i.outSpatialReference&&(r.outSR=at(i.outSpatialReference));const a=k({...t.query,f:"json",...r}),l=J(a,n),{data:u}=await S(t.path+"/queryBoundary",l);return _n.fromJSON(u)}async function jo(e,i,n){const t=(i=_(En,i)).toJSON();Pi(t),t.objectIds?.length&&(t.objectIds=t.objectIds.join(",")),t.geometry||t.objectIds||t.time||t.where||(t.where="1=1");const r=await Je(i.geometry),a=r?.[0];a!=null&&(t.geometry=Me(a));const l=a?.spatialReference??i.geometry?.spatialReference;l&&(t.inSR=at(l));const u=V(e),p=k({...u.query,f:"json",...t}),c=J(p,n),{data:m}=await S(`${u.path}/queryGPSInfo`,c);return Zn.fromJSON(m)}async function To(e,i,n){const t=(i=_(so,i)).toJSON();i.geometry.spatialReference.imageCoordinateSystem&&(t.geometry=Me(i.geometry)),i.depthOffset&&i.adjust||delete t.options;const r=V(e),a=k({...r.query,f:"json",...t}),l=J(a,n),{data:u}=await S(`${r.path}/imageToMap`,l);return se(u)}async function Co(e,i,n){const t=(i=_(ro,i)).toJSON();i.rasterIds?.length&&(t.rasterIds=i.rasterIds.join(","));const r=V(e),a=k({...r.query,f:"json",...t}),l=J(a,n),{data:u}=await S(`${r.path}/imageToMapMultiray`,l);return se(u)}async function No(e,i,n){const t=(i=_(po,i)).toJSON(),r=await Je(i.geometry),a=r?.[0];a!=null&&(t.geometry=Me(a)),i.visibleOnly||delete t.options;const l=a?.spatialReference??i.geometry?.spatialReference;l&&(t.inSR=at(l));const u=V(e),p=k({...u.query,f:"json",...t}),c=J(p,n),{data:m}=await S(`${u.path}/mapToImage`,c);return se(m)}async function Fo(e,i,n){const t=(i=_(no,i)).toJSON(),r=V(e),a=k({...r.query,f:"json",...t}),l=J(a,n),{data:u}=await S(`${r.path}/getImageUrl`,l);return oo.fromJSON(u)}async function Lo(e,i,n){const t=(i=_(Nn,i)).toJSON(),r=await Je([i.fromGeometry,i.toGeometry]);r[0]!=null&&(t.fromGeometry=Me(r[0]),r[0].spatialReference&&(t.inSR=at(r[0].spatialReference))),r[1]!=null&&(t.toGeometry=Me(r[1])),i.objectIds?.length&&(t.objectIds=t.objectIds.join(","));const a=V(e),l=k({...a.query,f:"json",...t}),u=J(l,n),{data:p}=await S(`${a.path}/find`,u);return Ln.fromJSON(p)}async function Rr(e,i,n){const t=V(e),{rasterFunction:r,sourceJSON:a}=i||{},l=r?JSON.stringify(r.rasterFunctionDefinition||r):null,u=k({...t.query,renderingRule:l,f:"json"}),p=J(u,n);e=t.path;const c=a||await S(e,p).then($=>$.data),m=c.hasRasterAttributeTable?S(`${e}/rasterAttributeTable`,p):null,d=c.hasColormap?S(`${e}/colormap`,p):null,f=c.hasHistograms?S(`${e}/histograms`,p):null,h=c.currentVersion>=10.3?S(`${e}/keyProperties`,p):null,g=c.hasMultidimensions?S(`${e}/multidimensionalInfo`,p):null,y=await Promise.allSettled([m,d,f,h,g]);let I=null;if(c.minValues&&c.minValues.length===c.bandCount){I=[];for(let $=0;$<c.minValues.length;$++)I.push({min:c.minValues[$],max:c.maxValues[$],avg:c.meanValues[$],stddev:c.stdvValues[$]})}const M=He.fromJSON(c.extent),R=Math.ceil(M.width/c.pixelSizeX-.1),N=Math.ceil(M.height/c.pixelSizeY-.1),P=he.fromJSON(c.spatialReference||c.extent.spatialReference),T=y[0].status==="fulfilled"?y[0].value?.data:null,C=T?.features?.length?Ci.fromJSON(T):null,z=y[1].status==="fulfilled"?y[1].value?.data.colormap:null,K=z?.length?z:null,Le=y[2].status==="fulfilled"?y[2].value?.data.histograms:null,be=Le?.[0]?.counts?.length?Le:null,le=y[3].status==="fulfilled"?y[3].value?.data??{}:{},ee=y[4].status==="fulfilled"?y[4].value?.data.multidimensionalInfo:null,ue=ee?.variables?.length?ee:null;ue&&ue.variables.forEach($=>{$.statistics?.length&&$.statistics.forEach(Re=>{Re.avg=Re.mean,Re.stddev=Re.standardDeviation}),$.dimensions?.forEach(Re=>{Re.name!=="StdTime"||Re.recurring||Re.unit||(Re.unit="ISO8601")})});const{defaultVariable:Se,serviceDataType:oe}=c;Se&&Se!==le.DefaultVariable&&(le.DefaultVariable=Se),oe?.includes("esriImageServiceDataTypeVector")&&!oe.includes(le.DataType)&&(le.DataType=oe.replace("esriImageServiceDataType",""));let A=c.noDataValue;c.noDataValues?.length&&c.noDataValues.some($=>$!==A)&&(A=c.noDataValues);const Dr=c.transposeInfo?new er({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new F({x:c.extent.xmin,y:c.extent.ymax,spatialReference:P}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max(R,N))/Math.LN2-8)),transposeInfo:c.transposeInfo}):void 0;return new ji({width:R,height:N,bandCount:c.bandCount,extent:He.fromJSON(c.extent),spatialReference:P,pixelSize:new F({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:P}),pixelType:c.pixelType.toLowerCase(),statistics:I,attributeTable:C,colormap:K,histograms:be,keyProperties:le,noDataValue:A,multidimensionalInfo:ue,storageInfo:Dr})}function Wi(e,i,n){return Rr(e,{sourceJSON:i},n)}function Po(e,i,n){return Rr(e,{rasterFunction:i},n)}function zo(e,i){e.attributeTable||(i.hasRasterAttributeTable=!1),e.histograms||(i.hasHistograms=!1),e.colormap||(i.hasColormap=!1),e.multidimensionalInfo||(i.hasMultidimensions=!1)}async function Oo(e,i,n){const t=V(e),r=k({...t?.query,f:"json"}),a=J(r,n),l=`${t?.path}/${i}/info`,u=S(`${l}`,a),p=S(`${l}/keyProperties`,a),c=await Promise.allSettled([u,p]),m=c[0].status==="fulfilled"?c[0].value.data:null,d=c[1].status==="fulfilled"?c[1].value.data:null;let f=null;m.statistics?.length&&(f=m.statistics.map(P=>({min:P[0],max:P[1],avg:P[2],stddev:P[3]})));const h=He.fromJSON(m.extent),g=Math.ceil(h.width/m.pixelSizeX-.1),y=Math.ceil(h.height/m.pixelSizeY-.1),I=h.spatialReference,M=new F({x:m.pixelSizeX,y:m.pixelSizeY,spatialReference:I}),R=m.histograms?.length?m.histograms:null,N=new er({origin:m.origin,blockWidth:m.blockWidth,blockHeight:m.blockHeight,firstPyramidLevel:m.firstPyramidLevel,maximumPyramidLevel:m.maxPyramidLevel});return new ji({width:g,height:y,bandCount:m.bandCount,extent:h,spatialReference:I,pixelSize:M,pixelType:m.pixelType.toLowerCase(),statistics:f,histograms:R,keyProperties:d,storageInfo:N})}const Bo=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Uo=_r(Hr,{min:0,max:255});function _o(e){const i=JSON.stringify(e),n=i.includes('"rasterFunctionDefinition":{'),t=n?i.match(/"type":"(.*?FunctionArguments")/gi):i.match(/"rasterFunction":"(.*?")/gi),r=t?.map(a=>n?a.slice(8,-18):a.slice(18,-1));return r?r.join("/"):null}const Ho=e=>{let i=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new B({layer:this}))}readServiceSupportsMosaicRule(t,r){return this._isMosaicRuleSupported(r)}get _rasterFunctionNamesIndex(){const t=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(r=>{t.set(r.name.toLowerCase().replaceAll(/ /gi,"_"),r.name)}),t}readBandIds(t,r){if(Array.isArray(t)&&t.length>0&&t.every(a=>typeof a=="number"))return t}readCapabilities(t,r){return this._readCapabilities(r)}writeCompressionQuality(t,r,a){t!=null&&this.format!=="lerc"&&(r[a]=t)}writeCompressionTolerance(t,r,a){this.format==="lerc"&&t!=null&&(r[a]=t)}readDefaultMosaicRule(t,r){return this._serviceSupportsMosaicRule?re.fromJSON(r):null}get fieldsIndex(){return this.fields?new Ms(this.fields):null}set format(t){t&&Bo.has(t.toLowerCase())&&this._set("format",t.toLowerCase())}readFormat(t,r){return r.serviceDataType==="esriImageServiceDataTypeVector-UV"||r.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(t,r){return r.minLOD!=null&&r.maxLOD!=null?t:0}readMaxScale(t,r){return r.minLOD!=null&&r.maxLOD!=null?t:0}set mosaicRule(t){let r=t;r?.mosaicMethod&&(r=re.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}readMosaicRule(t,r){const a=t||r.mosaicRule;return a?re.fromJSON(a):this._isMosaicRuleSupported(r)?re.fromJSON(r):null}writeMosaicRule(t,r,a){const{mosaicRule:l}=this;this._isValidCustomizedMosaicRule(l)&&(r[a]=l.toJSON())}writeNoData(t,r,a){t!=null&&typeof t=="number"&&(r[a]=Uo(t))}readObjectIdField(t,r){return t||(t=r.fields.find(a=>a.type==="esriFieldTypeOID"||a.type==="oid")?.name),t}get parsedUrl(){return Br(this.url)}readSourceType(t,r){return this._isMosaicDataset(r)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:t,presetRenderers:r}=this;return t?r?.find(({name:a})=>a===t)?.renderer.clone():this.internalRenderer}set renderer(t){this.activePresetRendererName=null,this.internalRenderer=t}set internalRenderer(t){this.loaded&&(t=this._configRenderer(t)),this._set("internalRenderer",t)}readRenderer(t,r,a){const l=r?.layerDefinition?.drawingInfo?.renderer,u=Cn(l,a);return u==null?null:(u.type==="vector-field"&&r.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=r.symbolTileSize),pr(u)||ni.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(t,r,a){r.layerDefinition=r.layerDefinition||{},r.layerDefinition.drawingInfo=r.layerDefinition.drawingInfo||{},r.layerDefinition.drawingInfo.renderer=t.toJSON(),t.type==="vector-field"&&(r.symbolTileSize=t.symbolTileSize)}get rasterFields(){const t=this.fields?.map(l=>l.clone())??[];t.push($r()),this.sourceType==="mosaic-dataset"&&this.fields?.length&&t.push(Xr()),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(({name:l})=>l.toLowerCase()==="none")&&t.push(Yr()),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(({name:l})=>l.toLowerCase()!=="none").forEach(({name:l})=>t.push(es(l)));const{rasterInfo:r}=this;if(this._isVectorDataSet()){const l=r?.multidimensionalInfo?.variables[0].unit?.trim(),u=ts(l),p=is();t.push(u,p)}if(r?.multidimensionalInfo&&this.sourceType==="raster-dataset"){const l=rs(r.multidimensionalInfo);t.push(...l)}const a=r?.attributeTable;if(a!=null){const l=ss(a);t.push(...l)}return t}set rasterFunction(t){let r=t;r?.rasterFunction&&(r=j.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}readRasterFunction(t,r){const a=r.rasterFunctionInfos;return r.renderingRule||a?.length&&a[0].name!=="None"?this._isRFTJson(r.renderingRule)?j.fromJSON({rasterFunctionDefinition:r.renderingRule}):j.fromJSON(r.renderingRule||{rasterFunctionInfos:r.rasterFunctionInfos}):null}readSpatialReference(t,r){const a=t||r.extent.spatialReference;return a?he.fromJSON(a):null}writePixelType(t,r,a){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(r[a]=we.toJSON(t))}readVersion(t,r){let a=r.currentVersion;return a||(a=r.hasOwnProperty("fields")||r.hasOwnProperty("timeInfo")?10:9.3),a}applyFilter(t){let r=t;return this.pixelFilter&&(r=this._clonePixelData(t),this.pixelFilter(r)),r}async applyRenderer(t,r){let a=t;const{renderer:l,symbolizer:u,pixelFilter:p,bandIds:c}=this;if(!this._isPicture()&&l&&u&&!p){const m=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(l.toJSON()),d=this._rasterJobHandler.instance;if(d){m&&(u.bind(),await d.updateSymbolizer(u,r),this._cachedRendererJson=l.toJSON());const f=await d.symbolize({bandIds:c,...t},r);a={extent:t.extent,pixelBlock:f}}else a={extent:t.extent,pixelBlock:u.symbolize({bandIds:c,...t})}}return a}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async calculateVolume(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsCalculateVolume)throw new b("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return t=D(t),this.mosaicRule&&t.mosaicRule==null&&(t.mosaicRule=this.mosaicRule),ho(this.url,t,this._getRequestOptions(r))}async computeAngles(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeAngles)throw new b("imagery-layer:compute-angles","this operation is not supported on the input image service");return go(this.url,t,this._getRequestOptions(r))}async computePixelSpaceLocations(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputePixelLocation)throw new b("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return fo(this.url,t,this._getRequestOptions(r))}async computeHistograms(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeHistograms)throw new b("imagery-layer:compute-histograms","this operation is not supported on the input image service");return t=D(t),this._applyMosaicAndRenderingRules(t),Io(this.url,t,this._getRequestOptions(r))}async computeStatisticsHistograms(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsComputeStatisticsHistograms)throw new b("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return t=D(t),this._applyMosaicAndRenderingRules(t),wo(this.url,t,this._getRequestOptions(r))}async measureHeight(t,r){const a=await this._fetchCapabilities(r?.signal);if(!(t.operationType==="base-and-top"?a.mensuration.supportsHeightFromBaseAndTop:t.operationType==="base-and-top-shadow"?a.mensuration.supportsHeightFromBaseAndTopShadow:a.mensuration.supportsHeightFromTopAndTopShadow))throw new b("imagery-layer:measure-height","this operation is not supported on the input image service");return t=D(t),this._applyMosaicRule(t),vo(this.url,t,this._getRequestOptions(r))}async measureAreaAndPerimeter(t,r){const a=await this._fetchCapabilities(r?.signal);if(!(a.mensuration.supportsAreaAndPerimeter&&(!t.is3D||a.mensuration.supports3D)))throw new b("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return t=D(t),this._applyMosaicRule(t),bo(this.url,t,this._getRequestOptions(r))}async measureDistanceAndAngle(t,r){const a=await this._fetchCapabilities(r?.signal);if(!(a.mensuration.supportsDistanceAndAngle&&(!t.is3D||a.mensuration.supports3D)))throw new b("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return t=D(t),this._applyMosaicRule(t),Ro(this.url,t,this._getRequestOptions(r))}async measurePointOrCentroid(t,r){const a=await this._fetchCapabilities(r?.signal);if(!(a.mensuration.supportsPointOrCentroid&&(!t.is3D||a.mensuration.supports3D)))throw new b("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return t=D(t),this._applyMosaicRule(t),So(this.url,t,this._getRequestOptions(r))}async measureLengthFromImage(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(t.geometry.type!=="polyline")throw new b("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return Do(this.url,t,this._getRequestOptions(r))}async measureAreaFromImage(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMeasureFromImage)throw new b("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(t.geometry.type!=="polygon")throw new b("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return Ao(this.url,t,this._getRequestOptions(r))}getField(t){const{fieldsIndex:r}=this;return r?.get(t)}getFieldDomain(t,r){const a=this.getField(t);return a?a.domain:null}async fetchImage(t,r,a,l={}){if(t==null||r==null||a==null)throw new b("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:l.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(t,r,a,l.timeExtent);if(u==null){if(l.requestAsImageElement&&this._canRequestImageElement(this.format)){const M=document.createElement("canvas");return M.width=r,M.height=a,l.returnImageBitmap?{imageBitmap:await Bi(M,`${n(this.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:M}}const{bandIds:d,rasterInfo:f}=this,h=(d?.length||f.bandCount)??0,g=r*a,y=f.pixelType,I=[];for(let M=0;M<h;M++)I.push(ye.createEmptyBand(y,g));return{pixelData:{pixelBlock:new ye({width:r,height:a,pixels:I,mask:new Uint8Array(g),pixelType:y}),extent:t}}}const p=!!l.requestAsImageElement&&!this.pixelFilter,c=p&&!!l.returnImageBitmap,m={imageServiceParameters:u,imageProps:{extent:t,width:r,height:a,format:this.format},requestAsImageElement:p,returnImageBitmap:c,signal:l.signal};return this._requestArrayBuffer(m)}fetchKeyProperties(t){return S(n(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?t?.rasterFunction:null})}).then(r=>r.data)}fetchRasterAttributeTable(t){return this.version<10.1?Promise.reject(new b("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):S(n(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?t?.rasterFunction:null})}).then(r=>Ci.fromJSON(r.data))}getCatalogItemRasterInfo(t,r){const a={...r,query:this._getQueryParams()};return Oo(n(this.parsedUrl),t,a)}async getCatalogItemICSInfo(t,r){const{data:a}=await S(n(this.parsedUrl)+"/"+t+"/info/ics",{query:this._getQueryParams(),...r}),l=a?.ics;if(!l)return;let u=null;try{u=(await S(n(this.parsedUrl)+"/"+t+"/info",{query:this._getQueryParams(),...r})).data.extent}catch{}if(!u?.spatialReference)return{ics:l,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?S(n(this.parsedUrl)+"/"+t+"/info/icstopixel",{query:this._getQueryParams(),...r}).then(A=>A.data).catch(()=>({})):{},c=u.spatialReference,m={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:oi(c),outSR:"0:"+t},d=S(n(this.parsedUrl)+"/project",{query:this._getQueryParams(m),...r}).then(A=>A.data).catch(()=>({})),f=5,h=(u.xmin+u.xmax)/2,g=(u.ymax-u.ymin)/(f+1),y=u.ymin+g,I=[];for(let A=0;A<f;A++)I.push({x:h,y:y+g*A});const M={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:I}),inSR:oi(c),outSR:"0:"+t},R=S(n(this.parsedUrl)+"/project",{query:this._getQueryParams(M),...r}).then(A=>A.data).catch(()=>({})),N=await Promise.all([p,d,R]);let P=N[0].ipxf;if(P==null){const A=l.geodataXform?.xf_0;A?.name?.toLowerCase()==="topup"&&A?.coefficients?.length===6&&(P={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:A.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const T=He.fromJSON(N[1]?.geometries?.[0]);T&&(T.spatialReference=new he({wkid:0,imageCoordinateSystem:l}));const C=N[2].geometries?N[2].geometries.filter(A=>A?.x!=null&&A.y!=null&&A.x!=="NaN"&&A.y!=="NaN"):[],z=C.length;if(z<3)return{ics:l,icsToPixelTransform:P,icsExtent:T,northDirection:null};let K=0,Le=0,be=0,le=0;for(let A=0;A<z;A++)K+=C[A].x,Le+=C[A].y,be+=C[A].x*C[A].x,le+=C[A].x*C[A].y;const ee=(z*le-K*Le)/(z*be-K*K);let ue=0;const Se=C[f-1].x>C[0].x,oe=C[f-1].y>C[0].y;return ee===1/0?ue=oe?90:270:ee===0?ue=Se?0:180:ee>0?ue=Se?180*Math.atan(ee)/Math.PI:180*Math.atan(ee)/Math.PI+180:ee<0&&(ue=oe?180+180*Math.atan(ee)/Math.PI:360+180*Math.atan(ee)/Math.PI),{ics:l,icsToPixelTransform:P,icsExtent:T,northDirection:ue}}async generateRasterInfo(t,r){t=_(j,t);const a={...r,query:this._getQueryParams()};if(!t||t.functionName?.toLowerCase()==="none"||this._isVectorFieldResampleFunction(t))return this.serviceRasterInfo??Wi(n(this.parsedUrl),this.sourceJSON,a);const l=_o(t);if(!l)throw new b("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[l])return this._functionRasterInfos[l];const u=Po(n(this.parsedUrl),t,a);this._functionRasterInfos[l]=u;try{return await u}catch(p){throw this._functionRasterInfos[l]=null,p}}getExportImageServiceParameters(t,r,a,l){t=t.clone().shiftCentralMeridian();const u=at(t.spatialReference,n(this.parsedUrl)),p=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:m}=p;let{renderingRule:d}=p;const f=this.rasterFunction?.rasterFunctionDefinition,h=this.renderer?.type,g=!h||h==="raster-stretch"||h==="raster-colormap"||h==="unique-value"||h==="class-breaks"||h==="raster-shaded-relief";if(c?.length&&this._hasRasterFunction(this.rasterFunction)&&!f&&g){const M={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if(d.rasterFunction==="Stretch")M.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=M;else if(d.rasterFunction==="Colormap"){const R=d.rasterFunctionArguments.Raster;R?.rasterFunction==="Stretch"?(M.rasterFunctionArguments.Raster=R.rasterFunctionArguments.Raster,R.rasterFunctionArguments.Raster=M):(M.rasterFunctionArguments.Raster=R,d.rasterFunctionArguments.Raster=M)}else M.rasterFunctionArguments.Raster=d,d=M;p.bandIds=void 0}else p.bandIds=c?.join(",");Array.isArray(m)&&m.length>0&&(p.noData=m.join(","));const y=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(y.isOutSide)return null;p.mosaicRule=y.mosaicRule!=null?JSON.stringify(y.mosaicRule):null,l=y.timeExtent,p.renderingRule=this._getRenderingRuleString(j.fromJSON(d));const I={};if(l!=null){const{start:M,end:R}=l.toJSON();M&&R&&M===R?I.time=""+M:M==null&&R==null||(I.time=`${M??"null"},${R??"null"}`)}return{bbox:t.xmin+","+t.ymin+","+t.xmax+","+t.ymax,bboxSR:u,imageSR:u,size:r+","+a,...p,...I}}async getSamples(t,r){if(!(await this._fetchCapabilities(r?.signal))?.operations.supportsGetSamples)throw new b("imagery-layer:get-samples","getSamples operation is not supported on the input image service");t=D(t);const{raster:a}=this;return a&&t.raster==null&&(t.raster=a),Mo(this.url,t,this._getRequestOptions(r))}async identify(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsIdentify)throw new b("imagery-layer:identify","identify operation is not supported on the input image service");t=D(t),this.version<10.91&&t.geometry?.type==="extent"&&(t.geometry=Ht.fromExtent(t.geometry));const a=this._processMultidimensionalIntersection(t.geometry,t.timeExtent,t.mosaicRule||this.mosaicRule);if(a.isOutSide)throw new b("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");t.timeExtent=a.timeExtent,t.mosaicRule=a.mosaicRule;const{raster:l,rasterFunction:u}=this;return u&&t.rasterFunction==null&&(t.rasterFunction=u),l&&t.raster==null&&(t.raster=l),qi(this.url,t,this._getRequestOptions(r))}async imageToMap(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsImageToMap)throw new b("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return To(n(this.parsedUrl),t,this._getRequestOptions(r))}async imageToMapMultiray(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsImageToMapMultiray)throw new b("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return Co(n(this.parsedUrl),t,this._getRequestOptions(r))}async mapToImage(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsMapToImage)throw new b("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return No(n(this.parsedUrl),t,this._getRequestOptions(r))}async findImages(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsFindImages)throw new b("imagery-layer:find-images","findImages operation is not supported on the input image service");return Lo(n(this.parsedUrl),t,this._getRequestOptions(r))}async getImageUrl(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsGetImageUrl)throw new b("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return Fo(n(this.parsedUrl),t,this._getRequestOptions(r))}createQuery(){return new ti({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQueryBoundary)throw new b("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return t=t??{outSpatialReference:this.spatialReference},xo(n(this.parsedUrl),t,this._getRequestOptions(r))}async queryRasters(t,r){return{query:t,requestOptions:r}=await this._prepareForQuery(t,r),zs(this.url,t,r)}async queryObjectIds(t,r){return{query:t,requestOptions:r}=await this._prepareForQuery(t,r),Ls(this.url,t,r)}async queryGPSInfo(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQueryGPSInfo)throw new b("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return t=t??{where:"1=1"},jo(n(this.parsedUrl),t,this._getRequestOptions(r))}async queryRasterCount(t,r){return{query:t,requestOptions:r}=await this._prepareForQuery(t,r),Ps(this.url,t,r)}async queryVisibleRasters(t,r){if(!t)throw new b("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:a,returnDomainValues:l,returnTopmostRaster:u,showNoDataRecords:p}=r||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let c=!1,m=null,d=null;const f=$e.servicePixelValue.toLowerCase(),h=this._rasterFunctionNamesIndex;if(t.outFields!=null&&(c=t.outFields.some(T=>!T.toLowerCase().startsWith(f)),this.version>=10.4)){const T=t.outFields.filter(z=>z.toLowerCase().startsWith(f)&&z.length>f.length).map(z=>{const K=z.slice(f.length+1);return[this._updateRenderingRulesFunctionName(K,h),K]});m=T.map(z=>new j({functionName:z[0]})),d=T.map(z=>z[1]);const{rasterFunction:C}=this;m.length===0?C?.functionName?(m.push(C),d.push(C.functionName)):m=null:C?.functionName&&!m.some(z=>z.functionName===C.functionName)&&(m.push(C),d.push(C.functionName))}const g=t.outSpatialReference==null||t.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:y}=this;let I=t.timeExtent||this.timeExtent;if(y){const{isOutside:T,intersection:C}=ei(y,{geometry:t.geometry,timeExtent:t.timeExtent,multidimensionalDefinition:this.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(T)throw new b("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");C?.timeExtent!=null&&(I=C.timeExtent)}const M=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,I);let R=t.geometry;this.version<10.91&&R?.type==="extent"&&(R=Ht.fromExtent(R));const N=this._getQueryParams({geometry:R,timeExtent:I,mosaicRule:M,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:m,pixelSize:a,returnCatalogItems:c,returnGeometry:g,raster:this.raster,maxItemCount:u?1:null});delete N.f;const P=new vr(N);try{await this._generateRasterInfo(this.rasterFunction);const T=await qi(this.url,P,{signal:r?.signal,query:{...this.customParameters}}),C=t.outFields,z=T.value!=null&&T.value.toLowerCase().includes("nodata"),K=c&&!g&&T?.catalogItems?.features.length&&(p||!z),Le=this.multidimensionalInfo&&this.sourceType==="raster-dataset"?ns({rasterInfo:this.rasterInfo,multidimensionalDefinition:M?.multidimensionalDefinition,timeExtent:I,multidimensionalSubset:this.multidimensionalSubset}):null;if(!K)return this._processVisibleRastersResponse(T,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:C,effectiveMultidimensionalDefinition:Le});const be=this.objectIdField||"ObjectId",le=T.catalogItems?.features??[],ee=le.map(oe=>oe.attributes?.[be]),ue=new ti({objectIds:ee,returnGeometry:!0,outSpatialReference:t.outSpatialReference,outFields:[be]}),Se=await this.queryRasters(ue);return Se?.features?.length&&Se.features.forEach(oe=>{le.forEach(A=>{A.attributes[be]===oe.attributes[be]&&oe.geometry&&(A.geometry=oe.geometry.clone(),t.outSpatialReference!=null&&(A.geometry.spatialReference=t.outSpatialReference))})}),this._processVisibleRastersResponse(T,{returnDomainValues:l,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:C,effectiveMultidimensionalDefinition:Le})}catch{throw new b("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(t,r){const a=S(n(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:t}),signal:r}).then(p=>p.data?.statistics),l=S(n(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:t}),signal:r}).then(p=>p.data?.histograms),u=await Promise.all([a,l]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(t,r){const a=this._rasterJobHandler.instance;return a?a.createFlowMesh(t,r):Rs(t.meshType,t.simulationSettings,t.flowData,r.signal!=null?r.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(t){const r=t??this.serviceRasterInfo.multidimensionalInfo;return os(this.multidimensionalSubset,r)}async _fetchService(t){await this._fetchServiceInfo(t),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const r=this.sourceJSON,a=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Wi(n(this.parsedUrl),r,{signal:t,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),zo(p,r),p)),l=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:t}):null,u=this._getRasterFunctionInfos();return Promise.all([a,l,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),ni.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([Ur(()=>this.rasterFunction,m=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(m).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:c}=this;c.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(c)})}_combineMosaicRuleWithTimeExtent(t,r){const a=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(t==null||l==null||r==null||a?.startField==null)return t;const{startField:u}=a,p=l.variables.some(y=>y.dimensions.some(I=>I.name===u))?u:"StdTime";if(t=t.clone(),this.sourceType==="mosaic-dataset")return t.multidimensionalDefinition=t.multidimensionalDefinition?.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(t);t.multidimensionalDefinition=t.multidimensionalDefinition||[];const c=t.multidimensionalDefinition.filter(y=>y.dimensionName===p),m=r.start!=null?r.start.getTime():null,d=r.end!=null?r.end.getTime():null,f=m==null||d==null||m===d,h=f?[m||d]:[[m,d]],g=this.version>=10.8;if(c.length)c.forEach(y=>{y.dimensionName===p&&(g?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=f,y.values=h))});else if(!g){const y=t.multidimensionalDefinition.filter(I=>I.variableName!=null&&I.dimensionName==null);y.length?y.forEach(I=>{I.dimensionName=p,I.isSlice=f,I.values=h}):t.multidimensionalDefinition.push(new Ai({variableName:"",dimensionName:p,isSlice:f,values:h}))}return this._cleanupMultidimensionalDefinition(t)}_cleanupMultidimensionalDefinition(t){return t==null?null:(t.multidimensionalDefinition&&(t.multidimensionalDefinition=t.multidimensionalDefinition.filter(r=>!(!r.variableName&&!r.dimensionName)),t.multidimensionalDefinition.length===0&&(t.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&t.multidimensionalDefinition==null?null:t)}async _prepareForQuery(t,r){if(!(await this._fetchCapabilities(r?.signal)).operations.supportsQuery)throw new b("imagery-layer:query-rasters","query operation is not supported on the input image service");return t=t!=null?_(ti,t):this.createQuery(),r=this._getRequestOptions(r),this.raster&&(r.query={...r.query,raster:this.raster}),{query:t,requestOptions:r}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const t=new mn;this._rasterJobHandler.connectionPromise=t.initialize().then(()=>{this._rasterJobHandler.instance=t},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(t){const{rasterInfo:r,rasterFunction:a}=this;return t.type==="unique-value"&&this._hasRasterFunction(a)&&r?.bandCount===1&&["u8","s8"].includes(r.pixelType)||r!=null&&t!=null&&fn(r).includes(t.type)}async _fetchCapabilities(t){return this.capabilities||await this._fetchServiceInfo(t),this.capabilities}async _fetchServiceInfo(t){let r=this.sourceJSON;if(!r){const{data:a,ssl:l}=await S(n(this.parsedUrl),{query:this._getQueryParams(),signal:t});r=a,this.sourceJSON=r,l&&(this.url=this.url.replace(/^http:/i,"https:"))}if(r.capabilities?.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly")>-1)throw new b("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(t){return t.serviceSourceType?t.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":t.fields?.length>0}_isMosaicRuleSupported(t){if(!t)return!1;const r=this._isMosaicDataset(t),a=t.currentVersion>=10.71&&t.hasMultidimensions&&!(t.fields?.length>1);return r||a}_isVectorFieldResampleFunction(t){if(t==null)return!1;const{functionName:r,functionArguments:a}=t,l=r?.toLowerCase()==="resample",u=a?.ResampleType||a?.resampleType;return l&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(t){const r=this._isPicture(),{rasterInfo:a}=this;if(!r&&!this.pixelFilter||this._isVectorDataSet()){const l=this.mosaicRule?.multidimensionalDefinition?.[0].variableName,u=hn({variableName:l,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&a.bandCount>=3){const c=u?.bandIds??wr(a);!c||a.bandCount===3&&c[0]===0&&c[1]===1&&c[2]===2||(this.bandIds=c)}t||(t=u?.renderer??gn(a,{bandIds:this.bandIds,variableName:this.rasterFunction?null:l}));const p=An(t.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=p,this.symbolizer.rasterInfo=a):this.symbolizer=new ys({rendererJSON:p,rasterInfo:a}),this.symbolizer.bind().success||(this.symbolizer=null)}return t}_clonePixelData(t){return t==null?t:{extent:t.extent&&t.extent.clone(),pixelBlock:t.pixelBlock!=null?t.pixelBlock.clone():null}}_getQueryParams(t){t?.renderingRule!=null&&typeof t.renderingRule!="string"&&(t.renderingRule=this._getRenderingRuleString(t.renderingRule));const{raster:r,viewId:a}=this;return{raster:r,viewId:a,f:"json",...t,...this.customParameters}}_getRequestOptions(t){return{...t,query:{...t?.query,...this.customParameters}}}_decodePixelBlock(t,r,a){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:t,options:r}):Oi(t,r,a)}async _getRasterFunctionInfos(t){const r=this.sourceJSON.rasterFunctionInfos;return this.loaded?r:r&&this.version>=10.3?r.length===1&&r[0].name.toLowerCase()==="none"?r:(await S(n(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:t})).data?.rasterFunctionInfos:null}_canRequestImageElement(t){return!this.pixelFilter&&(!t||t.includes("png"))}async _requestArrayBuffer(t){const{imageProps:r,requestAsImageElement:a,returnImageBitmap:l,signal:u}=t;if(a&&this._canRequestImageElement(r.format)){const g=`${n(this.parsedUrl)}/exportImage`,{data:y}=await S(g,{responseType:l?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...t.imageServiceParameters}),signal:u});return y instanceof Blob?{imageBitmap:await Bi(y,g,u),params:r}:{imageOrCanvasElement:y,params:r}}const p=this._initJobHandler(),c=S(n(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...t.imageServiceParameters}),signal:u}),m=(await Promise.all([c,p]))[0].data,d=r.format||"jpgpng";let f=d;if(f!=="bsq"&&f!=="bip"&&(f=hs(m)),!f)throw new b("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(m)));const h={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(f==="png"||f==="jpg")?Oi(m,{useCanvas:!0,...r},h):this._decodePixelBlock(m,{width:r.width,height:r.height,planes:null,pixelType:null,noDataValue:null,format:d},h)),extent:r.extent},params:r}}_generateRasterInfo(t,r){return this.generateRasterInfo(t,r).catch(()=>null)}_isValidCustomizedMosaicRule(t){return t&&JSON.stringify(t.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(t){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let r=as(t,{multidimensionalSubset:this.multidimensionalSubset});if(r!=null&&r.length>0){this.mosaicRule=this.mosaicRule||new re;const a=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&this.rasterFunction.functionName?.toLowerCase()!=="none"&&r.forEach(l=>l.variableName=""),r=r.filter(({variableName:l,dimensionName:u})=>l&&l!=="*"||u),!a?.length&&r.length&&(this.mosaicRule.multidimensionalDefinition=r)}}_processVisibleRastersResponse(t,r){r=r||{};const a=t.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:p,templateFields:c}=r,m=t.processedValues;let d=t.catalogItems?.features,f=t.properties?.Values?.map(N=>N.replaceAll(/ /gi,", "))||[];const h=this.objectIdField||"ObjectId",g=typeof a=="string"&&a.toLowerCase().includes("nodata"),y=[];if(a&&!d&&!g){const N={};N[h]=0,f=[a],d=[new Ki({geometry:this.fullExtent,attributes:N})],this.multidimensionalInfo&&this.sourceType==="raster-dataset"&&ls(this.rasterFields,N,r.effectiveMultidimensionalDefinition)}if(!d)return[];this._updateResponseFieldNames(d,c),g&&!u&&(d=[]);const{itemPixelValue:I,servicePixelValue:M}=$e,R=this.rasterFields.some(N=>N.name===I);for(let N=0;N<d.length;N++){const P=d[N];if(a!=null){const T=f[N],C=this.rasterFunction&&m&&m.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?m[l.indexOf(this.rasterFunction.functionName)]:a;if(T.toLowerCase()==="nodata"&&!u)continue;R&&(P.attributes[I]=T),P.attributes[M]=C,this._updateFeatureWithMagDirValues(P,T);const z=this.fields&&this.fields.length>0;let K=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?z?T:a:C;this.rasterFunction||(K=z?T:a),this._updateFeatureWithRasterAttributeTableValues(P,K)}if(P.sourceLayer=P.layer=this,p&&this._updateFeatureWithDomainValues(P),l&&m&&l.length===m.length)for(let T=0;T<l.length;T++){const C=`${$e.servicePixelValue}.${l[T]}`;P.attributes[C]=m[T]}y.push(d[N])}return y}_processMultidimensionalIntersection(t,r,a){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:r,mosaicRule:a=this._combineMosaicRuleWithTimeExtent(a,r)};if(l){const{isOutside:u,intersection:p}=ei(l,{geometry:t,timeExtent:r});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};p?.timeExtent!=null&&(r=p.timeExtent)}if(a=this._combineMosaicRuleWithTimeExtent(a,r),a?.multidimensionalDefinition){const{isOutside:u}=ei(l,{multidimensionalDefinition:a.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:r,mosaicRule:a}}_updateFeatureWithRasterAttributeTableValues(t,r){const a=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(a==null)return;const{features:l,fields:u}=a,p=u.map(m=>m.name).find(m=>m.toLowerCase()==="value");if(!p)return;const c=l.filter(m=>m.attributes[p]===(r!=null?parseInt(r,10):null));c&&c[0]&&u.forEach(m=>{const d=us+m.name;t.attributes[d]=c[0].attributes[m.name]})}_updateFeatureWithMagDirValues(t,r){if(!this._isVectorDataSet())return;const a=r.split(/,\s*/).map(m=>parseFloat(m)),l=a.map(m=>[m]),u=a.map(m=>({minValue:m,maxValue:m,noDataValue:null})),p=new ye({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new He(0,0,0,0,this.spatialReference)});const c=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Ds([p.pixels[0][0],p.pixels[1][0]]);t.attributes[$e.magnitude]=c[0],t.attributes[$e.direction]=c[1]}_updateFeatureWithDomainValues(t){(this.fields&&this.fields.filter(r=>r.domain&&r.domain.type==="coded-value"))?.forEach(r=>{const a=t.attributes[r.name];if(a!=null){const l=r.domain.codedValues.find(u=>u.code===a);l&&(t.attributes[r.name]=l.name)}})}_updateResponseFieldNames(t,r){if(!r||r.length<1)return;const a=this.fieldsIndex;a!=null&&t.forEach(l=>{if(l?.attributes)for(const u of r){const p=a.get(u)?.name;p&&p!==u&&(l.attributes[u]=l.attributes[p],delete l.attributes[p])}})}_getRenderingRuleString(t){if(t){let r=t.toJSON();return r=r.rasterFunctionDefinition??r,(r.thumbnail||r.thumbnailEx)&&(r.thumbnail=r.thumbnailEx=null),JSON.stringify(r)}return null}_hasRasterFunction(t){return t?.functionName!=null&&t.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(t,r){if(!t||t.length<1)return;if(t==="Raw")return t.replace("Raw","None");const a=t.toLowerCase().replaceAll(/ /gi,"_");return r.has(a)?r.get(a):t}_isRFTJson(t){return t?.name&&t.arguments&&t.function&&t.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(t){const{raster:r,mosaicRule:a,rasterFunction:l}=this;l&&t.rasterFunction==null&&(t.rasterFunction=l),a&&t.mosaicRule==null&&(t.mosaicRule=a),r&&t.raster==null&&(t.raster=r)}_applyMosaicRule(t){const{raster:r,mosaicRule:a}=this;a&&t.mosaicRule==null&&(t.mosaicRule=a),r&&t.raster==null&&(t.raster=r)}_readCapabilities(t){const r=t.capabilities?t.capabilities.toLowerCase().split(",").map(R=>R.trim()):["image","catalog"],{currentVersion:a,advancedQueryCapabilities:l,maxRecordCount:u}=t,p=r.includes("image"),c=t.serviceDataType==="esriImageServiceDataTypeElevation",m=!(!t.spatialReference&&!t.extent?.spatialReference),d=r.includes("edit"),f=r.includes("mensuration")&&m,h=t.mensurationCapabilities==null?[]:t.mensurationCapabilities.toLowerCase().split(",").map(R=>R.trim()),g=f&&h.includes("basic"),y=this._isMosaicDataset(t)&&r.includes("catalog"),I=r.includes("download"),M=a>=10.7&&c||a>=11.4&&(c||f&&h.includes("3d"));return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:a>=11.2&&y,supportsImageToMapMultiray:a>=11.2&&y,supportsMapToImage:a>=11.2&&y,supportsFindImages:a>=11.2&&y,supportsGetImageUrl:a>=11.3&&I,supportsMeasure:f,supportsMeasureFromImage:a>=11.2,supportsDownload:I,supportsQuery:y&&t.fields&&t.fields.length>0,supportsGetSamples:a>=10.2&&p,supportsProject:a>=10.3&&p,supportsComputeStatisticsHistograms:a>=10.4&&p,supportsQueryBoundary:a>=10.6&&p,supportsCalculateVolume:M,supportsComputePixelLocation:a>=10.7&&y,supportsComputeAngles:a>=10.91,supportsQueryGPSInfo:a>=11.2&&y,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!l?.supportsStatistics,supportsOrderBy:!!l?.supportsOrderBy,supportsDistinct:!!l?.supportsDistinct,supportsPagination:!!l?.supportsPagination,supportsStandardizedQueriesOnly:!!l?.useStandardizedQueries,supportsPercentileStatistics:!!l?.supportsPercentileStatistics,supportsCentroid:!!l?.supportsReturningGeometryCentroid,supportsCurrentUser:!1,supportsDistance:!!l?.supportsQueryWithDistance,supportsExtent:!!l?.supportsReturningQueryExtent,supportsGeometryProperties:!!l?.supportsReturningGeometryProperties,supportsHavingClause:!!l?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsReturnMesh:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!l?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0,supportsTrueCurve:!1},mensuration:{supportsDistanceAndAngle:g,supportsAreaAndPerimeter:g,supportsPointOrCentroid:g,supportsHeightFromBaseAndTop:f&&h.includes("base-top height"),supportsHeightFromBaseAndTopShadow:f&&h.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:f&&h.includes("top-top shadow height"),supports3D:f&&h.includes("3d")}}}};function n(t){return t?.path??""}return s([o({clonable:!1})],i.prototype,"_functionRasterInfos",void 0),s([o({clonable:!1})],i.prototype,"_rasterJobHandler",void 0),s([o({clonable:!1})],i.prototype,"_cachedRendererJson",void 0),s([o({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),s([L("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),s([o({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),s([o()],i.prototype,"adjustAspectRatio",void 0),s([o({type:[X],json:{write:!0}})],i.prototype,"bandIds",void 0),s([L("bandIds")],i.prototype,"readBandIds",null),s([o({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),s([L("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),s([o({type:Number})],i.prototype,"compressionQuality",void 0),s([x("compressionQuality")],i.prototype,"writeCompressionQuality",null),s([o({type:Number})],i.prototype,"compressionTolerance",void 0),s([x("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),s([o({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),s([o({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),s([L("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),s([o({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),s([o({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),s([o()],i.prototype,"rasterInfo",void 0),s([o({readOnly:!0,type:[sr]})],i.prototype,"fields",void 0),s([o({readOnly:!0})],i.prototype,"fieldsIndex",null),s([o({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],i.prototype,"format",null),s([L("service","format",["serviceDataType"])],i.prototype,"readFormat",null),s([o({type:He})],i.prototype,"fullExtent",void 0),s([o({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),s([o({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),s([o({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),s([o({type:String,json:{type:Ve.jsonValues,read:Ve.read,write:Ve.write}})],i.prototype,"interpolation",void 0),s([o()],i.prototype,"minScale",void 0),s([L("service","minScale")],i.prototype,"readMinScale",null),s([o()],i.prototype,"maxScale",void 0),s([L("service","maxScale")],i.prototype,"readMaxScale",null),s([o({type:re})],i.prototype,"mosaicRule",null),s([L("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),s([x("mosaicRule")],i.prototype,"writeMosaicRule",null),s([o()],i.prototype,"multidimensionalInfo",void 0),s([o({type:cn,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),s([o({json:{type:X}})],i.prototype,"noData",void 0),s([x("noData")],i.prototype,"writeNoData",null),s([o({type:String,json:{type:gt.jsonValues,read:gt.read,write:gt.write}})],i.prototype,"noDataInterpretation",void 0),s([o({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),s([L("objectIdField")],i.prototype,"readObjectIdField",null),s([o({readOnly:!0})],i.prototype,"geometryType",void 0),s([o({})],i.prototype,"typeIdField",void 0),s([o({})],i.prototype,"types",void 0),s([o({readOnly:!0})],i.prototype,"parsedUrl",null),s([o({type:Function})],i.prototype,"pixelFilter",void 0),s([o()],i.prototype,"raster",void 0),s([o({readOnly:!0})],i.prototype,"sourceType",void 0),s([L("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),s([o()],i.prototype,"viewId",void 0),s([o()],i.prototype,"renderer",null),s([o({types:Et,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:kt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],i.prototype,"internalRenderer",null),s([L("internalRenderer")],i.prototype,"readRenderer",null),s([x("internalRenderer")],i.prototype,"writeRenderer",null),s([o({clonable:!1})],i.prototype,"symbolizer",void 0),s([o(Gr)],i.prototype,"opacity",void 0),s([o({readOnly:!0})],i.prototype,"rasterFields",null),s([o({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),s([o({type:j,json:{name:"renderingRule"}})],i.prototype,"rasterFunction",null),s([L("rasterFunction",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRasterFunction",null),s([o({readOnly:!0})],i.prototype,"serviceDataType",void 0),s([o({readOnly:!0,type:he})],i.prototype,"spatialReference",void 0),s([L("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),s([o({type:we.apiValues,json:{read:we.read,type:we.jsonValues}})],i.prototype,"pixelType",void 0),s([x("pixelType")],i.prototype,"writePixelType",null),s([o({constructOnly:!0,type:ji})],i.prototype,"serviceRasterInfo",void 0),s([o()],i.prototype,"sourceJSON",void 0),s([o(qr)],i.prototype,"url",void 0),s([o({readOnly:!0})],i.prototype,"version",void 0),s([L("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=s([w("esri.layers.mixins.ArcGISImageService")],i),i};let Ue=class extends ve.ClonableMixin(v){constructor(e){super(e),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};s([o({type:String,json:{write:{isRequired:!0}}})],Ue.prototype,"name",void 0),s([o({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),ke({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],Ue.prototype,"method",void 0),s([o({type:String,json:{write:{isRequired:!0}}})],Ue.prototype,"value",void 0),s([o({type:[X],json:{write:{isRequired:!0}}})],Ue.prototype,"bandIds",void 0),s([o({types:Et,json:{write:!0,origins:{"web-scene":{types:kt,write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],Ue.prototype,"renderer",void 0),Ue=s([w("esri.renderers.support.RasterPresetRenderer")],Ue);const Vo=Ue,Eo=e=>{let i=class extends e{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return s([o({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],i.prototype,"activePresetRendererName",void 0),s([o({type:[Vo],json:{name:"layerDefinition.presetRenderers",write:!0}})],i.prototype,"presetRenderers",void 0),i=s([w("esri.layers.mixins.RasterPresetRendererMixin")],i),i};let ie=class extends Bs(Es(Us(Vr(Er(Eo(Ho(Vs(_s(Os(kr(ve.ClonableMixin(Wr)))))))))))){constructor(...e){super(...e),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=Tr(async(i,n,t)=>{const{save:r,saveAs:a}=await Or(()=>import("./imageryUtils-BCPb5mXs-BojhnZL5.js"),__vite__mapDeps([0,1,2,3,4,5,6,7,8]),import.meta.url);switch(i){case Mt.SAVE:return r(this,n);case Mt.SAVE_AS:return a(this,t,n)}})}normalizeCtorArgs(e,i){return typeof e=="string"?{url:e,...i}:e}load(e){const i=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).catch(Cr).then(()=>this._fetchService(i))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(e){this._set("legendEnabled",e)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(e){this._set("listMode",e)}writeOperationalLayerType(e,i,n){const t=this.renderer?.type==="vector-field";i[n]=t?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(e){const{rasterFields:i}=this,n=new Set,t=$e.itemPixelValue.toLowerCase(),r=this.sourceType==="raster-dataset",a=Kr.toLowerCase(),l=`${$e.servicePixelValue.toLowerCase()}.`;for(const c of i){const m=c.name.toLowerCase();m===t||m.startsWith(l)||r&&m.startsWith(a)||n.add(c.name)}const u=Hs({fields:i,title:this.title},{...e,visibleFieldNames:n}),{rasterInfo:p}=this;return u?.fieldInfos&&p&&Qr(u.fieldInfos,p),u}queryFeatures(e,i){return this.queryRasters(e,i).then(n=>{if(n?.features)for(const t of n.features)t.layer=t.sourceLayer=this;return n})}queryFeatureCount(e,i){return this.queryRasterCount(e,i)}redraw(){this.emit("redraw")}async save(e){return this._debouncedSaveOperations(Mt.SAVE,e)}async saveAs(e,i){return this._debouncedSaveOperations(Mt.SAVE_AS,i,e)}serviceSupportsSpatialReference(e){return ks(this,e)}write(e,i){if(!this._isPreviewLayer)return super.write(e,i);if(i?.messages){const n=`${i.origin}/${i.layerContainerType||"operational-layers"}`;i.messages.push(new b("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${n}'`,{layer:this}))}return null}};s([o(Jr)],ie.prototype,"legendEnabled",null),s([o({type:["show","hide"]})],ie.prototype,"listMode",null),s([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],ie.prototype,"isReference",void 0),s([o({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],ie.prototype,"operationalLayerType",void 0),s([x("web-map","operationalLayerType")],ie.prototype,"writeOperationalLayerType",null),s([o(Zr)],ie.prototype,"popupEnabled",void 0),s([o({type:Nr,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],ie.prototype,"popupTemplate",void 0),s([o({readOnly:!0})],ie.prototype,"defaultPopupTemplate",null),s([o({readOnly:!0,json:{read:!1}})],ie.prototype,"type",void 0),s([o({readOnly:!0})],ie.prototype,"_isPreviewLayer",null),ie=s([w("esri.layers.ImageryLayer")],ie);const ko=ie,al=Object.freeze(Object.defineProperty({__proto__:null,default:ko},Symbol.toStringTag,{value:"Module"}));export{nl as E,al as I,hn as L,wr as U,wn as W,Cn as a,zo as b,cn as c,An as e,Wi as f,Wn as g,Et as l,Eo as o,kt as p,gn as q,mn as t,j as w,ol as z};
