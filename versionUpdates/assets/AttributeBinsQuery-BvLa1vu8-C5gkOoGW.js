import{by as l,c$ as d,Y as u,a8 as m,v as e,I as o,bz as r,T as n,d0 as y,b5 as c,t as h,a9 as v}from"./main-BrXQBr3M.js";import{M as s}from"./queryUtils-OXllLZed-BpQENmsE.js";import{c as w,N as f,A as b,M as j,U as g}from"./FixedIntervalBinParameters-aoOPIkh7-BjdIlnFZ.js";import{m as S,s as R}from"./Query-CxQYWcUQ-B-eUtOfF.js";import{j as A}from"./TimeExtent-gZaEUVeW-D2eGsof2.js";import{g as T}from"./timeZoneUtils-z3WjfjXQ-8JPN5aIG.js";import"./projection-m8vi7Cxv-DG9zGNlV.js";import"./normalizeUtils-b-vZURob-Cu-Bjt2-.js";import"./utils-DuaeuwP5-t1uDCGxn.js";import"./utils-Jw-4AGsF-DGUB3bF1.js";import"./json-BI97KiBB-Ce5cWfI2.js";import"./NormalizationBinParametersMixin-ZkplD1Sk-D7EQSx5U.js";import"./Field-Cj6Pz3TI-BT1_6DON.js";import"./fieldType-VTpxE-EM-CC-owBT-.js";const B=new l({asc:"ascending",desc:"descending"}),x={base:w,key:"type",typeMap:{"auto-interval":f,date:b,"fixed-boundaries":j,"fixed-interval":g}};let t=class extends d.ClonableMixin(u){constructor(i){super(i),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.timeExtent=null,this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(i){this._set("outTimeZone",i),i&&!T(i)&&m.getLogger(this).warn("#outTimeZone",`the parsed value '${i}' may not be a valid IANA time zone`)}};e([o({types:x,json:{name:"bin",write:!0}})],t.prototype,"binParameters",void 0),e([r(B)],t.prototype,"binOrder",void 0),e([o({type:Boolean,json:{write:!0}})],t.prototype,"cacheHint",void 0),e([o({json:{write:!0}})],t.prototype,"datumTransformation",void 0),e([o({type:n,json:{name:"defaultSR",write:!0}})],t.prototype,"defaultSpatialReference",void 0),e([o({type:Number,json:{write:{overridePolicy:i=>({enabled:i>0})}}})],t.prototype,"distance",void 0),e([o({types:y,json:{read:c,write:!0}})],t.prototype,"geometry",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"lowerBoundaryAlias",void 0),e([o({type:n,json:{name:"outSR",write:!0}})],t.prototype,"outSpatialReference",void 0),e([o({type:[S],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],t.prototype,"outStatistics",void 0),e([o({value:null,json:{name:"outTimeReference",read:{reader:i=>i.ianaTimeZone},write:{writer:(i,a,p)=>{i&&(a[p]={ianaTimeZone:i})}}}})],t.prototype,"outTimeZone",null),e([o({type:Boolean,json:{write:!0}})],t.prototype,"returnDistinctValues",void 0),e([r(R,{name:"spatialRel"})],t.prototype,"spatialRelationship",void 0),e([o({type:A,json:{write:!0}})],t.prototype,"timeExtent",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"upperBoundaryAlias",void 0),e([o({type:String,json:{read:s.read,write:{writer:s.write,overridePolicy(i){return{enabled:i!=null&&this.distance!=null}}}}})],t.prototype,"units",void 0),e([o({type:String,json:{write:!0}})],t.prototype,"where",void 0),t=e([h("esri.rest.support.AttributeBinsQuery")],t);const Q=t;t.from=v(t);export{Q as default};
