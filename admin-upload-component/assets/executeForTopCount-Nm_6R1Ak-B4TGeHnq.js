import{y as i}from"./utils-DuaeuwP5-DLDWDOyQ.js";import{S as p}from"./queryTopFeatures-BdkfRugo-D1YIKGrv.js";import a from"./TopFeaturesQuery-C3E7qv-F-BIdaoM1b.js";import"./main-L3Gz1m9d.js";import"./normalizeUtils-b-vZURob-C8NtK1B9.js";import"./utils-Jw-4AGsF-DKw0yftz.js";import"./query-nJmB7Ppn-BJedH7Mm.js";import"./pbfQueryUtils-1j64fqcx-Ci-Tte2c.js";import"./pbf-Ijhb7ANA-P6lg3jFK.js";import"./memoryEstimations-iHVpvWPf-C0STve3G.js";import"./OptimizedGeometry-1qDYm3YK-OWnMXlDC.js";import"./OptimizedFeatureSet-D6mgsKNr-DQee3-74.js";import"./queryZScale-DBCLQqDI-Cdl8stzK.js";import"./projection-m8vi7Cxv-D-ioPHuA.js";import"./TimeExtent-gZaEUVeW-CoE0OfVD.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
