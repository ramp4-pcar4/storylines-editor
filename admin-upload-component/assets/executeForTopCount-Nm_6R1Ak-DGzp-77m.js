import{y as i}from"./utils-DuaeuwP5-Djo3wo9e.js";import{S as p}from"./queryTopFeatures-BdkfRugo-pMAKK7kk.js";import a from"./TopFeaturesQuery-C3E7qv-F-6W8HtOXB.js";import"./main-BlQ93CnF.js";import"./normalizeUtils-b-vZURob-CC8vnfHQ.js";import"./utils-Jw-4AGsF-CgKg1hHQ.js";import"./query-nJmB7Ppn-DNDapVQN.js";import"./pbfQueryUtils-1j64fqcx-tGOQHT4d.js";import"./pbf-Ijhb7ANA-CGvYnJPF.js";import"./memoryEstimations-iHVpvWPf-CxWeCaXF.js";import"./OptimizedGeometry-1qDYm3YK-DxMeAm7X.js";import"./OptimizedFeatureSet-D6mgsKNr-CQWBEZTL.js";import"./queryZScale-DBCLQqDI-Cel-HGlt.js";import"./projection-m8vi7Cxv-B3BIScY5.js";import"./TimeExtent-gZaEUVeW-BhWVFMDe.js";async function g(o,t,r){const m=i(o);return(await p(m,a.from(t),{...r})).data.count}export{g as executeForTopCount};
