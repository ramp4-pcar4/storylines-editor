import{a3 as y,ag as l,bk as h,t as c,h as a,a6 as n,v as i,S as o,w as f,n as u}from"./main-DHtbAQdA.js";import{w as v}from"./MultiOriginJSONSupport-BqiFJbbt-CGHxtmiQ.js";import{k as g}from"./persistable-DgPk2hdg-DEVNhW9d.js";import{e as S}from"./Layer-DvVVmz9x-YDOyolAY.js";import{n as w}from"./APIKeyMixin-BNzYY3QS-ClsdoVn4.js";import{a as _}from"./ArcGISService-B6M5rzsr-BkTOt07_.js";import{i as T}from"./CustomParametersMixin-CSMgHDaw-CNsh6BrA.js";import{u as I,n as L}from"./OperationalLayer-CbXUnTH0-C2OUDFxH.js";import{x}from"./PortalLayer-B34ZUA2x-Dvz2TvUb.js";import{S as b}from"./ScaleRangeLayer-x42fwED3-DUqzgyVd.js";import{Y as M,y as p}from"./SceneService-CfyigWb7-DyhPILYt.js";import{y as O,o as A,d as D,m as E}from"./I3SLayerDefinitions-DAZPxC7h-T_GsB3Bd.js";import{p as m}from"./SceneModifications-DFKt7miK-DdudkWG4.js";import{G as d,C as K,F as V}from"./elevationInfoUtils-Ccn2Wfoe-C658F3Xj.js";import"./MD5-CXHDUqXT-CMrYdOi6.js";import"./multiOriginJSONSupportUtils-DGETddQl-BrWaY9_8.js";import"./uuid-Dj9mdEVg-BaKSCiyT.js";import"./resourceExtension-DCCj0Izs-DiGWOMGD.js";import"./TimeExtent-Cf2Pienb-BXiFml2A.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./ElevationInfo-DE5to86a-CKJGaA9J.js";import"./lengthUtils-C61nRlXw-DhmfMwhb.js";import"./asyncUtils-BPUlNCrX-D2HVH2_w.js";import"./PortalItem-BP-IQXnZ-Bsu6IwUp.js";import"./portalItemUtils-BfWDJg-S-cqcW0VS3.js";import"./projectionUtils-B-CplN3q-BG9kybqU.js";import"./originUtils-BLsWtgV9-B4sclfuf.js";import"./HeightModelInfo-C4voFc4k-CfjnG2hW.js";import"./jsonContext-C9WBVzLb-hdWtEw1Z.js";import"./resourceUtils-CSI08ItO-BYYFvwkF.js";import"./resourceUtils-BO48PT1i-BUg4lBGE.js";import"./saveUtils-W0sSii7v-B6EDdkdR.js";let t=class extends M(_(I(x(b(v(T(w(S)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(y(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,l))}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}readModifications(e,r,s){this._modificationsSource={url:h(e,s),context:s}}set elevationInfo(e){e!=null&&e.mode!=="absolute-height"||this._set("elevationInfo",e),this._validateElevationInfo(e)}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const r=e?.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(s){c(s)}if(await this._fetchService(r),this._modificationsSource!=null){const s=await m.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",s,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,r)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,r){return this._debouncedSaveOperations(p.SAVE_AS,{...r,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(p.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new a("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new a("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new a("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(e){const r="Integrated mesh layers";d(n.getLogger(this),K(r,"absolute-height",e)),d(n.getLogger(this),V(r,e))}};i([o({type:String,readOnly:!0})],t.prototype,"geometryType",void 0),i([o({type:["show","hide"]})],t.prototype,"listMode",void 0),i([o({type:["IntegratedMeshLayer"]})],t.prototype,"operationalLayerType",void 0),i([o({json:{read:!1},readOnly:!0})],t.prototype,"type",void 0),i([o({type:O,readOnly:!0})],t.prototype,"nodePages",void 0),i([o({type:[A],readOnly:!0})],t.prototype,"materialDefinitions",void 0),i([o({type:[D],readOnly:!0})],t.prototype,"textureSetDefinitions",void 0),i([o({type:[E],readOnly:!0})],t.prototype,"geometryDefinitions",void 0),i([o({readOnly:!0})],t.prototype,"serviceUpdateTimeStamp",void 0),i([o({type:m,clonable:e=>e.clone()}),g({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],t.prototype,"modifications",void 0),i([f(["web-scene","portal-item"],"modifications")],t.prototype,"readModifications",null),i([o(L)],t.prototype,"elevationInfo",null),i([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],t.prototype,"path",void 0),t=i([u("esri.layers.IntegratedMeshLayer")],t);const le=t;export{le as default};
