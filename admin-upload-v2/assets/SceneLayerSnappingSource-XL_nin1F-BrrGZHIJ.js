import{v as o,b9 as m,H as C,d6 as H,I as s,t as w,aM as E,db as x,lg as f,K as I,bB as _,k7 as A,cE as k}from"./main-x_HyLzsf.js";import{i as O}from"./UpdatingHandles-DBzjq66S-D894rRgR.js";import{c as L}from"./WorkerHandle-BX4vtQu6-Dm_VuGId.js";import{n as h}from"./workerHelper-DSKw1QDW-BaVUGNNO.js";import{X as R}from"./edgeProcessing-CKfhkuI9-C35VLQTD.js";import{D as V}from"./sphere-Cj20syUS-C0AWQAG3.js";import{a2 as v,aj as D,a3 as B}from"./SketchViewModel-T2dNp9Tt-BV6jk715.js";import{a as M}from"./VertexSnappingCandidate-CNuBTCRO-B7KGhVPt.js";import"./workers-0oosFQiO-YxU2Ouhw.js";import"./Queue-B8H6jIv7-DLnblH3F.js";import"./intl-DLmy-Li5-Btem3P3o.js";import"./InterleavedLayout-DcHoXu73-DpY7lP6f.js";import"./BufferView-BBCzkcZS-DDMAm1JT.js";import"./vec2-BnynUbeJ-CKtGJQAy.js";import"./common-CYWrYyJl-E8-sukrT.js";import"./vec32-BuqRmYBM-C1_KUO61.js";import"./vec42-D8CJyqHG-DnfLTeQH.js";import"./vec2f64-CEUyUoff-BBc0aQ6D.js";import"./vec4f64-CjUMzAyX-DPYbdAom.js";import"./deduplicate-DZCyc4JG-G1F8gBto.js";import"./Indices-DkAzsiH--BP60ottj.js";import"./VertexAttribute-DFC3a3eR-BhmQtMsu.js";import"./glUtil-n1JOrdV3-CRAZdee5.js";import"./enums-DBi1-Mm2-CUS1pvQe.js";import"./VertexElementDescriptor-BAy1DPb3-BOhpDZGx.js";import"./Normals-BP6u0Eou-C_DDgV63.js";import"./mat4-BFStKTjU-BXGAkhf5.js";import"./mat3-DOnW3DjW-C3hbW9XY.js";import"./mat3f64-Dh9_zhFu-BIT-k8Dm.js";import"./plane-B_adY3_o-5Iu_Qpi8.js";import"./mat4f64-BaJwL7tQ-k0uMm8LY.js";import"./quatf64-C16JxGFv-BKWK1F8U.js";import"./projection-m8vi7Cxv-BWIdziT5.js";import"./GraphicsLayer-GkJJfSu5-WgU2OEG1.js";import"./GraphicsCollection-rAFZo1AJ-DjX8msJ-.js";import"./Layer-B8q-l4yV-EhrzTqZL.js";import"./TimeExtent-gZaEUVeW-0relMc6u.js";import"./ScaleRangeLayer-DIxukUBC-CH0fWO4Y.js";import"./layerContainerType-ChWdCT09-G5sdAsSy.js";import"./jsonUtils-DzmXEA9_-Dn3eVDFc.js";import"./parser-hXQyB-Qx-BeHfeFi7.js";import"./mat4f32-CiZjBg9k-CUm34GoR.js";import"./ElevationInfo-DkWlof50-DZP6BXtm.js";import"./lengthUtils-wU9RRIqK-6EnqeD7t.js";import"./globalCss-CFN4F315-4cM0ZJU_.js";import"./signal-DxzURL18-CmRlMDcP.js";import"./Version-BTMwSXf1-BjDDAvkd.js";import"./quantityUtils-RaoZoCNH-DdqszJ_V.js";import"./projectVectorToVector-D0K_S4MR-aHevwPmj.js";import"./projectPointToVector-CG1hALQu-DVyNc99y.js";import"./geodesicUtils-DV-lFWtb-DUU68bXq.js";import"./Query-CxQYWcUQ-BlpEbGQx.js";import"./Field-Cj6Pz3TI-CCyVh_tc.js";import"./fieldType-VTpxE-EM-CN8niJc1.js";import"./PointSnappingHint-ClwQ1VNw-ChAkEIXn.js";class P extends L{constructor(t){super("EdgeProcessingWorker","extract",{extract:r=>[r.dataBuffer],extractComponentsEdgeLocations:r=>[r.dataBuffer],extractEdgeLocations:r=>[r.dataBuffer]},t)}async process(t,r,i){return i?R(t):j(await this.invoke(new y(t),r))}async extractEdgeLocations(t,r){const i=await this.invokeMethod("extractEdgeLocations",new y(t),r);return h(i)}async extractComponentsEdgeLocations(t,r){const i=await this.invokeMethod("extractComponentsEdgeLocations",new y(t),r);return h(i)}}function j(e){return{regular:{instancesData:h(e.regular.instancesData),lodInfo:{lengths:new Float32Array(e.regular.lodInfo.lengths)}},silhouette:{instancesData:h(e.silhouette.instancesData),lodInfo:{lengths:new Float32Array(e.silhouette.lodInfo.lengths)}},averageEdgeLength:e.averageEdgeLength}}class y{constructor(t){this.dataBuffer=t.data.buffer,this.writerSettings=t.writerSettings,this.skipDeduplicate=t.skipDeduplicate,this.indices=_(t.indices)?t.indices.buffer:t.indices,this.indicesType=_(t.indices)?A(t.indices)?"Uint32Array":"Uint16Array":"Array",this.indicesLength=t.indicesLength}}let d=class extends m{constructor(e){super(e),this.availability=0,this._ids=new Set}destroy(){this._workerHandle.destroy(),this._workerHandle=null}initialize(){this._workerHandle=new W(this.schedule,{fetchAllEdgeLocations:(e,t)=>this._fetchAllEdgeLocations(e,t)})}async fetchCandidates(e,t){const r=e.coordinateHelper,{point:i}=e,n=z;this.renderCoordsHelper.toRenderCoords(i,r.spatialReference,n);const l=e.distance,c=typeof l=="number"?l:l.distance,u=await this._workerHandle.invoke({bounds:V(n[0],n[1],n[2],c),returnEdge:e.returnEdge,returnVertex:e.vertexMode!=="none"},t);return u.candidates.sort((g,b)=>g.distance-b.distance),u.candidates.map(g=>this._convertCandidate(r,g))}async add(e,t){this._ids.add(e.id),await this._workerHandle.invokeMethod("add",e,t)}async remove(e,t){this._ids.delete(e.id),await this._workerHandle.invokeMethod("remove",e,t)}_convertCandidate(e,t){switch(t.type){case"edge":return new D({objectId:t.objectId,targetPoint:v(this._convertRenderCoordinate(e,t.target)),edgeStart:this._convertRenderCoordinate(e,t.start),edgeEnd:this._convertRenderCoordinate(e,t.end),isDraped:!1});case"vertex":return new M({objectId:t.objectId,targetPoint:v(this._convertRenderCoordinate(e,t.target)),isDraped:!1})}}_convertRenderCoordinate({spatialReference:e},t){const r=k();return this.renderCoordsHelper.fromRenderCoords(t,r,e),B(r)}async _fetchAllEdgeLocations(e,t){const r=[],i=[];for(const{id:n,uid:l}of e.components)this._ids.has(n)&&r.push((async()=>{const c=await this.fetchEdgeLocations(n,t.signal),u=c.locations.buffer;return i.push(u),{id:n,uid:l,objectIds:c.objectIds,locations:u,origin:c.origin,type:c.type}})());return{result:{components:(await Promise.all(r)).filter(({id:n})=>this._ids.has(n))},transferList:i}}};o([s({constructOnly:!0})],d.prototype,"renderCoordsHelper",void 0),o([s({constructOnly:!0})],d.prototype,"fetchEdgeLocations",void 0),o([s({constructOnly:!0})],d.prototype,"schedule",void 0),o([s({readOnly:!0})],d.prototype,"availability",void 0),d=o([w("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorkerHandle")],d);let W=class extends L{constructor(e,t){super("SceneLayerSnappingSourceWorker","fetchCandidates",{},e,{strategy:"dedicated",client:t})}};const z=k();let a=class extends m{get updating(){return this._updatingHandles.updating}constructor(e){super(e),this.availability=1,this._updatingHandles=new O,this._abortController=new AbortController}destroy(){this._tracker=E(this._tracker),this._abortController=x(this._abortController),this._updatingHandles.destroy()}initialize(){const{view:e}=this,t=e.resourceController;this._edgeWorker=new P(S(t)),this._workerHandle=new d({renderCoordsHelper:this.view.renderCoordsHelper,schedule:S(t),fetchEdgeLocations:async(r,i)=>{if(this._tracker==null)throw new Error("tracker-not-initialized");return this._tracker.fetchEdgeLocations(r,this._edgeWorker,i)}}),this._updatingHandles.addPromise(this._setupLayerView()),this.addHandles([f(this._workerHandle),f(this._edgeWorker)])}async fetchCandidates(e,t){return this._workerHandle.fetchCandidates(e,t)}refresh(){}async _setupLayerView(){if(this.destroyed)return;const e=this._abortController?.signal,t=await this.getLayerView();t==null||I(e)||(this._tracker=t.trackSnappingSources({add:(r,i)=>{this._updatingHandles.addPromise(this._workerHandle.add({id:r,bounds:i},e))},remove:r=>{this._updatingHandles.addPromise(this._workerHandle.remove({id:r},e))}}))}};function S(e){return t=>e.immediate.schedule(t)}o([s({constructOnly:!0})],a.prototype,"getLayerView",void 0),o([s({constructOnly:!0})],a.prototype,"view",void 0),o([s({readOnly:!0})],a.prototype,"updating",null),o([s({readOnly:!0})],a.prototype,"availability",void 0),a=o([w("esri.views.interactive.snapping.featureSources.I3SSnappingSource")],a);let p=class extends m{get updating(){return this._i3sSources.some(e=>e.updating)}constructor(e){super(e),this.availability=1,this._i3sSources=[]}destroy(){this._i3sSources.forEach(e=>e.destroy()),this._i3sSources.length=0}initialize(){const{view:e}=this,t=this.layerSource.layer;this._i3sSources=t.type==="building-scene"?this._getBuildingSceneI3SSources(e,t):[this._getSceneLayerI3SSource(e,t)]}async fetchCandidates(e,t){const r=await Promise.all(this._i3sSources.map(i=>i.fetchCandidates(e,t)));return C(t),r.flat()}refresh(){this._i3sSources.forEach(e=>e.refresh())}_getBuildingSceneI3SSources(e,t){return t.allSublayers.toArray().map(r=>r.type==="building-component"?new a({getLayerView:async()=>(await e.whenLayerView(t)).whenSublayerView(r),view:e}):null).filter(H)}_getSceneLayerI3SSource(e,t){return new a({getLayerView:async()=>{const r=await e.whenLayerView(t);return r.type==="scene-layer-graphics-3d"?void 0:r},view:e})}};o([s({constructOnly:!0})],p.prototype,"layerSource",void 0),o([s({constructOnly:!0})],p.prototype,"view",void 0),o([s({readOnly:!0})],p.prototype,"updating",null),o([s({readOnly:!0})],p.prototype,"availability",void 0),p=o([w("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")],p);export{p as SceneLayerSnappingSource};
